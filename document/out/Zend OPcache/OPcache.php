<?php

/**
*<div id="function.opcache-compile-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">opcache_compile_file</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.5, PHP 7, PECL ZendOpcache &gt; 7.0.2)</p><p class="refpurpose"><span class="refname">opcache_compile_file</span> &mdash; <span class="dc-title">无需运行，即可编译并缓存 PHP 脚本</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.opcache-compile-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">boolean</span> <span class="methodname"><strong>opcache_compile_file</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span>    )</div>    <p class="para rdfs-comment">    该函数可以用于在不用运行某个 PHP 脚本的情况下，编译该 PHP 脚本并将其添加到字节码缓存中去。    该函数可用于在 Web 服务器重启之后初始化缓存，以供后续请求调用。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.opcache-compile-file-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">file</code></dt>      <dd>       <p class="para">       被编译的 PHP 脚本的路径。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.opcache-compile-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果 <code class="parameter">file</code> 被成功编译，则返回 <strong><code>TRUE</code></strong>  或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 errors" id="refsect1-function.opcache-compile-file-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果文件（ <code class="parameter">file</code> ）不能被载入或者不能被编译，则会生成一个 <strong><code>E_WARNING</code></strong> 级别的错误。    可以使用 <a href="http://php.net/manual/zh/language.operators.errorcontrol.php" class="link">@</a> 来抑制该警告。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.opcache-compile-file-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link opcache_invalidate()} - 废除脚本缓存</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.opcache.php">OPcache 函数</a></div></div>
 * @return boolean*/
function opcache_compile_file($file) { }

/**
*<div id="function.opcache-invalidate" class="refentry">  <div class="refnamediv">   <h1 class="refname">opcache_invalidate</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PECL ZendOpcache &gt;= 7.0.0)</p><p class="refpurpose"><span class="refname">opcache_invalidate</span> &mdash; <span class="dc-title">废除脚本缓存</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.opcache-invalidate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">boolean</span> <span class="methodname"><strong>opcache_invalidate</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$script</code></span>    [, <span class="methodparam"><span class="type">boolean</span> <code class="parameter">$force</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    该函数的作用是使得指定脚本的字节码缓存失效。    如果 <code class="parameter">force</code> 没有设置或者传入的是 <strong><code>FALSE</code></strong>，那么只有当脚本的修改时间    比对应字节码的时间更新，脚本的缓存才会失效。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.opcache-invalidate-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">script</code></dt>      <dd>       <p class="para">       缓存需要被作废对应的脚本路径      </p>     </dd>              <dt> <code class="parameter">force</code></dt>      <dd>       <p class="para">       如果该参数设置为<strong><code>TRUE</code></strong>，那么不管是否必要，该脚本的缓存都将被废除。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.opcache-invalidate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果脚本的字节码缓存失效设置成功或者该脚本本来就没有缓存，则返回 <strong><code>TRUE</code></strong>；如果字节码缓存被禁用，则返回<strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.opcache-invalidate-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link opcache_compile_file()} - 无需运行，即可编译并缓存 PHP 脚本</span></li>     <li class="member"><span class="function">{@link opcache_reset()} - 重置字节码缓存的内容</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.opcache.php">OPcache 函数</a></div></div>
 * @return boolean*/
function opcache_invalidate($script, $force = FALSE) { }

/**
*<div id="function.opcache-reset" class="refentry">  <div class="refnamediv">   <h1 class="refname">opcache_reset</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PECL ZendOpcache &gt;= 7.0.0)</p><p class="refpurpose"><span class="refname">opcache_reset</span> &mdash; <span class="dc-title">重置字节码缓存的内容</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.opcache-reset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">boolean</span> <span class="methodname"><strong>opcache_reset</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    该函数将重置整个字节码缓存。    在调用 <span class="function"><strong>opcache_reset()</strong></span> 之后，所有的脚本将会重新载入并且在下次被点击的时候重新解析。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.opcache-reset-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.opcache-reset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果字节码缓存被重置成功，则返回 <strong><code>TRUE</code></strong>；如果字节码缓存被禁用，则返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.opcache-reset-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link opcache_invalidate()} - 废除脚本缓存</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.opcache.php">OPcache 函数</a></div></div>
 * @return boolean Returns <b>TRUE</b> if the opcode cache was reset, or <b>FALSE</b> if the opcode cache is disabled.*/
function opcache_reset() { }

/**
*<div id="function.opcache-get-status" class="refentry">  <div class="refnamediv">   <h1 class="refname">opcache_get_status</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PECL ZendOpcache &gt; 7.0.2)</p><p class="refpurpose"><span class="refname">opcache_get_status</span> &mdash; <span class="dc-title">获取缓存的状态信息</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.opcache-get-status-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>opcache_get_status</strong></span>     ([ <span class="methodparam"><span class="type">boolean</span> <code class="parameter">$get_scripts</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    该函数将返回缓存实例的状态信息。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.opcache-get-status-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">get_scripts</code></dt>      <dd>       <p class="para">       包含脚本的具体声明信息。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.opcache-get-status-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数组，该数组可能包含有脚本具体的声明信息。   </p>  </div>    <div class="refsect1 errors" id="refsect1-function.opcache-get-status-errors">   <h3 class="title">错误／异常</h3>   <p class="para">       在启用了 <em>opcache.restrict_api</em> 的情况下，如果当前路径在禁止规则里，将会出现 E_WARNING ；不会返回任何状态信息。   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.opcache-get-status-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link opcache_get_configuration()} - 获取缓存的配置信息</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.opcache.php">OPcache 函数</a></div></div>
 * @return array <p>Returns an array of information, optionally containing script specific state information</p>*/
function opcache_get_status ($get_scripts = TRUE) {}

/**
*<div id="function.opcache-get-configuration" class="refentry">  <div class="refnamediv">   <h1 class="refname">opcache_get_configuration</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PECL ZendOpcache &gt; 7.0.2)</p><p class="refpurpose"><span class="refname">opcache_get_configuration</span> &mdash; <span class="dc-title">获取缓存的配置信息</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.opcache-get-configuration-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>opcache_get_configuration</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    该函数将返回缓存实例的配置信息。   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.opcache-get-configuration-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数组，该数组里包含了缓存的初始化信息，黑名单和版本号。   </p>  </div>    <div class="refsect1 errors" id="refsect1-function.opcache-get-configuration-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    在启用了 <em>opcache.restrict_api</em> 的情况下，如果当前路径在禁止规则里，将会出现 E_WARNING ；不会返回任何状态信息。   </p>  </div>      <div class="refsect1 seealso" id="refsect1-function.opcache-get-configuration-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link opcache_get_status()} - 获取缓存的状态信息</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.opcache.php">OPcache 函数</a></div></div>
 * @return array <p>Returns an array of information, including ini, blacklist and version</p>*/
function opcache_get_configuration() {}

/**
*<div id="function.opcache-is-script-cached" class="refentry">  <div class="refnamediv">   <h1 class="refname">opcache_is_script_cached</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.11, PHP 7, PECL ZendOpcache &gt;= 7.0.4)</p><p class="refpurpose"><span class="refname">opcache_is_script_cached</span> &mdash; <span class="dc-title">Tells whether a script is cached in OPCache</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.opcache-is-script-cached-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>opcache_is_script_cached</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span>    )</div>    <p class="para rdfs-comment">    This function checks if a PHP script has been cached in OPCache. This can be    used to more easily detect the &quot;warming&quot; of the cache for a particular script.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.opcache-is-script-cached-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">file</code></dt>      <dd>       <p class="para">       The path to the PHP script to be checked.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.opcache-is-script-cached-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if <code class="parameter">file</code> is cached in OPCache,    <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.opcache-is-script-cached-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link opcache_compile_file()} - 无需运行，即可编译并缓存 PHP 脚本</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.opcache.php">OPcache 函数</a></div></div>
 * @return bool Returns TRUE if file is cached in OPCache, FALSE otherwise.*/
function opcache_is_script_cached($file) {}