<?php

/**
*<div id="class.curlfile" class="reference">   <h1 class="title">CURLFile 类</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p>     <div class="section" id="curlfile.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">CURLFile</strong> 应该与选项     <strong><code>CURLOPT_POSTFIELDS</code></strong> 一同使用用于上传文件。    </p>   </div>     <div class="section" id="curlfile.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">CURLFile</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.curlfile.php#curlfile.props.name">$<var class="varname">name</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.curlfile.php#curlfile.props.mime">$<var class="varname">mime</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.curlfile.php#curlfile.props.postname">$<var class="varname">postname</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/curlfile.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$mimetype</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$postname</code></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/curlfile.getfilename.php" class="methodname">getFilename</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/curlfile.getmimetype.php" class="methodname">getMimeType</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/curlfile.getpostfilename.php" class="methodname">getPostFilename</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/curlfile.setmimetype.php" class="methodname">setMimeType</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$mime</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/curlfile.setpostfilename.php" class="methodname">setPostFilename</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$postname</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/curlfile.wakeup.php" class="methodname">__wakeup</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="curlfile.props">    <h2 class="title">属性</h2>    <dl>            <dt id="curlfile.props.name"><var class="varname"><var class="varname">name</var></var></dt>       <dd>        <p class="para">待上传文件的名称</p>      </dd>                 <dt id="curlfile.props.mime"><var class="varname"><var class="varname">mime</var></var></dt>       <dd>        <p class="para">文件的 MIME type（默认是<em>application/octet-stream</em>）。</p>      </dd>                 <dt id="curlfile.props.postname"><var class="varname"><var class="varname">postname</var></var></dt>       <dd>        <p class="para">上传数据中的文件名称（默认为属性 <var class="varname"><var class="varname">name</var></var> ）。</p>      </dd>          </dl>    </div>     <div class="section" id="curlfile.seealso">    <h2 class="title">参见</h2>    <p class="para">     <ul class="simplelist">      <li class="member">       <span class="function">{@link curl_setopt()}</span>      </li>     </ul>    </p>   </div>   </div>                                                                    <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link CURLFile::__construct} — 创建 CURLFile 对象</li><li>{@link CURLFile::getFilename} — 获取被上传文件的 文件名</li><li>{@link CURLFile::getMimeType} — 获取被上传文件的 MIME 类型</li><li>{@link CURLFile::getPostFilename} — 获取 POST 请求时使用的 文件名</li><li>{@link CURLFile::setMimeType} — 设置被上传文件的 MIME 类型</li><li>{@link CURLFile::setPostFilename} — 设置 POST 请求时使用的文件名</li><li>{@link CURLFile::__wakeup} — 反序列化句柄</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.curl.php">cURL</a></div></div>
*/
class CURLFile {
    public $name;
    public $mime;
    public $postname;

    /**
     * Create a CURLFile object
     * @link http://www.php.net/manual/en/curlfile.construct.php
     * @param string $filename <p>Path to the file which will be uploaded.</p>
     * @param string $mimetype [optional] <p>Mimetype of the file.</p>
     * @param string $postname [optional] <p>Name of the file.</p>
     * @since 5.5.0
     */
    function __construct($filename, $mimetype, $postname) {
    }

/**
*<div id="curlfile.getfilename" class="refentry">  <div class="refnamediv">   <h1 class="refname">CURLFile::getFilename</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">CURLFile::getFilename</span> &mdash; <span class="dc-title">获取被上传文件的 文件名</span></p>   </div>   <div class="refsect1 description" id="refsect1-curlfile.getfilename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>CURLFile::getFilename</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-curlfile.getfilename-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-curlfile.getfilename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回被上传文件的 文件名。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.curlfile.php">CURLFile</a></div></div>
     * @return string Returns file name.*/
    public function getFilename() {
    }

/**
*<div id="curlfile.getmimetype" class="refentry">  <div class="refnamediv">   <h1 class="refname">CURLFile::getMimeType</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">CURLFile::getMimeType</span> &mdash; <span class="dc-title">获取被上传文件的 MIME 类型</span></p>   </div>   <div class="refsect1 description" id="refsect1-curlfile.getmimetype-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>CURLFile::getMimeType</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-curlfile.getmimetype-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-curlfile.getmimetype-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回被上传文件的 MIME 类型。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.curlfile.php">CURLFile</a></div></div>
     * @return string Returns MIME type.*/
    public function getMimeType() {
    }

/**
*<div id="curlfile.getpostfilename" class="refentry">  <div class="refnamediv">   <h1 class="refname">CURLFile::getPostFilename</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">CURLFile::getPostFilename</span> &mdash; <span class="dc-title">获取 POST 请求时使用的 文件名</span></p>   </div>   <div class="refsect1 description" id="refsect1-curlfile.getpostfilename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>CURLFile::getPostFilename</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-curlfile.getpostfilename-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-curlfile.getpostfilename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 POST 请求时使用的 文件名。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.curlfile.php">CURLFile</a></div></div>
     * @return string Returns file name for POST.*/
    public function getPostFilename() {
    }

/**
*<div id="curlfile.setmimetype" class="refentry">  <div class="refnamediv">   <h1 class="refname">CURLFile::setMimeType</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">CURLFile::setMimeType</span> &mdash; <span class="dc-title">设置被上传文件的 MIME 类型</span></p>   </div>   <div class="refsect1 description" id="refsect1-curlfile.setmimetype-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>CURLFile::setMimeType</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$mime</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-curlfile.setmimetype-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">mime</code></dt>      <dd>       <p class="para">      POST 数据中的 MIME 类型。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-curlfile.setmimetype-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.curlfile.php">CURLFile</a></div></div>
*/
    public function setMimeType($mime) {
    }

/**
*<div id="curlfile.setpostfilename" class="refentry">  <div class="refnamediv">   <h1 class="refname">CURLFile::setPostFilename</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">CURLFile::setPostFilename</span> &mdash; <span class="dc-title">设置 POST 请求时使用的文件名</span></p>   </div>   <div class="refsect1 description" id="refsect1-curlfile.setpostfilename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>CURLFile::setPostFilename</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$postname</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-curlfile.setpostfilename-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">postname</code></dt>      <dd>       <p class="para">       POST 数据里使用的文件名。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-curlfile.setpostfilename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.curlfile.php">CURLFile</a></div></div>
*/
    public function setPostFilename($postname) {
    }

    /**
     * @link http://www.php.net/manual/en/curlfile.wakeup.php
     * Unserialization handler
     * @since 5.5.0
     */
    public function __wakeup() {
    }
}
/**
*<div id="function.curl-init" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_init</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_init</span> &mdash; <span class="dc-title">初始化 cURL 会话</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-init-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>curl_init</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    初始化新的会话，返回 cURL 句柄，供<span class="function">{@link curl_setopt()}</span>、 <span class="function">{@link curl_exec()}</span> 和 <span class="function">{@link curl_close()}</span> 函数使用。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-init-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">url</code></dt>       <dd>        <p class="para">        如果提供了该参数，<strong><code>CURLOPT_URL</code></strong> 选项将会被设置成这个值。你也可以使用<span class="function">{@link curl_setopt()}</span>函数手动地设置这个值。       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         如果设置了 <a href="http://php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a>，<em>file</em> 协议会被 cURL 禁用。        </p>       </p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-init-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果成功，返回 cURL 句柄，出错返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.curl-init-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5237">     <p><strong>Example #1       初始化新的 cURL 会话并获取一个网页     </strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个新cURL资源<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;抓取URL并把它传递给浏览器<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭cURL资源，并且释放系统资源<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-init-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_close()} - 关闭 cURL 会话</span></li>     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return resource a cURL handle on success, false on errors.*/
function curl_init ($url = null) {}

/**
*<div id="function.curl-copy-handle" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_copy_handle</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_copy_handle</span> &mdash; <span class="dc-title">复制一个cURL句柄和它的所有选项</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-copy-handle-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>curl_copy_handle</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    复制一个cURL句柄并保持相同的选项。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-copy-handle-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-copy-handle-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个新的cURL句柄。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-copy-handle-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5231">     <p><strong>Example #1 复制一个cURL句柄</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个新的cURL资源<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;复制句柄<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_copy_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;抓取URL&nbsp;(http://www.example.com/)&nbsp;并把它传递给浏览器<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭cURL资源，并且释放系统资源<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return resource a new cURL handle.*/
function curl_copy_handle ($ch) {}

/**
*<div id="function.curl-version" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_version</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_version</span> &mdash; <span class="dc-title">获取 cURL 版本信息</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-version-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>curl_version</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$age</code><span class="initializer"> = CURLVERSION_NOW</span></span>   ] )</div>    <p class="para rdfs-comment">    返回关于 cURL 版本的信息。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-version-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">age</code></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-version-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回关联数组，包含如下元素：    <table class="doctable informaltable">           <thead>       <tr>        <th>Indice</th>        <th>值描述</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>version_number</td>        <td>cURL 24 位版本号</td>       </tr>        <tr>        <td>version</td>        <td>cURL 版本号，字符串形式</td>       </tr>        <tr>        <td>ssl_version_number</td>        <td>OpenSSL 24 位版本号</td>       </tr>        <tr>        <td>ssl_version</td>        <td>OpenSSL 版本号，字符串形式</td>       </tr>        <tr>        <td>libz_version</td>        <td>zlib 版本号，字符串形式</td>       </tr>        <tr>        <td>host</td>        <td>关于编译cURL主机的信息</td>       </tr>        <tr>        <td>age</td>        <td class="empty">&nbsp;</td>       </tr>        <tr>        <td>features</td>        <td>一个<em>CURL_VERSION_XXX</em>常量的位掩码</td>       </tr>        <tr>        <td>protocols</td>        <td>数组，包含 cURL 支持的协议名称</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-version-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5254">     <p><strong>Example #1 <span class="function"><strong>curl_version()</strong></span> 例子</strong></p>     <div class="example-contents"><p>      这个范例将会检查当前 cURL 版本使用<span class="function"><strong>curl_version()</strong></span>返回的 &#039;features&#039; 位掩码中哪些特性是可用的。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;获取cURL版本数组<br /></span><span style="color: #9876AA">$version&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_version</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;在cURL编译版本中使用位域来检查某些特性<br /></span><span style="color: #9876AA">$bitfields&nbsp;</span><span style="color: #007700">=&nbsp;Array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'CURL_VERSION_IPV6'</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'CURL_VERSION_KERBEROS4'</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'CURL_VERSION_SSL'</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'CURL_VERSION_LIBZ'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br /><br /><br />foreach(</span><span style="color: #9876AA">$bitfields&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$feature</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$feature&nbsp;</span><span style="color: #007700">.&nbsp;(</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #DD0000">'features'</span><span style="color: #007700">]&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #9876AA">$feature</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'&nbsp;matches'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'&nbsp;does&nbsp;not&nbsp;match'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return array an associative array with the following elements: */
function curl_version ($age = null) {}

/**
*<div id="function.curl-setopt" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_setopt</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_setopt</span> &mdash; <span class="dc-title">设置 cURL 传输选项</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-setopt-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>curl_setopt</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    为 cURL 会话句柄设置选项。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.curl-setopt-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>            <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        需要设置的<em>CURLOPT_XXX</em>选项。       </p>      </dd>                 <dt> <code class="parameter">value</code></dt>       <dd>        <p class="para">        将设置在<code class="parameter">option</code>选项上的值。       </p>       <p class="para">        以下 <code class="parameter">option</code> 参数的 <code class="parameter">value</code>应该被设置成 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type bool">bool</a></span> 类型：        <table class="doctable informaltable">                   <thead>           <tr>            <th>选项</th>            <th>将 <code class="parameter">value</code> 设置为</th>            <th>备注</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_AUTOREFERER</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时将根据 <em>Location:</em> 重定向时，自动设置 header 中的<em>Referer:</em>信息。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_BINARYTRANSFER</code></strong></td>            <td style="vertical-align: top;">             设为 <strong><code>TRUE</code></strong> ，将在启用 <strong><code>CURLOPT_RETURNTRANSFER</code></strong> 时，返回原生的（Raw）输出。            </td>            <td style="vertical-align: top;">             从 PHP 5.1.3 开始，此选项不再有效果：使用            <strong><code>CURLOPT_RETURNTRANSFER</code></strong> 后总是会返回原生的（Raw）内容。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_COOKIESESSION</code></strong></td>            <td style="vertical-align: top;">             设为 <strong><code>TRUE</code></strong>  时将开启新的一次 cookie 会话。它将强制 libcurl 忽略之前会话时存的其他 cookie。             libcurl 在默认状况下无论是否为会话，都会储存、加载所有 cookie。会话 cookie 是指没有过期时间，只存活在会话之中。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CERTINFO</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 将在安全传输时输出 SSL 证书信息到 <em>STDERR</em>。            </td>            <td style="vertical-align: top;">             在 cURL 7.19.1 中添加。             PHP 5.3.2 后有效。             需要开启 <strong><code>CURLOPT_VERBOSE</code></strong> 才有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CONNECT_ONLY</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 将让库执行所有需要的代理、验证、连接过程，但不传输数据。此选项用于             HTTP、SMTP 和 POP3。            </td>            <td style="vertical-align: top;">             在 7.15.2 中添加。             PHP 5.5.0 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CRLF</code></strong></td>            <td style="vertical-align: top;">             启用时将Unix的换行符转换成回车换行符。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_DNS_USE_GLOBAL_CACHE</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 会启用一个全局的DNS缓存。此选项非线程安全的，默认已开启。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FAILONERROR</code></strong></td>            <td style="vertical-align: top;">            当 HTTP 状态码大于等于 400，<strong><code>TRUE</code></strong> 将将显示错误详情。 默认情况下将返回页面，忽略 HTTP 代码。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_FALSESTART</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  开启 TLS False Start （一种 TLS 握手优化方式）            </td>            <td style="vertical-align: top;">             cURL 7.42.0 中添加。自 PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FILETIME</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  时，会尝试获取远程文档中的修改时间信息。             信息可通过<span class="function">{@link curl_getinfo()}</span>函数的<code class="parameter">CURLINFO_FILETIME</code> 选项获取。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FOLLOWLOCATION</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  时将会根据服务器返回 HTTP 头中的 <em>&quot;Location: &quot;</em> 重定向。（注意：这是递归的，<em>&quot;Location: &quot;</em> 发送几次就重定向几次，除非设置了 <strong><code>CURLOPT_MAXREDIRS</code></strong>，限制最大重定向次数。）。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FORBID_REUSE</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 在完成交互以后强制明确的断开连接，不能在连接池中重用。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FRESH_CONNECT</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 强制获取一个新的连接，而不是缓存中的连接。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTP_USE_EPRT</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时，当 FTP 下载时，使用 EPRT (和 LPRT)命令。 设置为 <strong><code>FALSE</code></strong> 时禁用 EPRT 和 LPRT，仅仅使用PORT 命令。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTP_USE_EPSV</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时，在FTP传输过程中，回到 PASV 模式前，先尝试 EPSV 命令。设置为 <strong><code>FALSE</code></strong> 时禁用 EPSV。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTP_CREATE_MISSING_DIRS</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时，当 ftp 操作不存在的目录时将创建它。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTPAPPEND</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 为追加写入文件，而不是覆盖。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TCP_NODELAY</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时禁用 TCP 的 Nagle 算法，就是减少网络上的小包数量。            </td>            <td style="vertical-align: top;">              PHP 5.2.1 有效，编译时需要 libcurl 7.11.2 及以上。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTPASCII</code></strong></td>            <td style="vertical-align: top;">             <strong><code>CURLOPT_TRANSFERTEXT</code></strong> 的别名。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTPLISTONLY</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时只列出 FTP 目录的名字。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HEADER</code></strong></td>            <td style="vertical-align: top;">             启用时会将头文件的信息作为数据流输出。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td><strong><code>CURLINFO_HEADER_OUT</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时追踪句柄的请求字符串。            </td>            <td style="vertical-align: top;">             从 PHP 5.1.3 开始可用。<strong><code>CURLINFO_</code></strong> 的前缀是有意的(intentional)。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HTTPGET</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  时会设置 HTTP 的 method 为 GET，由于默认是 GET，所以只有 method 被修改时才需要这个选项。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HTTPPROXYTUNNEL</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  会通过指定的 HTTP 代理来传输。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_MUTE</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  时将完全静默，无论是何 cURL 函数。            </td>            <td style="vertical-align: top;">            在 cURL 7.15.5  中移出（可以使用 CURLOPT_RETURNTRANSFER 作为代替）            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_NETRC</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  时，在连接建立时，访问<var class="filename">~/.netrc</var>文件获取用户名和密码来连接远程站点。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_NOBODY</code></strong></td>            <td style="vertical-align: top;">            <strong><code>TRUE</code></strong>  时将不输出 BODY 部分。同时 Mehtod 变成了 HEAD。修改为  <strong><code>FALSE</code></strong> 时不会变成 GET。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_NOPROGRESS</code></strong></td>            <td style="vertical-align: top;"><p class="para">             <strong><code>TRUE</code></strong> 时关闭 cURL 的传输进度。             <blockquote class="note"><p><strong class="note">Note</strong>:               <p class="para">               PHP 默认自动设置此选项为 <strong><code>TRUE</code></strong>，只有为了调试才需要改变设置。              </p>             </p></blockquote>             </p></td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_NOSIGNAL</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时忽略所有的 cURL 传递给 PHP 进行的信号。在 SAPI 多线程传输时此项被默认启用，所以超时选项仍能使用。            </td>            <td style="vertical-align: top;">             cURL 7.10时被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PATH_AS_IS</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 不处理 dot dot sequences  （即 ../ ）            </td>            <td style="vertical-align: top;">              cURL 7.42.0 时被加入。 PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PIPEWAIT</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 则等待 pipelining/multiplexing。            </td>            <td style="vertical-align: top;">              cURL 7.43.0 时被加入。 PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_POST</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时会发送 POST 请求，类型为：<em>application/x-www-form-urlencoded</em>，是 HTML 表单提交时最常见的一种。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PUT</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 时允许 HTTP 发送文件。要被 PUT 的文件必须在 <strong><code>CURLOPT_INFILE</code></strong>和<strong><code>CURLOPT_INFILESIZE</code></strong> 中设置。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_RETURNTRANSFER</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  将<span class="function">{@link curl_exec()}</span>获取的信息以字符串返回，而不是直接输出。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SAFE_UPLOAD</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 禁用 <em>@</em> 前缀在 <strong><code>CURLOPT_POSTFIELDS</code></strong> 中发送文件。                          意味着 <em>@</em> 可以在字段中安全得使用了。              可使用 <a href="http://php.net/manual/zh/class.curlfile.php" class="classname">CURLFile</a> 作为上传的代替。            </td>                                                            <td style="vertical-align: top;">             PHP 5.5.0 中添加，默认值 <strong><code>FALSE</code></strong>。             PHP 5.6.0 改默认值为 <strong><code>TRUE</code></strong>。.             PHP 7 删除了此选项， 必须使用 CURLFile interface 来上传文件。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SASL_IR</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 开启，收到首包(first packet)后发送初始的响应(initial response)。            </td>            <td style="vertical-align: top;">             cURL 7.31.10 中添加，自 PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_ENABLE_ALPN</code></strong></td>            <td style="vertical-align: top;">             <strong><code>FALSE</code></strong>  禁用 SSL 握手中的 ALPN (如果 SSL 后端的             libcurl 内建支持) 用于协商到 http2。            </td>            <td style="vertical-align: top;">             cURL 7.36.0 中增加， PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_ENABLE_NPN</code></strong></td>            <td style="vertical-align: top;">             <strong><code>FALSE</code></strong> 禁用 SSL 握手中的 NPN(如果 SSL 后端的             libcurl 内建支持)，用于协商到 http2。            </td>            <td style="vertical-align: top;">             cURL 7.36.0 中增加， PHP 7.0.7 起有效。            </td>           </tr>                                                                                                                                                                                <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_VERIFYPEER</code></strong></td>            <td style="vertical-align: top;">             <strong><code>FALSE</code></strong>  禁止 cURL 验证对等证书（peer&#039;s             certificate）。要验证的交换证书可以在 <strong><code>CURLOPT_CAINFO</code></strong> 选项中设置，或在 <strong><code>CURLOPT_CAPATH</code></strong>中设置证书目录。            </td>            <td style="vertical-align: top;">             自cURL 7.10开始默认为 <strong><code>TRUE</code></strong>。从 cURL 7.10开始默认绑定安装。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_VERIFYSTATUS</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 验证证书状态。            </td>            <td style="vertical-align: top;">              cURL 7.41.0 中添加， PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TCP_FASTOPEN</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 开启 TCP Fast Open。            </td>            <td style="vertical-align: top;">             cURL 7.49.0 中添加， PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TFTP_NO_OPTIONS</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 不发送 TFTP 的 options 请求。            </td>            <td style="vertical-align: top;">             自 cURL 7.48.0 添加， PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TRANSFERTEXT</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  对 FTP 传输使用 ASCII 模式。对于LDAP，它检索纯文本信息而非 HTML。在 Windows 系统上，系统不会把 <em>STDOUT</em> 设置成二进制 模式。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_UNRESTRICTED_AUTH</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 在使用<strong><code>CURLOPT_FOLLOWLOCATION</code></strong>重定向 header 中的多个 location 时继续发送用户名和密码信息，哪怕主机名已改变。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_UPLOAD</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong>  准备上传。            </td>            <td style="vertical-align: top;">            </td>           </tr>                                  <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_VERBOSE</code></strong></td>            <td style="vertical-align: top;">             <strong><code>TRUE</code></strong> 会输出所有的信息，写入到<em>STDERR</em>，或在<strong><code>CURLOPT_STDERR</code></strong>中指定的文件。            </td>            <td style="vertical-align: top;">            </td>           </tr>           </tbody>                 </table>        </p>       <p class="para">        以下 <code class="parameter">option</code>的<code class="parameter">value</code>应该被设置成 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span>：        <table class="doctable informaltable">                   <thead>           <tr>            <th>选项</th>            <th>设置<code class="parameter">value</code>为</th>            <th>备注</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_BUFFERSIZE</code></strong></td>            <td style="vertical-align: top;">             每次读入的缓冲的尺寸。当然不保证每次都会完全填满这个尺寸。            </td>            <td style="vertical-align: top;">             在cURL 7.10中被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CLOSEPOLICY</code></strong></td>            <td style="vertical-align: top;">             <strong><code>CURLCLOSEPOLICY_*</code></strong> 中的一个。             <blockquote class="note"><p><strong class="note">Note</strong>:               <p class="para">               此选项已被废弃，它不会被实现，永远不会有效果啦。              </p>             </p></blockquote>            </td>            <td style="vertical-align: top;">             PHP 5.6.0 中移除。            </td>           </tr>            <tr>            <td><strong><code>CURLOPT_CONNECTTIMEOUT</code></strong></td>            <td style="vertical-align: top;">             在尝试连接时等待的秒数。设置为0，则无限等待。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CONNECTTIMEOUT_MS</code></strong></td>            <td style="vertical-align: top;">             尝试连接等待的时间，以毫秒为单位。设置为0，则无限等待。                           如果 libcurl 编译时使用系统标准的名称解析器（ standard system name resolver），那部分的连接仍旧使用以秒计的超时解决方案，最小超时时间还是一秒钟。            </td>            <td style="vertical-align: top;">             在 cURL 7.16.2 中被加入。从 PHP 5.2.3 开始可用。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_DNS_CACHE_TIMEOUT</code></strong></td>            <td style="vertical-align: top;">             设置在内存中缓存 DNS 的时间，默认为120秒（两分钟）。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_EXPECT_100_TIMEOUT_MS</code></strong></td>            <td style="vertical-align: top;">             超时预计： 100毫秒内的 continue 响应             默认为 1000 毫秒。            </td>            <td style="vertical-align: top;">             cURL 7.36.0 中添加，自 PHP 7.0.7 有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTPSSLAUTH</code></strong></td>            <td style="vertical-align: top;">             FTP验证方式（启用的时候）：<em>CURLFTPAUTH_SSL</em> (首先尝试SSL)，<em>CURLFTPAUTH_TLS</em> (首先尝试TLS)或<em>CURLFTPAUTH_DEFAULT</em> (让cURL 自个儿决定)。            </td>            <td style="vertical-align: top;">             在 cURL 7.12.2 中被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HEADEROPT</code></strong></td>            <td style="vertical-align: top;">             How to deal with headers. One of the following constants:             <span class="simpara">              <strong><code>CURLHEADER_UNIFIED</code></strong>: the headers specified in              <strong><code>CURLOPT_HTTPHEADER</code></strong> will be used in requests              both to servers and proxies. With this option enabled,               <strong><code>CURLOPT_PROXYHEADER</code></strong> will not have any effect.             </span>             <span class="simpara">              <strong><code>CURLHEADER_SEPARATE</code></strong>: makes              <strong><code>CURLOPT_HTTPHEADER</code></strong> headers only get sent to              a server and not to a proxy. Proxy headers must be set with              <strong><code>CURLOPT_PROXYHEADER</code></strong> to get used. Note that if              a non-CONNECT request is sent to a proxy, libcurl will send both              server headers and proxy headers. When doing CONNECT, libcurl will              send <strong><code>CURLOPT_PROXYHEADER</code></strong> headers only to the              proxy and then <strong><code>CURLOPT_HTTPHEADER</code></strong> headers              only to the server.             </span>             <span class="simpara">              Defaults to <strong><code>CURLHEADER_SEPARATE</code></strong> as of cURL              7.42.1, and <strong><code>CURLHEADER_UNIFIED</code></strong> before.             </span>            </td>            <td style="vertical-align: top;">             Added in cURL 7.37.0. Available since PHP 7.0.7.            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HTTP_VERSION</code></strong></td>            <td style="vertical-align: top;">             <code class="parameter">CURL_HTTP_VERSION_NONE</code> (默认值，让 cURL 自己判断使用哪个版本)，<code class="parameter">CURL_HTTP_VERSION_1_0</code> (强制使用 HTTP/1.0)或<code class="parameter">CURL_HTTP_VERSION_1_1</code> (强制使用 HTTP/1.1)。            </td>            <td style="vertical-align: top;">            </td>           </tr>                                  <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HTTPAUTH</code></strong></td>            <td style="vertical-align: top;">             <p class="para">              使用的 HTTP 验证方法。选项有：              <code class="parameter">CURLAUTH_BASIC</code>、              <code class="parameter">CURLAUTH_DIGEST</code>、              <code class="parameter">CURLAUTH_GSSNEGOTIATE</code>、              <code class="parameter">CURLAUTH_NTLM</code>、              <code class="parameter">CURLAUTH_ANY</code>和              <code class="parameter">CURLAUTH_ANYSAFE</code>。             </p>             <p class="para">              可以使用 <em>|</em> 位域(OR)操作符结合多个值，cURL 会让服务器选择受支持的方法，并选择最好的那个。             </p>             <p class="para">              <code class="parameter">CURLAUTH_ANY</code>是 <em>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</em> 的别名。             </p>                          <p class="para">       <code class="parameter">CURLAUTH_ANYSAFE</code> 是 <em>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</em> 的别名。             </p>            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_INFILESIZE</code></strong></td>            <td style="vertical-align: top;">             希望传给远程站点的文件尺寸，字节(byte)为单位。             注意无法用这个选项阻止 libcurl 发送更多的数据，确切发送什么取决于 <strong><code>CURLOPT_READFUNCTION</code></strong>。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_LOW_SPEED_LIMIT</code></strong></td>            <td style="vertical-align: top;">             传输速度，每秒字节（bytes）数，根据<strong><code>CURLOPT_LOW_SPEED_TIME</code></strong>秒数统计是否因太慢而取消传输。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_LOW_SPEED_TIME</code></strong></td>            <td style="vertical-align: top;">             当传输速度小于<strong><code>CURLOPT_LOW_SPEED_LIMIT</code></strong>时(bytes/sec)，PHP会判断是否因太慢而取消传输。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_MAXCONNECTS</code></strong></td>            <td style="vertical-align: top;">             允许的最大连接数量。达到限制时，会通过<strong><code>CURLOPT_CLOSEPOLICY</code></strong>决定应该关闭哪些连接。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_MAXREDIRS</code></strong></td>            <td style="vertical-align: top;">             指定最多的 HTTP 重定向次数，这个选项是和<strong><code>CURLOPT_FOLLOWLOCATION</code></strong>一起使用的。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PORT</code></strong></td>            <td style="vertical-align: top;">             用来指定连接端口。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_POSTREDIR</code></strong></td>            <td style="vertical-align: top;">             位掩码， 1 (301 永久重定向), 2 (302 Found)            和 4 (303 See Other)              设置 <strong><code>CURLOPT_FOLLOWLOCATION</code></strong> 时，什么情况下需要再次  HTTP POST 到重定向网址。            </td>            <td style="vertical-align: top;">             cURL 7.19.1 中添加，PHP 5.3.2 开始可用。            </td>           </tr>                                  <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROTOCOLS</code></strong></td>            <td style="vertical-align: top;">             <p class="para">              <strong><code>CURLPROTO_*</code></strong>的位掩码。              启用时，会限制 libcurl 在传输过程中可使用哪些协议。              这将允许你在编译libcurl时支持众多协议，但是限制只用允许的子集。默认 libcurl 将使用所有支持的协议。              参见<strong><code>CURLOPT_REDIR_PROTOCOLS</code></strong>。             </p>             <p class="para">              可用的协议选项为：              <code class="parameter">CURLPROTO_HTTP</code>、              <code class="parameter">CURLPROTO_HTTPS</code>、              <code class="parameter">CURLPROTO_FTP</code>、              <code class="parameter">CURLPROTO_FTPS</code>、              <code class="parameter">CURLPROTO_SCP</code>、              <code class="parameter">CURLPROTO_SFTP</code>、              <code class="parameter">CURLPROTO_TELNET</code>、              <code class="parameter">CURLPROTO_LDAP</code>、              <code class="parameter">CURLPROTO_LDAPS</code>、              <code class="parameter">CURLPROTO_DICT</code>、              <code class="parameter">CURLPROTO_FILE</code>、              <code class="parameter">CURLPROTO_TFTP</code>、              <code class="parameter">CURLPROTO_ALL</code>。             </p>            </td>            <td style="vertical-align: top;">             在 cURL 7.19.4 中被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROXYAUTH</code></strong></td>            <td style="vertical-align: top;">             HTTP 代理连接的验证方式。使用在<strong><code>CURLOPT_HTTPAUTH</code></strong>中的位掩码。             当前仅仅支持 <code class="parameter">CURLAUTH_BASIC</code>和<code class="parameter">CURLAUTH_NTLM</code>。            </td>            <td style="vertical-align: top;">             在 cURL 7.10.7 中被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROXYPORT</code></strong></td>            <td style="vertical-align: top;">             代理服务器的端口。端口也可以在<strong><code>CURLOPT_PROXY</code></strong>中设置。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROXYTYPE</code></strong></td>            <td style="vertical-align: top;">             可以是 <strong><code>CURLPROXY_HTTP</code></strong> (默认值)           <strong><code>CURLPROXY_SOCKS4</code></strong>、             <strong><code>CURLPROXY_SOCKS5</code></strong>、   <strong><code>CURLPROXY_SOCKS4A</code></strong> 或             <strong><code>CURLPROXY_SOCKS5_HOSTNAME</code></strong>。            </td>            <td style="vertical-align: top;">             在 cURL 7.10 中被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_REDIR_PROTOCOLS</code></strong></td>            <td style="vertical-align: top;">             <strong><code>CURLPROTO_*</code></strong> 值的位掩码。如果被启用，位掩码会限制 libcurl 在 <strong><code>CURLOPT_FOLLOWLOCATION</code></strong>开启时，使用的协议。             默认允许除 FILE 和 SCP 外所有协议。             这和 7.19.4 前的版本无条件支持所有支持的协议不同。关于协议常量，请参照<strong><code>CURLOPT_PROTOCOLS</code></strong>。            </td>            <td style="vertical-align: top;">             在 cURL 7.19.4 中被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_RESUME_FROM</code></strong></td>            <td style="vertical-align: top;">             在恢复传输时，传递字节为单位的偏移量（用来断点续传）。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_OPTIONS</code></strong></td>            <td style="vertical-align: top;">             Set SSL behavior options, which is a bitmask of any of the following constants:             <span class="simpara">              <strong><code>CURLSSLOPT_ALLOW_BEAST</code></strong>: do not attempt to use              any workarounds for a security flaw in the SSL3 and TLS1.0 protocols.             </span>             <span class="simpara">              <strong><code>CURLSSLOPT_NO_REVOKE</code></strong>: disable certificate              revocation checks for those SSL backends where such behavior is              present.             </span>            </td>            <td style="vertical-align: top;">             Added in cURL 7.25.0. Available since PHP 7.0.7.            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_VERIFYHOST</code></strong></td>            <td style="vertical-align: top;">             设置为 <em>1</em> 是检查服务器SSL证书中是否存在一个公用名(common name)。译者注：公用名(Common Name)一般来讲就是填写你将要申请SSL证书的域名 (domain)或子域名(sub domain)。             设置成 2，会检查公用名是否存在，并且是否与提供的主机名匹配。              <em>0</em> 为不检查名称。             在生产环境中，这个值应该是 <em>2</em>（默认值）。            </td>            <td style="vertical-align: top;">            值 <em>1</em> 的支持在 cURL 7.28.1 中被删除了。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLVERSION</code></strong></td>            <td style="vertical-align: top;">              <strong><code>CURL_SSLVERSION_DEFAULT</code></strong> (0),             <strong><code>CURL_SSLVERSION_TLSv1</code></strong> (1),             <strong><code>CURL_SSLVERSION_SSLv2</code></strong> (2),             <strong><code>CURL_SSLVERSION_SSLv3</code></strong> (3),             <strong><code>CURL_SSLVERSION_TLSv1_0</code></strong> (4),             <strong><code>CURL_SSLVERSION_TLSv1_1</code></strong> (5) ，             <strong><code>CURL_SSLVERSION_TLSv1_2</code></strong> (6)  中的其中一个。             <blockquote class="note"><p><strong class="note">Note</strong>:               <p class="para">               你最好别设置这个值，让它使用默认值。 设置为 2 或 3 比较危险，在 SSLv2 和 SSLv3 中有弱点存在。              </p>             </p></blockquote>            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_STREAM_WEIGHT</code></strong></td>            <td style="vertical-align: top;">             设置 stream weight 数值 ( 1 和 256 之间的数字).            </td>            <td style="vertical-align: top;">              cURL 7.46.0 中添加，自 PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TIMECONDITION</code></strong></td>            <td style="vertical-align: top;">            设置如何对待 <strong><code>CURLOPT_TIMEVALUE</code></strong>。             使用 <code class="parameter">CURL_TIMECOND_IFMODSINCE</code>，仅在页面 <strong><code>CURLOPT_TIMEVALUE</code></strong> 之后修改，才返回页面。没有修改则返回 <em>&quot;304 Not Modified&quot;</em> 头，假设设置了 <strong><code>CURLOPT_HEADER</code></strong> 为  <strong><code>TRUE</code></strong>。<code class="parameter">CURL_TIMECOND_IFUNMODSINCE</code>则起相反的效果。             默认为 <code class="parameter">CURL_TIMECOND_IFMODSINCE</code>。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TIMEOUT</code></strong></td>            <td style="vertical-align: top;">             允许 cURL 函数执行的最长秒数。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TIMEOUT_MS</code></strong></td>            <td style="vertical-align: top;">             设置cURL允许执行的最长毫秒数。                                        如果 libcurl 编译时使用系统标准的名称解析器（ standard system name resolver），那部分的连接仍旧使用以秒计的超时解决方案，最小超时时间还是一秒钟。            </td>            <td style="vertical-align: top;">             在 cURL 7.16.2 中被加入。从 PHP 5.2.3 起可使用。            </td>           </tr>                       <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_TIMEVALUE</code></strong></td>            <td style="vertical-align: top;">             秒数，从 1970年1月1日开始。这个时间会被 <strong><code>CURLOPT_TIMECONDITION</code></strong>使。默认使用<code class="parameter">CURL_TIMECOND_IFMODSINCE</code>。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_MAX_RECV_SPEED_LARGE</code></strong></td>            <td style="vertical-align: top;">             如果下载速度超过了此速度(以每秒字节数来统计) ，即传输过程中累计的平均数，传输就会降速到这个参数的值。默认不限速。            </td>            <td style="vertical-align: top;">              cURL 7.15.5 中添加， PHP 5.4.0 有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_MAX_SEND_SPEED_LARGE</code></strong></td>            <td style="vertical-align: top;">             如果上传的速度超过了此速度(以每秒字节数来统计)，即传输过程中累计的平均数              ，传输就会降速到这个参数的值。默认不限速。            </td>            <td style="vertical-align: top;">              cURL 7.15.5 中添加， PHP 5.4.0 有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSH_AUTH_TYPES</code></strong></td>            <td style="vertical-align: top;">             A bitmask consisting of one or more of              <strong><code>CURLSSH_AUTH_PUBLICKEY</code></strong>,              <strong><code>CURLSSH_AUTH_PASSWORD</code></strong>,              <strong><code>CURLSSH_AUTH_HOST</code></strong>,              <strong><code>CURLSSH_AUTH_KEYBOARD</code></strong>. Set to              <strong><code>CURLSSH_AUTH_ANY</code></strong> to let libcurl pick one.            </td>            <td style="vertical-align: top;">             cURL 7.16.1 中添加。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_IPRESOLVE</code></strong></td>            <td style="vertical-align: top;">             允许程序选择想要解析的 IP 地址类别。只有在地址有多种 ip 类别的时候才能用，可以的值有：             <strong><code>CURL_IPRESOLVE_WHATEVER</code></strong>、             <strong><code>CURL_IPRESOLVE_V4</code></strong>、             <strong><code>CURL_IPRESOLVE_V6</code></strong>，默认是             <strong><code>CURL_IPRESOLVE_WHATEVER</code></strong>。            </td>            <td style="vertical-align: top;">             cURL 7.10.8 中添加。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTP_FILEMETHOD</code></strong></td>            <td style="vertical-align: top;">             告诉 curl 使用哪种方式来获取 FTP(s) 服务器上的文件。可能的值有：             <strong><code>CURLFTPMETHOD_MULTICWD</code></strong>、             <strong><code>CURLFTPMETHOD_NOCWD</code></strong> 和               <strong><code>CURLFTPMETHOD_SINGLECWD</code></strong>。            </td>            <td style="vertical-align: top;">             cURL 7.15.1 中添加， PHP 5.3.0 起有效。            </td>           </tr>           </tbody>                 </table>        </p>       <p class="para">        对于下面的这些<code class="parameter">option</code>，<code class="parameter">value</code>应该被设置成 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>：        <table class="doctable informaltable">                   <thead>           <tr>            <th>选项</th>            <th>设置的<code class="parameter">value</code></th>            <th>备注</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CAINFO</code></strong></td>            <td style="vertical-align: top;">             一个保存着1个或多个用来让服务端验证的证书的文件名。这个参数仅仅在和<strong><code>CURLOPT_SSL_VERIFYPEER</code></strong>一起使用时才有意义。            .            </td>            <td style="vertical-align: top;">             可能需要绝对路径。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CAPATH</code></strong></td>            <td style="vertical-align: top;">             一个保存着多个CA证书的目录。这个选项是和<strong><code>CURLOPT_SSL_VERIFYPEER</code></strong>一起使用的。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_COOKIE</code></strong></td>            <td style="vertical-align: top;">             设定 HTTP 请求中<em>&quot;Cookie: &quot;</em>部分的内容。多个 cookie 用分号分隔，分号后带一个空格(例如， &quot;<em>fruit=apple; colour=red</em>&quot;)。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_COOKIEFILE</code></strong></td>            <td style="vertical-align: top;">             包含 cookie 数据的文件名，cookie 文件的格式可以是 Netscape 格式，或者只是纯 HTTP 头部风格，存入文件。如果文件名是空的，不会加载 cookie，但 cookie 的处理仍旧启用。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_COOKIEJAR</code></strong></td>            <td style="vertical-align: top;">             连接结束后，比如，调用 curl_close 后，保存 cookie 信息的文件。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CUSTOMREQUEST</code></strong></td>            <td style="vertical-align: top;"><p class="para">             HTTP 请求时，使用自定义的 Method 来代替<em>&quot;GET&quot;</em>或<em>&quot;HEAD&quot;</em>。对 <em>&quot;DELETE&quot;</em> 或者其他更隐蔽的 HTTP 请求有用。             有效值如 <em>&quot;GET&quot;</em>，<em>&quot;POST&quot;</em>，<em>&quot;CONNECT&quot;</em>等等；也就是说，不要在这里输入整行 HTTP 请求。例如输入<em>&quot;GET /index.html HTTP/1.0\r\n\r\n&quot;</em>是不正确的。             <blockquote class="note"><p><strong class="note">Note</strong>:               <p class="para">               不确定服务器支持这个自定义方法则不要使用它。              </p>             </p></blockquote>             </p>            </td>            <td style="vertical-align: top;">            </td>           </tr>                        <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_DEFAULT_PROTOCOL</code></strong></td>            <td style="vertical-align: top;"><p class="para">             URL不带协议的时候，使用的默认协议。            </p></td>            <td style="vertical-align: top;">             cURL 7.45.0 中添加，自 PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_DNS_INTERFACE</code></strong></td>            <td style="vertical-align: top;"><p class="para">             Set the name of the network interface that the DNS resolver should bind to.             This must be an interface name (not an address).             </p></td>            <td style="vertical-align: top;">             Added in cURL 7.33.0. Available since PHP 7.0.7.            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_DNS_LOCAL_IP4</code></strong></td>            <td style="vertical-align: top;"><p class="para">             Set the local IPv4 address that the resolver should bind to. The argument             should contain a single numerical IPv4 address as a string.             </p></td>            <td style="vertical-align: top;">             Added in cURL 7.33.0. Available since PHP 7.0.7.            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_DNS_LOCAL_IP6</code></strong></td>            <td style="vertical-align: top;"><p class="para">             Set the local IPv6 address that the resolver should bind to. The argument             should contain a single numerical IPv6 address as a string.             </p></td>            <td style="vertical-align: top;">             Added in cURL 7.33.0. Available since PHP 7.0.7.            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_EGDSOCKET</code></strong></td>            <td style="vertical-align: top;">             类似<strong><code>CURLOPT_RANDOM_FILE</code></strong>，除了一个Entropy Gathering Daemon套接字。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_ENCODING</code></strong></td>            <td style="vertical-align: top;">             HTTP请求头中<em>&quot;Accept-Encoding: &quot;</em>的值。             这使得能够解码响应的内容。             支持的编码有<em>&quot;identity&quot;</em>，<em>&quot;deflate&quot;</em>和<em>&quot;gzip&quot;</em>。如果为空字符串<em>&quot;&quot;</em>，会发送所有支持的编码类型。            </td>            <td style="vertical-align: top;">             在 cURL 7.10 中被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FTPPORT</code></strong></td>            <td style="vertical-align: top;">             这个值将被用来获取供FTP&quot;PORT&quot;指令所需要的IP地址。             &quot;PORT&quot; 指令告诉远程服务器连接到我们指定的IP地址。这个字符串可以是纯文本的IP地址、主机名、一个网络接口名（UNIX下）或者只是一个&#039;-&#039;来使用默认的 IP 地址。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_INTERFACE</code></strong></td>            <td style="vertical-align: top;">             发送的网络接口（interface），可以是一个接口名、IP 地址或者是一个主机名。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_KEYPASSWD</code></strong></td>            <td style="vertical-align: top;">             使用 <strong><code>CURLOPT_SSLKEY</code></strong>              或 <strong><code>CURLOPT_SSH_PRIVATE_KEYFILE</code></strong> 私钥时候的密码。            </td>            <td style="vertical-align: top;">             在 cURL 7.16.1 中添加。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_KRB4LEVEL</code></strong></td>            <td style="vertical-align: top;">             KRB4 (Kerberos 4) 安全级别。下面的任何值都是有效的(从低到高的顺序)：<em>&quot;clear&quot;</em>、<em>&quot;safe&quot;</em>、<em>&quot;confidential&quot;</em>、<em>&quot;private&quot;.</em>。如果字符串以上这些，将使用<em>&quot;private&quot;</em>。             这个选项设置为 <strong><code>NULL</code></strong> 时将禁用 KRB4 安全认证。目前 KRB4 安全认证只能用于 FTP 传输。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_LOGIN_OPTIONS</code></strong></td>            <td style="vertical-align: top;">             Can be used to set protocol specific login options, such as the             preferred authentication mechanism via &quot;AUTH=NTLM&quot; or &quot;AUTH=*&quot;,             and should be used in conjunction with the             <strong><code>CURLOPT_USERNAME</code></strong> option.            </td>            <td style="vertical-align: top;">             Added in cURL 7.34.0. Available since PHP 7.0.7.            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PINNEDPUBLICKEY</code></strong></td>            <td style="vertical-align: top;">              Set the pinned public key.              The string can be the file name of your pinned public key. The file              format expected is &quot;PEM&quot; or &quot;DER&quot;. The string can also be any              number of base64 encoded sha256 hashes preceded by &quot;sha256//&quot; and              separated by &quot;;&quot;.            </td>            <td style="vertical-align: top;">             Added in cURL 7.39.0. Available since PHP 7.0.7.            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_POSTFIELDS</code></strong></td>            <td style="vertical-align: top;">             <span class="simpara">             全部数据使用HTTP协议中的 &quot;POST&quot; 操作来发送。             要发送文件，在文件名前面加上<em>@</em>前缀并使用完整路径。             文件类型可在文件名后以 &#039;<em>;type=mimetype</em>&#039; 的格式指定。                          这个参数可以是 urlencoded 后的字符串，类似&#039;<em>para1=val1&amp;para2=val2&amp;...</em>&#039;，也可以使用一个以字段名为键值，字段数据为值的数组。             如果<code class="parameter">value</code>是一个数组，<em>Content-Type</em>头将会被设置成<em>multipart/form-data</em>。             </span>             <span class="simpara">              从 PHP 5.2.0 开始，使用 <em>@</em>  前缀传递文件时，<code class="parameter">value</code> 必须是个数组。             </span>             <span class="simpara">              从 PHP 5.5.0 开始,  <em>@</em> 前缀已被废弃，文件可通过 <a href="http://php.net/manual/zh/class.curlfile.php" class="classname">CURLFile</a> 发送。              设置 <strong><code>CURLOPT_SAFE_UPLOAD</code></strong> 为 <strong><code>TRUE</code></strong> 可禁用  <em>@</em>  前缀发送文件，以增加安全性。             </span>            </td>            <td style="vertical-align: top;">            </td>           </tr>                       <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PRIVATE</code></strong></td>            <td style="vertical-align: top;">             Any data that should be associated with this cURL handle.              This data             can subsequently be retrieved with the             <strong><code>CURLINFO_PRIVATE</code></strong> option of             <span class="function">{@link curl_getinfo()}</span>. cURL does nothing with this data.             When using a cURL multi handle, this private data is typically a             unique key to identify a standard cURL handle.            </td>            <td style="vertical-align: top;">             Added in cURL 7.10.3.             </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROXY</code></strong></td>            <td style="vertical-align: top;">             HTTP 代理通道。            </td>            <td style="vertical-align: top;">            </td>           </tr>             <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROXY_SERVICE_NAME</code></strong></td>            <td style="vertical-align: top;">             代理验证服务的名称。            </td>            <td style="vertical-align: top;">             cURL 7.34.0 中添加，PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROXYUSERPWD</code></strong></td>            <td style="vertical-align: top;">             一个用来连接到代理的<em>&quot;[username]:[password]&quot;</em>格式的字符串。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_RANDOM_FILE</code></strong></td>            <td style="vertical-align: top;">             一个被用来生成 SSL 随机数种子的文件名。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_RANGE</code></strong></td>            <td style="vertical-align: top;">             以<em>&quot;X-Y&quot;</em>的形式，其中X和Y都是可选项获取数据的范围，以字节计。HTTP传输线程也支持几个这样的重复项中间用逗号分隔如<em>&quot;X-Y,N-M&quot;</em>。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_REFERER</code></strong></td>            <td style="vertical-align: top;">             在HTTP请求头中<em>&quot;Referer: &quot;</em>的内容。            </td>            <td style="vertical-align: top;">            </td>           </tr>                       <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SERVICE_NAME</code></strong></td>            <td style="vertical-align: top;">             验证服务的名称            </td>            <td style="vertical-align: top;">              cURL 7.43.0 起添加，自 PHP 7.0.7 有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</code></strong></td>            <td style="vertical-align: top;">             包含 32 位长的 16 进制数值。这个字符串应该是远程主机公钥（public key） 的 MD5 校验值。在不匹配的时候 libcurl 会拒绝连接。             此选项仅用于  SCP 和 SFTP 的传输。            </td>            <td style="vertical-align: top;">             cURL 7.17.1 中添加。            </td>           </tr>                       <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSH_PUBLIC_KEYFILE</code></strong></td>            <td style="vertical-align: top;">             The file name for your public key. If not used, libcurl defaults to              $HOME/.ssh/id_dsa.pub if the HOME environment variable is set,              and just &quot;id_dsa.pub&quot; in the current directory if HOME is not set.            </td>            <td style="vertical-align: top;">             Added in cURL 7.16.1.             </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSH_PRIVATE_KEYFILE</code></strong></td>            <td style="vertical-align: top;">             The file name for your private key. If not used, libcurl defaults to              $HOME/.ssh/id_dsa if the HOME environment variable is set,              and just &quot;id_dsa&quot; in the current directory if HOME is not set.              If the file is password-protected, set the password with              <strong><code>CURLOPT_KEYPASSWD</code></strong>.            </td>            <td style="vertical-align: top;">             Added in cURL 7.16.1.             </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSL_CIPHER_LIST</code></strong></td>            <td style="vertical-align: top;">             一个SSL的加密算法列表。例如<em>RC4-SHA</em>和<em>TLSv1</em>都是可用的加密列表。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLCERT</code></strong></td>            <td style="vertical-align: top;">             一个包含 PEM 格式证书的文件名。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLCERTPASSWD</code></strong></td>            <td style="vertical-align: top;">             使用<strong><code>CURLOPT_SSLCERT</code></strong>证书需要的密码。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLCERTTYPE</code></strong></td>            <td style="vertical-align: top;">             证书的类型。支持的格式有<em>&quot;PEM&quot;</em> (默认值), <em>&quot;DER&quot;</em>和<em>&quot;ENG&quot;</em>。            </td>            <td style="vertical-align: top;">             在 cURL 7.9.3中 被加入。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLENGINE</code></strong></td>            <td style="vertical-align: top;">             用来在<strong><code>CURLOPT_SSLKEY</code></strong>中指定的SSL私钥的加密引擎变量。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLENGINE_DEFAULT</code></strong></td>            <td style="vertical-align: top;">             用来做非对称加密操作的变量。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLKEY</code></strong></td>            <td style="vertical-align: top;">             包含 SSL 私钥的文件名。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLKEYPASSWD</code></strong></td>            <td style="vertical-align: top;"><p class="para">             在 <strong><code>CURLOPT_SSLKEY</code></strong>中指定了的SSL私钥的密码。             <blockquote class="note"><p><strong class="note">Note</strong>:               <p class="para">               由于这个选项包含了敏感的密码信息，记得保证这个PHP脚本的安全。              </p>             </p></blockquote>             </p></td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SSLKEYTYPE</code></strong></td>            <td style="vertical-align: top;">             <strong><code>CURLOPT_SSLKEY</code></strong>中规定的私钥的加密类型，支持的密钥类型为<em>&quot;PEM&quot;</em>(默认值)、<em>&quot;DER&quot;</em>和<em>&quot;ENG&quot;</em>。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_UNIX_SOCKET_PATH</code></strong></td>            <td style="vertical-align: top;">             使用 Unix 套接字作为连接，并用指定的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 作为路径。            </td>            <td style="vertical-align: top;">             cURL 7.40.0 中添加， PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_URL</code></strong></td>            <td style="vertical-align: top;">             需要获取的 URL 地址，也可以在<span class="function">{@link curl_init()}</span> 初始化会话的时候。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_USERAGENT</code></strong></td>            <td style="vertical-align: top;">             在HTTP请求中包含一个<em>&quot;User-Agent: &quot;</em>头的字符串。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_USERNAME</code></strong></td>            <td style="vertical-align: top;">             验证中使用的用户名。            </td>            <td style="vertical-align: top;">             cURL 7.19.1 中添加，PHP 5.5.0 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_USERPWD</code></strong></td>            <td style="vertical-align: top;">             传递一个连接中需要的用户名和密码，格式为：<em>&quot;[username]:[password]&quot;</em>。            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_XOAUTH2_BEARER</code></strong></td>            <td style="vertical-align: top;">             指定 OAuth 2.0 access token。            </td>            <td style="vertical-align: top;">             cURL 7.33.0 中添加，自 PHP 7.0.7 添加。            </td>           </tr>           </tbody>                 </table>        </p>       <p class="para">以下<code class="parameter">option</code>，<code class="parameter">value</code>应该被设置成数组：        <table class="doctable informaltable">                   <thead>           <tr>            <th>选项</th>            <th>可选<code class="parameter">value</code>值</th>            <th>备注</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_CONNECT_TO</code></strong></td>            <td style="vertical-align: top;">             连接到指定的主机和端口，替换 URL 中的主机和端口。接受指定字符串格式的数组：             <em>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</em>。            </td>            <td style="vertical-align: top;">              cURL 7.49.0 中添加， PHP 7.0.7 起有效。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HTTP200ALIASES</code></strong></td>            <td style="vertical-align: top;">             HTTP 200 响应码数组，数组中的响应码被认为是正确的响应，而非错误。            </td>            <td style="vertical-align: top;">             在 cURL 7.10.3 中被加入。            </td>           </tr>                                                                   <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HTTPHEADER</code></strong></td>            <td style="vertical-align: top;">             设置 HTTP 头字段的数组。格式：             <code class="code">              array(&#039;Content-type: text/plain&#039;, &#039;Content-length: 100&#039;)             </code>            </td>            <td style="vertical-align: top;">            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_POSTQUOTE</code></strong></td>            <td style="vertical-align: top;">             在 FTP 请求执行完成后，在服务器上执行的一组array格式的 FTP 命令。            </td>            <td style="vertical-align: top;">            </td>           </tr>                       <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROXYHEADER</code></strong></td>            <td style="vertical-align: top;">             传给代理的自定义 HTTP 头。            </td>            <td style="vertical-align: top;">              cURL 7.37.0 中添加，自 PHP 7.0.7 添加。            </td>           </tr>                                  <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_QUOTE</code></strong></td>            <td style="vertical-align: top;">             一组先于 FTP 请求的在服务器上执行的FTP命令。            </td>            <td style="vertical-align: top;">            </td>           </tr>                       <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_RESOLVE</code></strong></td>            <td style="vertical-align: top;">             提供自定义地址，指定了主机和端口。             包含主机、端口和 ip 地址的字符串，组成 array 的，每个元素以冒号分隔。格式：             <code class="code">              array(&quot;example.com:80:127.0.0.1&quot;)             </code>            </td>            <td style="vertical-align: top;">             在 cURL 7.21.3 中添加，自  PHP 5.5.0 起可用。            </td>           </tr>           </tbody>                 </table>        </p>       <p class="para"> 以下 <code class="parameter">option</code>，<code class="parameter">value</code>应该被设置成流资源         （例如使用<span class="function">{@link fopen()}</span>）：        <table class="doctable informaltable">                   <thead>           <tr>            <th>选项</th>            <th>可选<code class="parameter">value</code>值</th>           </tr>           </thead>           <tbody class="tbody">                                                       <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_FILE</code></strong></td>            <td style="vertical-align: top;">             设置输出文件，默认为<em>STDOUT</em> (浏览器)。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_INFILE</code></strong></td>            <td style="vertical-align: top;">             上传文件时需要读取的文件。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_STDERR</code></strong></td>            <td style="vertical-align: top;">             错误输出的地址，取代默认的<em>STDERR</em>。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_WRITEHEADER</code></strong></td>            <td style="vertical-align: top;">             设置 header 部分内容的写入的文件地址。            </td>           </tr>           </tbody>                 </table>        </p>       <p class="para">        以下<code class="parameter">option</code> 的 <code class="parameter">value</code>应该是有效的函数或者闭包：        <table class="doctable informaltable">                   <thead>           <tr>            <th>选项</th>            <th><code class="parameter">value</code>值</th>           </tr>           </thead>           <tbody class="tbody">                                                                             <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_HEADERFUNCTION</code></strong></td>            <td style="vertical-align: top;">             设置一个回调函数，这个函数有两个参数，第一个是cURL的资源句柄，第二个是输出的 header 数据。header数据的输出必须依赖这个函数，返回已写入的数据大小。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PASSWDFUNCTION</code></strong></td>            <td style="vertical-align: top;">             设置一个回调函数，有三个参数，第一个是cURL的资源句柄，第二个是一个密码提示符，第三个参数是密码长度允许的最大值。返回密码的值。            </td>           </tr>                                                                   <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_PROGRESSFUNCTION</code></strong></td>            <td style="vertical-align: top;">             <p class="para">             设置一个回调函数，有五个参数，第一个是cURL的资源句柄，第二个是预计要下载的总字节（bytes）数。第三个是目前下载的字节数，第四个是预计传输中总上传字节数，第五个是目前上传的字节数。             </p>             <blockquote class="note"><p><strong class="note">Note</strong>:               <p class="para">               只有设置 <strong><code>CURLOPT_NOPROGRESS</code></strong>               选项为 <strong><code>FALSE</code></strong> 时才会调用这个回调函数。              </p>             </p></blockquote>               <p class="para">                返回非零值将中断传输。                传输将设置 <strong><code>CURLE_ABORTED_BY_CALLBACK</code></strong> 错误。             </p>            </td>           </tr>                                                                   <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_READFUNCTION</code></strong></td>            <td style="vertical-align: top;">             回调函数名。该函数应接受三个参数。第一个是 cURL resource；第二个是通过选项  <strong><code>CURLOPT_INFILE</code></strong> 传给 cURL 的 stream resource；第三个参数是最大可以读取的数据的数量。回 调函数必须返回一个字符串，长度小于或等于请求的数据量（第三个参数）。一般从传入的 stream  resource 读取。返回空字符串作为 <em>EOF</em>（文件结束） 信号。            </td>           </tr>                                             <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_WRITEFUNCTION</code></strong></td>            <td style="vertical-align: top;">             回调函数名。该函数应接受两个参数。第一个是 cURL resource；第二个是要写入的数据字符串。数 据必须在函数中被保存。             函数必须准确返回写入数据的字节数，否则传输会被一个错误所中 断。            </td>           </tr>           </tbody>                 </table>        </p>       <p class="para">        其他值：        <table class="doctable informaltable">                   <thead>           <tr>            <th>Option</th>            <th>设置 <code class="parameter">value</code> 为</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURLOPT_SHARE</code></strong></td>            <td style="vertical-align: top;"> <span class="function">{@link curl_share_init()}</span> 返回的结果。             使 cURL 可以处理共享句柄里的数据。            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.curl-setopt-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.curl-setopt-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">              <tr>        <td>7.0.7</td>        <td>         引入 <strong><code>CURL_HTTP_VERSION_2</code></strong>、 <strong><code>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</code></strong>、         <strong><code>CURL_HTTP_VERSION_2TLS</code></strong>、 <strong><code>CURL_REDIR_POST_301</code></strong>、         <strong><code>CURL_REDIR_POST_302</code></strong>、 <strong><code>CURL_REDIR_POST_303</code></strong>、         <strong><code>CURL_REDIR_POST_ALL</code></strong>、 <strong><code>CURL_VERSION_KERBEROS5</code></strong>、         <strong><code>CURL_VERSION_PSL</code></strong>、 <strong><code>CURL_VERSION_UNIX_SOCKETS</code></strong>、         <strong><code>CURLAUTH_NEGOTIATE</code></strong>、 <strong><code>CURLAUTH_NTLM_WB</code></strong>、         <strong><code>CURLFTP_CREATE_DIR</code></strong>、 <strong><code>CURLFTP_CREATE_DIR_NONE</code></strong>、         <strong><code>CURLFTP_CREATE_DIR_RETRY</code></strong>、 <strong><code>CURLHEADER_SEPARATE</code></strong>、         <strong><code>CURLHEADER_UNIFIED</code></strong>、 <strong><code>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</code></strong>、         <strong><code>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</code></strong>、 <strong><code>CURLMOPT_MAX_HOST_CONNECTIONS</code></strong>、         <strong><code>CURLMOPT_MAX_PIPELINE_LENGTH</code></strong>、 <strong><code>CURLMOPT_MAX_TOTAL_CONNECTIONS</code></strong>、         <strong><code>CURLOPT_CONNECT_TO</code></strong>、 <strong><code>CURLOPT_DEFAULT_PROTOCOL</code></strong>、         <strong><code>CURLOPT_DNS_INTERFACE</code></strong>、 <strong><code>CURLOPT_DNS_LOCAL_IP4</code></strong>、         <strong><code>CURLOPT_DNS_LOCAL_IP6</code></strong>、 <strong><code>CURLOPT_EXPECT_100_TIMEOUT_MS</code></strong>、         <strong><code>CURLOPT_HEADEROPT</code></strong>、 <strong><code>CURLOPT_LOGIN_OPTIONS</code></strong>、         <strong><code>CURLOPT_PATH_AS_IS</code></strong>、 <strong><code>CURLOPT_PINNEDPUBLICKEY</code></strong>、         <strong><code>CURLOPT_PIPEWAIT</code></strong>、 <strong><code>CURLOPT_PROXY_SERVICE_NAME</code></strong>、         <strong><code>CURLOPT_PROXYHEADER</code></strong>、 <strong><code>CURLOPT_SASL_IR</code></strong>、         <strong><code>CURLOPT_SERVICE_NAME</code></strong>、 <strong><code>CURLOPT_SSL_ENABLE_ALPN</code></strong>、         <strong><code>CURLOPT_SSL_ENABLE_NPN</code></strong>、 <strong><code>CURLOPT_SSL_FALSESTART</code></strong>、         <strong><code>CURLOPT_SSL_VERIFYSTATUS</code></strong>、 <strong><code>CURLOPT_STREAM_WEIGHT</code></strong>、         <strong><code>CURLOPT_TCP_FASTOPEN</code></strong>、 <strong><code>CURLOPT_TFTP_NO_OPTIONS</code></strong>、         <strong><code>CURLOPT_UNIX_SOCKET_PATH</code></strong>、 <strong><code>CURLOPT_XOAUTH2_BEARER</code></strong>、         <strong><code>CURLPROTO_SMB</code></strong>、 <strong><code>CURLPROTO_SMBS</code></strong>、         <strong><code>CURLPROXY_HTTP_1_0</code></strong>、 <strong><code>CURLSSH_AUTH_AGENT</code></strong> 和         <strong><code>CURLSSLOPT_NO_REVOKE</code></strong>。        </td>       </tr>        <tr>        <td>7.0.0</td>        <td>         禁用 <strong><code>CURLOPT_SAFE_UPLOAD</code></strong> 的选项已被删掉了。         所有的  curl 文件的上传都必须使用 <a href="http://php.net/manual/zh/class.curlfile.php" class="classname">CURLFile</a>。        </td>       </tr>        <tr>        <td>5.6.0</td>        <td>        默认 <strong><code>CURLOPT_SAFE_UPLOAD</code></strong>为  <strong><code>TRUE</code></strong> 。        </td>       </tr>        <tr>        <td>5.6.0</td>        <td>         移出 <strong><code>CURLOPT_CLOSEPOLICY</code></strong>和相关的值。        </td>       </tr>        <tr>        <td>5.5.0</td>        <td>         添加 cURL 资源作为 <strong><code>CURLOPT_PROGRESSFUNCTION</code></strong> 回调函数的第一个参数。        </td>       </tr>        <tr>        <td>5.5.0</td>        <td>         引入 <strong><code>CURLOPT_SHARE</code></strong>。        </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         引入 <strong><code>CURLOPT_PROGRESSFUNCTION</code></strong>。        </td>       </tr>        <tr>        <td>5.2.10</td>        <td>         引入 <strong><code>CURLOPT_PROTOCOLS</code></strong>, and         <strong><code>CURLOPT_REDIR_PROTOCOLS</code></strong>.        </td>       </tr>               <tr>        <td>5.2.4</td>        <td>         引入了 <strong><code>CURLOPT_PRIVATE</code></strong>。        </td>       </tr>        <tr>        <td>5.1.0</td>        <td>         引入 <strong><code>CURLOPT_AUTOREFERER</code></strong>,         <strong><code>CURLOPT_BINARYTRANSFER</code></strong>,         <strong><code>CURLOPT_FTPSSLAUTH</code></strong>,         <strong><code>CURLOPT_PROXYAUTH</code></strong>, and         <strong><code>CURLOPT_TIMECONDITION</code></strong>.        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         引入 <strong><code>CURLOPT_FTP_USE_EPRT</code></strong>,         <strong><code>CURLOPT_NOSIGNAL</code></strong>,         <strong><code>CURLOPT_UNRESTRICTED_AUTH</code></strong>,         <strong><code>CURLOPT_BUFFERSIZE</code></strong>,         <strong><code>CURLOPT_HTTPAUTH</code></strong>,         <strong><code>CURLOPT_PROXYPORT</code></strong>,         <strong><code>CURLOPT_PROXYTYPE</code></strong>,         <strong><code>CURLOPT_SSLCERTTYPE</code></strong>, and         <strong><code>CURLOPT_HTTP200ALIASES</code></strong>.        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.curl-setopt-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5247">     <p><strong>Example #1 初始化一个新的cURL会话并获取一个网页</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个新cURL资源<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;抓取URL并把它传递给浏览器<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//关闭cURL资源，并且释放系统资源<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-5248">     <p><strong>Example #2 上传文件 (PHP 5.5.0 后被废弃)</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;http://localhost/upload.php:<br />print_r($_POST);<br />print_r($_FILES);<br /><br /><br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'name'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'file'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'@/home/user/test.png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'http://localhost/upload.php'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_POST</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_SAFE_UPLOAD</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;&nbsp;PHP&nbsp;5.6.0&nbsp;后必须开启<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_POSTFIELDS</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Array (     [name] =&gt; Foo ) Array (     [file] =&gt; Array         (             [name] =&gt; test.png             [type] =&gt; image/png             [tmp_name] =&gt; /tmp/phpcpjNeQ             [error] =&gt; 0             [size] =&gt; 279         )  )  </pre></div>     </div>    </div>   </p>  </div>     <div class="refsect1 notes" id="refsect1-function.curl-setopt-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     传递一个数组到<strong><code>CURLOPT_POSTFIELDS</code></strong>，cURL会把数据编码成     <em class="emphasis">multipart/form-data</em>，而然传递一个URL-encoded字符串时，数据会被编码成     <em class="emphasis">application/x-www-form-urlencoded</em>。    </p>   </p></blockquote>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-setopt-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_setopt_array()} - 为 cURL 传输会话批量设置选项</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function curl_setopt ($ch, $option, $value) {}

/**
*<div id="function.curl-setopt-array" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_setopt_array</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.3, PHP 7)</p><p class="refpurpose"><span class="refname">curl_setopt_array</span> &mdash; <span class="dc-title">为 cURL 传输会话批量设置选项</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.curl-setopt-array-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>curl_setopt_array</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>    )</div>    <p class="para rdfs-comment">    为 cURL 传输会话批量设置选项。这个函数对于需要设置大量的 cURL 选项是非常有用的，不需要重复地调用 <span class="function">{@link curl_setopt()}</span>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-setopt-array-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>            <dt> <code class="parameter">options</code></dt>       <dd>        <p class="para">        一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 用来确定将被设置的选项及其值。数组的键值必须是一个有效的<span class="function">{@link curl_setopt()}</span>常量或者是它们对等的整数值。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-setopt-array-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果全部的选项都被成功设置，返回<strong><code>TRUE</code></strong>。如果一个选项不能被成功设置，马上返回<strong><code>FALSE</code></strong>，忽略其后的任何在<code class="parameter">options</code>数组中的选项。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-setopt-array-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5245">     <p><strong>Example #1       初始化新的 cURL 会话并抓取 web 页面     </strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个新&nbsp;cURL&nbsp;资源<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置&nbsp;URL&nbsp;和相应的选项<br /></span><span style="color: #9876AA">$options&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">CURLOPT_URL&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">curl_setopt_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;抓取&nbsp;URL&nbsp;并把它传递给浏览器<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭&nbsp;cURL&nbsp;资源，并且释放系统资源<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    早于PHP 5.1.3这个函数可以做如下模拟：   </p>   <p class="para">    <div class="example" id="example-5246">     <p><strong>Example #2 我们对<span class="function"><strong>curl_setopt_array()</strong></span>的等价实现</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">function_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'curl_setopt_array'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;function&nbsp;</span><span style="color: #9876AA">curl_setopt_array</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$curl_options</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style="color: #9876AA">$curl_options&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$option&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$option</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.curl-setopt-array-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     就<span class="function">{@link curl_setopt()}</span>来说，传递一个数组到<strong><code>CURLOPT_POST</code></strong>将会把数据以<em class="emphasis">multipart/form-data</em>的方式编码，然而传递一个URL-encoded字符串将会以<em class="emphasis">application/x-www-form-urlencoded</em>的方式对数据进行编码。    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-setopt-array-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_setopt()} - 设置 cURL 传输选项</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return bool true if all options were successfully set. If an option could*/
function curl_setopt_array ($ch, array $options) {}

/**
*<div id="function.curl-share-close" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_share_close</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_share_close</span> &mdash; <span class="dc-title">关闭 cURL 共享句柄</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-share-close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>curl_share_close</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sh</code></span>    )</div>    <p class="para rdfs-comment">    关闭一个 cURL 共享句柄并且释放所有的资源。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-share-close-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">sh</code></dt>      <dd>       <p class="para">       由<span class="function">{@link curl_share_init()}</span>创建的 cURL 共享句柄。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-share-close-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-share-close-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5249">     <p><strong>Example #1 <span class="function">{@link curl_share_setopt()}</span> 函数范例：</strong></p>     <div class="example-contents"><p>      以下范例将会创建一个 cURL 共享句柄，并且往其中添加两个 cURL 句柄，最后共享这两个 cURL 句柄的 cookie 数据运行。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;cURL&nbsp;share&nbsp;handle&nbsp;and&nbsp;set&nbsp;it&nbsp;to&nbsp;share&nbsp;cookie&nbsp;data<br /></span><span style="color: #9876AA">$sh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_share_init</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">curl_share_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$sh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLSHOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURL_LOCK_DATA_COOKIE</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Initialize&nbsp;the&nbsp;first&nbsp;cURL&nbsp;handle&nbsp;and&nbsp;assign&nbsp;the&nbsp;share&nbsp;handle&nbsp;to&nbsp;it<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Execute&nbsp;the&nbsp;first&nbsp;cURL&nbsp;handle<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Initialize&nbsp;the&nbsp;second&nbsp;cURL&nbsp;handle&nbsp;and&nbsp;assign&nbsp;the&nbsp;share&nbsp;handle&nbsp;to&nbsp;it<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Execute&nbsp;the&nbsp;second&nbsp;cURL&nbsp;handle<br />//&nbsp;&nbsp;all&nbsp;cookies&nbsp;from&nbsp;$ch1&nbsp;handle&nbsp;are&nbsp;shared&nbsp;with&nbsp;$ch2&nbsp;handle<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;the&nbsp;cURL&nbsp;share&nbsp;handle<br /></span><span style="color: #9876AA">curl_share_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;the&nbsp;cURL&nbsp;handles<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-share-close-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_share_init()} - 初始化一个 cURL 共享句柄。</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return void*/
function curl_share_close ($sh) {}

/**
*<div id="function.curl-share-init" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_share_init</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_share_init</span> &mdash; <span class="dc-title">初始化一个 cURL 共享句柄。</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-share-init-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>curl_share_init</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    运行在 cURL 句柄之间共享数据。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-share-init-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-share-init-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回类型为&quot;cURL 共享句柄&quot;的资源。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.curl-share-init-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5250">     <p><strong>Example #1 <span class="function"><strong>curl_share_init()</strong></span> 函数的范例：</strong></p>     <div class="example-contents"><p>      以下范例将会创建一个 cURL 共享句柄，并且往其中添加两个 cURL 句柄，最后用共享的 cookie 数据运行它们。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建&nbsp;cURL&nbsp;共享句柄，并设置共享&nbsp;cookie&nbsp;数据<br /></span><span style="color: #9876AA">$sh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_share_init</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">curl_share_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$sh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLSHOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURL_LOCK_DATA_COOKIE</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;初始化第一个&nbsp;cURL&nbsp;句柄，并将它设置到共享句柄<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;执行第一个&nbsp;cURL&nbsp;句柄<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;初始化第二个&nbsp;cURL&nbsp;句柄，并将它设置到共享句柄<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;执行第二个&nbsp;cURL&nbsp;句柄<br />//&nbsp;&nbsp;all&nbsp;cookies&nbsp;from&nbsp;$ch1&nbsp;handle&nbsp;are&nbsp;shared&nbsp;with&nbsp;$ch2&nbsp;handle<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭&nbsp;cURL&nbsp;共享句柄<br /></span><span style="color: #9876AA">curl_share_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭&nbsp;cURL&nbsp;共享句柄<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-share-init-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_share_setopt()} - 为 cURL 共享句柄设置选项。</span></li>     <li class="member"><span class="function">{@link curl_share_close()} - 关闭 cURL 共享句柄</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return resource Returns resource of type "cURL Share Handle".*/
function curl_share_init () {}

/**
*<div id="function.curl-share-setopt" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_share_setopt</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_share_setopt</span> &mdash; <span class="dc-title">为 cURL 共享句柄设置选项。</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-share-setopt-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>curl_share_setopt</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sh</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    为给定的 cURL 共享句柄设置一个选项。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-share-setopt-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">sh</code></dt>      <dd>       <p class="para">       一个由<span class="function">{@link curl_share_init()}</span>函数返回的 cURL 共享句柄。      </p>     </dd>              <dt> <code class="parameter">option</code></dt>      <dd>       <p class="para">       <table class="doctable informaltable">                   <thead>           <tr>            <th>Option</th>            <th>Description</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURLSHOPT_SHARE</code></strong></td>            <td style="vertical-align: top;">                指定要共享的数据类型。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLSHOPT_UNSHARE</code></strong></td>            <td style="vertical-align: top;">                指定不再共享的数据类型。            </td>           </tr>           </tbody>                 </table>       </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">       <table class="doctable informaltable">                   <thead>           <tr>            <th>Value</th>            <th>Description</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURL_LOCK_DATA_COOKIE</code></strong></td>            <td style="vertical-align: top;">                共享 cookie 数据。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURL_LOCK_DATA_DNS</code></strong></td>            <td style="vertical-align: top;">                共享 DNS 缓存。注意，当你使用 cURL 多句柄时，默认所有添加在同一个多句柄的句柄都将会共享 DNS 缓存。             </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURL_LOCK_DATA_SSL_SESSION</code></strong></td>            <td style="vertical-align: top;">                共享 SSL 的 session ID, 在重连同样的服务器时减少 SSL 握手时间。注意，SSL 的 session ID 在同一个的句柄中默认是重复使用的。            </td>           </tr>           </tbody>                 </table>       </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-share-setopt-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-share-setopt-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5251">     <p><strong>Example #1 <span class="function"><strong>curl_share_setopt()</strong></span> 函数的范例：</strong></p>     <div class="example-contents"><p>      以下范例将会创建一个 cURL 共享句柄，并且往其中添加两个 cURL 句柄，最后共享这两个 cURL 句柄的 cookie 数据运行。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;cURL&nbsp;share&nbsp;handle&nbsp;and&nbsp;set&nbsp;it&nbsp;to&nbsp;share&nbsp;cookie&nbsp;data<br /></span><span style="color: #9876AA">$sh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_share_init</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">curl_share_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$sh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLSHOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURL_LOCK_DATA_COOKIE</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Initialize&nbsp;the&nbsp;first&nbsp;cURL&nbsp;handle&nbsp;and&nbsp;assign&nbsp;the&nbsp;share&nbsp;handle&nbsp;to&nbsp;it<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Execute&nbsp;the&nbsp;first&nbsp;cURL&nbsp;handle<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Initialize&nbsp;the&nbsp;second&nbsp;cURL&nbsp;handle&nbsp;and&nbsp;assign&nbsp;the&nbsp;share&nbsp;handle&nbsp;to&nbsp;it<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_SHARE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Execute&nbsp;the&nbsp;second&nbsp;cURL&nbsp;handle<br />//&nbsp;&nbsp;all&nbsp;cookies&nbsp;from&nbsp;$ch1&nbsp;handle&nbsp;are&nbsp;shared&nbsp;with&nbsp;$ch2&nbsp;handle<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;the&nbsp;cURL&nbsp;share&nbsp;handle<br /></span><span style="color: #9876AA">curl_share_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$sh</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;the&nbsp;cURL&nbsp;handles<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return bool*/
function curl_share_setopt ($sh, $option, $value ) {}

/**
*<div id="function.curl-strerror" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_strerror</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_strerror</span> &mdash; <span class="dc-title">返回错误代码的字符串描述</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-strerror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>curl_strerror</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errornum</code></span>    )</div>    <p class="para rdfs-comment">    返回文本错误信息，解释了指定的错误代码。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-strerror-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">errornum</code></dt>      <dd>       <p class="para">       <a href="http://curl.haxx.se/libcurl/c/libcurl-errors.html" class="link external">&raquo;&nbsp;cURL 错误代码</a>中的常量之一。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-strerror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回错误信息描述，无效的错误代码返回 <strong><code>NULL</code></strong> 。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-strerror-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5252">     <p><strong>Example #1 <span class="function">{@link curl_errno()}</span> 函数的范例：</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;a&nbsp;curl&nbsp;handle&nbsp;with&nbsp;a&nbsp;mispelled&nbsp;protocol&nbsp;in&nbsp;URL<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"htp://example.com/"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Send&nbsp;request<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Check&nbsp;for&nbsp;errors&nbsp;and&nbsp;display&nbsp;the&nbsp;error&nbsp;message<br /></span><span style="color: #007700">if(</span><span style="color: #9876AA">$errno&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_errno</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$error_message&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">$errno</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"cURL&nbsp;error&nbsp;(</span><span style="color: #007700">{</span><span style="color: #9876AA">$errno</span><span style="color: #007700">}</span><span style="color: #DD0000">):\n&nbsp;</span><span style="color: #007700">{</span><span style="color: #9876AA">$error_message</span><span style="color: #007700">}</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;the&nbsp;handle<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> cURL error (1):  Unsupported protocol </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-strerror-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_errno()} - 返回最后一次的错误代码</span></li>     <li class="member"><span class="function">{@link curl_error()} - 返回当前会话最后一次错误的字符串</span></li>     <li class="member"><a href="http://curl.haxx.se/libcurl/c/libcurl-errors.html" class="link external">&raquo;&nbsp;Curl error codes</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return string|NULL Returns error description or <b>NULL</b> for invalid error code.*/
function curl_strerror ($errornum ) {}

/**
 * (PHP 5 &gt;=5.5.0)<br/>
 * Decodes the given URL encoded string
 * @link http://www.php.net/manual/en/function.curl-unescape.php
 * @param resource $ch <p>A cURL handle returned by
 * {@link http://www.php.net/manual/en/function.curl-init.php curl_init()}.</p>
 * @param string $str <p>
 * The URL encoded string to be decoded.
 * </p>
 * @return string|bool Returns decoded string or FALSE on failure.
 * @since 5.5.0
 */
function  curl_unescape ($ch, $str)  {}
/**
*<div id="function.curl-exec" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_exec</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_exec</span> &mdash; <span class="dc-title">执行 cURL 会话</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-exec-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>curl_exec</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    执行给定的 cURL 会话。   </p>   <p class="para">    这个函数应该在初始化一个 cURL 会话并且全部的选项都被设置后被调用。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-exec-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-exec-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。 然而，如果 {@link 设置}了  <strong><code>CURLOPT_RETURNTRANSFER</code></strong> 选项，函数执行成功时会返回执行的结果，失败时返回 <strong><code>FALSE</code></strong> 。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>       <div class="refsect1 examples" id="refsect1-function.curl-exec-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5235">     <p><strong>Example #1 获取网页</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建新的&nbsp;cURL&nbsp;资源<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置&nbsp;URL&nbsp;和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;抓取&nbsp;URL&nbsp;并把它传递给浏览器<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭&nbsp;cURL&nbsp;资源，并且释放系统资源<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-exec-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_multi_exec()} - 运行当前 cURL 句柄的子连接</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return mixed true on success or false on failure. However, if the CURLOPT_RETURNTRANSFER*/
function curl_exec ($ch) {}

/**
*<div id="function.curl-getinfo" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_getinfo</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_getinfo</span> &mdash; <span class="dc-title">获取一个cURL连接资源句柄的信息</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-getinfo-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>curl_getinfo</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$opt</code><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    获取最后一次传输的相关信息。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-getinfo-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>            <dt> <code class="parameter">opt</code></dt>       <dd>        <p class="para">        这个参数可能是以下常量之一:        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_EFFECTIVE_URL</code></strong> - 最后一个有效的URL地址          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_HTTP_CODE</code></strong> - 最后一个收到的HTTP代码          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_FILETIME</code></strong> - 远程获取文档的时间，如果无法获取，则返回值为“-1”          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_TOTAL_TIME</code></strong> - 最后一次传输所消耗的时间          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_NAMELOOKUP_TIME</code></strong> - 名称解析所消耗的时间          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_CONNECT_TIME</code></strong> - 建立连接所消耗的时间          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_PRETRANSFER_TIME</code></strong> - 从建立连接到准备传输所使用的时间          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_STARTTRANSFER_TIME</code></strong> - 从建立连接到传输开始所使用的时间          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_REDIRECT_TIME</code></strong> - 在事务传输开始前重定向所使用的时间          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_SIZE_UPLOAD</code></strong> - 以字节为单位返回上传数据量的总值          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_SIZE_DOWNLOAD</code></strong> - 以字节为单位返回下载数据量的总值          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_SPEED_DOWNLOAD</code></strong> - 平均下载速度          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_SPEED_UPLOAD</code></strong> - 平均上传速度          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_HEADER_SIZE</code></strong> - header部分的大小          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_HEADER_OUT</code></strong> - 发送请求的字符串          </span>         </li>         <li class="listitem">          <span class="simpara">         <strong><code>CURLINFO_REQUEST_SIZE</code></strong> - 在HTTP请求中有问题的请求的大小          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_SSL_VERIFYRESULT</code></strong> - 通过设置<strong><code>CURLOPT_SSL_VERIFYPEER</code></strong>返回的SSL证书验证请求的结果          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_CONTENT_LENGTH_DOWNLOAD</code></strong> - 从<em>Content-Length:</em> field中读取的下载内容长度          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_CONTENT_LENGTH_UPLOAD</code></strong> - 上传内容大小的说明          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>CURLINFO_CONTENT_TYPE</code></strong> - 下载内容的<em>Content-Type:</em>值，NULL表示服务器没有发送有效的<em>Content-Type:</em> header          </span>         </li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-getinfo-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果 <code class="parameter">opt</code> 被设置，以字符串形式返回它的值。否则，返回返回一个包含下列元素的关联数组(它们分别对应于 <code class="parameter">opt</code>):    <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       &quot;url&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;content_type&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;http_code&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;header_size&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;request_size&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;filetime&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;ssl_verify_result&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;redirect_count&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;total_time&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;namelookup_time&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;connect_time&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;pretransfer_time&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;size_upload&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;size_download&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;speed_download&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;speed_upload&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;download_content_length&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;upload_content_length&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;starttransfer_time&quot;      </span>     </li>     <li class="listitem">      <span class="simpara">       &quot;redirect_time&quot;      </span>     </li>    </ul>   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.curl-getinfo-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.3</td>        <td>         引入<strong><code>CURLINFO_HEADER_OUT</code></strong>.        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.curl-getinfo-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5236">     <p><strong>Example #1 <span class="function"><strong>curl_getinfo()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个cURL句柄<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.yahoo.com/'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;执行<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;检查是否有错误发生<br /></span><span style="color: #007700">if(!</span><span style="color: #9876AA">curl_errno</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">))<br />{<br />&nbsp;</span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_getinfo</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br />&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Took&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'total_time'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">'&nbsp;seconds&nbsp;to&nbsp;send&nbsp;a&nbsp;request&nbsp;to&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'url'</span><span style="color: #007700">];<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;handle<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.curl-getinfo-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Information gathered by this function is kept if the handle is re-used. This means      that unless a statistic is overridden internally by this function, the previous info      is returned.    </p>   </p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return mixed If opt is given, returns its value as a string.*/
function curl_getinfo ($ch, $opt = null) {}

/**
*<div id="function.curl-error" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_error</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_error</span> &mdash; <span class="dc-title">返回当前会话最后一次错误的字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-error-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>curl_error</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    返回最近一次 cURL 操作的文本错误详情。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-error-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-error-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回错误信息，或者如果没有任何错误发生就返回 <em>&#039;&#039;</em> (空字符串)。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-error-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5233">     <p><strong>Example #1 <span class="function"><strong>curl_error()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建&nbsp;cURL&nbsp;句柄，指向一个不存在的位置<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://404.php.net/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_RETURNTRANSFER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />if(</span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Curl&nbsp;error:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">curl_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br />}<br />else<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'操作完成没有任何错误'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭句柄<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-error-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_errno()} - 返回最后一次的错误代码</span></li>     <li class="member"><a href="http://curl.haxx.se/libcurl/c/libcurl-errors.html" class="link external">&raquo;&nbsp;Curl 错误代码</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return string the error message or '' (the empty string) if no*/
function curl_error ($ch) {}

/**
*<div id="function.curl-errno" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_errno</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_errno</span> &mdash; <span class="dc-title">返回最后一次的错误代码</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-errno-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_errno</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    返回最后一次 cURL 操作的错误代码。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-errno-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-errno-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回错误代码或在没有错误发生时返回 <em>0</em> (零)。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-errno-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5232">     <p><strong>Example #1 <span class="function"><strong>curl_errno()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建&nbsp;cURL&nbsp;句柄，指向不存在的位置<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://404.php.net/'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;执行<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_RETURNTRANSFER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;检查是否有错误发生<br /></span><span style="color: #007700">if(</span><span style="color: #9876AA">curl_errno</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">))<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Curl&nbsp;error:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">curl_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭句柄<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-errno-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_error()} - 返回当前会话最后一次错误的字符串</span></li>     <li class="member"><a href="http://curl.haxx.se/libcurl/c/libcurl-errors.html" class="link external">&raquo;&nbsp;Curl 错误代码</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int the error number or 0 (zero) if no error*/
function curl_errno ($ch) {}

/**
*<div id="function.curl-escape" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_escape</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_escape</span> &mdash; <span class="dc-title">使用 URL 编码给定的字符串</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-escape-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>curl_escape</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    )</div>    <p class="para rdfs-comment">    该函数使用 URL 根据<a href="http://www.faqs.org/rfcs/rfc3986" class="link external">&raquo;&nbsp;RFC 3986</a>编码给定的字符串。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-escape-parameters">   <h3 class="title">参数</h3>   <dl>     <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>          <dt> <code class="parameter">str</code></dt>      <dd>       <p class="para">       需要编码的字符串      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-escape-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回编码后的字符串 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-escape-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5234">     <p><strong>Example #1 <span class="function"><strong>curl_escape()</strong></span> 示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个&nbsp;curl&nbsp;句柄<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;把编码后的字符串当做一个&nbsp;GET&nbsp;参数<br /></span><span style="color: #9876AA">$location&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_escape</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Hofbräuhaus&nbsp;/&nbsp;München'</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;结果：&nbsp;Hofbr%C3%A4uhaus%20%2F%20M%C3%BCnchen<br /><br />//&nbsp;用编码好的字符串组装一个&nbsp;URL<br /></span><span style="color: #9876AA">$url&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"http://example.com/add_location.php?location=</span><span style="color: #007700">{</span><span style="color: #9876AA">$location</span><span style="color: #007700">}</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;结果：&nbsp;http://example.com/add_location.php?location=Hofbr%C3%A4uhaus%20%2F%20M%C3%BCnchen<br /><br />//&nbsp;发送&nbsp;HTTP&nbsp;请求并关闭句柄<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$url</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_RETURNTRANSFER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-escape-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_unescape()} - 解码给定的 URL 编码的字符串</span></li>     <li class="member"><span class="function">{@link urlencode()} - 编码 URL 字符串</span></li>     <li class="member"><span class="function">{@link rawurlencode()} - 按照 RFC 3986 对 URL 进行编码</span></li>     <li class="member"><a href="http://www.faqs.org/rfcs/rfc3986" class="link external">&raquo;&nbsp;RFC 3986</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return string|boolean Returns escaped string or FALSE on failure.*/
function curl_escape($ch, $str) {}

/**
*<div id="function.curl-file-create" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_file_create</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_file_create</span> &mdash; <span class="dc-title">创建一个 CURLFile 对象</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-file-create-description">   <h3 class="title">说明</h3>   <p class="para">    此函数是该函数的别名： <span class="methodname">{@link CURLFile::__construct()}</span>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return CURLFile*/
function curl_file_create($filename, $mimetype, $postname) {}

/**
*<div id="function.curl-close" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_close</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_close</span> &mdash; <span class="dc-title">关闭 cURL 会话</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>curl_close</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    关闭 cURL 会话并且释放所有资源。cURL 句柄 <code class="parameter">ch</code> 也会被删除。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-close-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-close-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-close-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5230">     <p><strong>Example #1 初始化新的 cURL 会话，并获取一张网页</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个新cURL资源<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;抓取URL并把它传递给浏览器<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭cURL资源，并且释放系统资源<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-close-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_init()} - 初始化 cURL 会话</span></li>     <li class="member"><span class="function">{@link curl_multi_close()} - 关闭一组cURL句柄</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return void */
function curl_close ($ch) {}

/**
*<div id="function.curl-multi-init" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_init</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_init</span> &mdash; <span class="dc-title">返回一个新cURL批处理句柄</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-init-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>curl_multi_init</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    允许并行地处理批处理cURL句柄。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-init-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-init-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回一个cURL批处理句柄，失败时返回<strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.curl-multi-init-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5242">     <p><strong>Example #1 <span class="function"><strong>curl_multi_init()</strong></span> example</strong></p>     <div class="example-contents"><p>      这个范例将会创建2个cURL句柄，把它们加到批处理句柄，然后并行地运行它们。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一对cURL资源<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;创建批处理cURL句柄<br /></span><span style="color: #9876AA">$mh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;增加2个句柄<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$running</span><span style="color: #007700">=</span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;执行批处理句柄<br /></span><span style="color: #007700">do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">usleep</span><span style="color: #007700">(</span><span style="color: #9876AA">10000</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">curl_multi_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$running</span><span style="color: #007700">);<br />}&nbsp;while&nbsp;(</span><span style="color: #9876AA">$running&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭全部句柄<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-multi-init-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_init()} - 初始化 cURL 会话</span></li>     <li class="member"><span class="function">{@link curl_multi_close()} - 关闭一组cURL句柄</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return resource a cURL multi handle resource on success, false on failure.*/
function curl_multi_init () {}

/**
*<div id="function.curl-multi-add-handle" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_add_handle</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_add_handle</span> &mdash; <span class="dc-title">向curl批处理会话中添加单独的curl句柄</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-add-handle-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_multi_add_handle</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    增加 <code class="parameter">ch</code> 句柄到批处理会话<code class="parameter">mh</code>   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.curl-multi-add-handle-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">mh</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_multi_init()}</span> 返回的 cURL 多个句柄。</p></dd>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-add-handle-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回0，失败时返回<strong><code>CURLM_XXX</code></strong>之一的错误码。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.curl-multi-add-handle-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5238">     <p><strong>Example #1 <span class="function"><strong>curl_multi_add_handle()</strong></span> example</strong></p>     <div class="example-contents"><p>      这个范例将会创建2个cURL句柄，把它们加到批处理句柄，然后并行地运行它们。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一对cURL资源<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;创建批处理cURL句柄<br /></span><span style="color: #9876AA">$mh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;增加2个句柄<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$running</span><span style="color: #007700">=</span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;执行批处理句柄<br /></span><span style="color: #007700">do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">curl_multi_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$running</span><span style="color: #007700">);<br />}&nbsp;while(</span><span style="color: #9876AA">$running&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭全部句柄<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-multi-add-handle-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_multi_remove_handle()} - 移除cURL批处理句柄资源中的某个句柄资源</span></li>     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>     <li class="member"><span class="function">{@link curl_init()} - 初始化 cURL 会话</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int 0 on success, or one of the CURLM_XXX errors*/
function curl_multi_add_handle ($mh, $ch) {}

/**
*<div id="function.curl-multi-remove-handle" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_remove_handle</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_remove_handle</span> &mdash; <span class="dc-title">移除cURL批处理句柄资源中的某个句柄资源</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-remove-handle-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_multi_remove_handle</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    从给定的批处理句柄<code class="parameter">mh</code>中移除<code class="parameter">ch</code>句柄。当<code class="parameter">ch</code>句柄被移除以后，仍然可以合法地用<span class="function">{@link curl_exec()}</span>执行这个句柄。如果要移除的句柄正在被使用，则这个句柄涉及的所有传输任务会被中止。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-remove-handle-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">mh</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_multi_init()}</span> 返回的 cURL 多个句柄。</p></dd>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-remove-handle-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回0，失败时返回<strong><code>CURLM_XXX</code></strong>中的一个。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-multi-remove-handle-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_init()} - 初始化 cURL 会话</span></li>     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>     <li class="member"><span class="function">{@link curl_multi_add_handle()} - 向curl批处理会话中添加单独的curl句柄</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int On success, returns a cURL handle, false on failure.*/
function curl_multi_remove_handle ($mh, $ch) {}

/**
*<div id="function.curl-multi-select" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_select</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_select</span> &mdash; <span class="dc-title">等待所有cURL批处理中的活动连接</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-select-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_multi_select</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$timeout</code><span class="initializer"> = 1.0</span></span>   ] )</div>    <p class="para rdfs-comment">     阻塞直到cURL批处理连接中有活动连接。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-select-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">mh</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_multi_init()}</span> 返回的 cURL 多个句柄。</p></dd>            <dt> <code class="parameter">timeout</code></dt>       <dd>        <p class="para">        以秒为单位，等待响应的时间。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-select-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回描述符集合中描述符的数量。失败时，select失败时返回-1，否则返回超时(从底层的select系统调用).   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-multi-select-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int On success, returns the number of descriptors contained in, */
function curl_multi_select ($mh, $timeout = null) {}

/**
*<div id="function.curl-multi-setopt" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_setopt</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_setopt</span> &mdash; <span class="dc-title">为 cURL 并行处理设置一个选项</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-multi-setopt-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>curl_multi_setopt</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-setopt-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">mh</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">option</code></dt>      <dd>       <p class="para">       常量 <strong><code>CURLMOPT_*</code></strong> 之一。      </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>        <p class="para">        将要设置给 <code class="parameter">option</code> 的值。       </p>       <p class="para">        在  <code class="parameter">option</code> 参数为下列值时 <code class="parameter">value</code> 需要为 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int">int</a></span> 类型：        <table class="doctable informaltable">                   <thead>           <tr>            <th>Option 的值</th>            <th>将 <code class="parameter">value</code> 设为</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td style="vertical-align: top;"><strong><code>CURLMOPT_PIPELINING</code></strong></td>            <td style="vertical-align: top;">             传入 1 来启用或 0 来禁用。 在并行处理时启用管道模式             将会尽可能地使用管线化的 HTTP （译注：HTTP长连接）来             传输，这意味着如果你提交第二个请求，这个请求将会使用             已经存在的链接，第二个请求将会被送入同一个链接的“管             道”中。            </td>           </tr>            <tr>            <td style="vertical-align: top;"><strong><code>CURLMOPT_MAXCONNECTS</code></strong></td>            <td style="vertical-align: top;">             传入一个数字来指定 libcurl 可以同时缓存的活跃链接的数量。默认值为             10。当缓存写满时， lincurl 将关闭较早创建的链接来创建新的链接。            </td>           </tr>           </tbody>                 </table>        </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-setopt-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return boolean Returns TRUE on success or FALSE on failure.*/
function curl_multi_setopt ($mh, $option, $value) {}

/**
*<div id="function.curl-multi-strerror" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_strerror</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_strerror</span> &mdash; <span class="dc-title">返回字符串描述的错误代码</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-multi-strerror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>curl_multi_strerror</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errornum</code></span>    )</div>    <p class="para rdfs-comment">    返回一个用以描述所给 CURLM 错误代码所对应的错误信息。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-strerror-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">errornum</code></dt>      <dd>       <p class="para">       <a href="http://curl.haxx.se/libcurl/c/libcurl-errors.html" class="link external">&raquo;&nbsp;CURLM 错误代码</a>中的常量之一。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-strerror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回可用错误代码所对应的错误信息，否则返回 <strong><code>NULL</code></strong> 。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-multi-strerror-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5243">     <p><strong>Example #1 <span class="function"><strong>curl_multi_strerror()</strong></span> 函数的范例：</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;cURL&nbsp;handles<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://example.com"</span><span style="color: #007700">/);<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://php.net/"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;a&nbsp;cURL&nbsp;multi&nbsp;handle<br /></span><span style="color: #9876AA">$mh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Add&nbsp;the&nbsp;handles&nbsp;to&nbsp;the&nbsp;multi&nbsp;handle<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Execute&nbsp;the&nbsp;multi&nbsp;handle<br /></span><span style="color: #007700">do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$status&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$active</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Check&nbsp;for&nbsp;errors<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if(</span><span style="color: #9876AA">$status&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Display&nbsp;error&nbsp;message<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"ERROR!\n&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">curl_multi_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">$status</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}&nbsp;while&nbsp;(</span><span style="color: #9876AA">$status&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">CURLM_CALL_MULTI_PERFORM&nbsp;</span><span style="color: #007700">||&nbsp;</span><span style="color: #9876AA">$active</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-multi-strerror-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_strerror()} - 返回错误代码的字符串描述</span></li>     <li class="member"><a href="http://curl.haxx.se/libcurl/c/libcurl-errors.html" class="link external">&raquo;&nbsp;cURL error codes</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return string|NULL Returns error string for valid error code, NULL otherwise.*/
function curl_multi_strerror ($errornum) {}

/**
*<div id="function.curl-pause" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_pause</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_pause</span> &mdash; <span class="dc-title">暂停和取消暂停一个连接。</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-pause-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_pause</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bitmask</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-pause-parameters">   <h3 class="title">参数</h3>   <dl>     <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>          <dt> <code class="parameter">bitmask</code></dt>      <dd>       <p class="para">       <strong><code>CURLPAUSE_*</code></strong> 常量之一。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-pause-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个错误代码 (如果没有错误则返回<strong><code>CURLE_OK</code></strong>常量)。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int Returns an error code (<b>CURLE_OK</b> for no error).*/
function curl_pause ($ch, $bitmask ) {}

/**
*<div id="function.curl-reset" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_reset</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">curl_reset</span> &mdash; <span class="dc-title">重置一个 libcurl 会话句柄的所有的选项</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-reset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>curl_reset</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    该函数将给定的 cURL 句柄所有选项重新设置为默认值。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.curl-reset-parameters">   <h3 class="title">参数</h3>   <dl>     <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>    </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-reset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-reset-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5244">     <p><strong>Example #1 <span class="function"><strong>curl_reset()</strong></span> 示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一个url&nbsp;句柄<br /></span><span style="color: #9876AA">$ch&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置&nbsp;CURLOPT_USERAGENT&nbsp;选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_USERAGENT</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"My&nbsp;test&nbsp;user-agent"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;重置所有的预先设置的选项<br /></span><span style="color: #9876AA">curl_reset</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;发送&nbsp;HTTP&nbsp;请求<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'http://example.com/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;预先设置的&nbsp;user-agent&nbsp;不会被发送，它已经被&nbsp;curl_reset&nbsp;重置掉了<br /><br />//&nbsp;关闭句柄<br /></span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.curl-reset-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     <span class="function"><strong>curl_reset()</strong></span> also resets the URL given as the <span class="function">{@link curl_init()}</span> parameter.    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-reset-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_setopt()} - 设置 cURL 传输选项</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return void*/
function curl_reset ($ch) {}

/**
*<div id="function.curl-multi-exec" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_exec</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_exec</span> &mdash; <span class="dc-title">运行当前 cURL 句柄的子连接</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-exec-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_multi_exec</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$still_running</code></span>    )</div>    <p class="para rdfs-comment">    处理在栈中的每一个句柄。无论该句柄需要读取或写入数据都可调用此方法。   </p>   </div>     <div class="refsect1 parameters" id="refsect1-function.curl-multi-exec-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">mh</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_multi_init()}</span> 返回的 cURL 多个句柄。</p></dd>            <dt> <code class="parameter">still_running</code></dt>       <dd>        <p class="para">        一个用来判断操作是否仍在执行的标识的引用。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-exec-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    一个定义于 cURL <a href="http://php.net/manual/zh/curl.constants.php" class="link">预定义常量</a>中的 cURL 代码。   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     该函数仅返回关于整个批处理栈相关的错误。即使返回     <strong><code>CURLM_OK</code></strong> 时单个传输仍可能有问题。    </p>   </p></blockquote>  </div>     <div class="refsect1 examples" id="refsect1-function.curl-multi-exec-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5240">     <p><strong>Example #1 <span class="function"><strong>curl_multi_exec()</strong></span> example</strong></p>     <div class="example-contents"><p>      这个范例将会创建 2 个 cURL 句柄，把它们加到批处理句柄，然后并行地运行它们。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一对cURL资源<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://lxr.php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;创建批处理cURL句柄<br /></span><span style="color: #9876AA">$mh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;增加2个句柄<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$active&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;执行批处理句柄<br /></span><span style="color: #007700">do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$mrc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$active</span><span style="color: #007700">);<br />}&nbsp;while&nbsp;(</span><span style="color: #9876AA">$mrc&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">CURLM_CALL_MULTI_PERFORM</span><span style="color: #007700">);<br /><br />while&nbsp;(</span><span style="color: #9876AA">$active&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;</span><span style="color: #9876AA">$mrc&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">CURLM_OK</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">curl_multi_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">)&nbsp;!=&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$mrc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$active</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;while&nbsp;(</span><span style="color: #9876AA">$mrc&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">CURLM_CALL_MULTI_PERFORM</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭全部句柄<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-multi-exec-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>     <li class="member"><span class="function">{@link curl_multi_select()} - 等待所有cURL批处理中的活动连接</span></li>     <li class="member"><span class="function">{@link curl_exec()} - 执行 cURL 会话</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int A cURL code defined in the cURL Predefined Constants.*/
function curl_multi_exec ($mh, &$still_running) {}

/**
*<div id="function.curl-multi-getcontent" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_getcontent</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_getcontent</span> &mdash; <span class="dc-title">如果设置了<strong><code>CURLOPT_RETURNTRANSFER</code></strong>，则返回获取的输出的文本流</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-getcontent-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>curl_multi_getcontent</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span>    )</div>    <p class="para rdfs-comment">    如果<strong><code>CURLOPT_RETURNTRANSFER</code></strong>作为一个选项被设置到一个具体的句柄，那么这个函数将会以字符串的形式返回那个cURL句柄获取的内容。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-getcontent-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">ch</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_init()}</span> 返回的 cURL 句柄。</p></dd>     </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-getcontent-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果设置了<strong><code>CURLOPT_RETURNTRANSFER</code></strong>，则返回获取的输出的文本流。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-multi-getcontent-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return string Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set.*/
function curl_multi_getcontent ($ch) {}

/**
*<div id="function.curl-multi-info-read" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_info_read</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_info_read</span> &mdash; <span class="dc-title">获取当前解析的cURL的相关传输信息</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-info-read-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>curl_multi_info_read</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$msgs_in_queue</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    查询批处理句柄是否单独的传输线程中有消息或信息返回。消息可能包含诸如从单独的传输线程返回的错误码或者只是传输线程有没有完成之类的报告。   </p>   <p class="para">       重复调用这个函数，它每次都会返回一个新的结果，直到这时没有更多信息返回时，<strong><code>FALSE</code></strong> 被当作一个信号返回。通过<code class="parameter">msgs_in_queue</code>返回的整数指出将会包含当这次函数被调用后，还剩余的消息数。   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     返回的资源指向的数据调用<span class="function">{@link curl_multi_remove_handle()}</span>后将不会存在。    </p>   </div>  </div>     <div class="refsect1 parameters" id="refsect1-function.curl-multi-info-read-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">mh</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_multi_init()}</span> 返回的 cURL 多个句柄。</p></dd>            <dt> <code class="parameter">msgs_in_queue</code></dt>       <dd>        <p class="para">        仍在队列中的消息数量。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-info-read-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回相关信息的数组，失败时返回<strong><code>FALSE</code></strong>。   </p>   <p class="para">    <table class="doctable table">     <caption><strong>返回数组的内容</strong></caption>           <thead>       <tr>        <th>Key:</th>        <th>Value:</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td><em>msg</em></td>        <td><strong><code>CURLMSG_DONE</code></strong>常量。其他返回值当前不可用。</td>       </tr>        <tr>        <td><em>result</em></td>        <td><strong><code>CURLE_*</code></strong>常量之一。如果一切操作没有问题，将会返回<strong><code>CURLE_OK</code></strong>常量。</td>       </tr>        <tr>        <td><em>handle</em></td>        <td>cURL资源类型表明它有关的句柄。</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-multi-info-read-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5241">     <p><strong>Example #1 一个<span class="function"><strong>curl_multi_info_read()</strong></span>范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$urls&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"http://www.cnn.com/"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"http://www.bbc.co.uk/"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"http://www.yahoo.com/"<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$mh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_init</span><span style="color: #007700">();<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$urls&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$url</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$conn</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">(</span><span style="color: #9876AA">$url</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">],&nbsp;</span><span style="color: #9876AA">CURLOPT_RETURNTRANSFER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$conn</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />}<br /><br />do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$status&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$active</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_info_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}&nbsp;while&nbsp;(</span><span style="color: #9876AA">$status&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">CURLM_CALL_MULTI_PERFORM&nbsp;</span><span style="color: #007700">||&nbsp;</span><span style="color: #9876AA">$active</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$urls&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$url</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$res</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">curl_multi_getcontent</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">curl_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">curl_multi_info_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;msg&quot;]=&gt;   int(1)   [&quot;result&quot;]=&gt;   int(0)   [&quot;handle&quot;]=&gt;   resource(5) of type (curl) } array(3) {   [&quot;msg&quot;]=&gt;   int(1)   [&quot;result&quot;]=&gt;   int(0)   [&quot;handle&quot;]=&gt;   resource(7) of type (curl) } array(3) {   [&quot;msg&quot;]=&gt;   int(1)   [&quot;result&quot;]=&gt;   int(0)   [&quot;handle&quot;]=&gt;   resource(6) of type (curl) } bool(false) </pre></div>     </div>    </div>   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.curl-multi-info-read-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.2.0</td>        <td>         <code class="parameter">msgs_in_queue</code>被加入。        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-multi-info-read-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return array On success, returns an associative array for the message, false on failure.*/
function curl_multi_info_read ($mh, &$msgs_in_queue = null) {}

/**
*<div id="function.curl-multi-close" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_close</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">curl_multi_close</span> &mdash; <span class="dc-title">关闭一组cURL句柄</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.curl-multi-close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>curl_multi_close</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    )</div>    <p class="para rdfs-comment">    关闭一组cURL句柄。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-close-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">mh</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_multi_init()}</span> 返回的 cURL 多个句柄。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-close-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.curl-multi-close-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5239">     <p><strong>Example #1 <span class="function"><strong>curl_multi_close()</strong></span> example</strong></p>     <div class="example-contents"><p>      这个范例将会创建2个cURL句柄，把它们加到批处理句柄，然后并行地运行它们。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建一对cURL资源<br /></span><span style="color: #9876AA">$ch1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$ch2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;设置URL和相应的选项<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_URL</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"http://www.php.net/"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_setopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">CURLOPT_HEADER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;创建批处理cURL句柄<br /></span><span style="color: #9876AA">$mh&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">curl_multi_init</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;增加2个句柄<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_add_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$running</span><span style="color: #007700">=</span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;执行批处理句柄<br /></span><span style="color: #007700">do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">curl_multi_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,</span><span style="color: #9876AA">$running</span><span style="color: #007700">);<br />}&nbsp;while&nbsp;(</span><span style="color: #9876AA">$running&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭全部句柄<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_remove_handle</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ch2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">curl_multi_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$mh</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.curl-multi-close-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link curl_multi_init()} - 返回一个新cURL批处理句柄</span></li>     <li class="member"><span class="function">{@link curl_close()} - 关闭 cURL 会话</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return void */
function curl_multi_close ($mh) {}

/**
*<div id="function.curl-multi-errno" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_multi_errno</h1>   <p class="verinfo">(PHP 7 &gt;= 7.1.0)</p><p class="refpurpose"><span class="refname">curl_multi_errno</span> &mdash; <span class="dc-title">返回上一次 curl 批处理的错误码</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-multi-errno-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_multi_errno</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span>    )</div>    <p class="para rdfs-comment">    返回一个整型数字，为上次 curl 批处理错误码。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-multi-errno-parameters">   <h3 class="title">参数</h3>   <dl>      <dt> <code class="parameter">mh</code> </dt> <dd> <p class="para">由 <span class="function">{@link curl_multi_init()}</span> 返回的 cURL 多个句柄。</p></dd>    </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-multi-errno-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回整型数字，包含上次 curl 批处理的错误码，     或者在失败时返回 <strong><code>FALSE</code></strong>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-multi-errno-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link curl_errno()} - 返回最后一次的错误代码</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int*/
function curl_multi_errno($mh) {}

/**
*<div id="function.curl-share-errno" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_share_errno</h1>   <p class="verinfo">(PHP 7 &gt;= 7.1.0)</p><p class="refpurpose"><span class="refname">curl_share_errno</span> &mdash; <span class="dc-title">返回共享 curl 句柄的最后一次错误号</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-share-errno-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>curl_share_errno</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sh</code></span>    )</div>    <p class="para rdfs-comment">    返回一个整数，表示共享 curl 句柄的最后一次错误号   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-share-errno-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">sh</code></dt>      <dd>       <p class="para">         由 <span class="function">{@link curl_share_init()}</span> 函数创建的共享 cURL 句柄。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-share-errno-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个整数，表示共享 curl 句柄的最后一次错误号，     或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-share-errno-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link curl_errno()} - 返回最后一次的错误代码</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return int*/
function curl_share_errno($rh) {}

/**
*<div id="function.curl-share-strerror" class="refentry">  <div class="refnamediv">   <h1 class="refname">curl_share_strerror</h1>   <p class="verinfo">(PHP 7 &gt;= 7.1.0)</p><p class="refpurpose"><span class="refname">curl_share_strerror</span> &mdash; <span class="dc-title">返回错误号对应的错误消息</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.curl-share-strerror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>curl_share_strerror</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errornum</code></span>    )</div>    <p class="para rdfs-comment">    返回错误号对应的错误消息。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.curl-share-strerror-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">errornum</code></dt>      <dd>       <p class="para">       <a href="http://curl.haxx.se/libcurl/c/libcurl-errors.html" class="link external">&raquo;&nbsp;cURL error codes</a> 常量。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.curl-share-strerror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回错误消息。如果传入了无效的错误号，返回 <strong><code>NULL</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.curl-share-strerror-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link curl_share_errno()} - 返回共享 curl 句柄的最后一次错误号</span></li>    <li class="member"><span class="function">{@link curl_strerror()} - 返回错误代码的字符串描述</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.curl.php">cURL 函数</a></div></div>
 * @return string*/
function curl_share_strerror($errno){}



