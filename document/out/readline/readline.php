<?php

// Start of readline v.5.5.3-1ubuntu2.1

/**
*<div id="function.readline" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline</span> &mdash; <span class="dc-title">读取一行</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>readline</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$prompt</code></span>   ] )</div>    <p class="para rdfs-comment">    从用户端读取一行.你必须自己使用 <span class="function">{@link readline_add_history()}</span> 将这一行添加到历史记录中   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.readline-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">prompt</code></dt>       <dd>        <p class="para">        你可以指定一个字符串来作为用户的提示信息       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    从用户端返回一个行字符串.返回的该行的行尾换行符会被删除   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.readline-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-692">     <p><strong>Example #1 <span class="function"><strong>readline()</strong></span> Example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//get&nbsp;3&nbsp;commands&nbsp;from&nbsp;user<br /></span><span style="color: #007700">for&nbsp;(</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$line&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">readline</span><span style="color: #007700">(</span><span style="color: #DD0000">"Command:&nbsp;"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">readline_add_history</span><span style="color: #007700">(</span><span style="color: #9876AA">$line</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//dump&nbsp;history<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">readline_list_history</span><span style="color: #007700">());<br /><br /></span><span style="color: #FF8000">//dump&nbsp;variables<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">readline_info</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return string a single string from the user. The line returned has the ending*/
function readline ($prompt = null) {}

/**
*<div id="function.readline-info" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_info</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline_info</span> &mdash; <span class="dc-title">获取/设置readline内部的各个变量</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-info-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>readline_info</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$varname</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$newvalue</code></span>   ]] )</div>    <p class="para rdfs-comment">    获取/设置readline内部的各个变量.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.readline-info-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">varname</code></dt>       <dd>        <p class="para">        变量名.       </p>      </dd>                 <dt> <code class="parameter">newvalue</code></dt>       <dd>        <p class="para">        如果提供，将被设置成这个值.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-info-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果调用时没有参数，这个函数将返回一个包括了所有已采用的readline设置的数组.    数组元素将索引是以下这些值：done, end, erase_empty_line,    library_version, line_buffer, mark, pending_input, point, prompt,    readline_name, and terminal_name.   </p>   <p class="para">    如果调用是提供了一个或两个参数，原来的值将被返回.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return mixed If called with no parameters, this function returns an array of*/
function readline_info ($varname = null, $newvalue = null) {}

/**
*<div id="function.readline-add-history" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_add_history</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline_add_history</span> &mdash; <span class="dc-title">添加一行命令行历史记录</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-add-history-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>readline_add_history</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$line</code></span>    )</div>    <p class="para rdfs-comment">    这个函数添加一行到命令行历史记录    This function adds a line to the command line history.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.readline-add-history-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">line</code></dt>       <dd>        <p class="para">        这一行将被添加到历史.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-add-history-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function readline_add_history ($line) {}

/**
*<div id="function.readline-clear-history" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_clear_history</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline_clear_history</span> &mdash; <span class="dc-title">清除历史</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-clear-history-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>readline_clear_history</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    这个函数清除整个的命令行历史.   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-clear-history-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function readline_clear_history () {}

/**
*<div id="function.readline-list-history" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_list_history</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline_list_history</span> &mdash; <span class="dc-title">获取命令历史列表</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-list-history-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>readline_list_history</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    获取整个命令行历史.   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-list-history-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回整个命令行历史的数组.元素的整数索引从零开始   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return array an array of the entire command line history. The elements are*/
function readline_list_history () {}

/**
*<div id="function.readline-read-history" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_read_history</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline_read_history</span> &mdash; <span class="dc-title">读取命令历史</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-read-history-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>readline_read_history</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>   ] )</div>    <p class="para rdfs-comment">    这个函数从一个文件读取命令历史   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.readline-read-history-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        保存了命令历史的文件的路径.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-read-history-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function readline_read_history ($filename = null) {}

/**
*<div id="function.readline-write-history" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_write_history</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline_write_history</span> &mdash; <span class="dc-title">写入历史记录</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-write-history-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>readline_write_history</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>   ] )</div>    <p class="para rdfs-comment">    这个函数将命令历史写入到一个文件.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.readline-write-history-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        保存文件的路径.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-write-history-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function readline_write_history ($filename = null) {}

/**
*<div id="function.readline-completion-function" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_completion_function</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readline_completion_function</span> &mdash; <span class="dc-title">注册一个完成函数</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-completion-function-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>readline_completion_function</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$function</code></span>    )</div>    <p class="para rdfs-comment">    这个函数注册一个完成函数.这就像你在使用 Bash 时按 tab 键时你想要的功能一样   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.readline-completion-function-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">function</code></dt>       <dd>        <p class="para">        你必须提供一个已经存在的函数的名字并且可以接受命令行中的部分输入        然后返回一些可能匹配的数组.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-completion-function-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function readline_completion_function (callable $function) {}

/**
*<div id="function.readline-callback-handler-install" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_callback_handler_install</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">readline_callback_handler_install</span> &mdash; <span class="dc-title">初始化一个 readline 回调接口，然后终端输出提示信息并立即返回</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-callback-handler-install-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>readline_callback_handler_install</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$prompt</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    )</div>    <p class="para rdfs-comment">    设置一个 readline 回调接口然后输出 <code class="parameter">prompt</code> 并立即返回.    第二次调用这个函数不需要移除上一个回调接口，这个函数将自动覆盖旧的接口.   </p>   <p class="para">    当配合 <span class="function">{@link stream_select()}</span> 时回调的特性非常有用，它允许在 IO 与用户输入    间交叉进行，不像<span class="function">{@link readline()}</span>.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.readline-callback-handler-install-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">prompt</code></dt>       <dd>        <p class="para">        提示信息.       </p>      </dd>                 <dt> <code class="parameter">callback</code></dt>       <dd>        <p class="para">        <code class="parameter">callback</code> 函数需要一个参数; 用户输入将被返回.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-callback-handler-install-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 description" id="refsect1-function.readline-callback-handler-install-description">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-691">     <p><strong>Example #1 Readline Callback Interface Example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">rl_callback</span><span style="color: #007700">(</span><span style="color: #9876AA">$ret</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$prompting</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"You&nbsp;entered:&nbsp;</span><span style="color: #9876AA">$ret</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">++;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$prompting&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">readline_callback_handler_remove</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">readline_callback_handler_install</span><span style="color: #007700">(</span><span style="color: #DD0000">"[</span><span style="color: #9876AA">$c</span><span style="color: #DD0000">]&nbsp;Enter&nbsp;something:&nbsp;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'rl_callback'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$prompting&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">readline_callback_handler_install</span><span style="color: #007700">(</span><span style="color: #DD0000">"[</span><span style="color: #9876AA">$c</span><span style="color: #DD0000">]&nbsp;Enter&nbsp;something:&nbsp;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'rl_callback'</span><span style="color: #007700">);<br /><br />while&nbsp;(</span><span style="color: #9876AA">$prompting</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$w&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$e&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$n&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$r&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">STDIN</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">$w</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$n&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #9876AA">STDIN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$r</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;read&nbsp;a&nbsp;character,&nbsp;will&nbsp;call&nbsp;the&nbsp;callback&nbsp;when&nbsp;a&nbsp;newline&nbsp;is&nbsp;entered<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">readline_callback_read_char</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Prompting&nbsp;disabled.&nbsp;All&nbsp;done.\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.readline-callback-handler-install-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link readline_callback_handler_remove()} - 移除上一个安装的回调函数句柄并且恢复终端设置</span></li>     <li class="member"><span class="function">{@link readline_callback_read_char()} - 当一个行被接收时读取一个字符并且通知 readline 调用回调函数</span></li>     <li class="member"><span class="function">{@link stream_select()} - Runs the equivalent of the select() system call on the given    arrays of streams with a timeout specified by tv_sec and tv_usec</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function readline_callback_handler_install ($prompt, callable $callback) {}

/**
*<div id="function.readline-callback-read-char" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_callback_read_char</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">readline_callback_read_char</span> &mdash; <span class="dc-title">当一个行被接收时读取一个字符并且通知 readline 调用回调函数</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-callback-read-char-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>readline_callback_read_char</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    读取用户输入中的一个字符.当一行被接收时，这个函数将通知 readline 调用使用    <span class="function">{@link readline_callback_handler_install()}</span> 安装的回调函数接口，并且    这一个行已经准备输入.   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-callback-read-char-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.readline-callback-read-char-examples">   <h3 class="title">范例</h3>   <p class="para">    See <span class="function">{@link readline_callback_handler_install()}</span> for an example    of how to use the readline callback interface.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.readline-callback-read-char-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link readline_callback_handler_install()} - 初始化一个 readline 回调接口，然后终端输出提示信息并立即返回</span></li>     <li class="member"><span class="function">{@link readline_callback_handler_remove()} - 移除上一个安装的回调函数句柄并且恢复终端设置</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return void No value is returned.*/
function readline_callback_read_char () {}

/**
*<div id="function.readline-callback-handler-remove" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_callback_handler_remove</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">readline_callback_handler_remove</span> &mdash; <span class="dc-title">移除上一个安装的回调函数句柄并且恢复终端设置</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-callback-handler-remove-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>readline_callback_handler_remove</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    移除上一个安装的回调函数句柄并且恢复终端设置.   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-callback-handler-remove-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果上一个被安装的回调函数句柄被移出返回 <strong><code>TRUE</code></strong> 否则 <strong><code>FALSE</code></strong> 如果没有找到的话.   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.readline-callback-handler-remove-examples">   <h3 class="title">范例</h3>   <p class="para">    See <span class="function">{@link readline_callback_handler_install()}</span> for an example    of how to use the readline callback interface.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.readline-callback-handler-remove-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link readline_callback_handler_install()} - 初始化一个 readline 回调接口，然后终端输出提示信息并立即返回</span></li>     <li class="member"><span class="function">{@link readline_callback_read_char()} - 当一个行被接收时读取一个字符并且通知 readline 调用回调函数</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return bool <b>TRUE</b> if a previously installed callback handler was removed, or*/
function readline_callback_handler_remove () {}

/**
*<div id="function.readline-redisplay" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_redisplay</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">readline_redisplay</span> &mdash; <span class="dc-title">重绘显示区</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-redisplay-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>readline_redisplay</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    readline 重绘用于重绘显示区   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-redisplay-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return void No value is returned.*/
function readline_redisplay () {}

/**
*<div id="function.readline-on-new-line" class="refentry">  <div class="refnamediv">   <h1 class="refname">readline_on_new_line</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">readline_on_new_line</span> &mdash; <span class="dc-title">通知readline将光标移动到新行</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.readline-on-new-line-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>readline_on_new_line</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    告诉readline将光标移动到新行.   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.readline-on-new-line-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.readline.php">Readline 函数</a></div></div>
 * @return void No value is returned.*/
function readline_on_new_line () {}

define ('READLINE_LIB', "libedit");

// End of readline v.5.5.3-1ubuntu2.1
?>
