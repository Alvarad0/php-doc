<?php

/**
 * The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
 * @link http://php.net/manual/en/yaf.constants.php
 */
define('YAF_VERSION', '	3.0.6', true);
define('YAF_ENVIRON', 'product', true);
define('YAF_ERR_STARTUP_FAILED', 512, true);
define('YAF_ERR_ROUTE_FAILED', 513, true);
define('YAF_ERR_DISPATCH_FAILED', 514, true);
define('YAF_ERR_NOTFOUND_MODULE', 515, true);
define('YAF_ERR_NOTFOUND_CONTROLLER', 516, true);
define('YAF_ERR_NOTFOUND_ACTION', 517, true);
define('YAF_ERR_NOTFOUND_VIEW', 518, true);
define('YAF_ERR_CALL_FAILED', 519, true);
define('YAF_ERR_AUTOLOAD_FAILED', 520, true);
define('YAF_ERR_TYPE_ERROR', 521, true);

//================================================

/**
*<div id="class.yaf-application" class="reference">   <h1 class="title">The Yaf_Application class</h1>       <div class="partintro"><p class="verinfo">(No version information available, might only be in Git)</p>     <div class="section" id="yaf-application.intro">    <h2 class="title">简介</h2>    <p class="para">     <a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>为应用提供了一个辅助设施。     它提供了可重用的资源，常见的和模块化的引导类，还有依赖的检查。    </p>    <p class="para">     <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">        <a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>实现了单例模式。        <a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>不能够被序列化和反序列化，        因为当你尝试使用PHPUnit来为Yaf写一些测试用例的时候会造成一些不必要的麻烦。       </p>       <p class="para">         你可以使用PHPUnit的@backupGlobals注释来控制全局变量的备份和恢复操作，         从而可以解决这个问题。      </p>     </p></blockquote>    </p>   </div>     <div class="section" id="yaf-application.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">final</span>       <a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-application.php#yaf-application.props.config">$<var class="varname">config</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-application.php#yaf-application.props.dispatcher">$<var class="varname">dispatcher</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="modifier">static</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-application.php#yaf-application.props.app">$<var class="varname">_app</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-application.php#yaf-application.props.modules">$<var class="varname">_modules</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-application.php#yaf-application.props.running">$<var class="varname">_running</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-application.php#yaf-application.props.environ">$<var class="varname">_environ</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.app.php" class="methodname">app</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.bootstrap.php" class="methodname">bootstrap</a></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="type Yaf_Bootstrap_Abstract">Yaf_Bootstrap_Abstract</a></span> <code class="parameter">$bootstrap</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Application</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.clearlasterror.php" class="methodname">clearLastError</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-application.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$config</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$envrion</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.destruct.php" class="methodname">__destruct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.environ.php" class="methodname">environ</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.execute.php" class="methodname">execute</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$entry</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Application</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.getappdirectory.php" class="methodname">getAppDirectory</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Config_Abstract</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.getconfig.php" class="methodname">getConfig</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.getdispatcher.php" class="methodname">getDispatcher</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.getlasterrormsg.php" class="methodname">getLastErrorMsg</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.getlasterrorno.php" class="methodname">getLastErrorNo</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.getmodules.php" class="methodname">getModules</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.run.php" class="methodname">run</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Application</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.setappdirectory.php" class="methodname">setAppDirectory</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.sleep.php" class="methodname">__sleep</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-application.wakeup.php" class="methodname">__wakeup</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="yaf-application.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-application.props.config"><var class="varname"><var class="varname">config</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-application.props.dispatcher"><var class="varname"><var class="varname">dispatcher</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-application.props.app"><var class="varname"><var class="varname">_app</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-application.props.modules"><var class="varname"><var class="varname">_modules</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-application.props.running"><var class="varname"><var class="varname">_running</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-application.props.environ"><var class="varname"><var class="varname">_environ</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                                                                                   <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Application::app} — 获取当前的Yaf_Application实例</li><li>{@link Yaf_Application::bootstrap} — 调用bootstrap</li><li>{@link Yaf_Application::clearLastError} — 清除最后的错误信息</li><li>{@link Yaf_Application::__clone} — Yaf_Application不能被克隆</li><li>{@link Yaf_Application::__construct} — Yaf_Application的构造函数</li><li>{@link Yaf_Application::__destruct} — 析构函数</li><li>{@link Yaf_Application::environ} — 获取当前Yaf_Application的环境名</li><li>{@link Yaf_Application::execute} — 运行回调函数</li><li>{@link Yaf_Application::getAppDirectory} — 获取应用的目录</li><li>{@link Yaf_Application::getConfig} — 获取 Yaf_Config_Abstract 的实例</li><li>{@link Yaf_Application::getDispatcher} — 获取 Yaf_Dispatcher 的实例</li><li>{@link Yaf_Application::getLastErrorMsg} — 获取最近产生的错误的错误信息</li><li>{@link Yaf_Application::getLastErrorNo} — 获取最后产生的错误的错误代码</li><li>{@link Yaf_Application::getModules} — 获取在配置文件中申明的模块</li><li>{@link Yaf_Application::run} — 运行 Yaf_Application</li><li>{@link Yaf_Application::setAppDirectory} — 改变应用目录</li><li>{@link Yaf_Application::__sleep} — Yaf_Application 不能被序列化</li><li>{@link Yaf_Application::__wakeup} — Yaf_Application 不能被反序列化</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Application {

    /**
     * @var Yaf_Application
     */
    protected static $_app;
    /**
     * @var Yaf_Config_Abstract
     */
    protected $config;
    /**
     * @var Yaf_Dispatcher
     */
    protected $dispatcher;
    /**
     * @var array
     */
    protected $_modules;
    /**
     * @var string
     */
    protected $_running = "";
    /**
     * @var string
     */
    protected $_environ = YAF_ENVIRON;
    /**
     * @since 2.1.2
     * @var int
     */
    protected $_err_no = 0;
    /**
     * @since 2.1.2
     * @var string
     */
    protected $_err_msg = "";

    /**
     * @link http://www.php.net/manual/en/yaf-application.construct.php
     *
     * @param string|array $config A ini config file path, or a config array
     * <p>
     * If is a ini config file, there should be a section named as the one defined by yaf.environ, which is "product" by default.
     * </p>
     * <br/>
     * <b>Note:</b>
     * <p>If you use a ini configuration file as your application's config container. you would open the yaf.cache_config to improve performance.</p>
     * <p>And the config entry(and there default value) list blow:</p>
     *
     * <p>
     *    <b>Example #1 A ini config file example</b><br/>
     *    [product]<br/>
     *    ;this one should always be defined, and have no default value<br/>
     *    application.directory=APPLICATION_PATH<br/><br/>
     * </p>
     * <p>
     *    ;following configs have default value, you may no need to define them
     * <br/>
     *    application.library = APPLICATION_PATH . "/library" <br/>
     *    application.dispatcher.throwException=1 <br/>
     *    application.dispatcher.catchException=1 <br/><br/>
     * </p>
     * <p>application.baseUri=""<br/><br/></p>
     * <p>
     *    ;the php script ext name<br/>
     *    ap.ext=php<br/><br/>
     * </p>
     * <p>
     *    ;the view template ext name<br/>
     *    ap.view.ext=phtml<br/><br/>
     * </p>
     * <p>
     *    ap.dispatcher.defaultModule=Index<br/>
     *    ap.dispatcher.defaultController=Index<br/>
     *    ap.dispatcher.defaultAction=index<br/><br/>
     * </p>
     * <p>
     *    ;defined modules<br/>
     *    ap.modules=Index
     * </p>
     * @param string $envrion Which section will be loaded as the final config
     *
     * @throws Yaf_Exception_TypeError|Yaf_Exception_StartupError
     */
    public function __construct($config, $envrion = null){ }

/**
*<div id="yaf-application.run" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::run</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::run</span> &mdash; <span class="dc-title">运行 Yaf_Application</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.run-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Application::run</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    运行一个Yaf_Application，开始接受并处理请求，分发路由，做出相应的响应。最终将响应返回给客户端。   </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.run-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.run-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
*/
    public function run(){ }

/**
*<div id="yaf-application.execute" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::execute</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::execute</span> &mdash; <span class="dc-title">运行回调函数</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.execute-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Application::execute</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$entry</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span>    )</div>    <p class="para rdfs-comment">    这个方法通常用于在cron任务中运行Yaf_Application。    在cron任务中也可以使用autoloader和Bootstrap机制。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.execute-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">entry</code></dt>      <dd>       <p class="para">          一个有效的回调函数      </p>     </dd>              <dt> <code class="parameter">...</code></dt>      <dd>       <p class="para">       零个或者多个要传递给函数的参数。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.execute-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.execute-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4916">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::execute()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">main</span><span style="color: #007700">(</span><span style="color: #9876AA">$argc</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$argv</span><span style="color: #007700">)&nbsp;{<br />}<br /><br /></span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #FF8000">//*&nbsp;Yaf_Application&nbsp;<br /></span><span style="color: #9876AA">$application&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">"main"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$argc</span><span style="color: #007700">,&nbsp;&nbsp;</span><span style="color: #9876AA">$argv</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
*/
    public function execute(callable $entry, $_ = "..."){ }

/**
*<div id="yaf-application.app" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::app</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::app</span> &mdash; <span class="dc-title">获取当前的<a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>实例</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.app-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Application::app</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">     返回<a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>的实例，     也可以使用<span class="methodname">{@link Yaf_Dispatcher::getApplication()}</span>来得到<a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>的实例     <span class="methodname">{@link Yaf_Dispatcher::getApplication()}</span>.   </p>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.app-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.app-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     返回值为一个<a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>的实例，     如果在调用之前没有初始化一个<a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a>实例的话，它将返回NULL   </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-application.app-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Dispatcher::getApplication()} - 获取当前的Yaf_Application实例</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return Yaf_Application|NULL an Yaf_Application instance, if no Yaf_Application initialized before, NULL will be returned.*/
    public static function app(){ }

/**
*<div id="yaf-application.environ" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::environ</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::environ</span> &mdash; <span class="dc-title">获取当前Yaf_Application的环境名</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.environ-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Application::environ</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回当前Yaf_Application的环境名，它被定义在yaf.environ，默认值为&quot;product&quot;。   </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.environ-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.environ-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">       </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.environ-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4915">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::environ()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #FF8000">//*&nbsp;Yaf_Application&nbsp;<br /></span><span style="color: #9876AA">$application&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">environ</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> product </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return string*/
    public function environ(){ }

/**
*<div id="yaf-application.bootstrap" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::bootstrap</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::bootstrap</span> &mdash; <span class="dc-title">调用bootstrap</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.bootstrap-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Application::bootstrap</strong></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="type Yaf_Bootstrap_Abstract">Yaf_Bootstrap_Abstract</a></span> <code class="parameter">$bootstrap</code></span>   ] )</div>    <p class="para rdfs-comment">     指示Yaf_Application去寻找Bootstrap，并按照声明的顺序，执行所有在Bootstrap类中定义的以_init开头的方法。     如果没有提供变量bootstrap，Yaf默认会去application.directory中寻找Bootstrap。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.bootstrap-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">bootstrap</code></dt>      <dd>       <p class="para">       A <a href="http://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a> instance            </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.bootstrap-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a> instance   </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.bootstrap-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4909">    <p><strong>Example #1 <span class="function"><strong>A Bootstrap()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//*<br />&nbsp;*&nbsp;This&nbsp;file&nbsp;should&nbsp;be&nbsp;under&nbsp;the&nbsp;APPLICATION_PATH&nbsp;.&nbsp;"/application/"(which&nbsp;was&nbsp;defined&nbsp;in&nbsp;the&nbsp;config&nbsp;passed&nbsp;to&nbsp;Yaf_Application).<br />&nbsp;*&nbsp;and&nbsp;named&nbsp;Bootstrap.php,&nbsp;&nbsp;so&nbsp;the&nbsp;Yaf_Application&nbsp;can&nbsp;find&nbsp;it&nbsp;<br />&nbsp;<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;</span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"1st&nbsp;called\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;</span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"2nd&nbsp;called\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-4910">    <p><strong>Example #2 <span class="function"><strong>Yaf_Application::bootstrap()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />defined</span><span style="color: #007700">(</span><span style="color: #DD0000">'APPLICATION_PATH'</span><span style="color: #007700">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;APPLICATION_PATH&nbsp;will&nbsp;be&nbsp;used&nbsp;in&nbsp;the&nbsp;ini&nbsp;config&nbsp;file<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">||&nbsp;</span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'APPLICATION_PATH'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">__DIR__</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//__DIR__&nbsp;was&nbsp;introduced&nbsp;after&nbsp;PHP&nbsp;5.3<br /><br /></span><span style="color: #9876AA">$application&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">APPLICATION_PATH</span><span style="color: #007700">.</span><span style="color: #DD0000">'/conf/application.ini'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bootstrap</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> 1st called 2nd called </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-application.bootstrap-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return Yaf_Application*/
    public function bootstrap(Yaf_Bootstrap_Abstract $bootstrap = null){ }

/**
*<div id="yaf-application.getconfig" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::getConfig</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::getConfig</span> &mdash; <span class="dc-title">获取 Yaf_Config_Abstract 的实例</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.getconfig-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract">Yaf_Config_Abstract</a></span> <span class="methodname"><strong>Yaf_Application::getConfig</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.getconfig-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.getconfig-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     <a href="http://php.net/manual/zh/class.yaf-config-abstract.php" class="classname">Yaf_Config_Abstract</a> 的实例   </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.getconfig-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4917">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::getConfig()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #FF8000">//*&nbsp;Yaf_Application&nbsp;<br /></span><span style="color: #9876AA">$application&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Yaf_Config_Simple Object (     [_config:protected] =&gt; Array         (             [application] =&gt; Array                 (                     [directory] =&gt; /home/laruence/local/www/htdocs/application                 )          )      [_readonly:protected] =&gt; 1 ) </pre></div>    </div>   </div>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return Yaf_Config_Abstract*/
    public function getConfig(){ }

/**
*<div id="yaf-application.getmodules" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::getModules</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::getModules</span> &mdash; <span class="dc-title">获取在配置文件中申明的模块</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.getmodules-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>Yaf_Application::getModules</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">     获取在配置文件中声明的模块，如果没有声明，它的默认值将是&quot;Index&quot;。   </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.getmodules-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.getmodules-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.getmodules-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4921">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::getModules()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #FF8000">//*&nbsp;Yaf_Application&nbsp;<br /></span><span style="color: #9876AA">$application&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getModules</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [0] =&gt; Index ) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return array*/
    public function getModules(){ }

/**
*<div id="yaf-application.getdispatcher" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::getDispatcher</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::getDispatcher</span> &mdash; <span class="dc-title">获取 Yaf_Dispatcher 的实例</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.getdispatcher-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Application::getDispatcher</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.getdispatcher-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.getdispatcher-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.getdispatcher-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4918">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::getDispatcher()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #FF8000">//*&nbsp;Yaf_Application&nbsp;<br /></span><span style="color: #9876AA">$application&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Yaf_Dispatcher Object (     [_router:protected] =&gt; Yaf_Router Object         (             [_routes:protected] =&gt; Array                 (                     [_default] =&gt; Yaf_Route_Static Object                         (                         )                  )              [_current:protected] =&gt;          )      [_view:protected] =&gt;      [_request:protected] =&gt; Yaf_Request_Http Object         (             [module] =&gt;              [controller] =&gt;              [action] =&gt;              [method] =&gt; Cli             [params:protected] =&gt; Array                 (                 )              [language:protected] =&gt;              [_exception:protected] =&gt;              [_base_uri:protected] =&gt;              [uri:protected] =&gt;              [dispatched:protected] =&gt;              [routed:protected] =&gt;          )      [_plugins:protected] =&gt; Array         (         )      [_auto_render:protected] =&gt; 1     [_return_response:protected] =&gt;      [_instantly_flush:protected] =&gt;      [_default_module:protected] =&gt; Index     [_default_controller:protected] =&gt; Index     [_default_action:protected] =&gt; index     [_response] =&gt; Yaf_Response_Cli Object         (             [_header:protected] =&gt; Array                 (                 )              [_body:protected] =&gt;              [_sendheader:protected] =&gt;          )  ) </pre></div>    </div>   </div>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return Yaf_Dispatcher*/
    public function getDispatcher(){ }

/**
*<div id="yaf-application.setappdirectory" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::setAppDirectory</h1>   <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Application::setAppDirectory</span> &mdash; <span class="dc-title">改变应用目录</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.setappdirectory-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application">Yaf_Application</a></span> <span class="methodname"><strong>Yaf_Application::setAppDirectory</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.setappdirectory-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">directory</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.setappdirectory-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return Yaf_Application*/
    public function setAppDirectory($directory){ }

/**
*<div id="yaf-application.getappdirectory" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::getAppDirectory</h1>   <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Application::getAppDirectory</span> &mdash; <span class="dc-title">获取应用的目录</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.getappdirectory-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application">Yaf_Application</a></span> <span class="methodname"><strong>Yaf_Application::getAppDirectory</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.getappdirectory-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">directory</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.getappdirectory-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return string*/
    public function getAppDirectory(){ }

/**
*<div id="yaf-application.getlasterrorno" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::getLastErrorNo</h1>   <p class="verinfo">(Yaf &gt;=2.1.2)</p><p class="refpurpose"><span class="refname">Yaf_Application::getLastErrorNo</span> &mdash; <span class="dc-title">获取最后产生的错误的错误代码</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.getlasterrorno-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>Yaf_Application::getLastErrorNo</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.getlasterrorno-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.getlasterrorno-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>   <div class="refsect1 examples" id="refsect1-yaf-application.getlasterrorno-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4920">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::getLastErrorNo()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">error_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errfile</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errline</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorNo</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorNo</span><span style="color: #007700">()&nbsp;==&nbsp;</span><span style="color: #9876AA">YAF_ERR_NOTFOUND_CONTROLLER</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"/tmp/notexists"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"dispatcher"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"throwException"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//trigger&nbsp;error&nbsp;instead&nbsp;of&nbsp;throw&nbsp;exception&nbsp;when&nbsp;error&nbsp;occure<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #9876AA">$app&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">setErrorHandler</span><span style="color: #007700">(</span><span style="color: #DD0000">"error_handler"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">E_RECOVERABLE_ERROR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> int(516) bool(true) </pre></div>    </div>   </div>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return int*/
    public function getLastErrorNo(){ }

/**
*<div id="yaf-application.getlasterrormsg" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::getLastErrorMsg</h1>   <p class="verinfo">(Yaf &gt;=2.1.2)</p><p class="refpurpose"><span class="refname">Yaf_Application::getLastErrorMsg</span> &mdash; <span class="dc-title">获取最近产生的错误的错误信息</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.getlasterrormsg-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Application::getLastErrorMsg</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.getlasterrormsg-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.getlasterrormsg-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.getlasterrormsg-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4919">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::getLastErrorMsg()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">error_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errfile</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errline</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorMsg</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;array(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"/tmp/notexists"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"dispatcher"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"throwException"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//trigger&nbsp;error&nbsp;instead&nbsp;of&nbsp;throw&nbsp;exception&nbsp;when&nbsp;error&nbsp;occure<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #9876AA">$app&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">setErrorHandler</span><span style="color: #007700">(</span><span style="color: #DD0000">"error_handler"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">E_RECOVERABLE_ERROR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(69) &quot;Could not find controller script /tmp/notexists/controllers/Index.php&quot; </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
     * @return string*/
    public function getLastErrorMsg(){ }

/**
*<div id="yaf-application.clearlasterror" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Application::clearLastError</h1>   <p class="verinfo">(Yaf &gt;=2.1.2)</p><p class="refpurpose"><span class="refname">Yaf_Application::clearLastError</span> &mdash; <span class="dc-title">清除最后的错误信息</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-application.clearlasterror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application">Yaf_Application</a></span> <span class="methodname"><strong>Yaf_Application::clearLastError</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-application.clearlasterror-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-application.clearlasterror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-application.clearlasterror-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4911">    <p><strong>Example #1 <span class="function"><strong>Yaf_Application::clearLastError()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">error_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errfile</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errline</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">clearLastError</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorNo</span><span style="color: #007700">());<br />}<br />&nbsp;<br /></span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;array(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"/tmp/notexists"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"dispatcher"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"throwException"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//trigger&nbsp;error&nbsp;instead&nbsp;of&nbsp;throw&nbsp;exception&nbsp;when&nbsp;error&nbsp;occure<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;),<br />);<br />&nbsp;&nbsp;<br /></span><span style="color: #9876AA">$app&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">setErrorHandler</span><span style="color: #007700">(</span><span style="color: #DD0000">"error_handler"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">E_RECOVERABLE_ERROR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> int(0) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-application.php">Yaf_Application</a></div></div>
*/
    public function clearLastError(){ }

    /**
     *
     * @link http://www.php.net/manual/en/yaf-application.destruct.php
     */
    public function __destruct(){ }

    /**
     *
     * @link http://www.php.net/manual/en/yaf-application.clone.php
     */
    private function __clone(){ }

    /**
     *
     * @link http://www.php.net/manual/en/yaf-application.sleep.php
     */
    private function __sleep(){ }

    /**
     *
     * @link http://www.php.net/manual/en/yaf-application.wakeup.php
     */
    private function __wakeup(){ }
}

/**
*<div id="class.yaf-dispatcher" class="reference">   <h1 class="title">Yaf_Dispatcher 类</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-dispatcher.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">Yaf_Dispatcher</strong>用于初始化处理请求的运行环境,      它协调路由来的请求, 并分发和执行发现的动作,      然后收集动作产生的响应, 输出响应给请求者, 并在整个过程完成以后返回响应.    </p>    <p class="para">     <strong class="classname">Yaf_Dispatcher</strong>是单例模式运行的,      也就是说自始至终只生成一个<strong class="classname">Yaf_Dispatcher</strong>实例,      因此, 可以把它看成是在分发过程中生成的对象的注册表, 可以从中获取到分发过程中产生的对象.    </p>   </div>     <div class="section" id="yaf-dispatcher.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">final</span>       <strong class="classname">Yaf_Dispatcher</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.router">$<var class="varname">_router</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.view">$<var class="varname">_view</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.request">$<var class="varname">_request</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.plugins">$<var class="varname">_plugins</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="modifier">static</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.instance">$<var class="varname">_instance</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.auto-render">$<var class="varname">_auto_render</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.return-response">$<var class="varname">_return_response</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.instantly-flush">$<var class="varname">_instantly_flush</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.default-module">$<var class="varname">_default_module</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.default-controller">$<var class="varname">_default_controller</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.default-action">$<var class="varname">_default_action</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.autorender.php" class="methodname">autoRender</a></span>     ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.catchexception.php" class="methodname">catchException</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.disableview.php" class="methodname">disableView</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Response_Abstract</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.dispatch.php" class="methodname">dispatch</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.enableview.php" class="methodname">enableView</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.flushinstantly.php" class="methodname">flushInstantly</a></span>     ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Application</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.getapplication.php" class="methodname">getApplication</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.getinstance.php" class="methodname">getInstance</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Request_Abstract</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.getrequest.php" class="methodname">getRequest</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Router</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.getrouter.php" class="methodname">getRouter</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_View_Interface</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.initview.php" class="methodname">initView</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$templates_dir</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.registerplugin.php" class="methodname">registerPlugin</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php" class="type Yaf_Plugin_Abstract">Yaf_Plugin_Abstract</a></span> <code class="parameter">$plugin</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.returnresponse.php" class="methodname">returnResponse</a></span>     ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.setdefaultaction.php" class="methodname">setDefaultAction</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.setdefaultcontroller.php" class="methodname">setDefaultController</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.setdefaultmodule.php" class="methodname">setDefaultModule</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.seterrorhandler.php" class="methodname">setErrorHandler</a></span>     ( <span class="methodparam"><span class="type"><span class="type call">call</span></span> <code class="parameter">$callback</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_types</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.setrequest.php" class="methodname">setRequest</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.setview.php" class="methodname">setView</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface">Yaf_View_Interface</a></span> <code class="parameter">$view</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.sleep.php" class="methodname">__sleep</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Dispatcher</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.throwexception.php" class="methodname">throwException</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-dispatcher.wakeup.php" class="methodname">__wakeup</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="yaf-dispatcher.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-dispatcher.props.router"><var class="varname"><var class="varname">_router</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.view"><var class="varname"><var class="varname">_view</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.request"><var class="varname"><var class="varname">_request</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.plugins"><var class="varname"><var class="varname">_plugins</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.instance"><var class="varname"><var class="varname">_instance</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.auto-render"><var class="varname"><var class="varname">_auto_render</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.return-response"><var class="varname"><var class="varname">_return_response</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.instantly-flush"><var class="varname"><var class="varname">_instantly_flush</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.default-module"><var class="varname"><var class="varname">_default_module</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.default-controller"><var class="varname"><var class="varname">_default_controller</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-dispatcher.props.default-action"><var class="varname"><var class="varname">_default_action</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                                                                                                                             <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Dispatcher::autoRender} — 开启/关闭自动渲染功能</li><li>{@link Yaf_Dispatcher::catchException} — 开启/关闭自动异常捕获功能</li><li>{@link Yaf_Dispatcher::__clone} — Yaf_Dispatcher 不能被克隆</li><li>{@link Yaf_Dispatcher::__construct} — Yaf_Dispatcher 构造函数</li><li>{@link Yaf_Dispatcher::disableView} — 关闭自动渲染</li><li>{@link Yaf_Dispatcher::dispatch} — 分发请求</li><li>{@link Yaf_Dispatcher::enableView} — 开启自动渲染</li><li>{@link Yaf_Dispatcher::flushInstantly} — 打开关闭自动响应</li><li>{@link Yaf_Dispatcher::getApplication} — 获取当前的Yaf_Application实例</li><li>{@link Yaf_Dispatcher::getInstance} — 获取当前的Yaf_Dispatcher实例</li><li>{@link Yaf_Dispatcher::getRequest} — 获取当前的请求实例</li><li>{@link Yaf_Dispatcher::getRouter} — 获取路由器</li><li>{@link Yaf_Dispatcher::initView} — 初始化视图引擎并返回它</li><li>{@link Yaf_Dispatcher::registerPlugin} — 注册一个插件</li><li>{@link Yaf_Dispatcher::returnResponse} — The returnResponse purpose</li><li>{@link Yaf_Dispatcher::setDefaultAction} — 设置路由的默认动作</li><li>{@link Yaf_Dispatcher::setDefaultController} — 设置路由的默认控制器</li><li>{@link Yaf_Dispatcher::setDefaultModule} — 设置路由的默认模块</li><li>{@link Yaf_Dispatcher::setErrorHandler} — 设置错误处理函数</li><li>{@link Yaf_Dispatcher::setRequest} — The setRequest purpose</li><li>{@link Yaf_Dispatcher::setView} — 设置视图引擎</li><li>{@link Yaf_Dispatcher::__sleep} — Yaf_Dispatcher 不能被序列化</li><li>{@link Yaf_Dispatcher::throwException} — 开启/关闭异常抛出</li><li>{@link Yaf_Dispatcher::__wakeup} — Yaf_Dispatcher 不能被反序列化</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Dispatcher {

    /**
     * @var Yaf_Dispatcher
     */
    protected static $_instance;
    /**
     * @var Yaf_Router
     */
    protected $_router;
    /**
     * @var Yaf_View_Interface
     */
    protected $_view;
    /**
     * @var Yaf_Request_Abstract
     */
    protected $_request;
    /**
     * @var Yaf_Plugin_Abstract
     */
    protected $_plugins;
    /**
     * @var bool
     */
    protected $_auto_render = true;
    /**
     * @var string
     */
    protected $_return_response = "";
    /**
     * @var string
     */
    protected $_instantly_flush = "";
    /**
     * @var string
     */
    protected $_default_module;
    /**
     * @var string
     */
    protected $_default_controller;
    /**
     * @var string
     */
    protected $_default_action;

    /**
     * @link http://www.php.net/manual/en/yaf-dispatcher.construct.php
     */
    private function __construct(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-dispatcher.clone.php
     */
    private function __clone(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-dispatcher.sleep.php
     */
    private function __sleep(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-dispatcher.wakeup.php
     */
    private function __wakeup(){ }

/**
*<div id="yaf-dispatcher.enableview" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::enableView</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::enableView</span> &mdash; <span class="dc-title">开启自动渲染</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.enableview-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::enableView</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.enableview-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.enableview-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function enableView(){ }

/**
*<div id="yaf-dispatcher.disableview" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::disableView</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::disableView</span> &mdash; <span class="dc-title">关闭自动渲染</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.disableview-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Dispatcher::disableView</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">     在一些用户自己会输出信息的情况下使用。     <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">      你可以在一个action中仅仅返回FALSE来阻止当前action对应视图的自动渲染     </p>     </p></blockquote>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.disableview-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.disableview-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return bool*/
    public function disableView(){ }

/**
*<div id="yaf-dispatcher.initview" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::initView</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::initView</span> &mdash; <span class="dc-title">初始化视图引擎并返回它</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.initview-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface">Yaf_View_Interface</a></span> <span class="methodname"><strong>Yaf_Dispatcher::initView</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$templates_dir</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.initview-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">templates_dir</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">options</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.initview-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_View_Interface*/
    public function initView($templates_dir, array $options = null){ }

/**
*<div id="yaf-dispatcher.setview" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::setView</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setView</span> &mdash; <span class="dc-title">设置视图引擎</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.setview-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::setView</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface">Yaf_View_Interface</a></span> <code class="parameter">$view</code></span>    )</div>    <p class="para rdfs-comment">      如果你想使用自己的视图引擎代替 <a href="http://php.net/manual/zh/class.yaf-view-simple.php" class="classname">Yaf_View_Simple</a> ，      这个函数会帮你解决这个问题。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setview-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">view</code></dt>      <dd>       <p class="para">        A Yaf_View_Interface instance      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setview-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-dispatcher.setview-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4926">    <p><strong>Example #1 <span class="function"><strong>A custom View engine()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">require&nbsp;</span><span style="color: #DD0000">"/path/to/smarty/Smarty.class.php"</span><span style="color: #007700">;<br /><br />class&nbsp;</span><span style="color: #9876AA">Smarty_Adapter&nbsp;</span><span style="color: #007700">implements&nbsp;</span><span style="color: #9876AA">Yaf_View_Interface<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Smarty&nbsp;object<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@var&nbsp;Smarty<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;</span><span style="color: #9876AA">$_smarty</span><span style="color: #007700">;<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Constructor<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string&nbsp;$tmplPath<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;array&nbsp;$extraParams<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;void<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">__construct</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmplPath&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$extraParams&nbsp;</span><span style="color: #007700">=&nbsp;array())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Smarty</span><span style="color: #007700">;<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">null&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">$tmplPath</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setScriptPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmplPath</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style="color: #9876AA">$extraParams&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$key&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">$key&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Set&nbsp;the&nbsp;path&nbsp;to&nbsp;the&nbsp;templates<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string&nbsp;$path&nbsp;The&nbsp;directory&nbsp;to&nbsp;set&nbsp;as&nbsp;the&nbsp;path.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;void<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">setScriptPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">is_readable</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">template_dir&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$path</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #9876AA">Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">'Invalid&nbsp;path&nbsp;provided'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Assign&nbsp;a&nbsp;variable&nbsp;to&nbsp;the&nbsp;template<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string&nbsp;$key&nbsp;The&nbsp;variable&nbsp;name.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;mixed&nbsp;$val&nbsp;The&nbsp;variable&nbsp;value.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;void<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">__set</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$val</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$val</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Allows&nbsp;testing&nbsp;with&nbsp;empty()&nbsp;and&nbsp;isset()&nbsp;to&nbsp;work<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string&nbsp;$key<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;boolean<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">__isset</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(</span><span style="color: #9876AA">null&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get_template_vars</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Allows&nbsp;unset()&nbsp;on&nbsp;object&nbsp;properties&nbsp;to&nbsp;work<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string&nbsp;$key<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;void<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">__unset</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear_assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Assign&nbsp;variables&nbsp;to&nbsp;the&nbsp;template<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Allows&nbsp;setting&nbsp;a&nbsp;specific&nbsp;key&nbsp;to&nbsp;the&nbsp;specified&nbsp;value,&nbsp;OR&nbsp;passing<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;an&nbsp;array&nbsp;of&nbsp;key&nbsp;=&gt;&nbsp;value&nbsp;pairs&nbsp;to&nbsp;set&nbsp;en&nbsp;masse.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;__set()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string|array&nbsp;$spec&nbsp;The&nbsp;assignment&nbsp;strategy&nbsp;to&nbsp;use&nbsp;(key&nbsp;or<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;array&nbsp;of&nbsp;key&nbsp;=&gt;&nbsp;value&nbsp;pairs)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;mixed&nbsp;$value&nbsp;(Optional)&nbsp;If&nbsp;assigning&nbsp;a&nbsp;named&nbsp;variable,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;use&nbsp;this&nbsp;as&nbsp;the&nbsp;value.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;void<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Clear&nbsp;all&nbsp;assigned&nbsp;variables<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Clears&nbsp;all&nbsp;variables&nbsp;assigned&nbsp;to&nbsp;Yaf_View&nbsp;either&nbsp;via<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;{@link&nbsp;assign()}&nbsp;or&nbsp;property&nbsp;overloading<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;({@link&nbsp;__get()}/{@link&nbsp;__set()}).<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;void<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">clearVars</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear_all_assign</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Processes&nbsp;a&nbsp;template&nbsp;and&nbsp;returns&nbsp;the&nbsp;output.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string&nbsp;$name&nbsp;The&nbsp;template&nbsp;to&nbsp;process.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;string&nbsp;The&nbsp;output.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">render</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">display</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-4927">    <p><strong>Example #2 <span class="function"><strong>Yaf_Dispatcher::setView()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract&nbsp;</span><span style="color: #007700">{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;there&nbsp;are&nbsp;some&nbsp;config&nbsp;for&nbsp;smarty&nbsp;in&nbsp;the&nbsp;config:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;smarty.left_delimiter&nbsp;&nbsp;&nbsp;=&nbsp;"{{"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;smarty.right_delimiter&nbsp;&nbsp;=&nbsp;"}}"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;smarty.template_dir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;APPLICATION_PATH&nbsp;"/views/scripts/"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;smarty.compile_dir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;APPLICATION_PATH&nbsp;"/views/templates_c/"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;smarty.cache_dir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;APPLICATION_PATH&nbsp;"/views/templates_d/"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initLocalName</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*&nbsp;we&nbsp;put&nbsp;class&nbsp;Smarty_Adapter&nbsp;under&nbsp;the&nbsp;local&nbsp;library&nbsp;directory&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">registerLocalNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">'Smarty'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initSmarty</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$smarty&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Smarty_Adapter</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"smarty"</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setView</span><span style="color: #007700">(</span><span style="color: #9876AA">$smarty</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;now&nbsp;the&nbsp;Smarty&nbsp;view&nbsp;engine&nbsp;become&nbsp;the&nbsp;default&nbsp;view&nbsp;engine&nbsp;of&nbsp;Yaf&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.setview-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/class.yaf-view-interface.php" class="classname">Yaf_View_Interface</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-view-simple.php" class="classname">Yaf_View_Simple</a></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function setView(Yaf_View_Interface $view){ }

/**
*<div id="yaf-dispatcher.setrequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::setRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setRequest</span> &mdash; <span class="dc-title">The setRequest purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.setrequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::setRequest</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setrequest-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">plugin</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setrequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function setRequest(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-dispatcher.getapplication" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::getApplication</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getApplication</span> &mdash; <span class="dc-title">获取当前的Yaf_Application实例</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.getapplication-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application">Yaf_Application</a></span> <span class="methodname"><strong>Yaf_Dispatcher::getApplication</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Retrive the <a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a> instance. same as    <span class="methodname">{@link Yaf_Application::app()}</span>.    获取当前的Yaf_Application实例。跟 <span class="methodname">{@link Yaf_Application::app()}</span> 相同。   </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getapplication-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getapplication-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.getapplication-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Application::app()} - 获取当前的Yaf_Application实例</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Application*/
    public function getApplication(){ }

/**
*<div id="yaf-dispatcher.getrouter" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::getRouter</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getRouter</span> &mdash; <span class="dc-title">获取路由器</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.getrouter-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-router.php" class="type Yaf_Router">Yaf_Router</a></span> <span class="methodname"><strong>Yaf_Dispatcher::getRouter</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getrouter-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getrouter-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Router*/
    public function getRouter(){ }

/**
*<div id="yaf-dispatcher.getrequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::getRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getRequest</span> &mdash; <span class="dc-title">获取当前的请求实例</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.getrequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <span class="methodname"><strong>Yaf_Dispatcher::getRequest</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getrequest-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getrequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Request_Abstract*/
    public function getRequest(){ }

/**
*<div id="yaf-dispatcher.seterrorhandler" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::setErrorHandler</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setErrorHandler</span> &mdash; <span class="dc-title">设置错误处理函数</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.seterrorhandler-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::setErrorHandler</strong></span>     ( <span class="methodparam"><span class="type"><span class="type call">call</span></span> <code class="parameter">$callback</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_types</code></span>    )</div>    <p class="para rdfs-comment">     设置错误处理函数，一般在<a href="http://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.dispatcher.throwexception" class="link">application.dispatcher.throwException</a>关闭的情况下，Yaf会在出错的时候触发错误，这个时候，如果设置了错误处理函数，则会把控制交给错误处理函数处理。   </p>   <p class="para">    因此，当错误发生的时候这个错误处理函数将被调用。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.seterrorhandler-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">callback</code></dt>      <dd>       <p class="para">       错误处理的回调函数      </p>     </dd>              <dt> <code class="parameter">error_types</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.seterrorhandler-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.seterrorhandler-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Dispatcher::throwException()} - 开启/关闭异常抛出</span></li>    <li class="member"><span class="methodname">{@link Yaf_Application::getLastErrorNo()} - 获取最后产生的错误的错误代码</span></li>    <li class="member"><span class="methodname">{@link Yaf_Application::getLastErrorMsg()} - 获取最近产生的错误的错误信息</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function setErrorHandler(callable $callback, $error_types){ }

/**
*<div id="yaf-dispatcher.setdefaultmodule" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::setDefaultModule</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setDefaultModule</span> &mdash; <span class="dc-title">设置路由的默认模块</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.setdefaultmodule-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::setDefaultModule</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setdefaultmodule-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">module</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setdefaultmodule-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function setDefaultModule($module){ }

/**
*<div id="yaf-dispatcher.setdefaultcontroller" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::setDefaultController</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setDefaultController</span> &mdash; <span class="dc-title">设置路由的默认控制器</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.setdefaultcontroller-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::setDefaultController</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setdefaultcontroller-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">controller</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setdefaultcontroller-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function setDefaultController($controller){ }

/**
*<div id="yaf-dispatcher.setdefaultaction" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::setDefaultAction</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setDefaultAction</span> &mdash; <span class="dc-title">设置路由的默认动作</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.setdefaultaction-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::setDefaultAction</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setdefaultaction-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">action</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setdefaultaction-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function setDefaultAction($action){ }

/**
*<div id="yaf-dispatcher.returnresponse" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::returnResponse</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::returnResponse</span> &mdash; <span class="dc-title">The returnResponse purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.returnresponse-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::returnResponse</strong></span>     ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.returnresponse-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">flag</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.returnresponse-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function returnResponse($flag){ }

/**
*<div id="yaf-dispatcher.autorender" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::autoRender</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::autoRender</span> &mdash; <span class="dc-title">开启/关闭自动渲染功能</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.autorender-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::autoRender</strong></span>     ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>    )</div>    <p class="para rdfs-comment">    在开启的情况下(Yaf默认开启)，action执行完成以后，<a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a> 会自动调用view引擎去渲染该action对应的视图模板。    你也可以通过调用这个函数并将 <code class="parameter">flag</code> 参数的值设为TRUE来人工干预它。    <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">      你可以在一个action中仅仅返回FALSE来阻止当前action对应视图的自动渲染     </p>    </p></blockquote>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.autorender-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">flag</code></dt>      <dd>       <p class="para">        bool      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.autorender-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-dispatcher.autorender-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4923">    <p><strong>Example #1 <span class="function"><strong>Yaf_Dispatcher::autoRender()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">IndexController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;init&nbsp;method&nbsp;will&nbsp;be&nbsp;called&nbsp;as&nbsp;soon&nbsp;as&nbsp;a&nbsp;controller&nbsp;is&nbsp;initialized&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">init</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">isXmlHttpRequest</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//do&nbsp;not&nbsp;call&nbsp;render&nbsp;for&nbsp;ajax&nbsp;request<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//we&nbsp;will&nbsp;outpu&nbsp;a&nbsp;json&nbsp;string<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Dispatcher</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">autoRender</span><span style="color: #007700">(</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br /><br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function autoRender($flag = null){ }

/**
*<div id="yaf-dispatcher.flushinstantly" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::flushInstantly</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::flushInstantly</span> &mdash; <span class="dc-title">打开关闭自动响应</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.flushinstantly-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::flushInstantly</strong></span>     ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.flushinstantly-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">flag</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.flushinstantly-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function flushInstantly($flag = null){ }

/**
*<div id="yaf-dispatcher.getinstance" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::getInstance</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getInstance</span> &mdash; <span class="dc-title">获取当前的Yaf_Dispatcher实例</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.getinstance-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::getInstance</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getinstance-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getinstance-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public static function getInstance(){ }

/**
*<div id="yaf-dispatcher.dispatch" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::dispatch</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::dispatch</span> &mdash; <span class="dc-title">分发请求</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.dispatch-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <span class="methodname"><strong>Yaf_Dispatcher::dispatch</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    <a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a> 的这个方法做的工作很繁重.它需要一个request对象。   </p>   <p class="para">     分发过程有三个不同的事件：     <ul class="simplelist">       <li class="member">路由</li>       <li class="member">分发</li>       <li class="member">响应</li>     </ul>     The dispatch process has three distinct events:   <ul class="simplelist">    <li class="member">Routing</li>    <li class="member">Dispatching</li>    <li class="member">Response</li>   </ul>    路由只发生一次，当dispatch()被调用的时候，需要使用请求对象中的值。分发发生在一个循环中；一个请求可能会分发出多个action，    或者controller或者一个plugin可能重置请求对象来强制分发其他的action（参见 <a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a>）。    当所有都执行完毕，<a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a> 会返回一个响应。   </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.dispatch-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.dispatch-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Response_Abstract*/
    public function dispatch(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-dispatcher.throwexception" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::throwException</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::throwException</span> &mdash; <span class="dc-title">开启/关闭异常抛出</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.throwexception-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::throwException</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>   ] )</div>    <p class="para rdfs-comment">    当意外的错误发生的时候，开启/关闭异常抛出。    当开启的时候，Yaf将会抛出异常而不是触发可捕捉的错误。   </p>   <p class="para">    你也可以使用<a href="http://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.dispatcher.throwexception" class="link">     application.dispatcher.throwException</a>来达到相同的目的。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.throwexception-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">flag</code></dt>      <dd>       <p class="para">        bool         </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.throwexception-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-dispatcher.throwexception-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4928">    <p><strong>Example #1 <span class="function"><strong>Yaf_Dispatcher::throwexception()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'application'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'directory'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /></span><span style="color: #9876AA">$app&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">throwException</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br />}&nbsp;catch&nbsp;(</span><span style="color: #9876AA">Yaf_Exception&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">());<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(59) &quot;Could not find controller script /tmp/controllers/Index.php&quot; </pre></div>    </div>   </div>   <div class="example" id="example-4929">    <p><strong>Example #2 <span class="function"><strong>Yaf_Dispatcher::throwexception()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'application'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'directory'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /></span><span style="color: #9876AA">$app&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">throwException</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> PHP Catchable fatal error:  Yaf_Application::run(): Could not find controller script /tmp/controllers/Index.php in /tmp/1.php on line 12 </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.throwexception-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Dispatcher::catchException()} - 开启/关闭自动异常捕获功能</span></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function throwException($flag = null){ }

/**
*<div id="yaf-dispatcher.catchexception" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::catchException</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::catchException</span> &mdash; <span class="dc-title">开启/关闭自动异常捕获功能</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.catchexception-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::catchException</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span>   ] )</div>    <p class="para rdfs-comment">      当 application.dispatcher.throwException 开启的时候（你也可以通过调用 <span class="methodname"><strong>Yaf_Dispatcher::throwException(TRUE)()</strong></span> 来开启它），Yaf将会抛出异常而不是触发异常发生。   </p>   <p class="para">         如果开启了 <span class="methodname"><strong>Yaf_Dispatcher::catchException()</strong></span> （可以通过设置<a href="http://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.dispatcher.catchexception" class="link">application.dispatcher.catchException</a>来开启），并且在你定义了异常处理的controller的情况下，Yaf会将所有未捕获的异常交给Error Controller的Error Action来处理。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.catchexception-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">flag</code></dt>      <dd>       <p class="para">        bool      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.catchexception-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-dispatcher.catchexception-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4924">    <p><strong>Example #1 <span class="function"><strong>Yaf_Dispatcher::catchException()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> //&nbsp;if&nbsp;you&nbsp;defined&nbsp;a&nbsp;ErrorController&nbsp;like&nbsp;following&nbsp;<br /><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">ErrorController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;you&nbsp;can&nbsp;also&nbsp;call&nbsp;to&nbsp;Yaf_Request_Abstract::getException&nbsp;to&nbsp;get&nbsp;the&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;un-caught&nbsp;exception.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">error</span><span style="color: #007700">(</span><span style="color: #9876AA">$exception</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;error&nbsp;occurs&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">switch&nbsp;(</span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCode</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">YAF_ERR_NOTFOUND_MODULE</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">YAF_ERR_NOTFOUND_CONTROLLER</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">YAF_ERR_NOTFOUND_ACTION</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">YAF_ERR_NOTFOUND_VIEW</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">404</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">":"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$message&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">":"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> // now if some error occur, assuming access a non-exists controller(or you can throw a exception yourself):  404:Could not find controller script *application/controllers/No-exists-controller.php </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.catchexception-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Dispatcher::throwException()} - 开启/关闭异常抛出</span></li>    <li class="member"><span class="methodname">{@link Yaf_Dispatcher::setErrorHandler()} - 设置错误处理函数</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function catchException($flag = null){ }

/**
*<div id="yaf-dispatcher.registerplugin" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Dispatcher::registerPlugin</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::registerPlugin</span> &mdash; <span class="dc-title">注册一个插件</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-dispatcher.registerplugin-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher">Yaf_Dispatcher</a></span> <span class="methodname"><strong>Yaf_Dispatcher::registerPlugin</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php" class="type Yaf_Plugin_Abstract">Yaf_Plugin_Abstract</a></span> <code class="parameter">$plugin</code></span>    )</div>    <p class="para rdfs-comment">    <a href="http://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a>).    注册一个插件（参见 <a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a>）。   </p>     </div>    <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.registerplugin-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">plugin</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.registerplugin-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-dispatcher.registerplugin-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4925">    <p><strong>Example #1 <span class="function"><strong>Yaf_Dispatcher::registerPlugin()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Yaf&nbsp;assumes&nbsp;plugin&nbsp;scripts&nbsp;under&nbsp;[application.directory]&nbsp;.&nbsp;&nbsp;"/plugins"&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;for&nbsp;this&nbsp;case,&nbsp;it&nbsp;will&nbsp;be:<br />&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;[application.directory]&nbsp;.&nbsp;"/plugins/"&nbsp;.&nbsp;"User"&nbsp;.&nbsp;[application.ext]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$user&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">UserPlugin</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">$user</span><span style="color: #007700">);<br />&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.registerplugin-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a></li>   </ul>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-dispatcher.php">Yaf_Dispatcher</a></div></div>
     * @return Yaf_Dispatcher*/
    public function registerPlugin(Yaf_Plugin_Abstract $plugin){ }
}

/**
*<div id="class.yaf-loader" class="reference">   <h1 class="title">The Yaf_Loader class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-loader.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">Yaf_Loader</strong> 类为Yaf提供了自动加载功能的全面解决方案。    </p>    <p class="para">     在第一次使用的时候，将检索 <a href="http://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a> 的实例，     <strong class="classname">Yaf_Loader</strong> 实现了单利模式，并使用spl_autoload注册它自己。     通过 <span class="methodname">{@link Yaf_Loader::getInstance()}</span> 返回它的实例    </p>    <p class="para">     <strong class="classname">Yaf_Loader</strong> 加载一个类时仅仅尝试一次，如果失败了，     后面的操作将取决于<a href="http://php.net/manual/zh/yaf.configuration.php#ini.yaf.use-spl-autoload" class="link">yaf.use_spl_auload</a>，     如果这个配置项为On，<span class="methodname">{@link Yaf_Loader::autoload()}</span> 将会返回FALSE，     从而把机会让给其他的自动加载功能。如果这个配置项为Off（默认），     <span class="methodname">{@link Yaf_Loader::autoload()}</span> 将会返回TRUE，     最重要的是将会抛出一个非常有用的警告（对于找出一个类加载失败非常有用）。     <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">       请保持yaf.use_spl_autoload保持关闭，除非有一些library有自己的autoload机制，并且是无法改写的。      </p>     </p></blockquote>    </p>    <p class="para">      默认情况下，<strong class="classname">Yaf_Loader</strong> 收集所有library(类定义的脚本)储存进在      php.ini(yaf.library)定义的<a href="http://php.net/manual/zh/yaf.configuration.php#ini.yaf.library" class="link">global library directory</a>之中。    </p>     <p class="para">     如果你想使用 <strong class="classname">Yaf_Loader</strong> 搜索本地类（库）（定义在application.ini，     默认情况下，它是 <a href="http://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a> . &quot;/libraray&quot;），     你需要使用 <span class="methodname">{@link Yaf_Loader::registerLocalNameSpace()}</span> 注册本地类前缀。    </p>     <p class="para">      让我们来看看一些例子（假设 APPLICATION_PATH 是 <a href="http://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a>）：     <div class="example" id="example-4943">      <p><strong>Example #1 Config example</strong></p>       <div class="example-contents"> <div class="shellcode"><pre class="shellcode">// Assuming the following configure in php.ini: yaf.libraray = &quot;/global_dir&quot;  //Assuming the following configure in application.ini application.libraray = APPLICATION_PATH &quot;/library&quot;</pre> </div>      </div>      </div>     假设以下本地名称空间已被注册：     <div class="example" id="example-4944">      <p><strong>Example #2 注册本地命名空间</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initLoader</span><span style="color: #007700">(</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">registerLocalNameSpace</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"Foo"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Bar"</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>     自动加载例子：     <div class="example" id="example-4945">      <p><strong>Example #3 加载类</strong></p>       <div class="example-contents"> <div class="shellcode"><pre class="shellcode">class Foo_Bar_Test =&gt;   // APPLICATION_PATH/library/Foo/Bar/Test.php    class GLO_Name  =&gt;   // /global_dir/Glo/Name.php   class BarNon_Test   // /global_dir/Barnon/Test.php</pre> </div>       </div>      </div>    在PHP 5.3中，你可以使用命名空间：    <div class="example" id="example-4946">     <p><strong>Example #4 加载命名空间类</strong></p>     <div class="example-contents"> <div class="shellcode"><pre class="shellcode">class \Foo\Bar\Dummy =&gt;    // APPLICATION_PATH/library/Foo/Bar/Dummy.php  class \FooBar\Bar\Dummy =&gt;    // /global_dir/FooBar/Bar/Dummy.php</pre> </div>     </div>      </div>   </p>    <p class="para">     你可能会注意到所有文件夹名字的首字母是大写的，你可以通过在php.ini中设置 <a href="http://php.net/manual/zh/yaf.configuration.php#ini.yaf.lowcase-path" class="link">yaf.lowcase_path</a> = On 来将它们小写。   </p>    <p class="para">    <strong class="classname">Yaf_Loader</strong> 也是设计来加载MVC类，响应的规则如下：    <div class="example" id="example-4947">     <p><strong>Example #5 MVC类加载例子</strong></p>     <div class="example-contents"> <div class="shellcode"><pre class="shellcode">Controller Classes =&gt; // APPLICATION_PATH/controllers/  Model Classes =&gt; // APPLICATION_PATH/models/  Plugin Classes =&gt; // APPLICATION_PATH/plugins/</pre> </div>     </div>     </div>    Yaf 通过识别一个类的后缀（这个是默认的，你也可以通过改变配置项 <a href="http://php.net/manual/zh/yaf.configuration.php#ini.yaf.name-suffix" class="link">yaf.name_suffix</a> 来将它改为通过前缀识别）来决定它是否是一个MVC类：    <div class="example" id="example-4948">     <p><strong>Example #6 MVC 类区别</strong></p>    <div class="example-contents"> <div class="shellcode"><pre class="shellcode">Controller Classes =&gt;     // ***Controller  Model Classes =&gt;     // ***Model  Plugin Classes =&gt;     // ***Plugin</pre> </div>    </div>    </div>     some examples:    <div class="example" id="example-4949">     <p><strong>Example #7 MVC loading example</strong></p>     <div class="example-contents"> <div class="shellcode"><pre class="shellcode">class IndexController     // APPLICATION_PATH/controllers/Index.php  class DataModel =&gt;    // APPLICATION_PATH/models/Data.php  class DummyPlugin =&gt;   // APPLICATION_PATH/plugins/Dummy.php  class A_B_TestModel =&gt;   // APPLICATION_PATH/models/A/B/Test.php</pre> </div>     </div>    </div>    该目录将受 <a href="http://php.net/manual/zh/yaf.configuration.php#ini.yaf.lowcase-path" class="link">yaf.lowcase_path</a> 的影响。   </p>   </div>     <div class="section" id="yaf-loader.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Loader</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.local-ns">$<var class="varname">_local_ns</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.library">$<var class="varname">_library</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.global-library">$<var class="varname">_global_library</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">static</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.instance">$<var class="varname">_instance</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.autoload.php" class="methodname">autoload</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.clearlocalnamespace.php" class="methodname">clearLocalNamespace</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.getinstance.php" class="methodname">getInstance</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Loader</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.getlibrarypath.php" class="methodname">getLibraryPath</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_global</code><span class="initializer"> = false</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.getlocalnamespace.php" class="methodname">getLocalNamespace</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.import.php" class="methodname">import</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.islocalname.php" class="methodname">isLocalName</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.registerlocalnamespace.php" class="methodname">registerLocalNamespace</a></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$prefix</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Loader</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.setlibrarypath.php" class="methodname">setLibraryPath</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_global</code><span class="initializer"> = false</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.sleep.php" class="methodname">__sleep</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-loader.wakeup.php" class="methodname">__wakeup</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="yaf-loader.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-loader.props.local-ns"><var class="varname"><var class="varname">_local_ns</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-loader.props.library"><var class="varname"><var class="varname">_library</var></var></dt>       <dd>        <p class="para">       默认情况下，它的值是 <a href="http://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a> . &quot;/library&quot;，       你可以通过修改application.ini(application.library)或者调用 <span class="methodname">{@link Yaf_Loader::setLibraryPath()}</span> 改变它。       </p>      </dd>                 <dt id="yaf-loader.props.global-library"><var class="varname"><var class="varname">_global_library</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-loader.props.instance"><var class="varname"><var class="varname">_instance</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                                                  <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Loader::autoload} — The autoload purpose</li><li>{@link Yaf_Loader::clearLocalNamespace} — The clearLocalNamespace purpose</li><li>{@link Yaf_Loader::__clone} — The __clone purpose</li><li>{@link Yaf_Loader::__construct} — The __construct purpose</li><li>{@link Yaf_Loader::getInstance} — The getInstance purpose</li><li>{@link Yaf_Loader::getLibraryPath} — get the library path</li><li>{@link Yaf_Loader::getLocalNamespace} — The getLocalNamespace purpose</li><li>{@link Yaf_Loader::import} — The import purpose</li><li>{@link Yaf_Loader::isLocalName} — The isLocalName purpose</li><li>{@link Yaf_Loader::registerLocalNamespace} — 注册本地类前缀</li><li>{@link Yaf_Loader::setLibraryPath} — 改变library路径</li><li>{@link Yaf_Loader::__sleep} — The __sleep purpose</li><li>{@link Yaf_Loader::__wakeup} — The __wakeup purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Loader {

    /**
     * @var string
     */
    protected $_local_ns;
    /**
     * By default, this value is application.directory . "/library", you can change this either in the application.ini(application.library) or call to Yaf_Loader::setLibraryPath()
     * @var string
     */
    protected $_library;
    /**
     * @var string
     */
    protected $_global_library;
    /**
     * @var Yaf_Loader
     */
    protected static $_instance;

    /**
     * @link http://www.php.net/manual/en/yaf-loader.construct.php
     */
    private function __construct(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-loader.clone.php
     */
    private function __clone(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-loader.sleep.php
     */
    private function __sleep(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-loader.wakeup.php
     */
    private function __wakeup(){ }

/**
*<div id="yaf-loader.autoload" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::autoload</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::autoload</span> &mdash; <span class="dc-title">The autoload purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.autoload-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Loader::autoload</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.autoload-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.autoload-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return bool*/
    public function autoload($class_name){ }

/**
*<div id="yaf-loader.getinstance" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::getInstance</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getInstance</span> &mdash; <span class="dc-title">The getInstance purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.getinstance-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Loader::getInstance</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.getinstance-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getinstance-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return Yaf_Loader*/
    public static function getInstance($local_library_path = null, $global_library_path = null){ }

/**
*<div id="yaf-loader.registerlocalnamespace" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::registerLocalNamespace</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::registerLocalNamespace</span> &mdash; <span class="dc-title">注册本地类前缀</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.registerlocalnamespace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Loader::registerLocalNamespace</strong></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$prefix</code></span>   ] )</div>    <p class="para rdfs-comment">    register local class prefix   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.registerlocalnamespace-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">prefix</code></dt>      <dd>       <p class="para">       字符串或者是数组格式的类名前缀，所有拥有和这些前缀相同前缀的类将被加载到本地library路径。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.registerlocalnamespace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    bool   </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-loader.registerlocalnamespace-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4950">    <p><strong>Example #1 <span class="function"><strong>Yaf_Loader::registerLocalNamespace()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$loader&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'/local/library/'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'/global/library'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerLocalNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"Baidu"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerLocalNamespace</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"Sina"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Weibo"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Baidu_Name"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;search&nbsp;in&nbsp;'/local/library/'<br /></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Sina"</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;search&nbsp;'/local/library/'<br /></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Global_Name"</span><span style="color: #007700">);</span><span style="color: #FF8000">//&nbsp;search&nbsp;in&nbsp;'/global/library/'<br /></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Foo_Bar"</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;search&nbsp;in&nbsp;'/global/library/'<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return bool*/
    public function registerLocalNamespace($name_prefix){ }

/**
*<div id="yaf-loader.getlocalnamespace" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::getLocalNamespace</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getLocalNamespace</span> &mdash; <span class="dc-title">The getLocalNamespace purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.getlocalnamespace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Loader::getLocalNamespace</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.getlocalnamespace-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getlocalnamespace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return string*/
    public function getLocalNamespace(){ }

/**
*<div id="yaf-loader.clearlocalnamespace" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::clearLocalNamespace</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::clearLocalNamespace</span> &mdash; <span class="dc-title">The clearLocalNamespace purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.clearlocalnamespace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Loader::clearLocalNamespace</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.clearlocalnamespace-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.clearlocalnamespace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
*/
    public function clearLocalNamespace(){ }

/**
*<div id="yaf-loader.islocalname" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::isLocalName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::isLocalName</span> &mdash; <span class="dc-title">The isLocalName purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.islocalname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Loader::isLocalName</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.islocalname-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.islocalname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return bool*/
    public function isLocalName($class_name){ }

/**
*<div id="yaf-loader.import" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::import</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::import</span> &mdash; <span class="dc-title">The import purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.import-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Loader::import</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.import-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.import-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return bool*/
    public static function import($file){ }

/**
*<div id="yaf-loader.setlibrarypath" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::setLibraryPath</h1>   <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Loader::setLibraryPath</span> &mdash; <span class="dc-title">改变library路径</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.setlibrarypath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-loader.php" class="type Yaf_Loader">Yaf_Loader</a></span> <span class="methodname"><strong>Yaf_Loader::setLibraryPath</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_global</code><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.setlibrarypath-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.setlibrarypath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return Yaf_Loader*/
    public function setLibraryPath($directory, $global = false){ }

/**
*<div id="yaf-loader.getlibrarypath" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Loader::getLibraryPath</h1>   <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getLibraryPath</span> &mdash; <span class="dc-title">get the library path</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-loader.getlibrarypath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-loader.php" class="type Yaf_Loader">Yaf_Loader</a></span> <span class="methodname"><strong>Yaf_Loader::getLibraryPath</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_global</code><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-loader.getlibrarypath-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getlibrarypath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-loader.php">Yaf_Loader</a></div></div>
     * @return string*/
    public function getLibraryPath($is_global = false){ }
}

/**
*<div id="class.yaf-registry" class="reference">   <h1 class="title">The Yaf_Registry class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-registry.intro">    <h2 class="title">简介</h2>    <p class="para">      <strong class="classname">Yaf_Registry</strong>, 对象注册表(或称对象仓库)是一个用于在整个应用空间(application space)内存储对象和值的容器. 通过把对象存储在其中,我们可以在整个项目的任何地方使用同一个对象.这种机制相当于一种全局存储. 我们可以通过<strong class="classname">Yaf_Registry</strong>类的静态方法来使用对象注册表. 另外,由于该类是一个数组对象,你可以使用数组形式来访问其中的类方法    </p>   </div>     <div class="section" id="yaf-registry.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Registry</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">static</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-registry.php#yaf-registry.props.instance">$<var class="varname">_instance</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-registry.php#yaf-registry.props.entries">$<var class="varname">_entries</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-registry.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="methodname"><a href="http://php.net/manual/zh/yaf-registry.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-registry.del.php" class="methodname">del</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-registry.get.php" class="methodname">get</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-registry.has.php" class="methodname">has</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-registry.set.php" class="methodname">set</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>     }</div>     </div>        <div class="section" id="yaf-registry.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-registry.props.instance"><var class="varname"><var class="varname">_instance</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-registry.props.entries"><var class="varname"><var class="varname">_entries</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                               <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Registry::__clone} — The __clone purpose</li><li>{@link Yaf_Registry::__construct} — Yaf_Registry implements singleton</li><li>{@link Yaf_Registry::del} — Remove an item from registry</li><li>{@link Yaf_Registry::get} — Retrieve an item from registry</li><li>{@link Yaf_Registry::has} — Check whether an item exists</li><li>{@link Yaf_Registry::set} — Add an item into registry</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Registry {

    /**
     * @var Yaf_Registry
     */
    protected static $_instance;
    /**
     * @var array
     */
    protected $_entries;

    /**
     * @link http://www.php.net/manual/en/yaf-registry.construct.php
     */
    private function __construct(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-registry.clone.php
     */
    private function __clone(){ }

/**
*<div id="yaf-registry.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Registry::get</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::get</span> &mdash; <span class="dc-title">Retrieve an item from registry</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-registry.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Registry::get</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    获取注册表中寄存的项   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-registry.get-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-registry.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-registry.php">Yaf_Registry</a></div></div>
     * @return mixed*/
    public static function get($name){ }

/**
*<div id="yaf-registry.has" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Registry::has</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::has</span> &mdash; <span class="dc-title">Check whether an item exists</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-registry.has-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Registry::has</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">     查询某一项目是否存在于注册表中   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-registry.has-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-registry.has-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-registry.php">Yaf_Registry</a></div></div>
     * @return bool*/
    public static function has($name){ }

/**
*<div id="yaf-registry.set" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Registry::set</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::set</span> &mdash; <span class="dc-title">Add an item into registry</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-registry.set-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Registry::set</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    往全局注册表添加一个新的项   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-registry.set-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-registry.set-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-registry.php">Yaf_Registry</a></div></div>
     * @return bool*/
    public static function set($name, $value){ }

/**
*<div id="yaf-registry.del" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Registry::del</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::del</span> &mdash; <span class="dc-title">Remove an item from registry</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-registry.del-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Registry::del</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    删除存在于注册表中的一个项目   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-registry.del-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-registry.del-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-registry.php">Yaf_Registry</a></div></div>
     * @return void|bool*/
    public static function del($name){ }
}

/**
*<div id="class.yaf-session" class="reference">   <h1 class="title">The Yaf_Session class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-session.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-session.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Session</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Traversable</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="modifier">static</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-session.php#yaf-session.props.instance">$<var class="varname">_instance</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-session.php#yaf-session.props.session">$<var class="varname">_session</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-session.php#yaf-session.props.started">$<var class="varname">_started</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.count.php" class="methodname">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.current.php" class="methodname">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.del.php" class="methodname">del</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.get.php" class="methodname">__get</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.getinstance.php" class="methodname">getInstance</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.has.php" class="methodname">has</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.isset.php" class="methodname">__isset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.key.php" class="methodname">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.next.php" class="methodname">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.offsetexists.php" class="methodname">offsetExists</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.offsetget.php" class="methodname">offsetGet</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.offsetset.php" class="methodname">offsetSet</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.offsetunset.php" class="methodname">offsetUnset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.rewind.php" class="methodname">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.set.php" class="methodname">__set</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.sleep.php" class="methodname">__sleep</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.start.php" class="methodname">start</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.unset.php" class="methodname">__unset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.valid.php" class="methodname">valid</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-session.wakeup.php" class="methodname">__wakeup</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="yaf-session.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-session.props.instance"><var class="varname"><var class="varname">_instance</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-session.props.session"><var class="varname"><var class="varname">_session</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-session.props.started"><var class="varname"><var class="varname">_started</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                                                                                                               <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Session::__clone} — The __clone purpose</li><li>{@link Yaf_Session::__construct} — The __construct purpose</li><li>{@link Yaf_Session::count} — The count purpose</li><li>{@link Yaf_Session::current} — The current purpose</li><li>{@link Yaf_Session::del} — The del purpose</li><li>{@link Yaf_Session::__get} — The __get purpose</li><li>{@link Yaf_Session::getInstance} — The getInstance purpose</li><li>{@link Yaf_Session::has} — The has purpose</li><li>{@link Yaf_Session::__isset} — The __isset purpose</li><li>{@link Yaf_Session::key} — The key purpose</li><li>{@link Yaf_Session::next} — The next purpose</li><li>{@link Yaf_Session::offsetExists} — The offsetExists purpose</li><li>{@link Yaf_Session::offsetGet} — The offsetGet purpose</li><li>{@link Yaf_Session::offsetSet} — The offsetSet purpose</li><li>{@link Yaf_Session::offsetUnset} — The offsetUnset purpose</li><li>{@link Yaf_Session::rewind} — The rewind purpose</li><li>{@link Yaf_Session::__set} — The __set purpose</li><li>{@link Yaf_Session::__sleep} — The __sleep purpose</li><li>{@link Yaf_Session::start} — The start purpose</li><li>{@link Yaf_Session::__unset} — The __unset purpose</li><li>{@link Yaf_Session::valid} — The valid purpose</li><li>{@link Yaf_Session::__wakeup} — The __wakeup purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Session implements Iterator, Traversable, ArrayAccess, Countable {

    /**
     * @var Yaf_Session
     */
    protected static $_instance;
    /**
     * @var array
     */
    protected $_session;
    /**
     * @var bool
     */
    protected $_started = true;

    /**
     * @link http://www.php.net/manual/en/yaf-session.construct.php
     */
    private function __construct(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-session.clone.php
     */
    private function __clone(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-session.sleep.php
     */
    private function __sleep(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-session.wakeup.php
     */
    private function __wakeup(){ }

/**
*<div id="yaf-session.getinstance" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::getInstance</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::getInstance</span> &mdash; <span class="dc-title">The getInstance purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.getinstance-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::getInstance</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.getinstance-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.getinstance-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
     * @return Yaf_Session*/
    public static function getInstance(){ }

/**
*<div id="yaf-session.start" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::start</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::start</span> &mdash; <span class="dc-title">The start purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.start-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::start</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.start-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.start-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
     * @return Yaf_Session*/
    public function start(){ }


/**
*<div id="yaf-session.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::__get</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::__get</span> &mdash; <span class="dc-title">The __get purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::__get</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.get-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
     * @return mixed*/
    public function get($name){ }

/**
*<div id="yaf-session.has" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::has</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::has</span> &mdash; <span class="dc-title">The has purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.has-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::has</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.has-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.has-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
     * @return bool*/
    public function has($name){ }

/**
*<div id="yaf-session.set" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::__set</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::__set</span> &mdash; <span class="dc-title">The __set purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.set-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::__set</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.set-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.set-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
     * @return bool|Yaf_Session return FALSE on failure*/
    public function set($name, $value){ }

/**
*<div id="yaf-session.del" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::del</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::del</span> &mdash; <span class="dc-title">The del purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.del-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::del</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.del-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.del-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
     * @return bool|Yaf_Session return FALSE on failure*/
    public function del($name){ }

/**
*<div id="yaf-session.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::count</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::count</span> &mdash; <span class="dc-title">The count purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::count</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.count-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function count(){ }

/**
*<div id="yaf-session.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::rewind</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::rewind</span> &mdash; <span class="dc-title">The rewind purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.rewind-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function rewind(){ }

/**
*<div id="yaf-session.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::current</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::current</span> &mdash; <span class="dc-title">The current purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.current-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function current(){ }

/**
*<div id="yaf-session.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::next</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::next</span> &mdash; <span class="dc-title">The next purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.next-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function next(){ }

/**
*<div id="yaf-session.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::valid</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::valid</span> &mdash; <span class="dc-title">The valid purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.valid-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function valid(){ }

/**
*<div id="yaf-session.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::key</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::key</span> &mdash; <span class="dc-title">The key purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.key-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function key(){ }

/**
*<div id="yaf-session.offsetunset" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::offsetUnset</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetUnset</span> &mdash; <span class="dc-title">The offsetUnset purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.offsetunset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::offsetUnset</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.offsetunset-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetunset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function offsetUnset($name){ }

/**
*<div id="yaf-session.offsetget" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::offsetGet</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetGet</span> &mdash; <span class="dc-title">The offsetGet purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.offsetget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::offsetGet</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.offsetget-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
     * @return mixed*/
    public function offsetGet($name){ }

/**
*<div id="yaf-session.offsetexists" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::offsetExists</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetExists</span> &mdash; <span class="dc-title">The offsetExists purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.offsetexists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::offsetExists</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.offsetexists-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetexists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function offsetExists($name){ }

/**
*<div id="yaf-session.offsetset" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Session::offsetSet</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetSet</span> &mdash; <span class="dc-title">The offsetSet purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-session.offsetset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Session::offsetSet</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-session.offsetset-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-session.php">Yaf_Session</a></div></div>
*/
    public function offsetSet($name, $value){ }

    /**
     * @see Yaf_Session::get()
     */
    public function __get($name){ }

    /**
     * @see Yaf_Session::has()
     */
    public function __isset($name){ }

    /**
     * @see Yaf_Session::set()
     */
    public function __set($name, $value){ }

    /**
     * @see Yaf_Session::del()
     */
    public function __unset($name){ }
}

/**
*<div id="class.yaf-router" class="reference">   <h1 class="title">The Yaf_Router class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-router.intro">    <h2 class="title">简介</h2>    <p class="para">    <strong class="classname">Yaf_Router</strong>是标准的框架路由.路由是一个拿到URI端点（URL中的URI的一部分）然后分解参数得到哪一个module, controller, 和action需要接受请求。module, controller, 和action，还有一些其他的参数是打包在一个<a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="classname">Yaf_Request_Abstract</a>的对象中，然后通过<a href="http://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a>来处理的。路由只发生一次:最初接到请求并且在第一个controller分发之前。    <strong class="classname">Yaf_Router</strong> 是设计来允许使用纯PHP结构的类似功能模块的跳转。它非常松散的基于Ruby on Rails的路由，并且不需要你提前就知道webserver URL跳转的相关知识。它是设计来处理一个Apache 跳转模块的规则（一个）    <strong class="classname">Yaf_Router</strong>是设计来允许mod_rewrite    <div class="example" id="example-4970">     <p><strong>Example #1 Apache的跳转规则</strong></p>    <div class="example-contents"> <div class="confcode"><pre class="confcode">RewriteEngine on RewriteRule !\.(js|ico|gif|jpg|png|css|html)$ index.php</pre> </div>    </div>     </div>    or (preferred):    <div class="example" id="example-4971">    <p><strong>Example #2 Apache的跳转规则</strong></p>    <div class="example-contents"> <div class="confcode"><pre class="confcode">RewriteEngine On RewriteCond %{REQUEST_FILENAME} -s [OR] RewriteCond %{REQUEST_FILENAME} -l [OR] RewriteCond %{REQUEST_FILENAME} -d RewriteRule ^.*$ - [NC,L] RewriteRule ^.*$ index.php [NC,L]</pre> </div>    </div>    </div>    如果使用Lighttpd，下面的跳转规则是有效的：    <div class="example" id="example-4972">     <p><strong>Example #3 Lighttpd的跳转规则</strong></p>    <div class="example-contents"> <div class="confcode"><pre class="confcode">url.rewrite-once = (   &quot;.*\?(.*)$&quot; =&gt; &quot;/index.php?$1&quot;,   &quot;.*\.(js|ico|gif|jpg|png|css|html)$&quot; =&gt; &quot;$0&quot;,   &quot;&quot; =&gt; &quot;/index.php&quot; )</pre> </div>    </div>    </div>    如果使用Nginx，下面的跳转规则是有效的：    <div class="example" id="example-4973">     <p><strong>Example #4 Nginx的跳转规则</strong></p>    <div class="example-contents"> <div class="confcode"><pre class="confcode">server {   listen ****;   server_name  yourdomain.com;   root   document_root;   index  index.php index.html;    if (!-e $request_filename) {     rewrite ^/(.*)  /index.php/$1 last;   } }</pre> </div>    </div>    </div>    </p>   </div>     <div class="section" id="yaf-router.default">    <h2 class="title">默认路由</h2>    <p class="para">    Yaf_Router预设了一个默认路由，它将以controller/action的形式匹配URIs。此外，一个module的名字可以被指定为第一路径元素，允许URIs设置为module/controller/action的形式。最后，它也会匹配一些URI中额外附加的参数，默认形式是controller/action/var1/value1/var2/value2。     <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">       Module的名字必须要定义在配置中，就application.module=&quot;Index,Foo,Bar&quot;而言，在这种情况下，仅仅index, foo 和 bar能被考虑作为为一个module的名称。如果没有在配置文件中定义，那么Yaf使用默认的module名字“Index”。      </p>     </p></blockquote>    </p>     <p class="para">    如何匹配这些路由的一些例子：    <div class="example" id="example-4974">     <p><strong>Example #5 <a href="http://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a>(default      route)example</strong></p>    <div class="example-contents"> <div class="confcode"><pre class="confcode">// Assuming the following configure: $conf = array(    &quot;application&quot; =&gt; array(       &quot;modules&quot; =&gt; &quot;Index,Blog&quot;,    ), );  Controller only: http://example/news     controller == news Action only(when defined yaf.action_prefer=1 in php.ini)     action  == news   Invalid module maps to controller name: http://example/foo     controller == foo   Module + controller: http://example/blog/archive     module     == blog     controller == archive   Module + controller + action: http://example/blog/archive/list     module     == blog     controller == archive     action     == list   Module + controller + action + params: http://example/blog/archive/list/sort/alpha/date/desc     module     == blog     controller == archive     action     == list     sort       == alpha     date       == desc</pre> </div>    </div>    </div>    </p>   </div>    <div class="section" id="yaf-router.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Router</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-router.php#yaf-router.props.routes">$<var class="varname">_routes</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-router.php#yaf-router.props.current">$<var class="varname">_current</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-router.addconfig.php" class="methodname">addConfig</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract">Yaf_Config_Abstract</a></span> <code class="parameter">$config</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Router</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-router.addroute.php" class="methodname">addRoute</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><span class="type Yaf_Route_Abstract">Yaf_Route_Abstract</span></span> <code class="parameter">$route</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-router.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-router.getcurrentroute.php" class="methodname">getCurrentRoute</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-router.getroute.php" class="methodname">getRoute</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-router.getroutes.php" class="methodname">getRoutes</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-router.route.php" class="methodname">route</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>     }</div>     </div>        <div class="section" id="yaf-router.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-router.props.routes"><var class="varname"><var class="varname">_routes</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-router.props.current"><var class="varname"><var class="varname">_current</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                      <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Router::addConfig} — 向Router中添加配置文件中定义的路由</li><li>{@link Yaf_Router::addRoute} — 往Router中添加新的路由</li><li>{@link Yaf_Router::__construct} — Yaf_Router constructor</li><li>{@link Yaf_Router::getCurrentRoute} — 取得当前有效的路由名</li><li>{@link Yaf_Router::getRoute} — The getRoute purpose</li><li>{@link Yaf_Router::getRoutes} — The getRoutes purpose</li><li>{@link Yaf_Router::route} — The route purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Router {

    /**
     * @var Yaf_Route_Interface[] registered routes stack
     */
    protected $_routes;
    /**
     * @var string after routing phase, this indicated the name of which route is used to route current request. you can get this name by Yaf_Router::getCurrentRoute()
     */
    protected $_current;

    /**
     * @link http://www.php.net/manual/en/yaf-router.construct.php
     */
    public function __construct(){ }

/**
*<div id="yaf-router.addroute" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Router::addRoute</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::addRoute</span> &mdash; <span class="dc-title">往Router中添加新的路由</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-router.addroute-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-router.php" class="type Yaf_Router">Yaf_Router</a></span> <span class="methodname"><strong>Yaf_Router::addRoute</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><span class="type Yaf_Route_Abstract">Yaf_Route_Abstract</span></span> <code class="parameter">$route</code></span>    )</div>    <p class="para rdfs-comment">     默认地，Yaf_Router使用<a href="http://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a>作为它的默认的路由。你可以通过调用这个方法往Router的堆栈中添加一个新的路由   </p>   <p class="para">     在路由栈中，新的路由规则会比老的规则先调用，如果新路由规则返回TRUE，那么路由进程将会结束。否则，老的规则将会被调用。   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-router.addroute-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-router.addroute-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-router.addroute-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4977">    <p><strong>Example #1 <span class="function">{@link Yaf_Dispatcher::autoRender()}</span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initRoute</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$router&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;we&nbsp;can&nbsp;add&nbsp;some&nbsp;pre-defined&nbsp;routes&nbsp;in&nbsp;application.ini<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">routes</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;add&nbsp;a&nbsp;Rewrite&nbsp;route,&nbsp;then&nbsp;for&nbsp;a&nbsp;request&nbsp;uri:&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;http:///*</span><span style="color: #9876AA">product</span><span style="color: #007700">/list/</span><span style="color: #9876AA">22</span><span style="color: #007700">/</span><span style="color: #9876AA">foo<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">will&nbsp;be&nbsp;matched&nbsp;by&nbsp;this&nbsp;route</span><span style="color: #007700">,&nbsp;and&nbsp;</span><span style="color: #9876AA">result</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;[</span><span style="color: #9876AA">module</span><span style="color: #007700">]&nbsp;=&gt;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;[</span><span style="color: #9876AA">controller</span><span style="color: #007700">]&nbsp;=&gt;&nbsp;</span><span style="color: #9876AA">product<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">*&nbsp;&nbsp;[</span><span style="color: #9876AA">action</span><span style="color: #007700">]&nbsp;=&gt;&nbsp;</span><span style="color: #9876AA">info<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">*&nbsp;&nbsp;[</span><span style="color: #9876AA">method</span><span style="color: #007700">]&nbsp;=&gt;&nbsp;</span><span style="color: #9876AA">GET<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">*&nbsp;&nbsp;[</span><span style="color: #9876AA">params</span><span style="color: #007700">:protected]&nbsp;=&gt;&nbsp;Array<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[</span><span style="color: #9876AA">id</span><span style="color: #007700">]&nbsp;=&gt;&nbsp;</span><span style="color: #9876AA">22<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[</span><span style="color: #9876AA">name</span><span style="color: #007700">]&nbsp;=&gt;&nbsp;</span><span style="color: #9876AA">foo<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Rewrite</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"/product/list/:id/:name"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"controller"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"product"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"action"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"info"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'dummy'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-router.addroute-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Router::addConfig()} - 向Router中添加配置文件中定义的路由</span></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-supervar.php" class="classname">Yaf_Route_Supervar</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-simple.php" class="classname">Yaf_Route_Simple</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-regex.php" class="classname">Yaf_Route_Regex</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-rewrite.php" class="classname">Yaf_Route_Rewrite</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-map.php" class="classname">Yaf_Route_Map</a></li>   </ul>                         </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-router.php">Yaf_Router</a></div></div>
     * @return bool|Yaf_Router return FALSE on failure*/
    public function addRoute($name, Yaf_Route_Interface $route){ }

/**
*<div id="yaf-router.addconfig" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Router::addConfig</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::addConfig</span> &mdash; <span class="dc-title">向Router中添加配置文件中定义的路由</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-router.addconfig-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Router::addConfig</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract">Yaf_Config_Abstract</a></span> <code class="parameter">$config</code></span>    )</div>    <p class="para rdfs-comment">     将application.ini中定义的路由规则添加到<a href="http://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a>的路由栈中   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-router.addconfig-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-router.addconfig-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-router.addconfig-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4975">    <p><strong>Example #1 <span class="function"><strong>application.ini()</strong></span>example</strong></p>    <div class="example-contents">     <div class="inicode"><pre class="inicode">;the order is very important, the prior one will be called first  ;a rewrite route match request /product//// routes.route_name.type=&quot;rewrite&quot; routes.route_name.match=&quot;/product/:name/:value&quot; routes.route_name.route.controller=product routes.route_name.route.action=info  ;a regex route match request /list//// routes.route_name1.type=&quot;regex&quot; routes.route_name1.match=&quot;#^list/([^/]*)/([^/]*)#&quot; routes.route_name1.route.controller=Index routes.route_name1.route.action=action routes.route_name1.map.1=name routes.route_name1.map.2=value  ;a simple route match //*?c=controller&amp;a=action&amp;m=module routes.route_name2.type=&quot;simple&quot; routes.route_name2.controller=c routes.route_name2.module=m routes.route_name2.action=a  ;a simple router match //*?r=PATH_INFO routes.route_name3.type=&quot;supervar&quot; routes.route_name3.varname=r  ;a map route match any request to controller routes.route_name4.type=&quot;map&quot; routes.route_name4.controllerPrefer=TRUE routes.route_namer.delimiter=&quot;#!&quot;</pre> </div>    </div>    </div>   <div class="example" id="example-4976">    <p><strong>Example #2 <span class="function"><strong>Yaf_Dispatcher::autoConfig()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initRoute</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$router&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;we&nbsp;can&nbsp;add&nbsp;some&nbsp;pre-defined&nbsp;routes&nbsp;in&nbsp;application.ini<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">routes</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-router.addconfig-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Router::addRoute()} - 往Router中添加新的路由</span></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-supervar.php" class="classname">Yaf_Route_Supervar</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-simple.php" class="classname">Yaf_Route_Simple</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-regex.php" class="classname">Yaf_Route_Regex</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-rewrite.php" class="classname">Yaf_Route_Rewrite</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-route-map.php" class="classname">Yaf_Route_Map</a></li>   </ul>                         </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-router.php">Yaf_Router</a></div></div>
     * @return bool|Yaf_Router return FALSE on failure*/
    public function addConfig(Yaf_Config_Abstract $config){ }

/**
*<div id="yaf-router.route" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Router::route</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::route</span> &mdash; <span class="dc-title">The route purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-router.route-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Router::route</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-router.route-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-router.route-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-router.php">Yaf_Router</a></div></div>
     * @return bool|Yaf_Router return FALSE on failure*/
    public function route(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-router.getroute" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Router::getRoute</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::getRoute</span> &mdash; <span class="dc-title">The getRoute purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-router.getroute-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Router::getRoute</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-router.getroute-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-router.getroute-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-router.php">Yaf_Router</a></div></div>
     * @return Yaf_Route_Interface*/
    public function getRoute($name){ }

/**
*<div id="yaf-router.getroutes" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Router::getRoutes</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::getRoutes</span> &mdash; <span class="dc-title">The getRoutes purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-router.getroutes-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Router::getRoutes</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-router.getroutes-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-router.getroutes-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-router.php">Yaf_Router</a></div></div>
     * @return Yaf_Route_Interface[]*/
    public function getRoutes(){ }

/**
*<div id="yaf-router.getcurrentroute" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Router::getCurrentRoute</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::getCurrentRoute</span> &mdash; <span class="dc-title">取得当前有效的路由名</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-router.getcurrentroute-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Router::getCurrentRoute</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">     获取当前路由进程中正在起作用的路由名    <blockquote class="note"><p><strong class="note">Note</strong>:      <p class="para">       你需要在路由进程结束之后调用此方法，在这之前，这个方法会一直返回NULL     </p>    </p></blockquote>   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-router.getcurrentroute-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-router.getcurrentroute-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    String，当前起效的路由的名字   </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-router.getcurrentroute-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4978">    <p><strong>Example #1 注册一些路由到Bootstrap</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initRoute</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$router&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$rewrite_route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Rewrite</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"/product/list/:page"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"controller"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"product"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"action"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"list"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$regex_route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Rewrite</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"#^/product/info/(\d+)"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"controller"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"product"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"action"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"info"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'rewrite'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$rewrite_route</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'regex'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$regex_route</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;register&nbsp;plugin&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">__initPlugins</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPlugin</span><span style="color: #007700">(new&nbsp;</span><span style="color: #9876AA">DummyPlugin</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-4979">    <p><strong>Example #2 plugin Dummy.php (under <a href="http://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a>/plugins)</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">DummyPlugin&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Plugin_Abstract&nbsp;</span><span style="color: #007700">{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">routerShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getCurrentRoute</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;<br /></span>?&gt;</span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> // for http://yourdomain.com/product/list/1  * DummyPlugin will output:   string(7) &quot;rewrite&quot;  // for http://yourdomain.com/product/info/34  * DummyPlugin will output:   string(5) &quot;regex&quot;  // for other request URI  * DummyPlugin will output:   string(8) &quot;_default&quot; </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-router.getcurrentroute-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></li>    <li class="member"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a></li>    <li class="member"><span class="methodname">{@link Yaf_Router::addRoute()} - 往Router中添加新的路由</span></li>   </ul>                         </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-router.php">Yaf_Router</a></div></div>
     * @return string the name of the effective route.*/
    public function getCurrentRoute(){ }
}

/**
*<div id="class.yaf-bootstrap-abstract" class="reference">   <h1 class="title">The Yaf_Bootstrap_Abstract class</h1>     <div class="partintro"><p class="verinfo">(No version information available, might only be in Git)</p>     <div class="section" id="yaf-bootstrap-abstract.intro">    <h2 class="title">简介</h2>    <p class="para">      Bootstrap是用来在Application运行(run)之前做一些初始化工作的机制.    </p>    <p class="para">     你可以通过继承<strong class="classname">Yaf_Bootstrap_Abstract</strong>     来定义自己的Bootstrap类.    </p>    <p class="para">     在Bootstrap类中所有以&quot;_init&quot;开头的公有的方法,     都会被按照定义顺序依次在<span class="methodname">{@link Yaf_Application::bootstrap()}</span>     被调用的时刻调用.    </p>   </div>    <div class="section">   <h2 class="title">范例</h2>   <div class="example" id="example-4922">    <p><strong>Example #1 Bootstrap example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;bootstrap&nbsp;class&nbsp;should&nbsp;be&nbsp;defined&nbsp;under&nbsp;./application/Bootstrap.php&nbsp;<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">__METHOD__</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">__METHOD__</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"/application/"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;);<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$app&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bootstrap</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(22) &quot;Bootstrap::_initConfig&quot; string(22) &quot;Bootstrap::_initPlugin&quot; </pre></div>    </div>   </div>  </div>    <div class="section" id="yaf-bootstrap-abstract.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">abstract</span>       <strong class="classname">Yaf_Bootstrap_Abstract</strong>      </span>      {</div>     <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    }</div>     </div>   </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
abstract class Yaf_Bootstrap_Abstract {

}

/**
*<div id="class.yaf-controller-abstract" class="reference">   <h1 class="title">The Yaf_Controller_Abstract class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-controller-abstract.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">Yaf_Controller_Abstract</strong> 是Yaf的MVC体系的核心部分。     MVC是指Model-View-Controller, 是一个用于分离应用逻辑和表现逻辑的设计模式。    </p>    <p class="para">     每个用户自定义controller都应当继承<strong class="classname">Yaf_Controller_Abstract</strong>。    </p>    <p class="para">     你会发现在你自己的controller中无法定义__construct方法。因此，<strong class="classname">Yaf_Controller_Abstract</strong>     提供了一个魔术方法Yaf_Controller_Abstract::init()。    </p>    <p class="para">     如果在你自己的controller里面已经定义了一个init()方法，当你的controller被实例化的时候，它将被调用。    </p>    <p class="para">     Action可能需要参数，当一个请求来到的时候，在路由中如果请求的参数有相同名称的变量（例如：<span class="methodname">{@link Yaf_Request_Abstract::getParam()}</span>），     Yaf将把他们传递给action方法（see <span class="methodname">{@link Yaf_Action_Abstract::execute()}</span>）。    </p>   </div>     <div class="section" id="yaf-controller-abstract.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">abstract</span>       <strong class="classname">Yaf_Controller_Abstract</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.actions">$<var class="varname">actions</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.module">$<var class="varname">_module</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.name">$<var class="varname">_name</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.request">$<var class="varname">_request</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.response">$<var class="varname">_response</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.invoke-args">$<var class="varname">_invoke_args</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.view">$<var class="varname">_view</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">private</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.display.php" class="methodname">display</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.forward.php" class="methodname">forward</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$paramters</code></span>   ]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.getinvokearg.php" class="methodname">getInvokeArg</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.getinvokeargs.php" class="methodname">getInvokeArgs</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.getmodulename.php" class="methodname">getModuleName</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Request_Abstract</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.getrequest.php" class="methodname">getRequest</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Response_Abstract</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.getresponse.php" class="methodname">getResponse</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_View_Interface</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.getview.php" class="methodname">getView</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.getviewpath.php" class="methodname">getViewpath</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.init.php" class="methodname">init</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.initview.php" class="methodname">initView</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.redirect.php" class="methodname">redirect</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.render.php" class="methodname">render</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-controller-abstract.setviewpath.php" class="methodname">setViewpath</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$view_directory</code></span>    )</div>     }</div>     </div>        <div class="section" id="yaf-controller-abstract.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-controller-abstract.props.actions"><var class="varname"><var class="varname">actions</var></var></dt>       <dd>        <p class="para">       你也可以通过使用这个值和 <a href="http://php.net/manual/zh/class.yaf-action-abstract.php" class="classname">Yaf_Action_Abstract</a> 在一个单独的PHP脚本中定义action函数。       <div class="example" id="example-4931">        <p><strong>Example #1 在一个独立的文件中定义action</strong></p>         <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">IndexController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;</span><span style="color: #9876AA">$actions&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*&nbsp;now&nbsp;dummyAction&nbsp;is&nbsp;defined&nbsp;in&nbsp;a&nbsp;separate&nbsp;file&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"dummy"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"actions/Dummy_action.php"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;action&nbsp;method&nbsp;may&nbsp;have&nbsp;arguments&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;</span><span style="color: #9876AA">indexAction</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$id</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$name&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"name"</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$id&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_request</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"id"</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>         </div>        </div>       <div class="example" id="example-4932">        <p><strong>Example #2 Dummy_action.php</strong></p>         <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">DummyAction&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Action_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;a&nbsp;action&nbsp;class&nbsp;shall&nbsp;define&nbsp;this&nbsp;method&nbsp;&nbsp;as&nbsp;the&nbsp;entry&nbsp;point&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">public&nbsp;</span><span style="color: #9876AA">execute</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>         </div>        </div>       </p>      </dd>                 <dt id="yaf-controller-abstract.props.module"><var class="varname"><var class="varname">_module</var></var></dt>       <dd>        <p class="para">         模块名       </p>      </dd>                 <dt id="yaf-controller-abstract.props.name"><var class="varname"><var class="varname">_name</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-controller-abstract.props.request"><var class="varname"><var class="varname">_request</var></var></dt>       <dd>        <p class="para">       当前的请求实例       </p>      </dd>                 <dt id="yaf-controller-abstract.props.response"><var class="varname"><var class="varname">_response</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-controller-abstract.props.invoke-args"><var class="varname"><var class="varname">_invoke_args</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-controller-abstract.props.view"><var class="varname"><var class="varname">_view</var></var></dt>       <dd>        <p class="para">       视图引擎       </p>      </dd>          </dl>    </div>     </div>                                                                                                                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Controller_Abstract::__clone} — Yaf_Controller_Abstract 不能被克隆</li><li>{@link Yaf_Controller_Abstract::__construct} — Yaf_Controller_Abstract constructor</li><li>{@link Yaf_Controller_Abstract::display} — The display purpose</li><li>{@link Yaf_Controller_Abstract::forward} — The forward purpose</li><li>{@link Yaf_Controller_Abstract::getInvokeArg} — The getInvokeArg purpose</li><li>{@link Yaf_Controller_Abstract::getInvokeArgs} — The getInvokeArgs purpose</li><li>{@link Yaf_Controller_Abstract::getModuleName} — 获取当前控制器所属的模块名</li><li>{@link Yaf_Controller_Abstract::getRequest} — The getRequest purpose</li><li>{@link Yaf_Controller_Abstract::getResponse} — The getResponse purpose</li><li>{@link Yaf_Controller_Abstract::getView} — 获取当前的视图引擎</li><li>{@link Yaf_Controller_Abstract::getViewpath} — The getViewpath purpose</li><li>{@link Yaf_Controller_Abstract::init} — 控制器初始化</li><li>{@link Yaf_Controller_Abstract::initView} — The initView purpose</li><li>{@link Yaf_Controller_Abstract::redirect} — The redirect purpose</li><li>{@link Yaf_Controller_Abstract::render} — 渲染视图模板</li><li>{@link Yaf_Controller_Abstract::setViewpath} — The setViewpath purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
abstract class Yaf_Controller_Abstract {

    /**
     * @see Yaf_Action_Abstract
     * @var array You can also define a action method in a separate PHP script by using this property and Yaf_Action_Abstract.
     */
    public $actions;
    /**
     * @var string module name
     */
    protected $_module;
    /**
     * @var string controller name
     */
    protected $_name;
    /**
     * @var Yaf_Request_Abstract current request object
     */
    protected $_request;
    /**
     * @var Yaf_Response_Abstract current response object
     */
    protected $_response;
    /**
     * @var array
     */
    protected $_invoke_args;
    /**
     * @var Yaf_View_Interface view engine object
     */
    protected $_view;

/**
*<div id="yaf-controller-abstract.render" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::render</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::render</span> &mdash; <span class="dc-title">渲染视图模板</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.render-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Controller_Abstract::render</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.render-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">tpl</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">parameters</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.render-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return string*/
    protected function render($tpl, array $parameters = null){ }

/**
*<div id="yaf-controller-abstract.display" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::display</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::display</span> &mdash; <span class="dc-title">The display purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.display-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Controller_Abstract::display</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.display-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">tpl</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">parameters</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.display-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return bool*/
    protected function display($tpl, array $parameters = null){ }

/**
*<div id="yaf-controller-abstract.getrequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::getRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getRequest</span> &mdash; <span class="dc-title">The getRequest purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getrequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <span class="methodname"><strong>Yaf_Controller_Abstract::getRequest</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getrequest-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getrequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return Yaf_Request_Abstract*/
    public function getRequest(){ }

/**
*<div id="yaf-controller-abstract.getresponse" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::getResponse</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getResponse</span> &mdash; <span class="dc-title">The getResponse purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getresponse-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <span class="methodname"><strong>Yaf_Controller_Abstract::getResponse</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getresponse-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getresponse-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return Yaf_Response_Abstract*/
    public function getResponse(){ }

/**
*<div id="yaf-controller-abstract.getmodulename" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::getModuleName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getModuleName</span> &mdash; <span class="dc-title">获取当前控制器所属的模块名</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getmodulename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Controller_Abstract::getModuleName</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">   获取当前控制器所属的模块名   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getmodulename-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getmodulename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return string*/
    public function getModuleName(){ }

/**
*<div id="yaf-controller-abstract.getview" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::getView</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getView</span> &mdash; <span class="dc-title">获取当前的视图引擎</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getview-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface">Yaf_View_Interface</a></span> <span class="methodname"><strong>Yaf_Controller_Abstract::getView</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">   获取当前的视图引擎   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getview-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getview-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return Yaf_View_Interface*/
    public function getView(){ }

/**
*<div id="yaf-controller-abstract.initview" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::initView</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::initView</span> &mdash; <span class="dc-title">The initView purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.initview-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::initView</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.initview-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">options</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.initview-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return Yaf_Response_Abstract*/
    public function initView(array $options = null){ }

/**
*<div id="yaf-controller-abstract.setviewpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::setViewpath</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::setViewpath</span> &mdash; <span class="dc-title">The setViewpath purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.setviewpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::setViewpath</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$view_directory</code></span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.setviewpath-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">view_directory</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.setviewpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return bool*/
    public function setViewpath($view_directory){ }

/**
*<div id="yaf-controller-abstract.getviewpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::getViewpath</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getViewpath</span> &mdash; <span class="dc-title">The getViewpath purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getviewpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::getViewpath</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getviewpath-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getviewpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return string*/
    public function getViewpath(){ }

/**
*<div id="yaf-controller-abstract.forward" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::forward</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::forward</span> &mdash; <span class="dc-title">The forward purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.forward-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::forward</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$paramters</code></span>   ]]] )</div>    <p class="para rdfs-comment">     将当前的请求转交给另外的Action.    </p>    <blockquote class="note"><p><strong class="note">Note</strong>:      <p class="para">      调用<span class="methodname"><strong>Yaf_Controller_Abstract::forward()</strong></span>以后,      不会直接立即跳转到目的Action执行, 而是会在当前的Action执行完成后,      下一轮的DispatchLoop中, 交给目的Action.     </p>     <p class="para">       所以, 如果你希望立即跳转到目的Action,       那么请使用return结束当前的执行流程.     </p>    </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.forward-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">module</code></dt>      <dd>       <p class="para">        要跳转的目的Action的Module, 如果是NULL, 则默认Module会被采用.      </p>     </dd>              <dt> <code class="parameter">controller</code></dt>      <dd>       <p class="para">        要跳转的目的Action的Controller, 如果是NULL, 则默认Controller会被采用.      </p>     </dd>              <dt> <code class="parameter">action</code></dt>      <dd>       <p class="para">       要跳转的目的Action.      </p>     </dd>              <dt> <code class="parameter">paramters</code></dt>      <dd>       <p class="para">       跳转参数,       可以在目的Action中通过<span class="methodname"><strong>Yaf_Request_Abstrace::getParam()</strong></span>来获取.      </p>     </dd>        </dl>   </div>    <div class="refsect1 examples" id="refsect1-yaf-controller-abstract.forward-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4933">    <p><strong>Example #1 <span class="function"><strong>Yaf_Controller_Abstract::forward()</strong></span>例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">IndexController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">indexAction</span><span style="color: #007700">(){&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$logined&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">"login"</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">$logined</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">forward</span><span style="color: #007700">(</span><span style="color: #DD0000">"login"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"from"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Index"</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;跳转到login&nbsp;Action<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">return&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;return立即结束当前的执行流程,&nbsp;跳转到目的Action<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;而这里的FALSE是告诉Yaf不要自动渲染这个Action的视图<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;other&nbsp;processes<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">loginAction</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"login,&nbsp;redirected&nbsp;from&nbsp;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_request</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"from"</span><span style="color: #007700">)&nbsp;,&nbsp;</span><span style="color: #DD0000">"&nbsp;action"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre>    login, redirected from Index action </pre></div>    </div>   </div>  </div>     <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.forward-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     return FALSE on failure   </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-controller-abstract.forward-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname"><strong>Yaf_Request_Abstrace::getParam()</strong></span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return bool return FALSE on failure*/
    public function forward($module, $controller = null, $action = null, array $parameters = null){ }

/**
*<div id="yaf-controller-abstract.redirect" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::redirect</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::redirect</span> &mdash; <span class="dc-title">The redirect purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.redirect-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::redirect</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.redirect-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">url</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.redirect-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return bool*/
    public function redirect($url){ }

/**
*<div id="yaf-controller-abstract.getinvokeargs" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::getInvokeArgs</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getInvokeArgs</span> &mdash; <span class="dc-title">The getInvokeArgs purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getinvokeargs-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::getInvokeArgs</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getinvokeargs-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getinvokeargs-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return array*/
    public function getInvokeArgs(){ }

/**
*<div id="yaf-controller-abstract.getinvokearg" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::getInvokeArg</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getInvokeArg</span> &mdash; <span class="dc-title">The getInvokeArg purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getinvokearg-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::getInvokeArg</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getinvokearg-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getinvokearg-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
     * @return null|mixed*/
    public function getInvokeArg($name){ }

/**
*<div id="yaf-controller-abstract.init" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Controller_Abstract::init</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::init</span> &mdash; <span class="dc-title">控制器初始化</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-controller-abstract.init-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Controller_Abstract::init</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="methodname">{@link Yaf_Controller_Abstract::__construct()}</span> 是final类型，所以用户不能重载它。但是用户可以定义    <span class="methodname"><strong>Yaf_Controller_Abstract::init()</strong></span>，该函数会在控制器对象实例化之后被调用。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.init-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.init-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-controller-abstract.init-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Controller_Abstract::__construct()} - Yaf_Controller_Abstract constructor</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php">Yaf_Controller_Abstract</a></div></div>
*/
    public function init(){ }

    /**
     * <b>Yaf_Controller_Abstract</b>::__construct() is final, which means it can not be overridden. You may want to see Yaf_Controller_Abstract::init() instead.
     *
     * @see Yaf_Controller_Abstract::init()
     * @link http://www.php.net/manual/en/yaf-controller-abstract.construct.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     * @param Yaf_View_Interface $view
     * @param array $invokeArgs
     */
    final public function __construct(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response, Yaf_View_Interface $view, array $invokeArgs = null){ }

    /**
     * @link http://www.php.net/manual/en/yaf-controller-abstract.clone.php
     */
    final private function __clone(){ }
}

/**
*<div id="class.yaf-action-abstract" class="reference">   <h1 class="title">The Yaf_Action_Abstract class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-action-abstract.intro">    <h2 class="title">简介</h2>    <p class="para">     在Yaf中一个action可以采用单独定义<strong class="classname">Yaf_Action_Abstract</strong>来实现。     亦即，一个action方法也可以是一个<strong class="classname">Yaf_Action_Abstract</strong>的派生类    </p>    <p class="para">     Yaf需要一个可以被它所调用的入口点（比如PHP 5.3，它有一个新的魔术方法__invoke，但是Yaf不只支持PHP 5.3+，     所以Yaf需要另一个魔术方法来执行完成这样的任务），所以在你自己的动作类里面必须要实现抽象方法      <span class="methodname">{@link Yaf_Action_Abstract::execute()}</span>    </p>   </div>     <div class="section" id="yaf-action-abstract.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Action_Abstract</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-controller-abstract.php" class="classname">Yaf_Controller_Abstract</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-action-abstract.php#yaf-action-abstract.props.controller">$<var class="varname">_controller</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span><span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-action-abstract.execute.php" class="methodname">execute</a></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$arg</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$...</code></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="type">Yaf_Controller_Abstract</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-action-abstract.getcontroller.php" class="methodname">getController</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">private</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::__clone}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">private</span> <span class="methodname">{@link Yaf_Controller_Abstract::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">bool</span> <span class="methodname">{@link Yaf_Controller_Abstract::display}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::forward}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$paramters</code></span>   ]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::getInvokeArg}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::getInvokeArgs}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link Yaf_Controller_Abstract::getModuleName}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Request_Abstract</span> <span class="methodname">{@link Yaf_Controller_Abstract::getRequest}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_Response_Abstract</span> <span class="methodname">{@link Yaf_Controller_Abstract::getResponse}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">Yaf_View_Interface</span> <span class="methodname">{@link Yaf_Controller_Abstract::getView}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::getViewpath}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::init}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::initView}</span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::redirect}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">string</span> <span class="methodname">{@link Yaf_Controller_Abstract::render}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Controller_Abstract::setViewpath}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$view_directory</code></span>    )</div>      }</div>     </div>        <div class="section" id="yaf-action-abstract.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-action-abstract.props.module"><var class="varname"><var class="varname">_module</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-action-abstract.props.name"><var class="varname"><var class="varname">_name</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-action-abstract.props.request"><var class="varname"><var class="varname">_request</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-action-abstract.props.response"><var class="varname"><var class="varname">_response</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-action-abstract.props.invoke-args"><var class="varname"><var class="varname">_invoke_args</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-action-abstract.props.view"><var class="varname"><var class="varname">_view</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-action-abstract.props.controller"><var class="varname"><var class="varname">_controller</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                   <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Action_Abstract::execute} — 执行动作</li><li>{@link Yaf_Action_Abstract::getController} — 得到控制器实例</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
abstract class Yaf_Action_Abstract extends Yaf_Controller_Abstract {

    /**
     * @var Yaf_Controller_Abstract
     */
    protected $_controller;

/**
*<div id="yaf-action-abstract.execute" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Action_Abstract::execute</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Action_Abstract::execute</span> &mdash; <span class="dc-title">执行动作</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-action-abstract.execute-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Action_Abstract::execute</strong></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$arg</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$...</code></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="methodname"><strong>Yaf_Action_Abstract::execute()</strong></span> 可能会有参数     <blockquote class="note"><p><strong class="note">Note</strong>:      <p class="para">       从请求返回的值可能是不安全的，在使用之前你需要对它们过滤一遍。     </p>    </p></blockquote>   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-action-abstract.execute-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-action-abstract.execute-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-action-abstract.execute-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4934">    <p><strong>Example #1 <span class="function"><strong>Yaf_Action_Abstract::execute()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//*&nbsp;<br />&nbsp;*&nbsp;A&nbsp;controller&nbsp;example<br />&nbsp;<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">ProductController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;</span><span style="color: #9876AA">$actions&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"index"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"actions/Index.php"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-4935">    <p><strong>Example #2 <span class="function"><strong>Yaf_Action_Abstract::execute()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//*&nbsp;<br />&nbsp;*&nbsp;ListAction<br />&nbsp;<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">ListAction&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Action_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">execute&nbsp;</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$id</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$name&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"name"</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$id&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"id"</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> //*  * Now assuming we are using the Yaf_Route_Static route   * for request: http://yourdomain/product/list/name/yaf/id/22  * will result:    bool(true)  bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-action-abstract.execute-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"/>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-action-abstract.php">Yaf_Action_Abstract</a></div></div>
     * @return mixed*/
    abstract public function execute();

/**
*<div id="yaf-action-abstract.getcontroller" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Action_Abstract::getController</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Action_Abstract::getController</span> &mdash; <span class="dc-title">得到控制器实例</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-action-abstract.getcontroller-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="type"><a href="http://php.net/manual/zh/class.yaf-controller-abstract.php" class="type Yaf_Controller_Abstract">Yaf_Controller_Abstract</a></span> <span class="methodname"><strong>Yaf_Action_Abstract::getController</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回控制器对象。   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-action-abstract.getcontroller-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-action-abstract.getcontroller-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-action-abstract.php">Yaf_Action_Abstract</a></div></div>
     * @return Yaf_Controller_Abstract*/
    public function getController(){ }
}

/**
*<div id="class.yaf-config-abstract" class="reference">   <h1 class="title">The Yaf_Config_Abstract class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-config-abstract.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-config-abstract.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">abstract</span>       <strong class="classname">Yaf_Config_Abstract</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php#yaf-config-abstract.props.config">$<var class="varname">_config</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php#yaf-config-abstract.props.readonly">$<var class="varname">_readonly</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-abstract.get.php" class="methodname">get</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-abstract.readonly.php" class="methodname">readonly</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">Yaf_Config_Abstract</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-abstract.set.php" class="methodname">set</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-abstract.toarray.php" class="methodname">toArray</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="yaf-config-abstract.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-config-abstract.props.config"><var class="varname"><var class="varname">_config</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-config-abstract.props.readonly"><var class="varname"><var class="varname">_readonly</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                 <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Config_Abstract::get} — Getter</li><li>{@link Yaf_Config_Abstract::readonly} — 寻找只读配置</li><li>{@link Yaf_Config_Abstract::set} — Setter</li><li>{@link Yaf_Config_Abstract::toArray} — 转换为数组</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
abstract class Yaf_Config_Abstract {

    /**
     * @var array
     */
    protected $_config = null;
    /**
     * @var bool
     */
    protected $_readonly = true;

/**
*<div id="yaf-config-abstract.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Abstract::get</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::get</span> &mdash; <span class="dc-title">Getter</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-abstract.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Config_Abstract::get</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.get-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php">Yaf_Config_Abstract</a></div></div>
     * @return mixed*/
    abstract public function get($name = null);

/**
*<div id="yaf-config-abstract.set" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Abstract::set</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::set</span> &mdash; <span class="dc-title">Setter</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-abstract.set-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract">Yaf_Config_Abstract</a></span> <span class="methodname"><strong>Yaf_Config_Abstract::set</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.set-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.set-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php">Yaf_Config_Abstract</a></div></div>
     * @return Yaf_Config_Abstract*/
    abstract public function set($name, $value);

/**
*<div id="yaf-config-abstract.readonly" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Abstract::readonly</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::readonly</span> &mdash; <span class="dc-title">寻找只读配置</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-abstract.readonly-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Config_Abstract::readonly</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.readonly-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.readonly-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php">Yaf_Config_Abstract</a></div></div>
     * @return bool*/
    abstract public function readonly();

/**
*<div id="yaf-config-abstract.toarray" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Abstract::toArray</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::toArray</span> &mdash; <span class="dc-title">转换为数组</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-abstract.toarray-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>Yaf_Config_Abstract::toArray</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.toarray-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.toarray-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-abstract.php">Yaf_Config_Abstract</a></div></div>
     * @return array*/
    abstract public function toArray();
}

/**
*<div id="class.yaf-request-abstract" class="reference">   <h1 class="title">The Yaf_Request_Abstract class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-request-abstract.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-request-abstract.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Request_Abstract</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// Constants </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.constants.scheme-http"><var class="varname">SCHEME_HTTP</var></a></var>      <span class="initializer"> = http</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.constants.scheme-https"><var class="varname">SCHEME_HTTPS</var></a></var>      <span class="initializer"> = https</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.module">$<var class="varname">module</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.controller">$<var class="varname">controller</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.action">$<var class="varname">action</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.method">$<var class="varname">method</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.params">$<var class="varname">params</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.language">$<var class="varname">language</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.exception">$<var class="varname">_exception</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.base-uri">$<var class="varname">_base_uri</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.uri">$<var class="varname">uri</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.dispatched">$<var class="varname">dispatched</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.routed">$<var class="varname">routed</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getactionname.php" class="methodname">getActionName</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getbaseuri.php" class="methodname">getBaseUri</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getcontrollername.php" class="methodname">getControllerName</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getenv.php" class="methodname">getEnv</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getexception.php" class="methodname">getException</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getlanguage.php" class="methodname">getLanguage</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getmethod.php" class="methodname">getMethod</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getmodulename.php" class="methodname">getModuleName</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getparam.php" class="methodname">getParam</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getparams.php" class="methodname">getParams</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getrequesturi.php" class="methodname">getRequestUri</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.getserver.php" class="methodname">getServer</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.iscli.php" class="methodname">isCli</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.isdispatched.php" class="methodname">isDispatched</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.isget.php" class="methodname">isGet</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.ishead.php" class="methodname">isHead</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.isoptions.php" class="methodname">isOptions</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.ispost.php" class="methodname">isPost</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.isput.php" class="methodname">isPut</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.isrouted.php" class="methodname">isRouted</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.isxmlhttprequest.php" class="methodname">isXmlHttpRequest</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setactionname.php" class="methodname">setActionName</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setbaseuri.php" class="methodname">setBaseUri</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setcontrollername.php" class="methodname">setControllerName</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setdispatched.php" class="methodname">setDispatched</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setmodulename.php" class="methodname">setModuleName</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setparam.php" class="methodname">setParam</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setrequesturi.php" class="methodname">setRequestUri</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-abstract.setrouted.php" class="methodname">setRouted</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$flag</code></span>   ] )</div>     }</div>     </div>        <div class="section" id="yaf-request-abstract.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-request-abstract.props.module"><var class="varname"><var class="varname">module</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.controller"><var class="varname"><var class="varname">controller</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.action"><var class="varname"><var class="varname">action</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.method"><var class="varname"><var class="varname">method</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.params"><var class="varname"><var class="varname">params</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.language"><var class="varname"><var class="varname">language</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.exception"><var class="varname"><var class="varname">_exception</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.base-uri"><var class="varname"><var class="varname">_base_uri</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.uri"><var class="varname"><var class="varname">uri</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.dispatched"><var class="varname"><var class="varname">dispatched</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-abstract.props.routed"><var class="varname"><var class="varname">routed</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>         <div class="section" id="yaf-request-abstract.constants">    <h2 class="title">预定义常量</h2>    <dl>             <dt id="yaf-request-abstract.constants.scheme-http"><strong><code>Yaf_Request_Abstract::SCHEME_HTTP</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="yaf-request-abstract.constants.scheme-https"><strong><code>Yaf_Request_Abstract::SCHEME_HTTPS</code></strong></dt>       <dd>        <p class="para"/>      </dd>           </dl>    </div>     </div>                                                                                                                                                                                                                <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Request_Abstract::getActionName} — The getActionName purpose</li><li>{@link Yaf_Request_Abstract::getBaseUri} — The getBaseUri purpose</li><li>{@link Yaf_Request_Abstract::getControllerName} — The getControllerName purpose</li><li>{@link Yaf_Request_Abstract::getEnv} — 取得ENV变量的值</li><li>{@link Yaf_Request_Abstract::getException} — The getException purpose</li><li>{@link Yaf_Request_Abstract::getLanguage} — The getLanguage purpose</li><li>{@link Yaf_Request_Abstract::getMethod} — The getMethod purpose</li><li>{@link Yaf_Request_Abstract::getModuleName} — The getModuleName purpose</li><li>{@link Yaf_Request_Abstract::getParam} — The getParam purpose</li><li>{@link Yaf_Request_Abstract::getParams} — The getParams purpose</li><li>{@link Yaf_Request_Abstract::getRequestUri} — The getRequestUri purpose</li><li>{@link Yaf_Request_Abstract::getServer} — 返回SERVER变量的值</li><li>{@link Yaf_Request_Abstract::isCli} — The isCli purpose</li><li>{@link Yaf_Request_Abstract::isDispatched} — The isDispatched purpose</li><li>{@link Yaf_Request_Abstract::isGet} — The isGet purpose</li><li>{@link Yaf_Request_Abstract::isHead} — The isHead purpose</li><li>{@link Yaf_Request_Abstract::isOptions} — The isOptions purpose</li><li>{@link Yaf_Request_Abstract::isPost} — The isPost purpose</li><li>{@link Yaf_Request_Abstract::isPut} — The isPut purpose</li><li>{@link Yaf_Request_Abstract::isRouted} — The isRouted purpose</li><li>{@link Yaf_Request_Abstract::isXmlHttpRequest} — The isXmlHttpRequest purpose</li><li>{@link Yaf_Request_Abstract::setActionName} — The setActionName purpose</li><li>{@link Yaf_Request_Abstract::setBaseUri} — The setBaseUri purpose</li><li>{@link Yaf_Request_Abstract::setControllerName} — The setControllerName purpose</li><li>{@link Yaf_Request_Abstract::setDispatched} — The setDispatched purpose</li><li>{@link Yaf_Request_Abstract::setModuleName} — The setModuleName purpose</li><li>{@link Yaf_Request_Abstract::setParam} — The setParam purpose</li><li>{@link Yaf_Request_Abstract::setRequestUri} — The setRequestUri purpose</li><li>{@link Yaf_Request_Abstract::setRouted} — The setRouted purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
abstract class Yaf_Request_Abstract {

    const SCHEME_HTTP  = 'http';
    const SCHEME_HTTPS = 'https';
    /**
     * @var string
     */
    public $module;
    /**
     * @var string
     */
    public $controller;
    /**
     * @var string
     */
    public $action;
    /**
     * @var string
     */
    public $method;
    /**
     * @var array
     */
    protected $params;
    /**
     * @var string
     */
    protected $language;
    /**
     * @var Yaf_Exception
     */
    protected $_exception;
    /**
     * @var string
     */
    protected $_base_uri = "";
    /**
     * @var string
     */
    protected $uri = "";
    /**
     * @var string
     */
    protected $dispatched = "";
    /**
     * @var string
     */
    protected $routed = "";

/**
*<div id="yaf-request-abstract.isget" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isGet</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isGet</span> &mdash; <span class="dc-title">The isGet purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.isget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isGet</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isget-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isGet(){ }

/**
*<div id="yaf-request-abstract.ispost" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isPost</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isPost</span> &mdash; <span class="dc-title">The isPost purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.ispost-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isPost</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.ispost-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.ispost-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isPost(){ }

/**
*<div id="yaf-request-abstract.isput" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isPut</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isPut</span> &mdash; <span class="dc-title">The isPut purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.isput-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isPut</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isput-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isput-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isPut(){ }

/**
*<div id="yaf-request-abstract.ishead" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isHead</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isHead</span> &mdash; <span class="dc-title">The isHead purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.ishead-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isHead</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.ishead-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.ishead-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isHead(){ }

/**
*<div id="yaf-request-abstract.isoptions" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isOptions</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isOptions</span> &mdash; <span class="dc-title">The isOptions purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.isoptions-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isOptions</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isoptions-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isoptions-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isOptions(){ }

/**
*<div id="yaf-request-abstract.iscli" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isCli</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isCli</span> &mdash; <span class="dc-title">The isCli purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.iscli-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isCli</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.iscli-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.iscli-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isCli(){ }

/**
*<div id="yaf-request-abstract.isdispatched" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isDispatched</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isDispatched</span> &mdash; <span class="dc-title">The isDispatched purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.isdispatched-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isDispatched</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isdispatched-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isdispatched-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isDispatched(){ }

/**
*<div id="yaf-request-abstract.isrouted" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isRouted</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isRouted</span> &mdash; <span class="dc-title">The isRouted purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.isrouted-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isRouted</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isrouted-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isrouted-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function isRouted(){ }

/**
*<div id="yaf-request-abstract.isxmlhttprequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::isXmlHttpRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isXmlHttpRequest</span> &mdash; <span class="dc-title">The isXmlHttpRequest purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.isxmlhttprequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::isXmlHttpRequest</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isxmlhttprequest-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isxmlhttprequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool false*/
    public function isXmlHttpRequest(){ }

/**
*<div id="yaf-request-abstract.getserver" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getServer</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getServer</span> &mdash; <span class="dc-title">返回SERVER变量的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getserver-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getServer</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div>    <p class="para rdfs-comment">    返回SERVER变量的值   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getserver-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        the variable name         </p>     </dd>              <dt> <code class="parameter">default</code></dt>      <dd>       <p class="para">       如果提供这个参数，在没找到变量值时候此参数的值将被返回      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getserver-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.getserver-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><strong class="classname">Yaf_Request_Abstract::getParam</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Abstract::getEnv</strong></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return mixed*/
    public function getServer($name = null, $default = null){ }

/**
*<div id="yaf-request-abstract.getenv" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getEnv</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getEnv</span> &mdash; <span class="dc-title">取得ENV变量的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getenv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getEnv</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div>    <p class="para rdfs-comment">     取得ENV变量的值   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getenv-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        the variable name         </p>     </dd>              <dt> <code class="parameter">default</code></dt>      <dd>       <p class="para">       如果这个参数被提供了，当参数找不到的时候它将被返回      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getenv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.getenv-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><strong class="classname">Yaf_Request_Abstract::getServer</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Abstract::getParam</strong></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return mixed*/
    public function getEnv($name = null, $default = null){ }

/**
*<div id="yaf-request-abstract.getparam" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getParam</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getParam</span> &mdash; <span class="dc-title">The getParam purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getparam-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getParam</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getparam-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">default</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getparam-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return mixed*/
    public function getParam($name, $default = null){ }

/**
*<div id="yaf-request-abstract.getparams" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getParams</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getParams</span> &mdash; <span class="dc-title">The getParams purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getparams-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getParams</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getparams-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getparams-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return array*/
    public function getParams(){ }

/**
*<div id="yaf-request-abstract.getexception" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getException</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getException</span> &mdash; <span class="dc-title">The getException purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getexception-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getException</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getexception-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getexception-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return Yaf_Exception*/
    public function getException(){ }

/**
*<div id="yaf-request-abstract.getmodulename" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getModuleName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getModuleName</span> &mdash; <span class="dc-title">The getModuleName purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getmodulename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getModuleName</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getmodulename-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getmodulename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return string*/
    public function getModuleName(){ }

/**
*<div id="yaf-request-abstract.getcontrollername" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getControllerName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getControllerName</span> &mdash; <span class="dc-title">The getControllerName purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getcontrollername-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getControllerName</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getcontrollername-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getcontrollername-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return string*/
    public function getControllerName(){ }

/**
*<div id="yaf-request-abstract.getactionname" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getActionName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getActionName</span> &mdash; <span class="dc-title">The getActionName purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getactionname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getActionName</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getactionname-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getactionname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return string*/
    public function getActionName(){ }

/**
*<div id="yaf-request-abstract.setparam" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setParam</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setParam</span> &mdash; <span class="dc-title">The setParam purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setparam-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setParam</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setparam-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setparam-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return Yaf_Request_Abstract|bool*/
    public function setParam($name, $value = null){ }

/**
*<div id="yaf-request-abstract.setmodulename" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setModuleName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setModuleName</span> &mdash; <span class="dc-title">The setModuleName purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setmodulename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setModuleName</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setmodulename-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">module</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setmodulename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return Yaf_Request_Abstract|bool*/
    public function setModuleName($module){ }

/**
*<div id="yaf-request-abstract.setcontrollername" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setControllerName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setControllerName</span> &mdash; <span class="dc-title">The setControllerName purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setcontrollername-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setControllerName</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setcontrollername-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">controller</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setcontrollername-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return Yaf_Request_Abstract|bool*/
    public function setControllerName($controller){ }

/**
*<div id="yaf-request-abstract.setactionname" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setActionName</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setActionName</span> &mdash; <span class="dc-title">The setActionName purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setactionname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setActionName</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setactionname-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">action</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setactionname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return Yaf_Request_Abstract|bool*/
    public function setActionName($action){ }

/**
*<div id="yaf-request-abstract.getmethod" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getMethod</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getMethod</span> &mdash; <span class="dc-title">The getMethod purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getmethod-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getMethod</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getmethod-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getmethod-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return string*/
    public function getMethod(){ }

/**
*<div id="yaf-request-abstract.getlanguage" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getLanguage</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getLanguage</span> &mdash; <span class="dc-title">The getLanguage purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getlanguage-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getLanguage</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getlanguage-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getlanguage-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return string*/
    public function getLanguage(){ }

/**
*<div id="yaf-request-abstract.setbaseuri" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setBaseUri</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setBaseUri</span> &mdash; <span class="dc-title">The setBaseUri purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setbaseuri-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setBaseUri</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setbaseuri-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">uir</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setbaseuri-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function setBaseUri($uri){ }

/**
*<div id="yaf-request-abstract.getbaseuri" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getBaseUri</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getBaseUri</span> &mdash; <span class="dc-title">The getBaseUri purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getbaseuri-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getBaseUri</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getbaseuri-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getbaseuri-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return string*/
    public function getBaseUri(){ }

/**
*<div id="yaf-request-abstract.getrequesturi" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::getRequestUri</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getRequestUri</span> &mdash; <span class="dc-title">The getRequestUri purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.getrequesturi-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::getRequestUri</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getrequesturi-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getrequesturi-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return string*/
    public function getRequestUri(){ }

/**
*<div id="yaf-request-abstract.setrequesturi" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setRequestUri</h1>   <p class="verinfo">(Yaf &gt;=2.1.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setRequestUri</span> &mdash; <span class="dc-title">The setRequestUri purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setrequesturi-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setRequestUri</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setrequesturi-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">uir</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setrequesturi-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
*/
    public function setRequestUri($uri){ }

/**
*<div id="yaf-request-abstract.setdispatched" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setDispatched</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setDispatched</span> &mdash; <span class="dc-title">The setDispatched purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setdispatched-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setDispatched</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setdispatched-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setdispatched-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return bool*/
    public function setDispatched(){ }

/**
*<div id="yaf-request-abstract.setrouted" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Abstract::setRouted</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setRouted</span> &mdash; <span class="dc-title">The setRouted purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-abstract.setrouted-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Abstract::setRouted</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$flag</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setrouted-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">flag</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setrouted-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php">Yaf_Request_Abstract</a></div></div>
     * @return Yaf_Request_Abstract|bool*/
    public function setRouted(){ }
}

/**
*<div id="class.yaf-plugin-abstract" class="reference">   <h1 class="title">The Yaf_Plugin_Abstract class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-plugin-abstract.intro">    <h2 class="title">简介</h2>    <p class="para">      Plugins 可以让你轻松地定制和扩展框架    </p>    <p class="para">        插件(Plugins)是一个类。        基于组件定义的类会有所变化 -- 你可能需要去实现这些接口。        但实际上，该插件(Plugin)本身就是一个类。    </p>    <p class="para">      一个插件(plugin)会被<span class="methodname">{@link Yaf_Dispatcher::registerPlugin()}</span>加载到Yaf框架中，      在框架注册(registerd)后，插件(plugin)类中定义方法将会在恰当的时间被该接口执行。    </p>   </div>    <div class="section">   <h2 class="title">范例</h2>   <div class="example" id="example-4951">    <p><strong>Example #1 Plugin example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;bootstrap&nbsp;class&nbsp;should&nbsp;be&nbsp;defined&nbsp;under&nbsp;./application/Bootstrap.php&nbsp;<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">Bootstrap&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Bootstrap_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher&nbsp;$dispatcher</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;register&nbsp;a&nbsp;plugin&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPlugin</span><span style="color: #007700">(new&nbsp;</span><span style="color: #9876AA">TestPlugin</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;plugin&nbsp;class&nbsp;should&nbsp;be&nbsp;placed&nbsp;under&nbsp;./application/plugins/&nbsp;<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">TestPlugin&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Plugin_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">routerStartup</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;在路由之前执行,这个钩子里，你可以做url重写等功能&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"routerStartup"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">routerShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;路由完成后，在这个钩子里，你可以做登陆检测等功能<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"routerShutdown"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">dispatchLoopStartup</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"dispatchLoopStartup"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">preDispatch</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"preDispatch"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">postDispatch</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"postDispatch"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">dispatchLoopShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;final&nbsp;hoook<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;this&nbsp;hook&nbsp;user&nbsp;can&nbsp;do&nbsp;loging&nbsp;or&nbsp;implement&nbsp;layout&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"dispatchLoopShutdown"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;Class&nbsp;</span><span style="color: #9876AA">IndexController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">indexAction</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//prevent&nbsp;rendering<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$config&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"application"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"directory"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"/application/"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;);<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$app&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bootstrap</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(13) &quot;routerStartup&quot; string(14) &quot;routerShutdown&quot; string(19) &quot;dispatchLoopStartup&quot; string(11) &quot;preDispatch&quot; string(12) &quot;postDispatch&quot; string(20) &quot;dispatchLoopShutdown&quot; </pre></div>    </div>   </div>  </div>     <div class="section" id="yaf-plugin-abstract.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Plugin_Abstract</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-plugin-abstract.dispatchloopshutdown.php" class="methodname">dispatchLoopShutdown</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-plugin-abstract.dispatchloopstartup.php" class="methodname">dispatchLoopStartup</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-plugin-abstract.postdispatch.php" class="methodname">postDispatch</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-plugin-abstract.predispatch.php" class="methodname">preDispatch</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-plugin-abstract.preresponse.php" class="methodname">preResponse</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-plugin-abstract.routershutdown.php" class="methodname">routerShutdown</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-plugin-abstract.routerstartup.php" class="methodname">routerStartup</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>     }</div>     </div>   </div>                                                      <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Plugin_Abstract::dispatchLoopShutdown} — The dispatchLoopShutdown purpose</li><li>{@link Yaf_Plugin_Abstract::dispatchLoopStartup} — The dispatchLoopStartup purpose</li><li>{@link Yaf_Plugin_Abstract::postDispatch} — The postDispatch purpose</li><li>{@link Yaf_Plugin_Abstract::preDispatch} — The preDispatch purpose</li><li>{@link Yaf_Plugin_Abstract::preResponse} — The preResponse purpose</li><li>{@link Yaf_Plugin_Abstract::routerShutdown} — The routerShutdown purpose</li><li>{@link Yaf_Plugin_Abstract::routerStartup} — RouterStartup hook</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
abstract class Yaf_Plugin_Abstract {

/**
*<div id="yaf-plugin-abstract.routerstartup" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Plugin_Abstract::routerStartup</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::routerStartup</span> &mdash; <span class="dc-title">RouterStartup hook</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.routerstartup-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Plugin_Abstract::routerStartup</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>    <p class="para rdfs-comment">     这个是Yaf插件的勾子系统最早被触发的的一个方法，如果一个用户插件实现了这个方法，它将在路由之前触发。   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.routerstartup-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">response</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.routerstartup-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-plugin-abstract.routerstartup-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::routerShutdown()} - The routerShutdown purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::dispatchLoopStartup()} - The dispatchLoopStartup purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::preDispatch()} - The preDispatch purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::postDispatch()} - The postDispatch purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::dispatchLoopShutdown()} - The dispatchLoopShutdown purpose</span></li>   </ul>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php">Yaf_Plugin_Abstract</a></div></div>
     * @return bool true*/
    public function routerStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response){ }

/**
*<div id="yaf-plugin-abstract.routershutdown" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Plugin_Abstract::routerShutdown</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::routerShutdown</span> &mdash; <span class="dc-title">The routerShutdown purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.routershutdown-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Plugin_Abstract::routerShutdown</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>    <p class="para rdfs-comment">     这个钩子在路由结束之后触发，通常被用于登陆检查。   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.routershutdown-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">response</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.routershutdown-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-plugin-abstract.routershutdown-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4952">    <p><strong>Example #1 <span class="function"><strong>Yaf_Plugin_Abstract::routerShutdown()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">UserInitPlugin&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Plugin_Abstract&nbsp;</span><span style="color: #007700">{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">routerShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract&nbsp;$request</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">Yaf_Response_Abstract&nbsp;$response</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$controller&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$request</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getControllerName</span><span style="color: #007700">();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Use&nbsp;access&nbsp;controller&nbsp;is&nbsp;unecessary&nbsp;for&nbsp;APIs<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #9876AA">strtolower</span><span style="color: #007700">(</span><span style="color: #9876AA">$controller</span><span style="color: #007700">),&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'api'</span><span style="color: #007700">,&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">TRUE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">Yaf_Session</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">has</span><span style="color: #007700">(</span><span style="color: #DD0000">"login"</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">TRUE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Use&nbsp;access&nbsp;check&nbsp;failed,&nbsp;need&nbsp;to&nbsp;login&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">redirect</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://yourdomain.com/login/"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-plugin-abstract.routershutdown-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::routerStartup()} - RouterStartup hook</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::dispatchLoopStartup()} - The dispatchLoopStartup purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::preDispatch()} - The preDispatch purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::postDispatch()} - The postDispatch purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::dispatchLoopShutdown()} - The dispatchLoopShutdown purpose</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php">Yaf_Plugin_Abstract</a></div></div>
     * @return bool true*/
    public function routerShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response){ }

/**
*<div id="yaf-plugin-abstract.dispatchloopstartup" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Plugin_Abstract::dispatchLoopStartup</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::dispatchLoopStartup</span> &mdash; <span class="dc-title">The dispatchLoopStartup purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.dispatchloopstartup-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Plugin_Abstract::dispatchLoopStartup</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>    <p class="para rdfs-comment">    这个钩子将在分发循环开始之前触发。   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.dispatchloopstartup-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">response</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.dispatchloopstartup-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php">Yaf_Plugin_Abstract</a></div></div>
     * @return bool true*/
    public function dispatchLoopStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response){ }

/**
*<div id="yaf-plugin-abstract.dispatchloopshutdown" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Plugin_Abstract::dispatchLoopShutdown</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::dispatchLoopShutdown</span> &mdash; <span class="dc-title">The dispatchLoopShutdown purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Plugin_Abstract::dispatchLoopShutdown</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>    <p class="para rdfs-comment">    这个方式是Yaf插件钩子系统中最后的一个钩子，如果一个用户插件实现了这个方法，它将在分发循环结束之后触发。   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">response</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::routerStartup()} - RouterStartup hook</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::routerShutdown()} - The routerShutdown purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::dispatchLoopStartup()} - The dispatchLoopStartup purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::preDispatch()} - The preDispatch purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Plugin_Abstract::postDispatch()} - The postDispatch purpose</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php">Yaf_Plugin_Abstract</a></div></div>
     * @return bool true*/
    public function dispatchLoopShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response){ }

/**
*<div id="yaf-plugin-abstract.predispatch" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Plugin_Abstract::preDispatch</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::preDispatch</span> &mdash; <span class="dc-title">The preDispatch purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.predispatch-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Plugin_Abstract::preDispatch</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>    <p class="para rdfs-comment">   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.predispatch-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">response</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.predispatch-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php">Yaf_Plugin_Abstract</a></div></div>
     * @return bool true*/
    public function preDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response){ }

/**
*<div id="yaf-plugin-abstract.postdispatch" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Plugin_Abstract::postDispatch</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::postDispatch</span> &mdash; <span class="dc-title">The postDispatch purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.postdispatch-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Plugin_Abstract::postDispatch</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.postdispatch-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">response</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.postdispatch-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php">Yaf_Plugin_Abstract</a></div></div>
     * @return bool true*/
    public function postDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response){ }

/**
*<div id="yaf-plugin-abstract.preresponse" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Plugin_Abstract::preResponse</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::preResponse</span> &mdash; <span class="dc-title">The preResponse purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.preresponse-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Plugin_Abstract::preResponse</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract">Yaf_Response_Abstract</a></span> <code class="parameter">$response</code></span>    )</div>    <p class="para rdfs-comment">     这个钩子在响应(Yaf_Response)前被触发   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.preresponse-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">response</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.preresponse-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-plugin-abstract.php">Yaf_Plugin_Abstract</a></div></div>
     * @return bool true*/
    public function preResponse(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response){ }
}

/**
*<div id="class.yaf-response-abstract" class="reference">   <h1 class="title">The Yaf_Response_Abstract class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-response-abstract.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-response-abstract.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Response_Abstract</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// Constants </div>      <div class="fieldsynopsis">       <span class="modifier">const</span>       <span class="type">string</span>        <var class="fieldsynopsis_varname"><var class="varname">DEFAULT_BODY</var></var>       <span class="initializer"> = &quot;content&quot;</span>      ;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php#yaf-response-abstract.props.header">$<var class="varname">_header</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php#yaf-response-abstract.props.body">$<var class="varname">_body</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php#yaf-response-abstract.props.sendheader">$<var class="varname">_sendheader</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.appendbody.php" class="methodname">appendBody</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.clearbody.php" class="methodname">clearBody</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.clearheaders.php" class="methodname">clearHeaders</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.destruct.php" class="methodname">__destruct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.getbody.php" class="methodname">getBody</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.getheader.php" class="methodname">getHeader</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.prependbody.php" class="methodname">prependBody</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.response.php" class="methodname">response</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.setallheaders.php" class="methodname">setAllHeaders</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.setbody.php" class="methodname">setBody</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.setheader.php" class="methodname">setHeader</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.setredirect.php" class="methodname">setRedirect</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-response-abstract.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="yaf-response-abstract.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-response-abstract.props.header"><var class="varname"><var class="varname">_header</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-response-abstract.props.body"><var class="varname"><var class="varname">_body</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-response-abstract.props.sendheader"><var class="varname"><var class="varname">_sendheader</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                                                              <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Response_Abstract::appendBody} — 往已有的响应body后附加新的内容</li><li>{@link Yaf_Response_Abstract::clearBody} — 清除已经设置的响应body</li><li>{@link Yaf_Response_Abstract::clearHeaders} — The clearHeaders purpose</li><li>{@link Yaf_Response_Abstract::__clone} — The __clone purpose</li><li>{@link Yaf_Response_Abstract::__construct} — The __construct purpose</li><li>{@link Yaf_Response_Abstract::__destruct} — The __destruct purpose</li><li>{@link Yaf_Response_Abstract::getBody} — 获取已经设置的响应body</li><li>{@link Yaf_Response_Abstract::getHeader} — The getHeader purpose</li><li>{@link Yaf_Response_Abstract::prependBody} — The prependBody purpose</li><li>{@link Yaf_Response_Abstract::response} — send response</li><li>{@link Yaf_Response_Abstract::setAllHeaders} — The setAllHeaders purpose</li><li>{@link Yaf_Response_Abstract::setBody} — 设置响应的Body</li><li>{@link Yaf_Response_Abstract::setHeader} — The setHeader purpose</li><li>{@link Yaf_Response_Abstract::setRedirect} — The setRedirect purpose</li><li>{@link Yaf_Response_Abstract::__toString} — The __toString purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
abstract class Yaf_Response_Abstract {

    const DEFAULT_BODY = "content";
    /**
     * @var string
     */
    protected $_header;
    /**
     * @var string
     */
    protected $_body;
    /**
     * @var bool
     */
    protected $_sendheader;

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.construct.php
     */
    public function __construct(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.destruct.php
     */
    public function __destruct(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.clone.php
     */
    private function __clone(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.tostring.php
     */
    private function __toString(){ }

/**
*<div id="yaf-response-abstract.setbody" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Response_Abstract::setBody</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::setBody</span> &mdash; <span class="dc-title">设置响应的Body</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-response-abstract.setbody-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Response_Abstract::setBody</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div>    <p class="para rdfs-comment">    设置响应的Body   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.setbody-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">body</code></dt>      <dd>       <p class="para">       content string      </p>     </dd>              <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       body所对应的key，你可以设置一个body的键值对，如果你没有指定key，系统默认使用Yaf_Response_Abstract::DEFAULT_BODY       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">        this parameter is introduced as of 2.2.0       </p>       </p></blockquote>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.setbody-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-response-abstract.setbody-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4957">    <p><strong>Example #1 <span class="function"><strong>Yaf_Response_Abstract::setBody()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$response&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;World"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"footer"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$response</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Yaf_Response_Http Object (     [_header:protected] =&gt; Array         (         )      [_body:protected] =&gt; Array         (             [content] =&gt; Hello             [footer] =&gt;  World         )      [_sendheader:protected] =&gt; 1     [_response_code:protected] =&gt; 200 ) Hello World </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.setbody-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::getBody()} - 获取已经设置的响应body</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::appendBody()} - 往已有的响应body后附加新的内容</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::clearBody()} - 清除已经设置的响应body</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php">Yaf_Response_Abstract</a></div></div>
     * @return bool*/
    public function setBody($content, $key = self::DEFAULT_BODY){ }

/**
*<div id="yaf-response-abstract.appendbody" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Response_Abstract::appendBody</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::appendBody</span> &mdash; <span class="dc-title">往已有的响应body后附加新的内容</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-response-abstract.appendbody-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Response_Abstract::appendBody</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div>    <p class="para rdfs-comment">    往已有的响应body后附加新的内容   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.appendbody-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">body</code></dt>      <dd>       <p class="para">       content string      </p>     </dd>              <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       响应内容的key，你可以设置一个键值对，如果你没有具体的设置的话，系统默认使用Yaf_Response_Abstract::DEFAULT_BODY       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">        this parameter is introduced as of 2.2.0       </p>       </p></blockquote>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.appendbody-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    bool   </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-response-abstract.appendbody-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4953">    <p><strong>Example #1 <span class="function"><strong>Yaf_Response_Abstract::appendBody()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$response&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">prependBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;World"</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$response</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Hello World </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.appendbody-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/class.yaf-config-ini.php" class="classname">Yaf_Config_Ini</a></li>   </ul>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.appendbody-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::getBody()} - 获取已经设置的响应body</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::setBody()} - 设置响应的Body</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::clearBody()} - 清除已经设置的响应body</span></li>   </ul>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php">Yaf_Response_Abstract</a></div></div>
     * @return bool*/
    public function appendBody($content, $key = self::DEFAULT_BODY){ }

/**
*<div id="yaf-response-abstract.prependbody" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Response_Abstract::prependBody</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::prependBody</span> &mdash; <span class="dc-title">The prependBody purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-response-abstract.prependbody-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Response_Abstract::prependBody</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div>    <p class="para rdfs-comment">    往已有的响应body前插入新的内容   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.prependbody-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">body</code></dt>      <dd>       <p class="para">       content string      </p>     </dd>              <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       body所对应的key，你可以设置一个body的键值对，如果你没有指定key，系统默认使用Yaf_Response_Abstract::DEFAULT_BODY       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">        this parameter is introduced as of 2.2.0       </p>       </p></blockquote>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.prependbody-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    bool   </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-response-abstract.prependbody-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4955">    <p><strong>Example #1 <span class="function"><strong>Yaf_Response_Abstract::prependBody()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$response&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"World"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">prependBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello&nbsp;"</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$response</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Hello World </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.prependbody-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::getBody()} - 获取已经设置的响应body</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::setBody()} - 设置响应的Body</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::appendBody()} - 往已有的响应body后附加新的内容</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::clearBody()} - 清除已经设置的响应body</span></li>   </ul>  </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php">Yaf_Response_Abstract</a></div></div>
     * @return bool*/
    public function prependBody($content, $key = self::DEFAULT_BODY){ }

/**
*<div id="yaf-response-abstract.clearbody" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Response_Abstract::clearBody</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::clearBody</span> &mdash; <span class="dc-title">清除已经设置的响应body</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-response-abstract.clearbody-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Response_Abstract::clearBody</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div>    <p class="para rdfs-comment">    清除已经设置的响应body   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.clearbody-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       the content key, if you don&#039;t specific, then all contents will be       cleared.       如果你没选择具体清除哪个key所对应的内容，那所有内容将被清除       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">        this parameter is introduced as of 2.2.0       </p>       </p></blockquote>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.clearbody-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.clearbody-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::setBody()} - 设置响应的Body</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::appendBody()} - 往已有的响应body后附加新的内容</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::getBody()} - 获取已经设置的响应body</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php">Yaf_Response_Abstract</a></div></div>
     * @return bool*/
    public function clearBody($key = self::DEFAULT_BODY){ }

/**
*<div id="yaf-response-abstract.getbody" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Response_Abstract::getBody</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::getBody</span> &mdash; <span class="dc-title">获取已经设置的响应body</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-response-abstract.getbody-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Response_Abstract::getBody</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>   ] )</div>    <p class="para rdfs-comment">    获取已经设置的响应body   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.getbody-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       body所对应的key，如果你没指定key，系统默认使用Yaf_Response_Abstract::DEFAULT_BODY。如果你传入一个NULL，所有的内容将会以数组形式被返回。       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">        this parameter is introduced as of 2.2.0       </p>       </p></blockquote>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.getbody-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-response-abstract.getbody-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4954">    <p><strong>Example #1 <span class="function"><strong>Yaf_Response_Abstract::getBody()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$response&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;World"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"footer"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">());&nbsp;</span><span style="color: #FF8000">//default&nbsp;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Response_Abstract</span><span style="color: #007700">::</span><span style="color: #9876AA">DEFAULT_BODY</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//same&nbsp;as&nbsp;above<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"footer"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//get&nbsp;all<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(5) &quot;Hello&quot; string(5) &quot;Hello&quot; string(6) &quot; World&quot; array(2) {   [&quot;content&quot;]=&gt;   string(5) &quot;Hello&quot;   [&quot;footer&quot;]=&gt;   string(6) &quot; World&quot; } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.getbody-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::setBody()} - 设置响应的Body</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::appendBody()} - 往已有的响应body后附加新的内容</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Response_Abstract::clearBody()} - 清除已经设置的响应body</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-response-abstract.php">Yaf_Response_Abstract</a></div></div>
     * @return mixed*/
    public function getBody($key = self::DEFAULT_BODY){ }
}

/**
 * Yaf provides a ability for developers to use custom view engine instead of build-in engine which is Yaf_View_Simple. There is a example to explain how to do this, please see Yaf_Dispatcher::setView()
 *
 * @link http://www.php.net/manual/en/class.yaf-view-interface.php
 */
interface Yaf_View_Interface {

    /**
     * Assign values to View engine, then the value can access directly by name in template.
     *
     * @link http://www.php.net/manual/en/yaf-view-interface.assign.php
     *
     * @param string|array $name
     * @param mixed $value
     * @return bool
     */
    function assign($name, $value);

    /**
     * Render a template and output the result immediately.
     *
     * @link http://www.php.net/manual/en/yaf-view-interface.display.php
     *
     * @param string $tpl
     * @param array $tpl_vars
     * @return bool
     */
    function display($tpl, array $tpl_vars = null);

    /**
     * @link http://www.php.net/manual/en/yaf-view-interface.getscriptpath.php
     *
     * @return string
     */
    function getScriptPath();

    /**
     * Render a template and return the result.
     *
     * @link http://www.php.net/manual/en/yaf-view-interface.render.php
     *
     * @param string $tpl
     * @param array $tpl_vars
     * @return string
     */
    function render($tpl, array $tpl_vars = null);

    /**
     * Set the templates base directory, this is usually called by Yaf_Dispatcher
     *
     * @link http://www.php.net/manual/en/yaf-view-interface.setscriptpath.php
     *
     * @param string $template_dir An absolute path to the template directory, by default, Yaf_Dispatcher use application.directory . "/views" as this parameter.
     */
    function setScriptPath($template_dir);
}

/**
 * <b>Yaf_Route_Interface</b> used for developer defined their custom route.
 *
 * @link http://www.php.net/manual/en/class.yaf-route-interface.php
 */
interface Yaf_Route_Interface {

    /**
     * <p><b>Yaf_Route_Interface::route()</b> is the only method that a custom route should implement.</p><br/>
     * <p>if this method return TRUE, then the route process will be end. otherwise, Yaf_Router will call next route in the route stack to route request.</p><br/>
     * <p>This method would set the route result to the parameter request, by calling Yaf_Request_Abstract::setControllerName(), Yaf_Request_Abstract::setActionName() and Yaf_Request_Abstract::setModuleName().</p><br/>
     * <p>This method should also call Yaf_Request_Abstract::setRouted() to make the request routed at last.</p>
     *
     * @link http://www.php.net/manual/en/yaf-route-interface.route.php
     *
     * @param Yaf_Request_Abstract $request
     * @return bool
     */
    function route(Yaf_Request_Abstract $request);

    /**
     * <p><b>Yaf_Route_Interface::assemble()</b> - assemble a request<br/>
     * <p>this method returns a url according to the argument info, and append query strings to the url according to the argument query.</p>
     * <p>a route should implement this method according to its own route rules, and do a reverse progress.</p>
     *
     * @link http://www.php.net/manual/en/yaf-route-interface.assemble.php
     *
     * @param array $info
     * @param array $query
     * @return bool
     */
    function assemble(array $info, array $query = null);
}

/**
*<div id="class.yaf-exception" class="reference">   <h1 class="title">The Yaf_Exception class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.exception.php" class="classname">Exception</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-exception.php#yaf-exception.props.message">$<var class="varname">message</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-exception.php#yaf-exception.props.code">$<var class="varname">code</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-exception.php#yaf-exception.props.previous">$<var class="varname">previous</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-exception.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-exception.getprevious.php" class="methodname">getPrevious</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link Exception::getMessage}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="type">Throwable</span> <span class="methodname">{@link Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="type">int</span> <span class="methodname">{@link Exception::getCode}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link Exception::getFile}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="type">int</span> <span class="methodname">{@link Exception::getLine}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link Exception::getTrace}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link Exception::getTraceAsString}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span>  <span class="methodname">{@link Exception::__toString}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">private</span> <span class="type">void</span> <span class="methodname">{@link Exception::__clone}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>        <div class="section" id="yaf-exception.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-exception.props.message"><var class="varname"><var class="varname">message</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-exception.props.code"><var class="varname"><var class="varname">code</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-exception.props.file"><var class="varname"><var class="varname">file</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-exception.props.line"><var class="varname"><var class="varname">line</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-exception.props.previous"><var class="varname"><var class="varname">previous</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                   <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Exception::__construct} — The __construct purpose</li><li>{@link Yaf_Exception::getPrevious} — The getPrevious purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception extends Exception {

}

/**
 *
 */
class Yaf_Response_Http extends Yaf_Response_Abstract {

    /**
     * @var int
     */
    protected $_response_code = 0;

    /**
     *
     */
    private function __clone(){ }

    /**
     * @return string
     */
    private function __toString(){ }


    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.setheader.php
     *
     * @param string $name
     * @param string $value
     * @param bool $replace
     * @param int $response_code
     *
     * @return bool
     */
    public function setHeader($name,$value,$replace = false,$response_code = 0){ }

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.setallheaders.php
     *
     * @param array $headers
     *
     * @return bool
     */
    protected function setAllHeaders(array $headers){ }

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.getheader.php
     *
     * @param string $name
     *
     * @return mixed
     */
    public function getHeader($name = null){ }

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.clearheaders.php
     *
     * @param string $name
     *
     * @return Yaf_Response_Abstract|false
     */
    public function clearHeaders($name = null){ }

    /**
     * @link http://www.php.net/manual/en/yaf-response-abstract.setredirect.php
     *
     * @param string $url
     *
     * @return bool
     */
    public function setRedirect($url){ }

    /**
     * send response
     *
     * @link http://www.php.net/manual/en/yaf-response-abstract.response.php
     *
     * @return bool
     */
    public function response(){ }
}

/**
 *
 */
class Yaf_Response_Cli extends Yaf_Response_Abstract {

    /**
     *
     */
    private function __clone(){ }

    /**
     * @return string
     */
    private function __toString(){ }
}

/**
*<div id="class.yaf-request-http" class="reference">   <h1 class="title">The Yaf_Request_Http class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-request-http.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-request-http.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Request_Http</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="classname">Yaf_Request_Abstract</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.get.php" class="methodname">get</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.getcookie.php" class="methodname">getCookie</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.getfiles.php" class="methodname">getFiles</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.getpost.php" class="methodname">getPost</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.getquery.php" class="methodname">getQuery</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.getraw.php" class="methodname">getRaw</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.getrequest.php" class="methodname">getRequest</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-http.isxmlhttprequest.php" class="methodname">isXmlHttpRequest</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getActionName}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getBaseUri}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getControllerName}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getEnv}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getException}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getLanguage}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getMethod}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getModuleName}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getParam}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getParams}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getRequestUri}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getServer}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isCli}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isDispatched}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isGet}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isHead}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isOptions}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isPost}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isPut}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isRouted}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isXmlHttpRequest}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setActionName}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setBaseUri}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setControllerName}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setDispatched}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setModuleName}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setParam}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setRequestUri}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setRouted}</span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$flag</code></span>   ] )</div>      }</div>     </div>        <div class="section" id="yaf-request-http.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-request-http.props.module"><var class="varname"><var class="varname">module</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.controller"><var class="varname"><var class="varname">controller</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.action"><var class="varname"><var class="varname">action</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.method"><var class="varname"><var class="varname">method</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.params"><var class="varname"><var class="varname">params</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.language"><var class="varname"><var class="varname">language</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.exception"><var class="varname"><var class="varname">_exception</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.base-uri"><var class="varname"><var class="varname">_base_uri</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.uri"><var class="varname"><var class="varname">uri</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.dispatched"><var class="varname"><var class="varname">dispatched</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-http.props.routed"><var class="varname"><var class="varname">routed</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                           <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Request_Http::__clone} — The __clone purpose</li><li>{@link Yaf_Request_Http::__construct} — The __construct purpose</li><li>{@link Yaf_Request_Http::get} — 从客户端返回变量</li><li>{@link Yaf_Request_Http::getCookie} — 返回Cookie变量</li><li>{@link Yaf_Request_Http::getFiles} — The getFiles purpose</li><li>{@link Yaf_Request_Http::getPost} — 返回POST变量</li><li>{@link Yaf_Request_Http::getQuery} — fetch a query parameter</li><li>{@link Yaf_Request_Http::getRaw} — Retrieve Raw request body</li><li>{@link Yaf_Request_Http::getRequest} — The getRequest purpose</li><li>{@link Yaf_Request_Http::isXmlHttpRequest} — 是否为Ajax请求</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Request_Http extends Yaf_Request_Abstract {

/**
*<div id="yaf-request-http.getquery" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Http::getQuery</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Http::getQuery</span> &mdash; <span class="dc-title">fetch a query parameter</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-http.getquery-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Request_Http::getQuery</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div>    <p class="para rdfs-comment">     返回Get变量   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-http.getquery-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        the variable name         </p>     </dd>              <dt> <code class="parameter">default</code></dt>      <dd>       <p class="para">       如果提供了此参数，当变量在未被找到的情况下，提供的参数将被返回      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-http.getquery-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-request-http.getquery-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><strong class="classname">Yaf_Request_Http::get</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getPost</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getCookie</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getServer</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getParam</strong></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-http.php">Yaf_Request_Http</a></div></div>
     * @return mixed*/
    public function getQuery($name = null, $default = null){ }

/**
*<div id="yaf-request-http.getrequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Http::getRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Http::getRequest</span> &mdash; <span class="dc-title">The getRequest purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-http.getrequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Http::getRequest</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-http.getrequest-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-http.getrequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-http.php">Yaf_Request_Http</a></div></div>
     * @return mixed*/
    public function getRequest($name = null, $default = null){ }

/**
*<div id="yaf-request-http.getpost" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Http::getPost</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Http::getPost</span> &mdash; <span class="dc-title">返回POST变量</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-http.getpost-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Request_Http::getPost</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div>    <p class="para rdfs-comment">     返回POST变量   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-http.getpost-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        the variable name         </p>     </dd>              <dt> <code class="parameter">default</code></dt>      <dd>       <p class="para">       如果提供了此参数，当变量在未被找到的情况下，提供的参数将被返回      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-http.getpost-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-request-http.getpost-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><strong class="classname">Yaf_Request_Http::get</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getQuery</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getCookie</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getServer</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getParam</strong></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-http.php">Yaf_Request_Http</a></div></div>
     * @return mixed*/
    public function getPost($name = null, $default = null){ }

/**
*<div id="yaf-request-http.getcookie" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Http::getCookie</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Http::getCookie</span> &mdash; <span class="dc-title">返回Cookie变量</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-http.getcookie-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Request_Http::getCookie</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div>    <p class="para rdfs-comment">    返回Cookie变量   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-http.getcookie-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        the cookie name         </p>     </dd>              <dt> <code class="parameter">default</code></dt>      <dd>       <p class="para">       如果提供了此参数，当变量在未被找到的情况下，提供的参数将被返回      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-http.getcookie-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-request-http.getcookie-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><strong class="classname">Yaf_Request_Http::get</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getQuery</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getPost</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getServer</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getParam</strong></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-http.php">Yaf_Request_Http</a></div></div>
     * @return mixed*/
    public function getCookie($name = null, $default = null){ }

/**
*<div id="yaf-request-http.getfiles" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Http::getFiles</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Http::getFiles</span> &mdash; <span class="dc-title">The getFiles purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-http.getfiles-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Http::getFiles</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-http.getfiles-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-http.getfiles-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-http.php">Yaf_Request_Http</a></div></div>
     * @return mixed*/
    public function getFiles($name = null, $default = null){ }

/**
*<div id="yaf-request-http.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Http::get</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Http::get</span> &mdash; <span class="dc-title">从客户端返回变量</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-http.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>Yaf_Request_Http::get</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div>    <p class="para rdfs-comment">     从客户端返回变量，这个方法将从请求参数中寻找参数<code class="parameter">name</code>，如果没有找到的话，将从POST, GET, Cookie, Server中寻找   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-http.get-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        the variable name         </p>     </dd>              <dt> <code class="parameter">default</code></dt>      <dd>       <p class="para">       如果提供了此参数，当变量在未被找到的情况下，它将被返回      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-http.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-request-http.get-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><strong class="classname">Yaf_Request_Http::getQuery</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getPost</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getCookie</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getServer</strong></li>    <li class="member"><strong class="classname">Yaf_Request_Http::getParam</strong></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-http.php">Yaf_Request_Http</a></div></div>
     * @return mixed*/
    public function get($name, $default = null){ }

/**
*<div id="yaf-request-http.isxmlhttprequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Http::isXmlHttpRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Http::isXmlHttpRequest</span> &mdash; <span class="dc-title">是否为Ajax请求</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-http.isxmlhttprequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Request_Http::isXmlHttpRequest</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">     检查请求是否是Ajax请求     <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">       这个方法取决于请求报头：HTTP_X_REQUESTED_WITH，一些Javascript库在做Ajax请求时候不设置这个报文头。      </p>     </p></blockquote>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-http.isxmlhttprequest-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-http.isxmlhttprequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-http.php">Yaf_Request_Http</a></div></div>
     * @return bool*/
    public function isXmlHttpRequest(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-request-http.construct.php
     *
     * @param string $request_uri
     * @param string $base_uri
     *
     */
    public function __construct($request_uri, $base_uri){ }

    /**
     * @link http://www.php.net/manual/en/yaf-request-http.clone.php
     */
    private function __clone(){ }
}

/**
*<div id="class.yaf-request-simple" class="reference">   <h1 class="title">The Yaf_Request_Simple class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-request-simple.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">Yaf_Request_Simple</strong> 特别的被用于测试。例如：CLI模式下模拟一些特殊的要求    </p>   </div>     <div class="section" id="yaf-request-simple.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Request_Simple</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="classname">Yaf_Request_Abstract</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// Constants </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.yaf-request-simple.php#yaf-request-simple.constants.scheme-http"><var class="varname">SCHEME_HTTP</var></a></var>      <span class="initializer"> = http</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.yaf-request-simple.php#yaf-request-simple.constants.scheme-https"><var class="varname">SCHEME_HTTPS</var></a></var>      <span class="initializer"> = https</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">private</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.clone.php" class="methodname">__clone</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.get.php" class="methodname">get</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.getcookie.php" class="methodname">getCookie</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.getfiles.php" class="methodname">getFiles</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.getpost.php" class="methodname">getPost</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.getquery.php" class="methodname">getQuery</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.getrequest.php" class="methodname">getRequest</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-request-simple.isxmlhttprequest.php" class="methodname">isXmlHttpRequest</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getActionName}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getBaseUri}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getControllerName}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getEnv}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getException}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getLanguage}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getMethod}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getModuleName}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getParam}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getParams}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getRequestUri}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::getServer}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$default</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isCli}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isDispatched}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isGet}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isHead}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isOptions}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isPost}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isPut}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isRouted}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::isXmlHttpRequest}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setActionName}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setBaseUri}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setControllerName}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setDispatched}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setModuleName}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setParam}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setRequestUri}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uir</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Request_Abstract::setRouted}</span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$flag</code></span>   ] )</div>      }</div>     </div>        <div class="section" id="yaf-request-simple.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-request-simple.props.module"><var class="varname"><var class="varname">module</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.controller"><var class="varname"><var class="varname">controller</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.action"><var class="varname"><var class="varname">action</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.method"><var class="varname"><var class="varname">method</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.params"><var class="varname"><var class="varname">params</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.language"><var class="varname"><var class="varname">language</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.exception"><var class="varname"><var class="varname">_exception</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.base-uri"><var class="varname"><var class="varname">_base_uri</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.uri"><var class="varname"><var class="varname">uri</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.dispatched"><var class="varname"><var class="varname">dispatched</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-request-simple.props.routed"><var class="varname"><var class="varname">routed</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>         <div class="section" id="yaf-request-simple.constants">    <h2 class="title">预定义常量</h2>    <dl>             <dt id="yaf-request-simple.constants.scheme-http"><strong><code>Yaf_Request_Simple::SCHEME_HTTP</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="yaf-request-simple.constants.scheme-https"><strong><code>Yaf_Request_Simple::SCHEME_HTTPS</code></strong></dt>       <dd>        <p class="para"/>      </dd>           </dl>    </div>     </div>                                                                    <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Request_Simple::__clone} — The __clone purpose</li><li>{@link Yaf_Request_Simple::__construct} — The __construct purpose</li><li>{@link Yaf_Request_Simple::get} — The get purpose</li><li>{@link Yaf_Request_Simple::getCookie} — The getCookie purpose</li><li>{@link Yaf_Request_Simple::getFiles} — The getFiles purpose</li><li>{@link Yaf_Request_Simple::getPost} — The getPost purpose</li><li>{@link Yaf_Request_Simple::getQuery} — The getQuery purpose</li><li>{@link Yaf_Request_Simple::getRequest} — The getRequest purpose</li><li>{@link Yaf_Request_Simple::isXmlHttpRequest} — The isXmlHttpRequest purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Request_Simple extends Yaf_Request_Abstract {

/**
*<div id="yaf-request-simple.getquery" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Simple::getQuery</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::getQuery</span> &mdash; <span class="dc-title">The getQuery purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-simple.getquery-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Simple::getQuery</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-simple.getquery-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.getquery-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-simple.php">Yaf_Request_Simple</a></div></div>
     * @return mixed*/
    public function getQuery($name = null, $default = null){ }

/**
*<div id="yaf-request-simple.getrequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Simple::getRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::getRequest</span> &mdash; <span class="dc-title">The getRequest purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-simple.getrequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Simple::getRequest</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-simple.getrequest-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.getrequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-simple.php">Yaf_Request_Simple</a></div></div>
     * @return mixed*/
    public function getRequest($name = null, $default = null){ }

/**
*<div id="yaf-request-simple.getpost" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Simple::getPost</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::getPost</span> &mdash; <span class="dc-title">The getPost purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-simple.getpost-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Simple::getPost</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-simple.getpost-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.getpost-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-simple.php">Yaf_Request_Simple</a></div></div>
     * @return mixed*/
    public function getPost($name = null, $default = null){ }

/**
*<div id="yaf-request-simple.getcookie" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Simple::getCookie</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::getCookie</span> &mdash; <span class="dc-title">The getCookie purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-simple.getcookie-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Simple::getCookie</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-simple.getcookie-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.getcookie-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-simple.php">Yaf_Request_Simple</a></div></div>
     * @return mixed*/
    public function getCookie($name = null, $default = null){ }

/**
*<div id="yaf-request-simple.getfiles" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Simple::getFiles</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::getFiles</span> &mdash; <span class="dc-title">The getFiles purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-simple.getfiles-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Simple::getFiles</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-simple.getfiles-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.getfiles-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-simple.php">Yaf_Request_Simple</a></div></div>
     * @return array*/
    public function getFiles($name = null, $default = null){ }

/**
*<div id="yaf-request-simple.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Simple::get</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::get</span> &mdash; <span class="dc-title">The get purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-simple.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Simple::get</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-simple.get-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-simple.php">Yaf_Request_Simple</a></div></div>
     * @return mixed*/
    public function get($name, $default = null){ }

/**
*<div id="yaf-request-simple.isxmlhttprequest" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Request_Simple::isXmlHttpRequest</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::isXmlHttpRequest</span> &mdash; <span class="dc-title">The isXmlHttpRequest purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-request-simple.isxmlhttprequest-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Request_Simple::isXmlHttpRequest</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-request-simple.isxmlhttprequest-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.isxmlhttprequest-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-request-simple.php">Yaf_Request_Simple</a></div></div>
     * @return bool*/
    public function isXmlHttpRequest(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-request-simple.construct.php
     *
     * @param string $method
     * @param string $controller
     * @param string $action
     * @param string $params
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($method, $controller, $action, $params = null){ }

    /**
     * @link http://www.php.net/manual/en/yaf-request-simple.clone.php
     */
    private function __clone(){ }
}

/**
*<div id="class.yaf-config-ini" class="reference">   <h1 class="title">The Yaf_Config_Ini class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-config-ini.intro">    <h2 class="title">简介</h2>    <p class="para">    Yaf_Config_Ini允许开发者通过嵌套的对象属性语法在应用程序中用熟悉的INI格式存储和读取配置数据。    INI格式在提供拥有配置数据键的等级结构和配置数据节之间的继承能力方面具有专长。    配置数据等级结构通过用点或者句号(.)分离键值。    一个节可以扩展或者通过在节的名称之后带一个冒号(:)和被继承的配置数据的节的名称来从另一个节继承。   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">    Yaf_Config_Ini利用PHP的函数parse_ini_file()来解析配置文件的。    请仔细查看这个函数的文档，注意它的一些特殊用途。以及它传递给Yaf_Config_Ini的一些比如    &quot;TRUE&quot;, &quot;FALSE&quot;,&quot;yes&quot;, &quot;no&quot;, 和&quot;NULL&quot;的特殊值的处理方式    </p>   </p></blockquote>   </p>   </div>     <div class="section" id="yaf-config-ini.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Config_Ini</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-config-abstract.php" class="classname">Yaf_Config_Abstract</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Traversable</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$config_file</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$section</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.count.php" class="methodname">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.current.php" class="methodname">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.get.php" class="methodname">__get</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.isset.php" class="methodname">__isset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.key.php" class="methodname">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.next.php" class="methodname">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.offsetexists.php" class="methodname">offsetExists</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.offsetget.php" class="methodname">offsetGet</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.offsetset.php" class="methodname">offsetSet</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.offsetunset.php" class="methodname">offsetUnset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.readonly.php" class="methodname">readonly</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.rewind.php" class="methodname">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.set.php" class="methodname">__set</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.toarray.php" class="methodname">toArray</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-ini.valid.php" class="methodname">valid</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname">{@link Yaf_Config_Abstract::get}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link Yaf_Config_Abstract::readonly}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">Yaf_Config_Abstract</span> <span class="methodname">{@link Yaf_Config_Abstract::set}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link Yaf_Config_Abstract::toArray}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>        <div class="section" id="yaf-config-ini.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-config-ini.props.config"><var class="varname"><var class="varname">_config</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-config-ini.props.readonly"><var class="varname"><var class="varname">_readonly</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>    <div class="section">   <h2 class="title">范例</h2>   <div class="example" id="example-4930">    <p><strong>Example #1 <span class="function"><strong>Yaf_Config_Ini()</strong></span>example</strong></p>    <div class="example-contents"><p>     这个例子说明了使用Yaf_Config_Ini从一个INI配置文件中获取配置数据的基本用法。     这个例子中既有生产环境的配置方法也有演示环境的配置方法。     因为演示环境的配置跟生产环境的非常类似，所以演示环境的配置继承了生产环境的配置。     在复杂的情况下，决定是任意的，也可以写成相反的。在更复杂的情况下，生产环境继承自演示环境不是不可能的。     假设，以下配置数据都包含在/path/to/config.ini中：    </p></div>    <div class="example-contents"> <div class="inicode"><pre class="inicode">; Production site configuration data [production] webhost                  = www.example.com database.adapter         = pdo_mysql database.params.host     = db.example.com database.params.username = dbuser database.params.password = secret database.params.dbname   = dbname   ; Staging site configuration data inherits from production and ; overrides values as necessary [staging : production] database.params.host     = dev.example.com database.params.username = devuser database.params.password = devsecret</pre> </div>    </div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$config&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Config_Ini</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/config.ini'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'staging'</span><span style="color: #007700">);<br />&nbsp;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">database</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">params</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">host</span><span style="color: #007700">);&nbsp;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">database</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">params</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">dbname</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"database.params.username"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(15) &quot;dev.example.com&quot; string(6) &quot;dbname&quot; string(7) &quot;devuser </pre></div>    </div>   </div>   </div>   </div>                                                                                                                     <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Config_Ini::__construct} — 构造函数</li><li>{@link Yaf_Config_Ini::count} — 返回配置的节数量</li><li>{@link Yaf_Config_Ini::current} — 返回当前节点</li><li>{@link Yaf_Config_Ini::__get} — 读取节点配置</li><li>{@link Yaf_Config_Ini::__isset} — 检查节点是否存在</li><li>{@link Yaf_Config_Ini::key} — 返回当前元素的键</li><li>{@link Yaf_Config_Ini::next} — 向前移动到下一个元素</li><li>{@link Yaf_Config_Ini::offsetExists} — 检查一个偏移位置是否存在</li><li>{@link Yaf_Config_Ini::offsetGet} — 获取一个偏移位置的值</li><li>{@link Yaf_Config_Ini::offsetSet} — 设置一个偏移位置的值</li><li>{@link Yaf_Config_Ini::offsetUnset} — 复位一个偏移位置的值</li><li>{@link Yaf_Config_Ini::readonly} — 检查配置是否只读</li><li>{@link Yaf_Config_Ini::rewind} — 检查当前位置是否有效</li><li>{@link Yaf_Config_Ini::__set} — The __set purpose</li><li>{@link Yaf_Config_Ini::toArray} — 转换为数组的格式</li><li>{@link Yaf_Config_Ini::valid} — 检查迭代器是否有效</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Config_Ini extends Yaf_Config_Abstract implements Iterator, Traversable, ArrayAccess, Countable {

    /**
     * @see Yaf_Config_Abstract::get
     */
    public function __get($name = null){ }

    /**
     * @see Yaf_Config_Abstract::set
     */
    public function __set($name, $value){ }

/**
*<div id="yaf-config-ini.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::__get</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::__get</span> &mdash; <span class="dc-title">读取节点配置</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::__get</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.get-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function get($name = null){ }

/**
*<div id="yaf-config-ini.set" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::__set</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::__set</span> &mdash; <span class="dc-title">The __set purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.set-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::__set</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.set-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.set-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function set($name, $value){ }

/**
*<div id="yaf-config-ini.toarray" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::toArray</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::toArray</span> &mdash; <span class="dc-title">转换为数组的格式</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.toarray-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::toArray</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.toarray-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.toarray-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function toArray(){ }

/**
*<div id="yaf-config-ini.readonly" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::readonly</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::readonly</span> &mdash; <span class="dc-title">检查配置是否只读</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.readonly-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::readonly</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.readonly-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.readonly-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function readonly(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-config-ini.construct.php
     *
     * @param string $config_file path to an INI configure file
     * @param string $section which section in that INI file you want to be parsed
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($config_file, $section = null){ }

    /**
     * @link http://www.php.net/manual/en/yaf-config-ini.isset.php
     * @param string $name
     */
    public function __isset($name){ }

/**
*<div id="yaf-config-ini.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::count</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::count</span> &mdash; <span class="dc-title">返回配置的节数量</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::count</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.count-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function count(){ }

/**
*<div id="yaf-config-ini.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::rewind</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::rewind</span> &mdash; <span class="dc-title">检查当前位置是否有效</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.rewind-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function rewind(){ }

/**
*<div id="yaf-config-ini.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::current</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::current</span> &mdash; <span class="dc-title">返回当前节点</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.current-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function current(){ }

/**
*<div id="yaf-config-ini.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::next</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::next</span> &mdash; <span class="dc-title">向前移动到下一个元素</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.next-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function next(){ }

/**
*<div id="yaf-config-ini.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::valid</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::valid</span> &mdash; <span class="dc-title">检查迭代器是否有效</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.valid-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function valid(){ }

/**
*<div id="yaf-config-ini.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::key</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::key</span> &mdash; <span class="dc-title">返回当前元素的键</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.key-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function key(){ }

/**
*<div id="yaf-config-ini.offsetunset" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::offsetUnset</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetUnset</span> &mdash; <span class="dc-title">复位一个偏移位置的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetunset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::offsetUnset</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetunset-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetunset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function offsetUnset($name){ }

/**
*<div id="yaf-config-ini.offsetget" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::offsetGet</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetGet</span> &mdash; <span class="dc-title">获取一个偏移位置的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::offsetGet</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetget-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function offsetGet($name){ }

/**
*<div id="yaf-config-ini.offsetexists" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::offsetExists</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetExists</span> &mdash; <span class="dc-title">检查一个偏移位置是否存在</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetexists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::offsetExists</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetexists-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetexists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function offsetExists($name){ }

/**
*<div id="yaf-config-ini.offsetset" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Ini::offsetSet</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetSet</span> &mdash; <span class="dc-title">设置一个偏移位置的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Ini::offsetSet</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetset-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-ini.php">Yaf_Config_Ini</a></div></div>
*/
    public function offsetSet($name, $value){ }
}

/**
*<div id="class.yaf-config-simple" class="reference">   <h1 class="title">The Yaf_Config_Simple class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-config-simple.intro">    <h2 class="title">简介</h2>    <p class="para">        Yaf_Config_Simple 是 Yad_Config_ini 的简洁版本，只允许传入数组进行初始化，并提供了设置readonly的参数。    </p>   </div>     <div class="section" id="yaf-config-simple.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Config_Simple</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-config-abstract.php" class="classname">Yaf_Config_Abstract</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Traversable</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-config-simple.php#yaf-config-simple.props.readonly">$<var class="varname">_readonly</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$config_file</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$section</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.count.php" class="methodname">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.current.php" class="methodname">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.get.php" class="methodname">__get</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.isset.php" class="methodname">__isset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.key.php" class="methodname">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.next.php" class="methodname">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.offsetexists.php" class="methodname">offsetExists</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.offsetget.php" class="methodname">offsetGet</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.offsetset.php" class="methodname">offsetSet</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.offsetunset.php" class="methodname">offsetUnset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.readonly.php" class="methodname">readonly</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.rewind.php" class="methodname">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.set.php" class="methodname">__set</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.toarray.php" class="methodname">toArray</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-config-simple.valid.php" class="methodname">valid</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname">{@link Yaf_Config_Abstract::get}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link Yaf_Config_Abstract::readonly}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">Yaf_Config_Abstract</span> <span class="methodname">{@link Yaf_Config_Abstract::set}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link Yaf_Config_Abstract::toArray}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>             </div>        <div class="section" id="yaf-config-simple.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-config-simple.props.config"><var class="varname"><var class="varname">_config</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-config-simple.props.readonly"><var class="varname"><var class="varname">_readonly</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                                                                     <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Config_Simple::__construct} — 构造函数</li><li>{@link Yaf_Config_Simple::count} — 返回配置的节数量</li><li>{@link Yaf_Config_Simple::current} — 返回当前节点</li><li>{@link Yaf_Config_Simple::__get} — 读取节点配置</li><li>{@link Yaf_Config_Simple::__isset} — 检查节点是否存在</li><li>{@link Yaf_Config_Simple::key} — 返回当前元素的键</li><li>{@link Yaf_Config_Simple::next} — 向前移动到下一个元素</li><li>{@link Yaf_Config_Simple::offsetExists} — 检查一个偏移位置是否存在</li><li>{@link Yaf_Config_Simple::offsetGet} — 获取一个偏移位置的值</li><li>{@link Yaf_Config_Simple::offsetSet} — 设置一个偏移位置的值</li><li>{@link Yaf_Config_Simple::offsetUnset} — 复位一个偏移位置的值</li><li>{@link Yaf_Config_Simple::readonly} — 检查配置是否只读</li><li>{@link Yaf_Config_Simple::rewind} — 检查当前位置是否有效</li><li>{@link Yaf_Config_Simple::__set} — 设置节点配置</li><li>{@link Yaf_Config_Simple::toArray} — 转换为数组的格式</li><li>{@link Yaf_Config_Simple::valid} — 检查迭代器是否有效</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Config_Simple extends Yaf_Config_Abstract implements Iterator, Traversable, ArrayAccess, Countable {

    /**
     * @see Yaf_Config_Abstract::get
     */
    public function __get($name = null){ }

    /**
     * @see Yaf_Config_Abstract::set
     */
    public function __set($name, $value){ }

/**
*<div id="yaf-config-simple.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::__get</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::__get</span> &mdash; <span class="dc-title">读取节点配置</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::__get</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.get-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function get($name = null){ }

/**
*<div id="yaf-config-simple.set" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::__set</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::__set</span> &mdash; <span class="dc-title">设置节点配置</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.set-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::__set</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.set-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.set-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function set($name, $value){ }

/**
*<div id="yaf-config-simple.toarray" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::toArray</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::toArray</span> &mdash; <span class="dc-title">转换为数组的格式</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.toarray-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::toArray</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.toarray-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.toarray-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function toArray(){ }

/**
*<div id="yaf-config-simple.readonly" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::readonly</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::readonly</span> &mdash; <span class="dc-title">检查配置是否只读</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.readonly-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::readonly</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.readonly-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.readonly-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function readonly(){ }

    /**
     * @link http://www.php.net/manual/en/yaf-config-simple.construct.php
     *
     * @param array $array
     * @param string $readonly
     *
     */
    public function __construct(array $array, $readonly = null){ }

    /**
     * @link http://www.php.net/manual/en/yaf-config-simple.isset.php
     * @param string $name
     */
    public function __isset($name){ }

/**
*<div id="yaf-config-simple.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::count</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::count</span> &mdash; <span class="dc-title">返回配置的节数量</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::count</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.count-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function count(){ }

/**
*<div id="yaf-config-simple.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::rewind</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::rewind</span> &mdash; <span class="dc-title">检查当前位置是否有效</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.rewind-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function rewind(){ }

/**
*<div id="yaf-config-simple.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::current</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::current</span> &mdash; <span class="dc-title">返回当前节点</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.current-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function current(){ }

/**
*<div id="yaf-config-simple.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::next</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::next</span> &mdash; <span class="dc-title">向前移动到下一个元素</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.next-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function next(){ }

/**
*<div id="yaf-config-simple.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::valid</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::valid</span> &mdash; <span class="dc-title">检查迭代器是否有效</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.valid-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function valid(){ }

/**
*<div id="yaf-config-simple.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::key</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::key</span> &mdash; <span class="dc-title">返回当前元素的键</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.key-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function key(){ }

/**
*<div id="yaf-config-simple.offsetunset" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::offsetUnset</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetUnset</span> &mdash; <span class="dc-title">复位一个偏移位置的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetunset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::offsetUnset</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetunset-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetunset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function offsetUnset($name){ }

/**
*<div id="yaf-config-simple.offsetget" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::offsetGet</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetGet</span> &mdash; <span class="dc-title">获取一个偏移位置的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::offsetGet</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetget-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function offsetGet($name){ }

/**
*<div id="yaf-config-simple.offsetexists" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::offsetExists</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetExists</span> &mdash; <span class="dc-title">检查一个偏移位置是否存在</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetexists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::offsetExists</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetexists-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetexists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function offsetExists($name){ }

/**
*<div id="yaf-config-simple.offsetset" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Config_Simple::offsetSet</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetSet</span> &mdash; <span class="dc-title">设置一个偏移位置的值</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Config_Simple::offsetSet</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetset-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-config-simple.php">Yaf_Config_Simple</a></div></div>
*/
    public function offsetSet($name, $value){ }
}

/**
*<div id="class.yaf-view-simple" class="reference">   <h1 class="title">The Yaf_View_Simple Class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-view-simple.intro">    <h2 class="title">简介</h2>    <p class="para">      <strong class="classname">Yaf_View_Simple</strong> 这是Yaf内建的一个模板引擎，是个简单而快速的模板引擎，只支持PHP脚本    </p>   </div>     <div class="section" id="yaf-view-simple.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_View_Simple</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.yaf-view-interface.php" class="interfacename">Yaf_View_Interface</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-view-simple.php#yaf-view-simple.props.tpl-vars">$<var class="varname">_tpl_vars</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-view-simple.php#yaf-view-simple.props.tpl-dir">$<var class="varname">_tpl_dir</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.assign.php" class="methodname">assign</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.assignref.php" class="methodname">assignRef</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter reference">&$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.clear.php" class="methodname">clear</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tempalte_dir</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.display.php" class="methodname">display</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tpl_vars</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.eval.php" class="methodname">eval</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl_content</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tpl_vars</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.get.php" class="methodname">__get</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.getscriptpath.php" class="methodname">getScriptPath</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.isset.php" class="methodname">__isset</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.render.php" class="methodname">render</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tpl_vars</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.set.php" class="methodname">__set</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-view-simple.setscriptpath.php" class="methodname">setScriptPath</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$template_dir</code></span>    )</div>     }</div>     </div>        <div class="section" id="yaf-view-simple.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-view-simple.props.tpl-vars"><var class="varname"><var class="varname">_tpl_vars</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-view-simple.props.tpl-dir"><var class="varname"><var class="varname">_tpl_dir</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                                                                                         <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_View_Simple::assign} — 为视图引擎分配一个模板变量</li><li>{@link Yaf_View_Simple::assignRef} — The assignRef purpose</li><li>{@link Yaf_View_Simple::clear} — Clear Assigned values</li><li>{@link Yaf_View_Simple::__construct} — Constructor of Yaf_View_Simple</li><li>{@link Yaf_View_Simple::display} — 渲染一个视图模板, 并直接输出给请求端</li><li>{@link Yaf_View_Simple::eval} — 渲染模板</li><li>{@link Yaf_View_Simple::__get} — 获取视图引擎的一个模板变量值</li><li>{@link Yaf_View_Simple::getScriptPath} — 获取模板目录</li><li>{@link Yaf_View_Simple::__isset} — The __isset purpose</li><li>{@link Yaf_View_Simple::render} — 渲染模板</li><li>{@link Yaf_View_Simple::__set} — 为视图引擎分配一个模板变量</li><li>{@link Yaf_View_Simple::setScriptPath} — 设置模板的目录</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
 * @return void|bool return FALSE on failure*/
class Yaf_View_Simple implements Yaf_View_Interface {

    /**
     * @var string
     */
    protected $_tpl_dir;
    /**
     * @var array
     */
    protected $_tpl_vars;
    /**
     * @var array
     */
    protected $_options;

    /**
     * @link http://www.php.net/manual/en/yaf-view-simple.construct.php
     *
     * @param string $template_dir The base directory of the templates, by default, it is APPLICATION . "/views" for Yaf.
     * @param array $options <p>Options for the engine, as of Yaf 2.1.13, you can use short tag
     * "<?=$var?>" in your template(regardless of "short_open_tag"),
     * so comes a option named "short_tag",  you can switch this off
     * to prevent use short_tag in template.
     *
     * @throws Yaf_Exception_TypeError
     */
    final public function __construct($template_dir, array $options = null){ }

    /**
     * @link http://www.php.net/manual/en/yaf-view-simple.isset.php
     *
     * @param string $name
     */
    public function __isset($name){ }

/**
*<div id="yaf-view-simple.assign" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_View_Simple::assign</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::assign</span> &mdash; <span class="dc-title">为视图引擎分配一个模板变量</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-view-simple.assign-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_View_Simple::assign</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>   ] )</div>    <p class="para rdfs-comment">    为视图引擎分配一个模板变量   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-view-simple.assign-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        字符串或者数组      </p>      <p class="para">        如果为字符串, 则$value不能为空      </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">        mixed value      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.assign-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-view-simple.assign-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4936">    <p><strong>Example #1 <span class="function"><strong>Yaf_View_Simple::assign()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">IndexController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">indexAction</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_view</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(&nbsp;array(&nbsp;</span><span style="color: #DD0000">"key"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"value"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"value"</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-4937">    <p><strong>Example #2 <span class="function"><strong>template()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> &lt;html&gt;<br />&nbsp;&lt;head&gt;<br />&nbsp;&nbsp;&lt;title&gt;<span style="color: #9876AA">&lt;?php&nbsp;</span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$foo</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">?&gt;</span>&lt;/title&gt;<br />&nbsp;&lt;/head&gt;&nbsp;&nbsp;<br />&lt;body&gt;<br />&nbsp;&nbsp;<span style="color: #9876AA">&lt;?php&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">foreach&nbsp;(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_tpl_vars&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$name&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">value</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$</span><span style="color: #9876AA">$name</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;or&nbsp;echo&nbsp;$this-&gt;_tpl_vars[$name];<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br />&nbsp;&nbsp;</span><span style="color: #9876AA">?&gt;<br /></span>&lt;/body&gt;<br />&lt;/html&gt;</span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-view-simple.assign-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_View_Simple::assignRef()} - The assignRef purpose</span></li>    <li class="member"><span class="methodname"><strong>Yaf_View_Interface::clear()</strong></span></li>    <li class="member"><span class="methodname">{@link Yaf_View_Simple::__set()} - 为视图引擎分配一个模板变量</span></li>   </ul>                         </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-view-simple.php">Yaf_View_Simple</a></div></div>
     * @return Yaf_View_Simple*/
    public function assign($name, $value = null){ }

/**
*<div id="yaf-view-simple.render" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_View_Simple::render</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::render</span> &mdash; <span class="dc-title">渲染模板</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-view-simple.render-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_View_Simple::render</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tpl_vars</code></span>   ] )</div>    <p class="para rdfs-comment">     渲染一个视图模板, 得到结果   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-view-simple.render-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">tpl</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">tpl_vars</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.render-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-view-simple.php">Yaf_View_Simple</a></div></div>
     * @return string|void*/
    public function render($tpl, array $tpl_vars = null){ }

/**
*<div id="yaf-view-simple.display" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_View_Simple::display</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::display</span> &mdash; <span class="dc-title">渲染一个视图模板, 并直接输出给请求端</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-view-simple.display-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_View_Simple::display</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tpl</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tpl_vars</code></span>   ] )</div>    <p class="para rdfs-comment">      渲染一个视图模板, 并直接输出给请求端   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-view-simple.display-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">tpl</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">tpl_vars</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.display-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-view-simple.php">Yaf_View_Simple</a></div></div>
     * @return bool*/
    public function display($tpl, array $tpl_vars = null){ }

/**
*<div id="yaf-view-simple.assignref" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_View_Simple::assignRef</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::assignRef</span> &mdash; <span class="dc-title">The assignRef purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-view-simple.assignref-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_View_Simple::assignRef</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter reference">&$value</code></span>    )</div>    <p class="para rdfs-comment">     不同于<span class="methodname">{@link Yaf_View_Simple::assign()}</span>，这个方法传递一个引用变量给模板引擎   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-view-simple.assignref-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        一个字符串的名字，被用来传递值给模板。      </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">       mixed value      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.assignref-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-view-simple.assignref-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4938">    <p><strong>Example #1 <span class="function"><strong>Yaf_View_Simple::assignRef()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">IndexController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">indexAction</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$value&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;plz&nbsp;note&nbsp;that&nbsp;there&nbsp;was&nbsp;a&nbsp;bug&nbsp;before&nbsp;Yaf&nbsp;2.1.4,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;which&nbsp;make&nbsp;following&nbsp;output&nbsp;"bar";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$dummy&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">render</span><span style="color: #007700">(</span><span style="color: #DD0000">"index/index.phtml"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//prevent&nbsp;the&nbsp;auto-render<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">Yaf_Dispatcher</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">autoRender</span><span style="color: #007700">(</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-4939">    <p><strong>Example #2 <span class="function"><strong>template()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> &lt;html&gt;<br />&nbsp;&lt;head&gt;<br />&nbsp;&nbsp;&lt;title&gt;<span style="color: #9876AA">&lt;?php&nbsp;</span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$foo</span><span style="color: #007700">;&nbsp;&nbsp;</span><span style="color: #9876AA">$foo&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"changed"</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">?&gt;</span>&lt;/title&gt;<br />&nbsp;&lt;/head&gt;&nbsp;&nbsp;<br />&lt;body&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> // access the index controller will result:  changed </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-view-simple.assignref-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_View_Simple::assign()} - 为视图引擎分配一个模板变量</span></li>    <li class="member"><span class="methodname">{@link Yaf_View_Simple::__set()} - 为视图引擎分配一个模板变量</span></li>   </ul>                         </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-view-simple.php">Yaf_View_Simple</a></div></div>
     * @return Yaf_View_Simple*/
    public function assignRef($name, &$value){ }

/**
*<div id="yaf-view-simple.clear" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_View_Simple::clear</h1>   <p class="verinfo">(Yaf &gt;=2.2.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::clear</span> &mdash; <span class="dc-title">Clear Assigned values</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-view-simple.clear-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_View_Simple::clear</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div>    <p class="para rdfs-comment">    清除指定的变量   </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-view-simple.clear-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">        分派的变量名      </p>      <p class="para">       如果为空，将会清除所有的变量      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.clear-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-view-simple.clear-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4940">    <p><strong>Example #1 <span class="function"><strong>Yaf_View_Simple::clear()</strong></span>example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">IndexController&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">Yaf_Controller_Abstract&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">indexAction</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;clear&nbsp;"foo"&nbsp;and&nbsp;"bar"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_view</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//clear&nbsp;all&nbsp;assigned&nbsp;variables<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-view-simple.clear-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_View_Simple::assignRef()} - The assignRef purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_View_Interface::assign()} - 为视图引擎分配一个模板变量</span></li>    <li class="member"><span class="methodname">{@link Yaf_View_Simple::__set()} - 为视图引擎分配一个模板变量</span></li>   </ul>                         </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-view-simple.php">Yaf_View_Simple</a></div></div>
     * @return Yaf_View_Simple*/
    public function clear($name = null){ }

/**
*<div id="yaf-view-simple.setscriptpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_View_Simple::setScriptPath</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::setScriptPath</span> &mdash; <span class="dc-title">设置模板的目录</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-view-simple.setscriptpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_View_Simple::setScriptPath</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$template_dir</code></span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-view-simple.setscriptpath-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">template_dir</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.setscriptpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-view-simple.php">Yaf_View_Simple</a></div></div>
     * @return Yaf_View_Simple*/
    public function setScriptPath($template_dir){ }

/**
*<div id="yaf-view-simple.getscriptpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_View_Simple::getScriptPath</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::getScriptPath</span> &mdash; <span class="dc-title">获取模板目录</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-view-simple.getscriptpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_View_Simple::getScriptPath</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>  </div>    <div class="refsect1 parameters" id="refsect1-yaf-view-simple.getscriptpath-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.getscriptpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-view-simple.php">Yaf_View_Simple</a></div></div>
     * @return string*/
    public function getScriptPath(){ }

    /**
     * <p>Retrieve assigned variable</p>
     * <br/>
     * <b>Note:</b>
     * <p>$name parameter can be empty since 2.1.11</p>
     * @link http://www.php.net/manual/en/yaf-view-simple.get.php
     *
     * @param null $name <p>the assigned variable name</p>
     * <br/>
     * <p>if this is empty, all assigned variables will be returned</p>
     *
     * @return mixed
     */
    public function __get($name = null){ }

    /**
     * <p>This is a alternative and easier way to Yaf_View_Simple::assign().</p>
     *
     * @link http://www.php.net/manual/en/yaf-view-simple.set.php
     *
     * @param string $name A string value name.
     * @param mixed $value mixed value
     */
    public function __set($name, $value = null){ }
}

/**
*<div id="class.yaf-route-static" class="reference">   <h1 class="title">The Yaf_Route_Static class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-route-static.intro">    <h2 class="title">简介</h2>    <p class="para">      默认的，<a href="http://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a> 只有一个<strong class="classname">Yaf_Route_Static</strong> 作为它默认的路由    </p>    <p class="para">      <strong class="classname">Yaf_Route_Static</strong> 旨在处理80%的要求。    </p>    <p class="para">      请注意：实例化 <strong class="classname">Yaf_Route_Static</strong> 是没有必要的，也没必要将它加入<a href="http://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a>的路由堆栈，因为在<a href="http://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a>的路由堆栈中总是存在它的一个实例，并且总是在最后被调用。    </p>   </div>     <div class="section" id="yaf-route-static.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Route_Static</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.yaf-router.php" class="interfacename">Yaf_Router</a></span>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-static.assemble.php" class="methodname">assemble</a></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-static.match.php" class="methodname">match</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-static.route.php" class="methodname">route</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>     }</div>     </div>   </div>                            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Static::assemble} — 组合url</li><li>{@link Yaf_Route_Static::match} — The match purpose</li><li>{@link Yaf_Route_Static::route} — Route a request</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Route_Static implements Yaf_Route_Interface {

/**
*<div id="yaf-route-static.match" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Route_Static::match</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Static::match</span> &mdash; <span class="dc-title">The match purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-route-static.match-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Yaf_Route_Static::match</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-route-static.match-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">uri</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-route-static.match-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-static.php">Yaf_Route_Static</a></div></div>
     * @return bool*/
    public function match($uri){ }

/**
*<div id="yaf-route-static.route" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Route_Static::route</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Static::route</span> &mdash; <span class="dc-title">Route a request</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-route-static.route-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Route_Static::route</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-route-static.route-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-route-static.route-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    总是返回TRUE   </p>  </div>    <div class="refsect1 examples" id="refsect1-yaf-route-static.route-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4984">    <p><strong>Example #1 <span class="function"><strong>Yaf_Route_Static::route()</strong></span>example</strong></p>    <div class="example-contents"> <div class="shellcode"><pre class="shellcode">// assuming there is only one module defined:Index Request: http://yourdomain.com/a/b =&gt; module = index, controller=a, action=b  //assuming ap.action_prefer = On Request: http://yourdomain.com/b =&gt; module = default(index), controller = default(index), action = b  //assuming ap.action_prefer = Off Request: http://yourdomain.com/b =&gt; module = default(index), controller = b, action = default(index)   Request: http://yourdomain.com/a/b/foo/bar/test/a/id/4 =&gt; module = default(index), controller = a, action = b, request parameters: foo = bar, test = a, id = 4</pre> </div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-route-static.route-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Route_Supervar::route()} - The route purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Simple::route()} - Route a request</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Regex::route()} - The route purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Rewrite::route()} - The route purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Map::route()} - The route purpose</span></li>   </ul>                         </div>      <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-static.php">Yaf_Route_Static</a></div></div>
     * @return bool always TRUE*/
    public function route(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-route-static.assemble" class="refentry">     <div class="refnamediv">         <h1 class="refname">Yaf_Route_Static::assemble</h1>         <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Static::assemble</span> &mdash; <span class="dc-title">组合url</span></p>      </div>      <div class="refsect1 description" id="refsect1-yaf-route-static.assemble-description">         <h3 class="title">说明</h3>         <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Route_Static::assemble</strong></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div>          <p class="para rdfs-comment">             根据指定参数和自定义参数将static这个route组合成一个url         </p>     </div>       <div class="refsect1 parameters" id="refsect1-yaf-route-static.assemble-parameters">         <h3 class="title">参数</h3>         <dl>                               <dt> <code class="parameter">info</code></dt>                  <dd>                      <p class="para">                         需要传入一个数组，数组中每个key可为:m、:c、:a，:m代表module，:c代表controller, :a代表action                     </p>                 </dd>                                            <dt> <code class="parameter">query</code></dt>                  <dd>                      <p class="para">                         用户自定义的query string，将根据此路由规则拼接在url中                     </p>                 </dd>                       </dl>      </div>       <div class="refsect1 examples" id="refsect1-yaf-route-static.assemble-examples">         <h3 class="title">范例</h3>         <div class="example" id="example-4983">             <p><strong>Example #1 <span class="function"><strong>Yaf_Route_Static::assemble()</strong></span>example</strong></p>             <div class="example-contents">                 <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$router&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Static</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"static"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'static'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':c'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':m'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafmodule'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'static'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':c'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':m'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafmodule'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval2'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />);</span> </span> </code></div>             </div>              <div class="example-contents"><p>以上例程的输出类似于：</p></div>             <div class="example-contents screen">                 <div class="cdata"><pre> string(%d) &quot;/yafmodule/yafcontroller/yafaction&quot; string(%d) &quot;/yafmodule/yafcontroller/yafaction?tkey1=tval1&amp;tkey2=tval2&quot; </pre></div>             </div>         </div>     </div>       <div class="refsect1 returnvalues" id="refsect1-yaf-route-static.assemble-returnvalues">         <h3 class="title">返回值</h3>         <p class="para">          </p>     </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-static.php">Yaf_Route_Static</a></div></div>
     * @return bool*/
    public function assemble(array $info, array $query = null){ }
}

/**
*<div id="class.yaf-route-simple" class="reference">   <h1 class="title">The Yaf_Route_Simple class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-route-simple.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">Yaf_Route_Simple</strong> 会匹配请求中的query string，然后找到路由信息。    </p>    <p class="para">      你需要做的只是告诉 <strong class="classname">Yaf_Route_Simple</strong>，在$_GET中哪个是Module，哪个是Controller，哪个是Action。    </p>    <p class="para">     <span class="methodname">{@link Yaf_Route_Simple::route()}</span> 总是会返回TRUE，所以把<strong class="classname">Yaf_Route_Simple</strong>放在路由堆栈前面是很重要的，否则其他所有的路由都可能不会被调用到。    </p>   </div>     <div class="section" id="yaf-route-simple.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Route_Simple</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-simple.php#yaf-route-simple.props.controller">$<var class="varname">controller</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-simple.php#yaf-route-simple.props.module">$<var class="varname">module</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-simple.php#yaf-route-simple.props.action">$<var class="varname">action</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-simple.assemble.php" class="methodname">assemble</a></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-route-simple.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module_name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller_name</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$action_name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-simple.route.php" class="methodname">route</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>     }</div>     </div>        <div class="section" id="yaf-route-simple.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-route-simple.props.controller"><var class="varname"><var class="varname">controller</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-simple.props.module"><var class="varname"><var class="varname">module</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-simple.props.action"><var class="varname"><var class="varname">action</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Simple::assemble} — 组合url</li><li>{@link Yaf_Route_Simple::__construct} — Yaf_Route_Simple constructor</li><li>{@link Yaf_Route_Simple::route} — Route a request</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Route_Simple implements Yaf_Route_Interface {

    /**
     * @var string
     */
    protected $controller;
    /**
     * @var string
     */
    protected $module;
    /**
     * @var string
     */
    protected $action;

    /**
     * <p>Yaf_Route_Simple will get route info from query string. and the parameters of this constructor will used as keys while searching for the route info in $_GET.</p>
     *
     * @link http://www.php.net/manual/en/yaf-route-simple.construct.php
     *
     * @param string $module_name
     * @param string $controller_name
     * @param string $action_name
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($module_name, $controller_name, $action_name){ }

/**
*<div id="yaf-route-simple.route" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Route_Simple::route</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Simple::route</span> &mdash; <span class="dc-title">Route a request</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-route-simple.route-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Route_Simple::route</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    see <span class="methodname">{@link Yaf_Route_Simple::__construct()}</span>   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-route-simple.route-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-route-simple.route-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    always be TRUE   </p>  </div>    <div class="refsect1 seealso" id="refsect1-yaf-route-simple.route-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Yaf_Route_Supervar::route()} - The route purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Static::route()} - Route a request</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Regex::route()} - The route purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Rewrite::route()} - The route purpose</span></li>    <li class="member"><span class="methodname">{@link Yaf_Route_Map::route()} - The route purpose</span></li>   </ul>                         </div>     <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-simple.php">Yaf_Route_Simple</a></div></div>
     * @return bool always TRUE*/
    public function route(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-route-simple.assemble" class="refentry">     <div class="refnamediv">         <h1 class="refname">Yaf_Route_Simple::assemble</h1>         <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Simple::assemble</span> &mdash; <span class="dc-title">组合url</span></p>      </div>      <div class="refsect1 description" id="refsect1-yaf-route-simple.assemble-description">         <h3 class="title">说明</h3>         <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Route_Simple::assemble</strong></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div>          <p class="para rdfs-comment">             根据指定参数和自定义参数将simple这个route组合成一个url         </p>     </div>       <div class="refsect1 parameters" id="refsect1-yaf-route-simple.assemble-parameters">         <h3 class="title">参数</h3>         <dl>                               <dt> <code class="parameter">info</code></dt>                  <dd>                      <p class="para">                         需要传入一个数组，数组中每个key可为:m、:c、:a，:m代表module，:c代表controller, :a代表action                     </p>                 </dd>                                            <dt> <code class="parameter">query</code></dt>                  <dd>                      <p class="para">                         用户自定义的query string，将根据此路由规则拼接在url中                     </p>                 </dd>                       </dl>      </div>       <div class="refsect1 examples" id="refsect1-yaf-route-simple.assemble-examples">         <h3 class="title">范例</h3>         <div class="example" id="example-4980">             <p><strong>Example #1 <span class="function"><strong>Yaf_Route_Simple::assemble()</strong></span>example</strong></p>             <div class="example-contents">                 <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$router&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Simple</span><span style="color: #007700">(</span><span style="color: #DD0000">'m'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'c'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'a'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"simple"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'simple'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':c'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':m'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafmodule'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval2'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;));</span> </span> </code></div>             </div>              <div class="example-contents"><p>以上例程的输出类似于：</p></div>             <div class="example-contents screen">                 <div class="cdata"><pre> string(64) &quot;?m=yafmodule&amp;c=yafcontroller&amp;a=yafaction&amp;tkey1=tval1&amp;tkey2=tval2&quot; </pre></div>             </div>         </div>     </div>       <div class="refsect1 returnvalues" id="refsect1-yaf-route-simple.assemble-returnvalues">         <h3 class="title">返回值</h3>         <p class="para">          </p>     </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-simple.php">Yaf_Route_Simple</a></div></div>
     * @return bool*/
    public function assemble(array $info, array $query = null){ }
}

/**
*<div id="class.yaf-route-supervar" class="reference">   <h1 class="title">The Yaf_Route_Supervar class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-route-supervar.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-route-supervar.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Route_Supervar</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-supervar.php#yaf-route-supervar.props.var-name">$<var class="varname">_var_name</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-supervar.assemble.php" class="methodname">assemble</a></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-route-supervar.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$supervar_name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-supervar.route.php" class="methodname">route</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>     }</div>     </div>        <div class="section" id="yaf-route-supervar.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-route-supervar.props.var-name"><var class="varname"><var class="varname">_var_name</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Supervar::assemble} — 组合url</li><li>{@link Yaf_Route_Supervar::__construct} — The __construct purpose</li><li>{@link Yaf_Route_Supervar::route} — The route purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Route_Supervar implements Yaf_Route_Interface {

    /**
     * @var string
     */
    protected $_var_name;

    /**
     * <p>Yaf_Route_Supervar is similar to Yaf_Route_Static, the difference is that Yaf_Route_Supervar will look for path info in query string, and the parameter supervar_name is the key.</p>
     *
     * @link http://www.php.net/manual/en/yaf-route-supervar.construct.php
     *
     * @param string $supervar_name The name of key.
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($supervar_name){ }

/**
*<div id="yaf-route-supervar.route" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Route_Supervar::route</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Supervar::route</span> &mdash; <span class="dc-title">The route purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-route-supervar.route-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Route_Supervar::route</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-route-supervar.route-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-route-supervar.route-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     如果在$_GET中有键（在<span class="methodname">{@link Yaf_Route_Supervar::__construct()}</span>中定义），返回TRUE，否则返回FALSE。   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-supervar.php">Yaf_Route_Supervar</a></div></div>
     * @return bool If there is a key(which was defined in Yaf_Route_Supervar::__construct()) in $_GET, return TRUE. otherwise return FALSE.*/
    public function route(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-route-supervar.assemble" class="refentry">     <div class="refnamediv">         <h1 class="refname">Yaf_Route_Supervar::assemble</h1>         <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Supervar::assemble</span> &mdash; <span class="dc-title">组合url</span></p>      </div>      <div class="refsect1 description" id="refsect1-yaf-route-supervar.assemble-description">         <h3 class="title">说明</h3>         <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Route_Supervar::assemble</strong></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div>          <p class="para rdfs-comment">             根据指定参数和自定义参数将supervar这个route组合成一个url         </p>     </div>       <div class="refsect1 parameters" id="refsect1-yaf-route-supervar.assemble-parameters">         <h3 class="title">参数</h3>         <dl>                               <dt> <code class="parameter">info</code></dt>                  <dd>                      <p class="para">                         需要传入一个数组，数组中每个key可为:m、:c、:a，:m代表module，:c代表controller, :a代表action                     </p>                 </dd>                                            <dt> <code class="parameter">query</code></dt>                  <dd>                      <p class="para">                         用户自定义的query string，将根据此路由规则拼接在url中                     </p>                 </dd>                       </dl>      </div>       <div class="refsect1 examples" id="refsect1-yaf-route-supervar.assemble-examples">         <h3 class="title">范例</h3>         <div class="example" id="example-4985">             <p><strong>Example #1 <span class="function"><strong>Yaf_Route_Supervar::assemble()</strong></span>example</strong></p>             <div class="example-contents">                 <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$router&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Supervar</span><span style="color: #007700">(</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"supervar"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'supervar'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':c'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':m'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafmodule'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval2'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />));<br /><br />try&nbsp;{<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'supervar'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':m'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'yafmodule'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval2'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />));<br />}&nbsp;catch&nbsp;(</span><span style="color: #9876AA">Exception&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">());<br />}</span> </span> </code></div>             </div>              <div class="example-contents"><p>以上例程的输出类似于：</p></div>             <div class="example-contents screen">                 <div class="cdata"><pre> string(%d) &quot;?r=/yafmodule/yafcontroller/yafaction&amp;tkey1=tval1&amp;tkey2=tval2&quot; string(%d) &quot;You need to specify the controller by &#039;:c&#039;&quot; </pre></div>             </div>         </div>     </div>       <div class="refsect1 returnvalues" id="refsect1-yaf-route-supervar.assemble-returnvalues">         <h3 class="title">返回值</h3>         <p class="para">          </p>     </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-supervar.php">Yaf_Route_Supervar</a></div></div>
     * @return bool*/
    public function assemble(array $info, array $query = null){ }
}

/**
*<div id="class.yaf-route-rewrite" class="reference">   <h1 class="title">The Yaf_Route_Rewrite class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-route-rewrite.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-route-rewrite.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Route_Rewrite</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-route-interface.php" class="classname">Yaf_Route_Interface</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-rewrite.php#yaf-route-rewrite.props.route">$<var class="varname">_route</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-rewrite.php#yaf-route-rewrite.props.default">$<var class="varname">_default</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-rewrite.php#yaf-route-rewrite.props.verify">$<var class="varname">_verify</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-rewrite.assemble.php" class="methodname">assemble</a></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-route-rewrite.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$match</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$route</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$verify</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-rewrite.route.php" class="methodname">route</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link Yaf_Route_Interface::assemble}</span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link Yaf_Route_Interface::route}</span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>      }</div>     </div>        <div class="section" id="yaf-route-rewrite.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-route-rewrite.props.route"><var class="varname"><var class="varname">_route</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-rewrite.props.default"><var class="varname"><var class="varname">_default</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-rewrite.props.verify"><var class="varname"><var class="varname">_verify</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Rewrite::assemble} — 组合url</li><li>{@link Yaf_Route_Rewrite::__construct} — The __construct purpose</li><li>{@link Yaf_Route_Rewrite::route} — The route purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Route_Rewrite extends Yaf_Router implements Yaf_Route_Interface {

    /**
     * @var string
     */
    protected $_route;
    /**
     * @var array
     */
    protected $_default;
    /**
     * @var array
     */
    protected $_verify;

    /**
     * @link http://www.php.net/manual/en/yaf-route-rewrite.construct.php
     *
     * @param string $match A pattern, will be used to match a request uri, if doesn't matched, Yaf_Route_Rewrite will return FALSE.
     * @param array $route <p>When the match pattern matches the request uri, Yaf_Route_Rewrite will use this to decide which m/c/a to routed.</p>
     * <br/>
     * <p>either of m/c/a in this array is optional, if you don't assign a specific value, it will be routed to default.</p>
     * @param array $verify
     * @param string $reverse
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($match, array $route, array $verify = null, $reverse = null){ }

/**
*<div id="yaf-route-rewrite.route" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Route_Rewrite::route</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Rewrite::route</span> &mdash; <span class="dc-title">The route purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-route-rewrite.route-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Route_Rewrite::route</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-route-rewrite.route-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-route-rewrite.route-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-rewrite.php">Yaf_Route_Rewrite</a></div></div>
     * @return bool*/
    public function route(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-route-rewrite.assemble" class="refentry">     <div class="refnamediv">         <h1 class="refname">Yaf_Route_Rewrite::assemble</h1>         <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Rewrite::assemble</span> &mdash; <span class="dc-title">组合url</span></p>      </div>      <div class="refsect1 description" id="refsect1-yaf-route-rewrite.assemble-description">         <h3 class="title">说明</h3>         <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Route_Rewrite::assemble</strong></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div>          <p class="para rdfs-comment">             根据指定参数和自定义参数将rewrite这个route组合成一个url         </p>     </div>       <div class="refsect1 parameters" id="refsect1-yaf-route-rewrite.assemble-parameters">         <h3 class="title">参数</h3>         <dl>                               <dt> <code class="parameter">info</code></dt>                  <dd>                      <p class="para">                         需要传入一个数组，数组中每个key必须和初始化rewrite route时$match参数中的带冒号的参数名一致                     </p>                 </dd>                                            <dt> <code class="parameter">query</code></dt>                  <dd>                      <p class="para">                         用户自定义的query string，将根据此路由规则拼接在url中                     </p>                 </dd>                       </dl>      </div>       <div class="refsect1 examples" id="refsect1-yaf-route-rewrite.assemble-examples">         <h3 class="title">范例</h3>         <div class="example" id="example-4966">             <p><strong>Example #1 <span class="function"><strong>Yaf_Route_Rewrite::assemble()</strong></span>example</strong></p>             <div class="example-contents">                 <div class="phpcode"><code><span style="color: #000000"> router&nbsp;=&nbsp;new&nbsp;Yaf_Router();<br /><br />$route&nbsp;&nbsp;=&nbsp;new&nbsp;Yaf_Route_Rewrite(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"/product/:name/:id//",<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'controller'&nbsp;=&gt;&nbsp;"product",<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array()<br />);<br /><br />$router-&gt;addRoute("rewrite",&nbsp;$route);<br /><br />var_dump($router-&gt;getRoute('rewrite')-&gt;assemble(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;':name'&nbsp;=&gt;&nbsp;'foo',<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;':id'&nbsp;=&gt;&nbsp;'bar',<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;':tmpkey1'&nbsp;=&gt;&nbsp;'tmpval1'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'tkey1'&nbsp;=&gt;&nbsp;'tval1',<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'tkey2'&nbsp;=&gt;&nbsp;'tval2'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />);</span> </code></div>             </div>              <div class="example-contents"><p>以上例程的输出类似于：</p></div>             <div class="example-contents screen">                 <div class="cdata"><pre> string(57) &quot;/product/foo/bar/tmpkey1/tmpval1/?tkey1=tval1&amp;tkey2=tval2&quot; </pre></div>             </div>         </div>     </div>       <div class="refsect1 returnvalues" id="refsect1-yaf-route-rewrite.assemble-returnvalues">         <h3 class="title">返回值</h3>         <p class="para">          </p>     </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-rewrite.php">Yaf_Route_Rewrite</a></div></div>
     * @return bool*/
    public function assemble(array $info, array $query = null){ }
}

/**
*<div id="class.yaf-route-regex" class="reference">   <h1 class="title">The Yaf_Route_Regex class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-route-regex.intro">    <h2 class="title">简介</h2>    <p class="para">      <strong class="classname">Yaf_Route_Regex</strong> 是Yaf内置的路由中最灵活的。    </p>   </div>     <div class="section" id="yaf-route-regex.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Route_Regex</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-route-interface.php" class="classname">Yaf_Route_Interface</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.route">$<var class="varname">_route</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.default">$<var class="varname">_default</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.maps">$<var class="varname">_maps</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.verify">$<var class="varname">_verify</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-regex.assemble.php" class="methodname">assemble</a></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span><span class="methodname"><a href="http://php.net/manual/zh/yaf-route-regex.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$match</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$route</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$map</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$verify</code></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-regex.route.php" class="methodname">route</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link Yaf_Route_Interface::assemble}</span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link Yaf_Route_Interface::route}</span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>      }</div>     </div>        <div class="section" id="yaf-route-regex.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-route-regex.props.route"><var class="varname"><var class="varname">_route</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-regex.props.default"><var class="varname"><var class="varname">_default</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-regex.props.maps"><var class="varname"><var class="varname">_maps</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-regex.props.verify"><var class="varname"><var class="varname">_verify</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Regex::assemble} — 组合url</li><li>{@link Yaf_Route_Regex::__construct} — The __construct purpose</li><li>{@link Yaf_Route_Regex::route} — The route purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Route_Regex extends Yaf_Router implements Yaf_Route_Interface {

    /**
     * @var string
     */
    protected $_route;
    /**
     * @var array
     */
    protected $_default;
    /**
     * @var array
     */
    protected $_maps;
    /**
     * @var array
     */
    protected $_verify;
    /**
     * @var string
     */
    protected $_reverse;

    /**
     * @link http://www.php.net/manual/en/yaf-route-regex.construct.php
     *
     * @param string $match A complete Regex pattern, will be used to match a request uri, if doesn't matched, Yaf_Route_Regex will return FALSE.
     * @param array $route <p>When the match pattern matches the request uri, Yaf_Route_Regex will use this to decide which m/c/a to routed.</p>
     * <br/>
     * <p>either of m/c/a in this array is optional, if you don't assign a specific value, it will be routed to default.</p>
     * @param array $map A array to assign name to the captures in the match result.
     * @param array $verify
     * @param string $reverse
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($match, array $route, array $map = null, array $verify = null, $reverse = null){ }

/**
*<div id="yaf-route-regex.route" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Route_Regex::route</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Regex::route</span> &mdash; <span class="dc-title">The route purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-route-regex.route-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Route_Regex::route</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    路由一个传进来的请求。   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-route-regex.route-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-route-regex.route-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果正则表达式是<span class="methodname"><strong>Yaf_Route_Regex::_construct()</strong></span>的第一个参数，并且匹配了请求uri，返回TRUE，否则返回FALSE。   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-regex.php">Yaf_Route_Regex</a></div></div>
     * @return bool If the pattern given by the first parameter of Yaf_Route_Regex::_construct() matches the request uri, return TRUE, otherwise return FALSE.*/
    public function route(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-route-regex.assemble" class="refentry">     <div class="refnamediv">         <h1 class="refname">Yaf_Route_Regex::assemble</h1>         <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Regex::assemble</span> &mdash; <span class="dc-title">组合url</span></p>      </div>      <div class="refsect1 description" id="refsect1-yaf-route-regex.assemble-description">         <h3 class="title">说明</h3>         <div class="methodsynopsis dc-description">             <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Yaf_Route_Regex::assemble</strong></span>              ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$info</code></span>             [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>         ] )</div>          <p class="para rdfs-comment">             根据指定参数和自定义参数将regex这个route组合成一个url         </p>         <p class="para">             在regex route使用assemble需要在初始化时指定reverse参数，否则将不能正常工作         </p>     </div>       <div class="refsect1 parameters" id="refsect1-yaf-route-regex.assemble-parameters">         <h3 class="title">参数</h3>         <dl>                               <dt> <code class="parameter">info</code></dt>                  <dd>                      <p class="para">                         需要传入一个数组，数组的key可以为:a、:c、:m，:a表示action，:c表示controller，:m表示module。                     </p>                 </dd>                                            <dt> <code class="parameter">query</code></dt>                  <dd>                      <p class="para">                         用户自定义的query string，将根据此路由规则拼接在url中                     </p>                 </dd>                       </dl>      </div>       <div class="refsect1 examples" id="refsect1-yaf-route-regex.assemble-examples">         <h3 class="title">范例</h3>         <div class="example" id="example-4962">             <p><strong>Example #1 <span class="function"><strong>Yaf_Route_Regex::assemble()</strong></span>example</strong></p>             <div class="example-contents">                 <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$router&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Regex</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"#^/product/([^/]+)/([^/])+#"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'controller'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"product"</span><span style="color: #007700">,&nbsp;&nbsp;</span><span style="color: #FF8000">//route&nbsp;to&nbsp;product&nbsp;controller,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'/:m/:c/:a'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"regex"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'regex'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':m'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'module'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':c'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'controller'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'action'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey2'&nbsp;</span><span style="color: #007700">=&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tval2'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span> </span> </code></div>             </div>              <div class="example-contents"><p>以上例程的输出类似于：</p></div>             <div class="example-contents screen">                 <div class="cdata"><pre> string(49) &quot;/module/controller/action?tkey1=tval1&amp;tkey2=tval2&quot; </pre></div>             </div>         </div>     </div>       <div class="refsect1 returnvalues" id="refsect1-yaf-route-regex.assemble-returnvalues">         <h3 class="title">返回值</h3>         <p class="para">          </p>     </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-regex.php">Yaf_Route_Regex</a></div></div>
     * @return bool*/
    public function assemble(array $info, array $query = null){ }
}

/**
*<div id="class.yaf-route-map" class="reference">   <h1 class="title">The Yaf_Route_Map class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-route-map.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-route-map.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Route_Map</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-map.php#yaf-route-map.props.ctl-router">$<var class="varname">_ctl_router</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>       <var class="varname"><a href="http://php.net/manual/zh/class.yaf-route-map.php#yaf-route-map.props.delimeter">$<var class="varname">_delimeter</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">             <span class="modifier">public</span>             <span class="type">string</span>              <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-map.assemble.php" class="methodname">assemble</a></span>              ( <span class="methodparam">                 <span class="type">array</span>                  <code class="parameter">$info</code>             </span>             [, <span class="methodparam">                 <span class="type">array</span>                  <code class="parameter">$query</code>             </span>         ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-map.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$controller_prefer</code><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code><span class="initializer"> = &#039;&#039;</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/yaf-route-map.route.php" class="methodname">route</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>     }</div>     </div>        <div class="section" id="yaf-route-map.props">    <h2 class="title">属性</h2>    <dl>            <dt id="yaf-route-map.props.ctl-router"><var class="varname"><var class="varname">_ctl_router</var></var></dt>       <dd>        <p class="para"/>      </dd>                 <dt id="yaf-route-map.props.delimeter"><var class="varname"><var class="varname">_delimeter</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Map::assemble} — 组合url</li><li>{@link Yaf_Route_Map::__construct} — The __construct purpose</li><li>{@link Yaf_Route_Map::route} — The route purpose</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
final class Yaf_Route_Map implements Yaf_Route_Interface {

    /**
     * @var string
     */
    protected $_ctl_router = '';
    /**
     * @var string
     */
    protected $_delimiter;

    /**
     * @link http://www.php.net/manual/en/yaf-route-map.construct.php
     *
     * @param bool $controller_prefer Whether the result should considering as controller or action
     * @param string $delimiter
     */
    public function __construct($controller_prefer = false, $delimiter = ''){ }

/**
*<div id="yaf-route-map.route" class="refentry">  <div class="refnamediv">   <h1 class="refname">Yaf_Route_Map::route</h1>   <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Map::route</span> &mdash; <span class="dc-title">The route purpose</span></p>   </div>   <div class="refsect1 description" id="refsect1-yaf-route-map.route-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Yaf_Route_Map::route</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract">Yaf_Request_Abstract</a></span> <code class="parameter">$request</code></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-yaf-route-map.route-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">request</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-yaf-route-map.route-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-map.php">Yaf_Route_Map</a></div></div>
     * @return bool*/
    public function route(Yaf_Request_Abstract $request){ }

/**
*<div id="yaf-route-map.assemble" class="refentry">     <div class="refnamediv">         <h1 class="refname">Yaf_Route_Map::assemble</h1>         <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Map::assemble</span> &mdash; <span class="dc-title">组合url</span></p>      </div>      <div class="refsect1 description" id="refsect1-yaf-route-map.assemble-description">         <h3 class="title">说明</h3>         <div class="methodsynopsis dc-description">             <span class="modifier">public</span>             <span class="type">string</span>              <span class="methodname"><strong>Yaf_Route_Map::assemble</strong></span>              ( <span class="methodparam">                 <span class="type">array</span>                  <code class="parameter">$info</code>             </span>             [, <span class="methodparam">                 <span class="type">array</span>                  <code class="parameter">$query</code>             </span>         ] )</div>          <p class="para rdfs-comment">             根据指定参数和自定义参数将map这个route组合成一个url         </p>     </div>       <div class="refsect1 parameters" id="refsect1-yaf-route-map.assemble-parameters">         <h3 class="title">参数</h3>         <dl>                               <dt>                      <code class="parameter">info</code>                 </dt>                  <dd>                      <p class="para">                         需要传入一个数组，数组的key可以为:a或者:c，:a表示action，:c表示controller。                     </p>                     <p class="para">                         当map route初始化时，controller_prefer为false时，这个参数需要传入:c。当controller_prefer                         为true时，这个参数需要传入:a。                     </p>                 </dd>                                            <dt>                      <code class="parameter">query</code>                 </dt>                  <dd>                      <p class="para">                         用户自定义的query string，将根据此路由规则拼接在url中                     </p>                 </dd>                       </dl>      </div>       <div class="refsect1 examples" id="refsect1-yaf-route-map.assemble-examples">         <h3 class="title">范例</h3>         <div class="example" id="example-4958">             <p><strong>Example #1 <span class="function"><strong>Yaf_Route_Map::assemble()</strong></span>example             </strong></p>             <div class="example-contents">                 <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$router&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$route&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Map</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"map"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'map'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':c'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'foo_bar'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval2'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />);<br /><br /></span><span style="color: #9876AA">$route&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Yaf_Route_Map</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'_'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"map"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'map'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">':a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'foo_bar'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tkey2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'tval2'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />);</span> </span> </code></div>             </div>              <div class="example-contents"><p>以上例程的输出类似于：</p></div>             <div class="example-contents screen">                 <div class="cdata"><pre> string(%d) &quot;/foo/bar?tkey1=tval1&amp;tkey2=tval2&quot; string(%d) &quot;/foo/bar/_/tkey1/tval1/tkey2/tval2&quot; </pre></div>             </div>         </div>     </div>       <div class="refsect1 returnvalues" id="refsect1-yaf-route-map.assemble-returnvalues">         <h3 class="title">返回值</h3>         <p class="para">          </p>     </div>   <div class="up"><a href="http://php.net/manual/zh/class.yaf-route-map.php">Yaf_Route_Map</a></div></div>
     * @return bool*/
    public function assemble(array $info, array $query = null){ }
}

/**
*<div id="class.yaf-exception-typeerror" class="reference">   <h1 class="title">The Yaf_Exception_TypeError class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-typeerror.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-typeerror.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_TypeError</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>          </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_TypeError extends Yaf_Exception {

}

/**
*<div id="class.yaf-exception-startuperror" class="reference">   <h1 class="title">The Yaf_Exception_StartupError class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-startuperror.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-startuperror.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_StartupError</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>          </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_StartupError extends Yaf_Exception {

}

/**
*<div id="class.yaf-exception-routerfailed" class="reference">   <h1 class="title">The Yaf_Exception_RouterFailed class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-routerfailed.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-routerfailed.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_RouterFailed</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>          </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_RouterFailed extends Yaf_Exception {

}

/**
*<div id="class.yaf-exception-dispatchfailed" class="reference">   <h1 class="title">The Yaf_Exception_DispatchFailed class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-dispatchfailed.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-dispatchfailed.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_DispatchFailed</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>          </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_DispatchFailed extends Yaf_Exception {

}

/**
*<div id="class.yaf-exception-loadfailed" class="reference">   <h1 class="title">The Yaf_Exception_LoadFailed class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-loadfailed.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-loadfailed.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_LoadFailed</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>          </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_LoadFailed extends Yaf_Exception {

}

/**
*<div id="class.yaf-exception-loadfailed-module" class="reference">   <h1 class="title">The Yaf_Exception_LoadFailed_Module class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-loadfailed-module.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-loadfailed-module.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_LoadFailed_Module</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>         </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_LoadFailed_Module extends Yaf_Exception_LoadFailed {

}

/**
*<div id="class.yaf-exception-loadfailed-controller" class="reference">   <h1 class="title">The Yaf_Exception_LoadFailed_Controller class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-loadfailed-controller.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-loadfailed-controller.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_LoadFailed_Controller</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>    </div>         </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_LoadFailed_Controller extends Yaf_Exception_LoadFailed {

}

/**
*<div id="class.yaf-exception-loadfailed-action" class="reference">   <h1 class="title">The Yaf_Exception_LoadFailed_Action class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-loadfailed-action.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-loadfailed-action.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_LoadFailed_Action</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>          </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_LoadFailed_Action extends Yaf_Exception_LoadFailed {

}

/**
*<div id="class.yaf-exception-loadfailed-view" class="reference">   <h1 class="title">The Yaf_Exception_LoadFailed_View class</h1>     <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>     <div class="section" id="yaf-exception-loadfailed-view.intro">    <h2 class="title">简介</h2>    <p class="para">     </p>   </div>     <div class="section" id="yaf-exception-loadfailed-view.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Yaf_Exception_LoadFailed_View</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>          <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link Yaf_Exception::__construct}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">{@link Yaf_Exception::getPrevious}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>          </div>  <div class="up"><a href="http://php.net/manual/zh/book.yaf.php">Yaf</a></div></div>
*/
class Yaf_Exception_LoadFailed_View extends Yaf_Exception_LoadFailed {

}
