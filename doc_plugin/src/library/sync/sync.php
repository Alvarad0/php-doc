<?php
/**
*<div id="class.syncmutex" class="reference">   <h1 class="title">The SyncMutex class</h1>     <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>     <div class="section" id="syncmutex.intro">    <h2 class="title">简介</h2>    <p class="para">  A cross-platform, native implementation of named and unnamed countable mutex objects.    </p>    <p class="para">  A mutex is a mutual exclusion object that restricts access to a shared resource (e.g. a file) to a single instance.  Countable mutexes acquire the mutex a single time and internally track the number of times the mutex is locked.  The mutex is unlocked as soon as it goes out of scope or is unlocked the same number of times that it was locked.    </p>   </div>     <div class="section" id="syncmutex.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SyncMutex</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/syncmutex.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncmutex.lock.php" class="methodname">lock</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncmutex.unlock.php" class="methodname">unlock</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$all</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>     }</div>     </div>   </div>                          <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SyncMutex::__construct} — Constructs a new SyncMutex object</li><li>{@link SyncMutex::lock} — Waits for an exclusive lock</li><li>{@link SyncMutex::unlock} — Unlocks the mutex</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.sync.php">Sync</a></div></div>
*/
class SyncMutex {
    /**
     * Constructs a new SyncMutex object
     *
     * Constructs a named or unnamed countable mutex.
     *
     * @param string $name [optional] The name of the mutex if this is a named mutex object. If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @throws Exception if the mutex cannot be created or opened
     * @link http://php.net/manual/en/syncmutex.construct.php
     */
    public function __construct ( string $name ) {}

/**
*<div id="syncmutex.lock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncMutex::lock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncMutex::lock</span> &mdash; <span class="dc-title">Waits for an exclusive lock</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncmutex.lock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncMutex::lock</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">  Obtains an exclusive lock on a SyncMutex object.  If the lock is already acquired, then this increments an internal counter.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncmutex.lock-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">wait</code></dt>      <dd>       <p class="para">  The number of milliseconds to wait for the exclusive lock.  A value of -1 is infinite.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncmutex.lock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the lock was obtained, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncmutex.lock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4459">    <p><strong>Example #1 <span class="function"><strong>SyncMutex::lock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$mutex&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncMutex</span><span style="color: #007700">(</span><span style="color: #DD0000">"UniqueName"</span><span style="color: #007700">);<br /><br />if&nbsp;(!</span><span style="color: #9876AA">$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">(</span><span style="color: #9876AA">3000</span><span style="color: #007700">))<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Unable&nbsp;to&nbsp;lock&nbsp;mutex."</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;exit();<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /><br /></span><span style="color: #9876AA">$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncmutex.lock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncMutex::unlock()} - Unlocks the mutex</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncmutex.php">SyncMutex</a></div></div>
     * @return bool TRUE if the lock was obtained, FALSE otherwise.*/
    public function lock ( int $wait = -1 ) {}

/**
*<div id="syncmutex.unlock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncMutex::unlock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncMutex::unlock</span> &mdash; <span class="dc-title">Unlocks the mutex</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncmutex.unlock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncMutex::unlock</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$all</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">  Decreases the internal counter of a SyncMutex object.  When the internal counter reaches zero, the actual lock on the object is released.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncmutex.unlock-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">all</code></dt>      <dd>       <p class="para">  Specifies whether or not to set the internal counter to zero and therefore release the lock.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncmutex.unlock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the unlock operation was successful, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncmutex.unlock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4460">    <p><strong>Example #1 <span class="function"><strong>SyncMutex::unlock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$mutex&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncMutex</span><span style="color: #007700">(</span><span style="color: #DD0000">"UniqueName"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /><br /></span><span style="color: #9876AA">$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncmutex.unlock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncMutex::lock()} - Waits for an exclusive lock</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncmutex.php">SyncMutex</a></div></div>
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.*/
    public function unlock ( bool $all = FALSE ) {}
    }

/**
*<div id="class.syncsemaphore" class="reference">   <h1 class="title">The SyncSemaphore class</h1>     <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>     <div class="section" id="syncsemaphore.intro">    <h2 class="title">简介</h2>    <p class="para">  A cross-platform, native implementation of named and unnamed sempahore objects.    </p>    <p class="para">  A semaphore restricts access to a limited resource to a limited number of instances.  Semaphores differ from mutexes in that they can allow more than one instance to  access a resource at one time while a mutex only allows one instance at a time.    </p>   </div>     <div class="section" id="syncsemaphore.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SyncSemaphore</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsemaphore.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$initialval</code><span class="initializer"> = 1</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autounlock</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsemaphore.lock.php" class="methodname">lock</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsemaphore.unlock.php" class="methodname">unlock</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$prevcount</code></span>   ] )</div>     }</div>     </div>   </div>                          <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SyncSemaphore::__construct} — Constructs a new SyncSemaphore object</li><li>{@link SyncSemaphore::lock} — Decreases the count of the semaphore or waits</li><li>{@link SyncSemaphore::unlock} — Increases the count of the semaphore</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.sync.php">Sync</a></div></div>
*/
class SyncSemaphore {
    /**
     * Constructs a new SyncSemaphore object
     *
     * Constructs a named or unnamed semaphore.
     *
     * @param string $name       [optional] The name of the semaphore if this is a named semaphore object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param int    $initialval [optional] The initial value of the semaphore. This is the number of locks that may be obtained.
     * @param bool   $autounlock [optional] Specifies whether or not to automatically unlock the semaphore at the conclusion of the PHP script. Warning: If an object is: A named semaphore with an autounlock of FALSE, the object is locked, and the PHP script concludes before the object is unlocked, then the underlying semaphore will end up in an inconsistent state.
     * @throws Exception if the semaphore cannot be created or opened
     * @link http://php.net/manual/en/syncsemaphore.construct.php
     */
    public function __construct ( string $name, int $initialval = 1, bool $autounlock = TRUE ) {}

/**
*<div id="syncsemaphore.lock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncSemaphore::lock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncSemaphore::lock</span> &mdash; <span class="dc-title">Decreases the count of the semaphore or waits</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncsemaphore.lock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncSemaphore::lock</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">  Decreases the count of a SyncSemaphore object or waits until the semaphore becomes non-zero.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncsemaphore.lock-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">wait</code></dt>      <dd>       <p class="para">  The number of milliseconds to wait for the semaphore.  A value of -1 is infinite.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncsemaphore.lock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the lock operation was successful, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncsemaphore.lock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4462">    <p><strong>Example #1 <span class="function"><strong>SyncSemaphore::lock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$semaphore&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncSemaphore</span><span style="color: #007700">(</span><span style="color: #DD0000">"LimitedResource_2clients"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />if&nbsp;(!</span><span style="color: #9876AA">$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">(</span><span style="color: #9876AA">3000</span><span style="color: #007700">))<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Unable&nbsp;to&nbsp;lock&nbsp;semaphore."</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;exit();<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /><br /></span><span style="color: #9876AA">$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncsemaphore.lock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncSemaphore::unlock()} - Increases the count of the semaphore</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncsemaphore.php">SyncSemaphore</a></div></div>
     * @return bool TRUE if the lock operation was successful, FALSE otherwise.*/
    public function lock ( int $wait = -1 ) {}

/**
*<div id="syncsemaphore.unlock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncSemaphore::unlock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncSemaphore::unlock</span> &mdash; <span class="dc-title">Increases the count of the semaphore</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncsemaphore.unlock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncSemaphore::unlock</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$prevcount</code></span>   ] )</div>    <p class="para rdfs-comment">  Increases the count of a SyncSemaphore object.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncsemaphore.unlock-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">prevcount</code></dt>      <dd>       <p class="para">  Returns the previous count of the semaphore.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncsemaphore.unlock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the unlock operation was successful, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncsemaphore.unlock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4463">    <p><strong>Example #1 <span class="function"><strong>SyncSemaphore::unlock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$semaphore&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncSemaphore</span><span style="color: #007700">(</span><span style="color: #DD0000">"LimitedResource_2clients"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />if&nbsp;(!</span><span style="color: #9876AA">$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">(</span><span style="color: #9876AA">3000</span><span style="color: #007700">))<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Unable&nbsp;to&nbsp;lock&nbsp;semaphore."</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;exit();<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /><br /></span><span style="color: #9876AA">$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncsemaphore.unlock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncSemaphore::lock()} - Decreases the count of the semaphore or waits</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncsemaphore.php">SyncSemaphore</a></div></div>
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.*/
    public function unlock ( int &$prevcount ) {}
    }

/**
*<div id="class.syncevent" class="reference">   <h1 class="title">The SyncEvent class</h1>     <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>     <div class="section" id="syncevent.intro">    <h2 class="title">简介</h2>    <p class="para">  A cross-platform, native implementation of named and unnamed event objects.  Both automatic and manual event objects are supported.    </p>    <p class="para">  An event object waits, without polling, for the object to be fired/set.  One instance waits on the event object while another instance fires/sets  the event.  Event objects are useful wherever a long-running process would  otherwise poll a resource (e.g. checking to see if uploaded data needs to  be processed).    </p>   </div>     <div class="section" id="syncevent.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SyncEvent</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/syncevent.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$manual</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$prefire</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncevent.fire.php" class="methodname">fire</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncevent.reset.php" class="methodname">reset</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncevent.wait.php" class="methodname">wait</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div>     }</div>     </div>   </div>                                 <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SyncEvent::__construct} — Constructs a new SyncEvent object</li><li>{@link SyncEvent::fire} — Fires/sets the event</li><li>{@link SyncEvent::reset} — Resets a manual event</li><li>{@link SyncEvent::wait} — Waits for the event to be fired/set</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.sync.php">Sync</a></div></div>
*/
class SyncEvent {
    /**
     * SyncEvent constructor.
     *
     * @param string $name    The name of the event if this is a named event object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param bool   $manual  [optional] Specifies whether or not the event object must be reset manually. Note: Manual reset event objects allow all waiting processes through until the object is reset.
     * @param bool   $prefire [optional] Specifies whether or not to prefire (signal) the event object. Note: Only has impact if the calling process/thread is the first to create the object.
     * @throws Exception if the event object cannot be created or opened
     * @since 1.0.0
     * @since 1.1.0 Added $prefire
     * @link http://php.net/manual/en/syncevent.construct.php
     */
    public function __construct ( string $name, bool $manual = FALSE, bool $prefire = FALSE ) {}

/**
*<div id="syncevent.fire" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncEvent::fire</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncEvent::fire</span> &mdash; <span class="dc-title">Fires/sets the event</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncevent.fire-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncEvent::fire</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">  Fires/sets a SyncEvent object.  Lets multiple threads through that are waiting  if the event object was created with a manual value of TRUE.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncevent.fire-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-syncevent.fire-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the event was fired, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncevent.fire-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4465">    <p><strong>Example #1 <span class="function"><strong>SyncEvent::fire()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;In&nbsp;a&nbsp;web&nbsp;application:<br /></span><span style="color: #9876AA">$event&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fire</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;In&nbsp;a&nbsp;cron&nbsp;job:<br /></span><span style="color: #9876AA">$event&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wait</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncevent.fire-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncEvent::reset()} - Resets a manual event</span></li>    <li class="member"><span class="methodname">{@link SyncEvent::wait()} - Waits for the event to be fired/set</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncevent.php">SyncEvent</a></div></div>
     * @return bool TRUE if the event was fired, FALSE otherwise.*/
    public function fire () {}

/**
*<div id="syncevent.reset" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncEvent::reset</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncEvent::reset</span> &mdash; <span class="dc-title">Resets a manual event</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncevent.reset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncEvent::reset</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">  Resets a SyncEvent object that has been fired/set.  Only valid for manual event objects.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncevent.reset-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-syncevent.reset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean value of TRUE if the object was successfully reset, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncevent.reset-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4466">    <p><strong>Example #1 <span class="function"><strong>SyncEvent::reset()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;In&nbsp;a&nbsp;web&nbsp;application:<br /></span><span style="color: #9876AA">$event&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"DemoApplication"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wait</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;In&nbsp;a&nbsp;cron&nbsp;job:<br /></span><span style="color: #9876AA">$event&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"DemoApplication"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">reset</span><span style="color: #007700">();<br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;Do&nbsp;some&nbsp;maintenance&nbsp;task(s)&nbsp;...&nbsp;<br /></span><span style="color: #9876AA">$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fire</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncevent.reset-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncEvent::fire()} - Fires/sets the event</span></li>    <li class="member"><span class="methodname"><strong>SyncEvent::reset()</strong></span></li>    <li class="member"><span class="methodname">{@link SyncEvent::wait()} - Waits for the event to be fired/set</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncevent.php">SyncEvent</a></div></div>
     * @return bool TRUE if the object was successfully reset, FALSE otherwise.*/
    public function reset () {}

/**
*<div id="syncevent.wait" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncEvent::wait</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncEvent::wait</span> &mdash; <span class="dc-title">Waits for the event to be fired/set</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncevent.wait-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncEvent::wait</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">  Waits for the SyncEvent object to be fired.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncevent.wait-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">wait</code></dt>      <dd>       <p class="para">  The number of milliseconds to wait for the event to be fired.  A value of -1 is infinite.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncevent.wait-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the event was fired, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncevent.wait-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4467">    <p><strong>Example #1 <span class="function"><strong>SyncEvent::wait()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;In&nbsp;a&nbsp;web&nbsp;application:<br /></span><span style="color: #9876AA">$event&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fire</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;In&nbsp;a&nbsp;cron&nbsp;job:<br /></span><span style="color: #9876AA">$event&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wait</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncevent.wait-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncEvent::fire()} - Fires/sets the event</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncevent.php">SyncEvent</a></div></div>
     * @return bool TRUE if the event was fired, FALSE otherwise.*/
    public function wait ( int $wait = -1 ) {}
    }

/**
*<div id="class.syncreaderwriter" class="reference">   <h1 class="title">The SyncReaderWriter class</h1>     <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>     <div class="section" id="syncreaderwriter.intro">    <h2 class="title">简介</h2>    <p class="para">  A cross-platform, native implementation of named and unnamed reader-writer objects.    </p>    <p class="para">  A reader-writer object allows many readers or one writer to access a resource.  This is an efficient solution for managing resources where access will primarily be  read-only but exclusive write access is occasionally necessary.    </p>   </div>     <div class="section" id="syncreaderwriter.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SyncReaderWriter</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/syncreaderwriter.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autounlock</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncreaderwriter.readlock.php" class="methodname">readlock</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncreaderwriter.readunlock.php" class="methodname">readunlock</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncreaderwriter.writelock.php" class="methodname">writelock</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncreaderwriter.writeunlock.php" class="methodname">writeunlock</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>   </div>                                        <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SyncReaderWriter::__construct} — Constructs a new SyncReaderWriter object</li><li>{@link SyncReaderWriter::readlock} — Waits for a read lock</li><li>{@link SyncReaderWriter::readunlock} — Releases a read lock</li><li>{@link SyncReaderWriter::writelock} — Waits for an exclusive write lock</li><li>{@link SyncReaderWriter::writeunlock} — Releases a write lock</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.sync.php">Sync</a></div></div>
*/
class SyncReaderWriter {
    /**
     * Constructs a new SyncReaderWriter object
     *
     * Constructs a named or unnamed reader-writer object.
     *
     * @param string $name       [optional] The name of the reader-writer if this is a named reader-writer object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param bool   $autounlock [optional] Specifies whether or not to automatically unlock the reader-writer at the conclusion of the PHP script. Warning: If an object is: A named reader-writer with an autounlock of FALSE, the object is locked for either reading or writing, and the PHP script concludes before the object is unlocked, then the underlying objects will end up in an inconsistent state.
     * @throws Exception if the reader-writer cannot be created or opened.
     * @link http://php.net/manual/en/syncreaderwriter.construct.php
     */
    public function __construct ( string $name, bool $autounlock = TRUE ) {}

/**
*<div id="syncreaderwriter.readlock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncReaderWriter::readlock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::readlock</span> &mdash; <span class="dc-title">Waits for a read lock</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncreaderwriter.readlock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncReaderWriter::readlock</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">  Obtains a read lock on a SyncReaderWriter object.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncreaderwriter.readlock-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">wait</code></dt>      <dd>       <p class="para">  The number of milliseconds to wait for a lock.  A value of -1 is infinite.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.readlock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the lock was obtained, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncreaderwriter.readlock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4469">    <p><strong>Example #1 <span class="function"><strong>SyncReaderWriter::readlock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$readwrite&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readlock</span><span style="color: #007700">();<br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readunlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncreaderwriter.readlock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncReaderWriter::readunlock()} - Releases a read lock</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncreaderwriter.php">SyncReaderWriter</a></div></div>
     * @return bool TRUE if the lock was obtained, FALSE otherwise.*/
    public function readlock ( int $wait = -1 ) {}

/**
*<div id="syncreaderwriter.readunlock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncReaderWriter::readunlock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::readunlock</span> &mdash; <span class="dc-title">Releases a read lock</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncreaderwriter.readunlock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncReaderWriter::readunlock</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">  Releases a read lock on a SyncReaderWriter object.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncreaderwriter.readunlock-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.readunlock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the unlock operation was successful, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncreaderwriter.readunlock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4470">    <p><strong>Example #1 <span class="function"><strong>SyncReaderWriter::readunlock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$readwrite&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readlock</span><span style="color: #007700">();<br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readunlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncreaderwriter.readunlock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncReaderWriter::readlock()} - Waits for a read lock</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncreaderwriter.php">SyncReaderWriter</a></div></div>
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.*/
    public function readunlock () {}

/**
*<div id="syncreaderwriter.writelock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncReaderWriter::writelock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::writelock</span> &mdash; <span class="dc-title">Waits for an exclusive write lock</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncreaderwriter.writelock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncReaderWriter::writelock</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$wait</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">  Obtains an exclusive write lock on a SyncReaderWriter object.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncreaderwriter.writelock-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">wait</code></dt>      <dd>       <p class="para">  The number of milliseconds to wait for a lock.  A value of -1 is infinite.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.writelock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the lock was obtained, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncreaderwriter.writelock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4471">    <p><strong>Example #1 <span class="function"><strong>SyncReaderWriter::writelock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$readwrite&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writelock</span><span style="color: #007700">();<br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeunlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncreaderwriter.writelock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncReaderWriter::writeunlock()} - Releases a write lock</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncreaderwriter.php">SyncReaderWriter</a></div></div>
     * @return bool TRUE if the lock was obtained, FALSE otherwise.*/
    public function writelock ( int $wait = -1 ) {}

/**
*<div id="syncreaderwriter.writeunlock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncReaderWriter::writeunlock</h1>   <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::writeunlock</span> &mdash; <span class="dc-title">Releases a write lock</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncreaderwriter.writeunlock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncReaderWriter::writeunlock</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">  Releases a write lock on a SyncReaderWriter object.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncreaderwriter.writeunlock-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.writeunlock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the unlock operation was successful, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncreaderwriter.writeunlock-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4472">    <p><strong>Example #1 <span class="function"><strong>SyncReaderWriter::writeunlock()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$readwrite&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writelock</span><span style="color: #007700">();<br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /></span><span style="color: #9876AA">$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeunlock</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncreaderwriter.writeunlock-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncReaderWriter::writelock()} - Waits for an exclusive write lock</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncreaderwriter.php">SyncReaderWriter</a></div></div>
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.*/
    public function writeunlock () {}
    }

/**
*<div id="class.syncsharedmemory" class="reference">   <h1 class="title">The SyncSharedMemory class</h1>     <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.1.0)</p>     <div class="section" id="syncsharedmemory.intro">    <h2 class="title">简介</h2>    <p class="para">  A cross-platform, native, consistent implementation of named shared memory  objects.    </p>    <p class="para">  Shared memory lets two separate processes communicate without the need for  complex pipes or sockets.  There are several integer-based shared memory  implementations for PHP.  Named shared memory is an alternative.    </p>    <p class="para">  Synchronization objects (e.g. SyncMutex) are still required to protect most  uses of shared memory.    </p>   </div>     <div class="section" id="syncsharedmemory.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SyncSharedMemory</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsharedmemory.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsharedmemory.first.php" class="methodname">first</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsharedmemory.read.php" class="methodname">read</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsharedmemory.size.php" class="methodname">size</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/syncsharedmemory.write.php" class="methodname">write</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code><span class="initializer"> = 0</span></span>   ]] )</div>     }</div>     </div>   </div>                                        <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SyncSharedMemory::__construct} — Constructs a new SyncSharedMemory object</li><li>{@link SyncSharedMemory::first} — Check to see if the object is the first instance system-wide of named shared memory</li><li>{@link SyncSharedMemory::read} — Copy data from named shared memory</li><li>{@link SyncSharedMemory::size} — Returns the size of the named shared memory</li><li>{@link SyncSharedMemory::write} — Copy data to named shared memory</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.sync.php">Sync</a></div></div>
*/
class SyncSharedMemory {
    /**
     * Constructs a new SyncSharedMemory object
     *
     * Constructs a named shared memory object.
     *
     * @param string $name The name of the shared memory object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param int    $size The size, in bytes, of shared memory to reserve. Note: The amount of memory cannot be resized later. Request sufficient storage up front.
     * @throws Exception if the shared memory object cannot be created or opened.
     * @link http://php.net/manual/en/syncsharedmemory.construct.php
     */
    public function __construct ( string $name, int $size ) {}

/**
*<div id="syncsharedmemory.first" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncSharedMemory::first</h1>   <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::first</span> &mdash; <span class="dc-title">Check to see if the object is the first instance system-wide of named shared memory</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncsharedmemory.first-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncSharedMemory::first</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">  Retrieves the system-wide first instance status of a SyncSharedMemory object.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncsharedmemory.first-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.first-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A boolean of TRUE if the object is the first instance system-wide, FALSE otherwise.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncsharedmemory.first-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4474">    <p><strong>Example #1 <span class="function"><strong>SyncSharedMemory::first()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$mem&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">())<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Do&nbsp;first&nbsp;time&nbsp;initialization&nbsp;work&nbsp;here.<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$mem2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$mem2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncsharedmemory.first-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncSharedMemory::write()} - Copy data to named shared memory</span></li>    <li class="member"><span class="methodname">{@link SyncSharedMemory::read()} - Copy data from named shared memory</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncsharedmemory.php">SyncSharedMemory</a></div></div>
     * @return bool TRUE if the object is the first instance system-wide, FALSE otherwise.*/
    public function first () {}

/**
*<div id="syncsharedmemory.read" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncSharedMemory::read</h1>   <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::read</span> &mdash; <span class="dc-title">Copy data from named shared memory</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncsharedmemory.read-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><strong>SyncSharedMemory::read</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span>   ]] )</div>    <p class="para rdfs-comment">  Copies data from named shared memory.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncsharedmemory.read-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">start</code></dt>      <dd>       <p class="para">  The start/offset, in bytes, to begin reading.      </p>      <blockquote class="note"><p><strong class="note">Note</strong>:        <p class="para">  If the value is negative, the starting position will begin at the specified  number of bytes from the end of the shared memory segment.       </p>      </p></blockquote>     </dd>              <dt> <code class="parameter">length</code></dt>      <dd>       <p class="para">  The number of bytes to read.      </p>      <blockquote class="note"><p><strong class="note">Note</strong>:        <p class="para">  If unspecified, reading will stop at the end of the shared memory segment.       </p>       <p class="para">  If the value is negative, reading will stop the specified number of bytes  from the end of the shared memory segment.       </p>      </p></blockquote>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.read-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  A string containing the data read from shared memory.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncsharedmemory.read-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4475">    <p><strong>Example #1 <span class="function">{@link SyncSharedMemory::__construct()}</span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;You&nbsp;will&nbsp;probably&nbsp;need&nbsp;to&nbsp;protect&nbsp;shared&nbsp;memory&nbsp;with&nbsp;other&nbsp;synchronization&nbsp;objects.<br />//&nbsp;Shared&nbsp;memory&nbsp;goes&nbsp;away&nbsp;when&nbsp;the&nbsp;last&nbsp;reference&nbsp;to&nbsp;it&nbsp;disappears.<br /></span><span style="color: #9876AA">$mem&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">())<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Do&nbsp;first&nbsp;time&nbsp;initialization&nbsp;work&nbsp;here.<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #DD0000">"report.txt"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">read</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;-</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(3) &quot;ort&quot; </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncsharedmemory.read-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncSharedMemory::__construct()} - Constructs a new SyncSharedMemory object</span></li>    <li class="member"><span class="methodname">{@link SyncSharedMemory::first()} - Check to see if the object is the first instance system-wide of named shared memory</span></li>    <li class="member"><span class="methodname">{@link SyncSharedMemory::write()} - Copy data to named shared memory</span></li>    <li class="member"><span class="methodname"><strong>SyncSharedMemory::read()</strong></span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncsharedmemory.php">SyncSharedMemory</a></div></div>
     * @return string containing the data read from shared memory.*/
    public function read ( int $start = 0, int $length ) {}

/**
*<div id="syncsharedmemory.size" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncSharedMemory::size</h1>   <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::size</span> &mdash; <span class="dc-title">Returns the size of the named shared memory</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncsharedmemory.size-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SyncSharedMemory::size</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">  Retrieves the shared memory size of a SyncSharedMemory object.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncsharedmemory.size-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.size-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  An integer containing the size of the shared memory.  This will be the same size that was passed to the constructor.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncsharedmemory.size-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4476">    <p><strong>Example #1 <span class="function"><strong>SyncSharedMemory::size()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$mem&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">size</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> int(1024) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncsharedmemory.size-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncSharedMemory::__construct()} - Constructs a new SyncSharedMemory object</span></li>    <li class="member"><span class="methodname">{@link SyncSharedMemory::write()} - Copy data to named shared memory</span></li>    <li class="member"><span class="methodname">{@link SyncSharedMemory::read()} - Copy data from named shared memory</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncsharedmemory.php">SyncSharedMemory</a></div></div>
     * @return int containing the size of the shared memory. This will be the same size that was passed to the constructor.*/
    public function size () {}

/**
*<div id="syncsharedmemory.write" class="refentry">  <div class="refnamediv">   <h1 class="refname">SyncSharedMemory::write</h1>   <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::write</span> &mdash; <span class="dc-title">Copy data to named shared memory</span></p>   </div>   <div class="refsect1 description" id="refsect1-syncsharedmemory.write-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><strong>SyncSharedMemory::write</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code><span class="initializer"> = 0</span></span>   ]] )</div>    <p class="para rdfs-comment">  Copies data to named shared memory.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-syncsharedmemory.write-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">string</code></dt>      <dd>       <p class="para">  The data to write to shared memoy.      </p>      <blockquote class="note"><p><strong class="note">Note</strong>:        <p class="para">  If the size of the data exceeds the size of the shared memory, the number of  bytes written returned will be less than the length of the input.       </p>      </p></blockquote>     </dd>              <dt> <code class="parameter">start</code></dt>      <dd>       <p class="para">  The start/offset, in bytes, to begin writing.      </p>      <blockquote class="note"><p><strong class="note">Note</strong>:        <p class="para">  If the value is negative, the starting position will begin at the specified  number of bytes from the end of the shared memory segment.       </p>      </p></blockquote>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.write-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">  An integer containing the number of bytes written to shared memory.   </p>  </div>    <div class="refsect1 examples" id="refsect1-syncsharedmemory.write-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4477">    <p><strong>Example #1 <span class="function"><strong>SyncSharedMemory::write()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;You&nbsp;will&nbsp;probably&nbsp;need&nbsp;to&nbsp;protect&nbsp;shared&nbsp;memory&nbsp;with&nbsp;other&nbsp;synchronization&nbsp;objects.<br />//&nbsp;Shared&nbsp;memory&nbsp;goes&nbsp;away&nbsp;when&nbsp;the&nbsp;last&nbsp;reference&nbsp;to&nbsp;it&nbsp;disappears.<br /></span><span style="color: #9876AA">$mem&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">())<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Do&nbsp;first&nbsp;time&nbsp;initialization&nbsp;work&nbsp;here.<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #DD0000">"report.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #DD0000">"report.txt"</span><span style="color: #007700">,&nbsp;-</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> int(10) int(3) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-syncsharedmemory.write-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link SyncSharedMemory::__construct()} - Constructs a new SyncSharedMemory object</span></li>    <li class="member"><span class="methodname">{@link SyncSharedMemory::first()} - Check to see if the object is the first instance system-wide of named shared memory</span></li>    <li class="member"><span class="methodname"><strong>SyncSharedMemory::write()</strong></span></li>    <li class="member"><span class="methodname">{@link SyncSharedMemory::read()} - Copy data from named shared memory</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.syncsharedmemory.php">SyncSharedMemory</a></div></div>
     * @return int containing the number of bytes written to shared memory.*/
    public function write ( string $string, int $start = 0 ) {}
    }
