<?php

// Start of SPL v.0.2

/**
*<div id="class.splfileinfo" class="reference">   <h1 class="title">The SplFileInfo class</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p>     <div class="section" id="splfileinfo.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplFileInfo class offers a high-level object oriented interface to     information for an individual file.    </p>   </div>     <div class="section" id="splfileinfo.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplFileInfo</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$file_name</span></span>    )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getatime.php" class="methodname" style="color:#CC7832">getATime</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getbasename.php" class="methodname" style="color:#CC7832">getBasename</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$suffix</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getctime.php" class="methodname" style="color:#CC7832">getCTime</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getextension.php" class="methodname" style="color:#CC7832">getExtension</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">SplFileInfo</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getfileinfo.php" class="methodname" style="color:#CC7832">getFileInfo</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getfilename.php" class="methodname" style="color:#CC7832">getFilename</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getgroup.php" class="methodname" style="color:#CC7832">getGroup</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getinode.php" class="methodname" style="color:#CC7832">getInode</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getlinktarget.php" class="methodname" style="color:#CC7832">getLinkTarget</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getmtime.php" class="methodname" style="color:#CC7832">getMTime</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getowner.php" class="methodname" style="color:#CC7832">getOwner</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getpath.php" class="methodname" style="color:#CC7832">getPath</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">SplFileInfo</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getpathinfo.php" class="methodname" style="color:#CC7832">getPathInfo</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getpathname.php" class="methodname" style="color:#CC7832">getPathname</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getperms.php" class="methodname" style="color:#CC7832">getPerms</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getrealpath.php" class="methodname" style="color:#CC7832">getRealPath</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.getsize.php" class="methodname" style="color:#CC7832">getSize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.gettype.php" class="methodname" style="color:#CC7832">getType</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.isdir.php" class="methodname" style="color:#CC7832">isDir</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.isexecutable.php" class="methodname" style="color:#CC7832">isExecutable</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.isfile.php" class="methodname" style="color:#CC7832">isFile</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.islink.php" class="methodname" style="color:#CC7832">isLink</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.isreadable.php" class="methodname" style="color:#CC7832">isReadable</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.iswritable.php" class="methodname" style="color:#CC7832">isWritable</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">SplFileObject</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.openfile.php" class="methodname" style="color:#CC7832">openFile</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$open_mode</span><span class="initializer"> = &quot;r&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$use_include_path</span><span class="initializer"> = <strong><span>FALSE</span></strong></span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span><span class="initializer"> = <strong><span>NULL</span></strong></span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.setfileclass.php" class="methodname" style="color:#CC7832">setFileClass</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span><span class="initializer"> = &quot;SplFileObject&quot;</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.setinfoclass.php" class="methodname" style="color:#CC7832">setInfoClass</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span><span class="initializer"> = &quot;SplFileInfo&quot;</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileinfo.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>   </div>                                                                                                                                                                                                                  <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplFileInfo::__construct} — Construct a new SplFileInfo object</li><li>{@link SplFileInfo::getATime} — Gets last access time of the file</li><li>{@link SplFileInfo::getBasename} — Gets the base name of the file</li><li>{@link SplFileInfo::getCTime} — 获取文件 inode 修改时间</li><li>{@link SplFileInfo::getExtension} — Gets the file extension</li><li>{@link SplFileInfo::getFileInfo} — Gets an SplFileInfo object for the file</li><li>{@link SplFileInfo::getFilename} — Gets the filename</li><li>{@link SplFileInfo::getGroup} — Gets the file group</li><li>{@link SplFileInfo::getInode} — Gets the inode for the file</li><li>{@link SplFileInfo::getLinkTarget} — Gets the target of a link</li><li>{@link SplFileInfo::getMTime} — Gets the last modified time</li><li>{@link SplFileInfo::getOwner} — Gets the owner of the file</li><li>{@link SplFileInfo::getPath} — Gets the path without filename</li><li>{@link SplFileInfo::getPathInfo} — Gets an SplFileInfo object for the path</li><li>{@link SplFileInfo::getPathname} — Gets the path to the file</li><li>{@link SplFileInfo::getPerms} — Gets file permissions</li><li>{@link SplFileInfo::getRealPath} — Gets absolute path to file</li><li>{@link SplFileInfo::getSize} — Gets file size</li><li>{@link SplFileInfo::getType} — Gets file type</li><li>{@link SplFileInfo::isDir} — Tells if the file is a directory</li><li>{@link SplFileInfo::isExecutable} — Tells if the file is executable</li><li>{@link SplFileInfo::isFile} — Tells if the object references a regular file</li><li>{@link SplFileInfo::isLink} — Tells if the file is a link</li><li>{@link SplFileInfo::isReadable} — Tells if file is readable</li><li>{@link SplFileInfo::isWritable} — Tells if the entry is writable</li><li>{@link SplFileInfo::openFile} — Gets an SplFileObject object for the file</li><li>{@link SplFileInfo::setFileClass} — Sets the class used with SplFileInfo::openFile</li><li>{@link SplFileInfo::setInfoClass} — Sets the class used with SplFileInfo::getFileInfo and SplFileInfo::getPathInfo</li><li>{@link SplFileInfo::__toString} — Returns the path to the file as a string</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.files.php">文件处理</a></div></div>
*/
class SplFileInfo  {

        /**
         * Construct a new SplFileInfo object
         * @link http://php.net/manual/en/splfileinfo.construct.php
         * @param $file_name
         * @since 5.1.2
         */
        public function __construct ($file_name) {}

/**
*<div id="splfileinfo.getpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getPath</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getPath</span> &mdash; <span class="dc-title">Gets the path without filename</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getPath</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the path to the file, omitting the filename and any trailing slash.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getpath-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the path to the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getpath-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4728">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getPath()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/bin/php'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPath</span><span style="color: #007700">());<br /><br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPath</span><span style="color: #007700">());</span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(8) &quot;/usr/bin&quot; string(4) &quot;/usr&quot; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getpath-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getRealPath()} - Gets absolute path to file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getFilename()} - Gets the filename</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getPathInfo()} - Gets an SplFileInfo object for the path</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return string the path to the file.*/
        public function getPath () {}

/**
*<div id="splfileinfo.getfilename" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getFilename</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getFilename</span> &mdash; <span class="dc-title">Gets the filename</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getfilename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getFilename</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the filename without any path information.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getfilename-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getfilename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The filename.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getfilename-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4724">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getFilename()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/foo.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.php.net/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.php.net/svn.php'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(7) &quot;foo.txt&quot; string(7) &quot;foo.txt&quot; string(0) &quot;&quot; string(7) &quot;svn.php&quot;  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getfilename-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getBasename()} - Gets the base name of the file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return string The filename.*/
        public function getFilename () {}

        /**
         * Gets the file extension
         * @link http://php.net/manual/en/splfileinfo.getextension.php
	 * @return string a string containing the file extension, or an
	 * empty string if the file has no extension.
/**
*<div id="splfileinfo.getextension" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getExtension</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.6, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getExtension</span> &mdash; <span class="dc-title">Gets the file extension</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getextension-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getExtension</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">     Retrieves the file extension.   </p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getextension-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getextension-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     Returns a <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> containing the file extension, or an     empty <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> if the file has no extension.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getextension-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4722">    <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getExtension()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExtension</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'photo.jpg'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExtension</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'something.tar.gz'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExtension</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(3) &quot;txt&quot; string(3) &quot;jpg&quot; string(2) &quot;gz&quot; </span></div>    </div>   </div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-splfileinfo.getextension-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     This method is only available as of PHP 5.3.6.     Another way of getting the extension is to use the      <span class="function">{@link pathinfo()}</span> function.    </p>    <div class="example" id="example-4723">     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$extension&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">pathinfo</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">(),&nbsp;</span><span style="color: #9876AA">PATHINFO_EXTENSION</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getextension-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getFilename()} - Gets the filename</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getBasename()} - Gets the base name of the file</span></li>    <li class="member"><span class="function">{@link pathinfo()} - 返回文件路径的信息</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
*/
        public function getExtension () {}

/**
*<div id="splfileinfo.getbasename" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getBasename</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getBasename</span> &mdash; <span class="dc-title">Gets the base name of the file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getbasename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getBasename</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$suffix</span></span>   ] )</div>    <p class="para rdfs-comment">    This method returns the base name of the file, directory, or link without    path info.   </p>   <div class="caution"><strong class="caution">Caution</strong>    <p class="para">     <span class="function"><strong style="color:#CC7832">SplFileInfo::getBasename()</strong></span> is locale aware, so for it to see the      correct basename with multibyte character paths, the matching locale must      be set using the <span class="function">{@link setlocale()}</span> function.    </p>   </div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getbasename-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">suffix</span></dt>       <dd>        <p class="para">        Optional suffix to omit from the base name returned.       </p>      </dd>          </dl>    </span>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getbasename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the base name without path information.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getbasename-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4720">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getBasename()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBasename</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/file.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBasename</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/file.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBasename</span><span style="color: #007700">(</span><span style="color: #DD0000">'.txt'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(8) &quot;file.txt&quot; string(8) &quot;file.txt&quot; string(4) &quot;file&quot;  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getbasename-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getFilename()} - Gets the filename</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return string the base name without path information.*/
        public function getBasename ($suffix = null) {}

/**
*<div id="splfileinfo.getpathname" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getPathname</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getPathname</span> &mdash; <span class="dc-title">Gets the path to the file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getpathname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getPathname</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the path to the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getpathname-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getpathname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The path to the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getpathname-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4730">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getPathname()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/bin/php'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPathname</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(12) &quot;/usr/bin/php&quot; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getpathname-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getRealPath()} - Gets absolute path to file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return string The path to the file.*/
        public function getPathname () {}

/**
*<div id="splfileinfo.getperms" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getPerms</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getPerms</span> &mdash; <span class="dc-title">Gets file permissions</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getperms-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getPerms</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the file permissions for the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getperms-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getperms-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the file permissions.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getperms-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4731">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getPerms()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/tmp'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">'%o'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPerms</span><span style="color: #007700">()),&nbsp;-</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">'%o'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPerms</span><span style="color: #007700">()),&nbsp;-</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 1777 0644 </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int the file permissions.*/
        public function getPerms () {}

/**
*<div id="splfileinfo.getinode" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getInode</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getInode</span> &mdash; <span class="dc-title">Gets the inode for the file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getinode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getInode</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the inode number for the filesystem object.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getinode-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getinode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the inode number for the filesystem object.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.getinode-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getinode-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fileinode()} - 取得文件的 inode</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int the inode number for the filesystem object.*/
        public function getInode () {}

/**
*<div id="splfileinfo.getsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getSize</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getSize</span> &mdash; <span class="dc-title">Gets file size</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getSize</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the filesize in bytes for the file referenced.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getsize-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getsize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The filesize in bytes.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.getsize-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    A <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> will be thrown if the file does not exist or an error occurs.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getsize-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link filesize()} - 取得文件大小</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int The filesize in bytes.*/
        public function getSize () {}

/**
*<div id="splfileinfo.getowner" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getOwner</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getOwner</span> &mdash; <span class="dc-title">Gets the owner of the file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getowner-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getOwner</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the file owner. The owner ID is returned in numerical format.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getowner-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getowner-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The owner id in numerical format.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.getowner-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getowner-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4727">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getOwner()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">posix_getpwuid</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getOwner</span><span style="color: #007700">()));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getowner-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link posix_getpwuid()} - Return info about a user by user id</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getGroup()} - Gets the file group</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int The owner id in numerical format.*/
        public function getOwner () {}

/**
*<div id="splfileinfo.getgroup" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getGroup</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getGroup</span> &mdash; <span class="dc-title">Gets the file group</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getgroup-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getGroup</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the file group. The group ID is returned in numerical format.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getgroup-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getgroup-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The group id in numerical format.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.getgroup-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getgroup-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4725">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getGroup()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">posix_getgrgid</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getGroup</span><span style="color: #007700">()));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getgroup-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link posix_getgrgid()} - Return info about a group by group id</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int The group id in numerical format.*/
        public function getGroup () {}

/**
*<div id="splfileinfo.getatime" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getATime</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getATime</span> &mdash; <span class="dc-title">Gets last access time of the file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getatime-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getATime</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the last access time for the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getatime-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getatime-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the time the file was last accessed.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.getatime-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RunTimeException</a> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getatime-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fileatime()} - 取得文件的上次访问时间</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int the time the file was last accessed.*/
        public function getATime () {}

/**
*<div id="splfileinfo.getmtime" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getMTime</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getMTime</span> &mdash; <span class="dc-title">Gets the last modified time</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getmtime-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getMTime</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the time when the contents of the file were changed. The time returned is a Unix timestamp.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getmtime-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getmtime-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the last modified time for the file, in a Unix timestamp.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getmtime-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link filemtime()} - 取得文件修改时间</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int the last modified time for the file, in a Unix timestamp.*/
        public function getMTime () {}

/**
*<div id="splfileinfo.getctime" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getCTime</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getCTime</span> &mdash; <span class="dc-title">获取文件 inode 修改时间</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getctime-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getCTime</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回此文件 inode 的修改时间，返回的时间是个 Unix 时间戳。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getctime-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getctime-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回inode最后一次变更的时间戳。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.getctime-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    错误时抛出 <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RunTimeException</a>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getctime-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4721">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getCTime()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">'Last&nbsp;changed&nbsp;at&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'g:i&nbsp;a'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCTime</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Last changed at 1:49 pm </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getctime-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link filectime()} - 取得文件的 inode 修改时间</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return int The last change time, in a Unix timestamp.*/
        public function getCTime () {}

/**
*<div id="splfileinfo.gettype" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getType</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getType</span> &mdash; <span class="dc-title">Gets file type</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.gettype-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getType</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the type of the file referenced.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.gettype-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.gettype-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    A <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> representing the type of the entry.    May be one of <em>file</em>, <em>link</em>,    or <em>dir</em>   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.gettype-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws a <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> on error.   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.gettype-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4733">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getType()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getType</span><span style="color: #007700">().</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br />echo&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getType</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> file dir </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return string A string representing the type of the entry.*/
        public function getType () {}

/**
*<div id="splfileinfo.iswritable" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::isWritable</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::isWritable</span> &mdash; <span class="dc-title">Tells if the entry is writable</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.iswritable-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::isWritable</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks if the current entry is writable.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.iswritable-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.iswritable-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if writable, <strong><span>FALSE</span></strong> otherwise;   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return bool true if writable, false otherwise;*/
        public function isWritable () {}

/**
*<div id="splfileinfo.isreadable" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::isReadable</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::isReadable</span> &mdash; <span class="dc-title">Tells if file is readable</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.isreadable-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::isReadable</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Check if the file is readable.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.isreadable-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.isreadable-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if readable, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.isreadable-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4738">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::isReadable()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isReadable</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isReadable</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(true) bool(false) </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return bool true if readable, false otherwise.*/
        public function isReadable () {}

/**
*<div id="splfileinfo.isexecutable" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::isExecutable</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::isExecutable</span> &mdash; <span class="dc-title">Tells if the file is executable</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.isexecutable-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::isExecutable</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks if the file is executable.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.isexecutable-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.isexecutable-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if executable, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.isexecutable-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4735">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::isExecutable()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/bin/php'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isExecutable</span><span style="color: #007700">());&nbsp;<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/bin'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isExecutable</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isExecutable</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(true) bool(true) bool(false) </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return bool true if executable, false otherwise.*/
        public function isExecutable () {}

/**
*<div id="splfileinfo.isfile" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::isFile</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::isFile</span> &mdash; <span class="dc-title">Tells if the object references a regular file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.isfile-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::isFile</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks if the file referenced by this SplFileInfo object exists and is a regular file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.isfile-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.isfile-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the file exists and is a regular file (not a link), <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.isfile-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4736">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::isFile()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isFile</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isFile</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(true) bool(false) </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return bool true if the file exists and is a regular file (not a link), false otherwise.*/
        public function isFile () {}

/**
*<div id="splfileinfo.isdir" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::isDir</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::isDir</span> &mdash; <span class="dc-title">Tells if the file is a directory</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.isdir-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::isDir</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method can be used to determine if the file is a directory.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.isdir-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.isdir-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if a directory, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.isdir-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4734">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::isDir()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$d&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isDir</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$d&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isDir</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(true) bool(false) </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return bool true if a directory, false otherwise.*/
        public function isDir () {}

/**
*<div id="splfileinfo.islink" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::isLink</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::isLink</span> &mdash; <span class="dc-title">Tells if the file is a link</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.islink-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::isLink</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Use this method to check if the file referenced by the SplFileInfo object    is a link.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.islink-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.islink-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the file is a link, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.islink-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4737">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::isLink()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/symlink'</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLink</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'The&nbsp;real&nbsp;path&nbsp;is&nbsp;'</span><span style="color: #007700">.</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRealPath</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.islink-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getRealPath()} - Gets absolute path to file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return bool true if the file is a link, false otherwise.*/
        public function isLink () {}

/**
*<div id="splfileinfo.getlinktarget" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getLinkTarget</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getLinkTarget</span> &mdash; <span class="dc-title">Gets the target of a link</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getlinktarget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getLinkTarget</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the target of a filesystem link.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     The target may not be the real path on the filesystem. Use <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getRealPath()}</span>     to determine the true path on the filesystem.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getlinktarget-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getlinktarget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the target of the filesystem link.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileinfo.getlinktarget-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getlinktarget-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4726">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getLinkTarget()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/Users/bbieber/workspace'</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLink</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLinkTarget</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRealPath</span><span style="color: #007700">());<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(19) &quot;Documents/workspace&quot; string(34) &quot;/Users/bbieber/Documents/workspace&quot; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getlinktarget-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::isLink()} - Tells if the file is a link</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::getRealPath()} - Gets absolute path to file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return string the target of the filesystem link.*/
        public function getLinkTarget () {}

/**
*<div id="splfileinfo.getrealpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileInfo::getRealPath</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileInfo::getRealPath</span> &mdash; <span class="dc-title">Gets absolute path to file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileinfo.getrealpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileInfo::getRealPath</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method expands all symbolic links, resolves relative references and returns the real path to the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileinfo.getrealpath-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileinfo.getrealpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the path to the file, or <strong><span>FALSE</span></strong> if the file does not exist.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileinfo.getrealpath-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4732">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFileInfo::getRealPath()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/..//./../../'</span><span style="color: #007700">.</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRealPath</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/tmp'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRealPath</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'/I/Do/Not/Exist'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRealPath</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">'php://output'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRealPath</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRealPath</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(28) &quot;/private/tmp/phptempfile.php&quot;  string(12) &quot;/private/tmp&quot; bool(false) bool(false) string(12) &quot;/private/tmp&quot;  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileinfo.getrealpath-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileInfo::isLink()} - Tells if the file is a link</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link realpath()} - 返回规范化的绝对路径名</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileinfo.php">SplFileInfo</a></div></div>
         * @return string the path to the file.*/
        public function getRealPath () {}

        /**
         * Gets an SplFileInfo object for the file
         * @link http://php.net/manual/en/splfileinfo.getfileinfo.php
         * @param string $class_name [optional] <p>
	 * Name of an <b>SplFileInfo</b> derived class to use.
         * </p>
	 * @return SplFileInfo An <b>SplFileInfo</b> object created for the file.
         * @since 5.1.2
         */
        public function getFileInfo ($class_name = null) {}

        /**
         * Gets an SplFileInfo object for the path
         * @link http://php.net/manual/en/splfileinfo.getpathinfo.php
         * @param string $class_name [optional] <p>
	 * Name of an <b>SplFileInfo</b> derived class to use.
         * </p>
	 * @return SplFileInfo an <b>SplFileInfo</b> object for the parent path of the file.
         * @since 5.1.2
         */
        public function getPathInfo ($class_name = null) {}

        /**
         * Gets an SplFileObject object for the file
         * @link http://php.net/manual/en/splfileinfo.openfile.php
         * @param string $open_mode [optional] <p>
	 * The mode for opening the file. See the <b>fopen</b>
         * documentation for descriptions of possible modes. The default 
         * is read only.
         * </p>
         * @param bool $use_include_path [optional] <p>
         * &parameter.use_include_path;
         * </p>
         * @param resource $context [optional] <p>
         * &parameter.context;
         * </p>
	 * @return SplFileObject The opened file as an <b>SplFileObject</b> object.
         * @since 5.1.2
         */
	public function openFile ($open_mode = 'r', $use_include_path = false, $context = null) {}

        /**
	 * Sets the class name used with <b>SplFileInfo::openFile</b>
         * @link http://php.net/manual/en/splfileinfo.setfileclass.php
         * @param string $class_name [optional] <p>
         * The class name to use when openFile() is called. 
         * </p>
         * @return void 
         * @since 5.1.2
         */
        public function setFileClass ($class_name = null) {}

        /**
         * Sets the class used with getFileInfo and getPathInfo
         * @link http://php.net/manual/en/splfileinfo.setinfoclass.php
         * @param string $class_name [optional] <p>
         * The class name to use.
         * </p>
         * @return void 
         * @since 5.1.2
         */
        public function setInfoClass ($class_name = null) {}

        /**
         * Returns the path to the file as a string
         * @link http://php.net/manual/en/splfileinfo.tostring.php
         * @return string the path to the file.
         * @since 5.1.2
         */
        public function __toString () {}

        public final function _bad_state_ex (){}

        public function __wakeup() {}
}

/**
*<div id="class.directoryiterator" class="reference">  <h1 class="title">The DirectoryIterator class</h1>      <div class="partintro"><p class="verinfo">(PHP 5, PHP 7)</p>      <div class="section" id="directoryiterator.intro">    <h2 class="title">简介</h2>    <p class="para">     The DirectoryIterator class provides a simple interface for viewing     the contents of filesystem directories.    </p>   </div>      <div class="section" id="directoryiterator.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>        <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">DirectoryIterator</strong>      </span>       <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.splfileinfo.php" class="classname">SplFileInfo</a>      </span>       <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.seekableiterator.php" class="interfacename">SeekableIterator</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span></span>    )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">DirectoryIterator</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getatime.php" class="methodname" style="color:#CC7832">getATime</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span>    <span class="type" style="color:#EAB766">string</span>     <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getbasename.php" class="methodname" style="color:#CC7832">getBasename</a></span>     ([ <span class="methodparam">     <span class="type" style="color:#EAB766">string</span>      <span class="parameter" style="color:#2EACF9">$suffix</span>    </span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getctime.php" class="methodname" style="color:#CC7832">getCTime</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getextension.php" class="methodname" style="color:#CC7832">getExtension</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getfilename.php" class="methodname" style="color:#CC7832">getFilename</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getgroup.php" class="methodname" style="color:#CC7832">getGroup</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getinode.php" class="methodname" style="color:#CC7832">getInode</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getmtime.php" class="methodname" style="color:#CC7832">getMTime</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getowner.php" class="methodname" style="color:#CC7832">getOwner</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getpath.php" class="methodname" style="color:#CC7832">getPath</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getpathname.php" class="methodname" style="color:#CC7832">getPathname</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getperms.php" class="methodname" style="color:#CC7832">getPerms</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.getsize.php" class="methodname" style="color:#CC7832">getSize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.gettype.php" class="methodname" style="color:#CC7832">getType</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.isdir.php" class="methodname" style="color:#CC7832">isDir</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.isdot.php" class="methodname" style="color:#CC7832">isDot</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.isexecutable.php" class="methodname" style="color:#CC7832">isExecutable</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.isfile.php" class="methodname" style="color:#CC7832">isFile</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.islink.php" class="methodname" style="color:#CC7832">isLink</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.isreadable.php" class="methodname" style="color:#CC7832">isReadable</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.iswritable.php" class="methodname" style="color:#CC7832">isWritable</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span>  <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span>  <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span>    <span class="type" style="color:#EAB766">void</span>     <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.seek.php" class="methodname" style="color:#CC7832">seek</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$position</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span>    <span class="type" style="color:#EAB766">string</span>     <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/directoryiterator.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>          <div class="section" id="directoryiterator.changelog">    <h2 class="title">更新日志</h2>    <p class="para">     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>5.1.2</td>         <td>          <strong class="classname">DirectoryIterator</strong> extends <a href="http://php.net/manual/zh/class.splfileinfo.php" class="classname">SplFileInfo</a>.         </td>        </tr>        </tbody>           </table>     </p>   </div>       </div>                                                                                                                                                                               <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link DirectoryIterator::__construct} — Constructs a new directory iterator from a path</li><li>{@link DirectoryIterator::current} — Return the current DirectoryIterator item</li><li>{@link DirectoryIterator::getATime} — Get last access time of the current DirectoryIterator item</li><li>{@link DirectoryIterator::getBasename} — Get base name of current DirectoryIterator item</li><li>{@link DirectoryIterator::getCTime} — Get inode change time of the current DirectoryIterator item</li><li>{@link DirectoryIterator::getExtension} — Gets the file extension</li><li>{@link DirectoryIterator::getFilename} — Return file name of current DirectoryIterator item</li><li>{@link DirectoryIterator::getGroup} — Get group for the current DirectoryIterator item</li><li>{@link DirectoryIterator::getInode} — Get inode for the current DirectoryIterator item</li><li>{@link DirectoryIterator::getMTime} — Get last modification time of current DirectoryIterator item</li><li>{@link DirectoryIterator::getOwner} — Get owner of current DirectoryIterator item</li><li>{@link DirectoryIterator::getPath} — Get path of current Iterator item without filename</li><li>{@link DirectoryIterator::getPathname} — Return path and file name of current DirectoryIterator item</li><li>{@link DirectoryIterator::getPerms} — Get the permissions of current DirectoryIterator item</li><li>{@link DirectoryIterator::getSize} — Get size of current DirectoryIterator item</li><li>{@link DirectoryIterator::getType} — Determine the type of the current DirectoryIterator item</li><li>{@link DirectoryIterator::isDir} — Determine if current DirectoryIterator item is a directory</li><li>{@link DirectoryIterator::isDot} — Determine if current DirectoryIterator item is '.' or '..'</li><li>{@link DirectoryIterator::isExecutable} — Determine if current DirectoryIterator item is executable</li><li>{@link DirectoryIterator::isFile} — Determine if current DirectoryIterator item is a regular file</li><li>{@link DirectoryIterator::isLink} — Determine if current DirectoryIterator item is a symbolic link</li><li>{@link DirectoryIterator::isReadable} — Determine if current DirectoryIterator item can be read</li><li>{@link DirectoryIterator::isWritable} — Determine if current DirectoryIterator item can be written to</li><li>{@link DirectoryIterator::key} — Return the key for the current DirectoryIterator item</li><li>{@link DirectoryIterator::next} — Move forward to next DirectoryIterator item</li><li>{@link DirectoryIterator::rewind} — Rewind the DirectoryIterator back to the start</li><li>{@link DirectoryIterator::seek} — Seek to a DirectoryIterator item</li><li>{@link DirectoryIterator::__toString} — Get file name as a string</li><li>{@link DirectoryIterator::valid} — Check whether current DirectoryIterator position is a valid file</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.iterators.php">迭代器</a></div></div>
*/
class DirectoryIterator extends SplFileInfo implements SeekableIterator {

        /**
         * Constructs a new directory iterator from a path
         * @link http://php.net/manual/en/directoryiterator.construct.php
         * @param $path
         * @since 5.0
         */
        public function __construct ($path) {}


        /**
         * Determine if current DirectoryIterator item is '.' or '..'
         * @link http://php.net/manual/en/directoryiterator.isdot.php
         * @return bool true if the entry is . or ..,
         * otherwise false
	 * @since 5.0
/**
*<div id="directoryiterator.isdot" class="refentry">  <div class="refnamediv">   <h1 class="refname">DirectoryIterator::isDot</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">DirectoryIterator::isDot</span> &mdash; <span class="dc-title">Determine if current DirectoryIterator item is &#039;.&#039; or &#039;..&#039;</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directoryiterator.isdot-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::isDot</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    Determines if the current <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a>    item is a directory and either    <em>.</em> or <em>..</em>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-directoryiterator.isdot-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-directoryiterator.isdot-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <strong><span>TRUE</span></strong> if the entry is <em>.</em> or <em>..</em>,    otherwise <strong><span>FALSE</span></strong>   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-directoryiterator.isdot-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4655">     <p><strong>Example #1 A <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::isDot()</strong></span> example</strong></p>     <div class="example-contents"><p>       This example will list all files, omitting the <em>.</em> and       <em>..</em> entries.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">DirectoryIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br />foreach&nbsp;(</span><span style="color: #9876AA">$iterator&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isDot</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> apple.jpg banana.jpg example.php pears.jpg </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-directoryiterator.isdot-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getType()} - Determine the type of the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isDir()} - Determine if current DirectoryIterator item is a directory</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isFile()} - Determine if current DirectoryIterator item is a regular file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isLink()} - Determine if current DirectoryIterator item is a symbolic link</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directoryiterator.php">DirectoryIterator</a></div></div>
*/
        public function isDot () {}

/**
*<div id="directoryiterator.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">DirectoryIterator::rewind</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">DirectoryIterator::rewind</span> &mdash; <span class="dc-title">Rewind the DirectoryIterator back to the start</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directoryiterator.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Rewind the <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a> back to the start.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-directoryiterator.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-directoryiterator.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-directoryiterator.rewind-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4663">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::rewind()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">DirectoryIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//1<br /><br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//rewinding&nbsp;to&nbsp;the&nbsp;beginning<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//0<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-directoryiterator.rewind-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::current()} - Return the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::key()} - Return the key for the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::next()} - Move forward to next DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::valid()} - Check whether current DirectoryIterator position is a valid file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link Iterator::rewind()} - 返回到迭代器的第一个元素</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.directoryiterator.php">DirectoryIterator</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="directoryiterator.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">DirectoryIterator::valid</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">DirectoryIterator::valid</span> &mdash; <span class="dc-title">Check whether current DirectoryIterator position is a valid file</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directoryiterator.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Check whether current <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a> position is a valid file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-directoryiterator.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-directoryiterator.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the position is valid, otherwise <strong><span>FALSE</span></strong>   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-directoryiterator.valid-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4666">     <p><strong>Example #1 A <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::valid()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">DirectoryIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;Loop&nbsp;to&nbsp;end&nbsp;of&nbsp;iterator<br /></span><span style="color: #007700">while(</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;FALSE<br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();&nbsp;<br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;TRUE<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-directoryiterator.valid-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::current()} - Return the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::key()} - Return the key for the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::next()} - Move forward to next DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::rewind()} - Rewind the DirectoryIterator back to the start</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link Iterator::valid()} - 检查当前位置是否有效</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.directoryiterator.php">DirectoryIterator</a></div></div>
         * @return bool true if the position is valid, otherwise false*/
        public function valid () {}

        /**
         * Return the key for the current DirectoryIterator item
         * @link http://php.net/manual/en/directoryiterator.key.php
	 * @return string The key for the current <b>DirectoryIterator</b> item.
/**
*<div id="directoryiterator.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">DirectoryIterator::key</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">DirectoryIterator::key</span> &mdash; <span class="dc-title">Return the key for the current DirectoryIterator item</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directoryiterator.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span>  <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::key</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    Get the key for the current <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a> item.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-directoryiterator.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-directoryiterator.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The key for the current <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a> item.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-directoryiterator.key-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4661">     <p><strong>Example #1 A <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::key()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dir&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">DirectoryIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br />foreach&nbsp;(</span><span style="color: #9876AA">$dir&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isDot</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"&nbsp;=&gt;&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 0 =&gt; apple.jpg 1 =&gt; banana.jpg 2 =&gt; index.php 3 =&gt; pear.jpg </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-directoryiterator.key-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::current()} - Return the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::next()} - Move forward to next DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::rewind()} - Rewind the DirectoryIterator back to the start</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::valid()} - Check whether current DirectoryIterator position is a valid file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link Iterator::key()} - 返回当前元素的键</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directoryiterator.php">DirectoryIterator</a></div></div>
*/
        public function key () {}

        /**
         * Return the current DirectoryIterator item.
         * @link http://php.net/manual/en/directoryiterator.current.php
	 * @return DirectoryIterator The current <b>DirectoryIterator</b> item.
/**
*<div id="directoryiterator.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">DirectoryIterator::current</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">DirectoryIterator::current</span> &mdash; <span class="dc-title">Return the current DirectoryIterator item</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directoryiterator.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/class.directoryiterator.php" class="type DirectoryIterator" style="color:#EAB766">DirectoryIterator</a></span> <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::current</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    Get the current <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a> item.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-directoryiterator.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-directoryiterator.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a> item.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-directoryiterator.current-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="appenditerator.examples.api">     <p><strong>Example #1 A <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::current()</strong></span> example</strong></p>     <div class="example-contents"><p>      This example will list the contents of the directory containing the script.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">DirectoryIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">__DIR__</span><span style="color: #007700">);<br />while(</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"&nbsp;=&gt;&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 0 =&gt; . 1 =&gt; .. 2 =&gt; apple.jpg 3 =&gt; banana.jpg 4 =&gt; index.php 5 =&gt; pear.jpg </span></div>     </div>    </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-directoryiterator.current-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::key()} - Return the key for the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::next()} - Move forward to next DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::rewind()} - Rewind the DirectoryIterator back to the start</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::valid()} - Check whether current DirectoryIterator position is a valid file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link Iterator::current()} - 返回当前元素</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directoryiterator.php">DirectoryIterator</a></div></div>
*/
        public function current () {}

/**
*<div id="directoryiterator.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">DirectoryIterator::next</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">DirectoryIterator::next</span> &mdash; <span class="dc-title">Move forward to next DirectoryIterator item</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directoryiterator.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span>  <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::next</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    Move forward to the next <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a> item.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-directoryiterator.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-directoryiterator.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-directoryiterator.next-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4662">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::next()</strong></span> example</strong></p>     <div class="example-contents"><p>      List the contents of a directory using a while loop.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">DirectoryIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br />while(</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> . .. apple.jpg banana.jpg index.php pear.jpg </span></div>     </div>    </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-directoryiterator.next-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::current()} - Return the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::key()} - Return the key for the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::rewind()} - Rewind the DirectoryIterator back to the start</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::valid()} - Check whether current DirectoryIterator position is a valid file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link Iterator::next()} - 向前移动到下一个元素</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directoryiterator.php">DirectoryIterator</a></div></div>
         * @return void */
        public function next () {}

        /**
         * Seek to a DirectoryIterator item
         * @link http://php.net/manual/en/directoryiterator.seek.php
         * @param int $position <p>
         * The zero-based numeric position to seek to.
         * </p>
         * @return void 
	 * @since 5.3.0
/**
*<div id="directoryiterator.seek" class="refentry">  <div class="refnamediv">   <h1 class="refname">DirectoryIterator::seek</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">DirectoryIterator::seek</span> &mdash; <span class="dc-title">Seek to a DirectoryIterator item</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directoryiterator.seek-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span>    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span>     <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::seek</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$position</span></span>    )</div>     <p class="para rdfs-comment">    Seek to a given position in the <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-directoryiterator.seek-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">position</span></dt>       <dd>        <p class="para">        The zero-based numeric position to seek to.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-directoryiterator.seek-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-directoryiterator.seek-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4664">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>DirectoryIterator::seek()</strong></span> example</strong></p>     <div class="example-contents"><p>      Seek to the fourth item in the directory containing the script.       The first two are usually <em>.</em> and <em>..</em>     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">DirectoryIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">seek</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">();<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'No&nbsp;file&nbsp;at&nbsp;position&nbsp;3'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-directoryiterator.seek-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::rewind()} - Rewind the DirectoryIterator back to the start</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::next()} - Move forward to next DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SeekableIterator::seek()} - Seeks to a position</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directoryiterator.php">DirectoryIterator</a></div></div>
*/
        public function seek ($position) {}
}

/**
*<div id="class.filesystemiterator" class="reference">   <h1 class="title">The FilesystemIterator class</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>     <div class="section" id="filesystemiterator.intro">    <h2 class="title">简介</h2>    <p class="para">     The Filesystem iterator    </p>   </div>     <div class="section" id="filesystemiterator.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">FilesystemIterator</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.seekableiterator.php" class="interfacename">SeekableIterator</a></span>      </span>       {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.current-as-pathname"><var class="varname">CURRENT_AS_PATHNAME</var></a></var>      <span class="initializer"> = 32</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.current-as-fileinfo"><var class="varname">CURRENT_AS_FILEINFO</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.current-as-self"><var class="varname">CURRENT_AS_SELF</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.current-mode-mask"><var class="varname">CURRENT_MODE_MASK</var></a></var>      <span class="initializer"> = 240</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.key-as-pathname"><var class="varname">KEY_AS_PATHNAME</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.key-as-filename"><var class="varname">KEY_AS_FILENAME</var></a></var>      <span class="initializer"> = 256</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.follow-symlinks"><var class="varname">FOLLOW_SYMLINKS</var></a></var>      <span class="initializer"> = 512</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.key-mode-mask"><var class="varname">KEY_MODE_MASK</var></a></var>      <span class="initializer"> = 3840</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.new-current-and-key"><var class="varname">NEW_CURRENT_AND_KEY</var></a></var>      <span class="initializer"> = 256</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.skip-dots"><var class="varname">SKIP_DOTS</var></a></var>      <span class="initializer"> = 4096</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants.unix-paths"><var class="varname">UNIX_PATHS</var></a></var>      <span class="initializer"> = 8192</span>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/filesystemiterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/filesystemiterator.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/filesystemiterator.getflags.php" class="methodname" style="color:#CC7832">getFlags</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/filesystemiterator.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/filesystemiterator.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/filesystemiterator.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/filesystemiterator.setflags.php" class="methodname" style="color:#CC7832">setFlags</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>   ] )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">DirectoryIterator</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getATime}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span>    <span class="type" style="color:#EAB766">string</span>     <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getBasename}</span>     ([ <span class="methodparam">     <span class="type" style="color:#EAB766">string</span>      <span class="parameter" style="color:#2EACF9">$suffix</span>    </span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getCTime}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getExtension}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getFilename}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getGroup}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getInode}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getMTime}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getOwner}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getPath}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getPathname}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getPerms}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getSize}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getType}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isDir}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isDot}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isExecutable}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isFile}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isLink}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isReadable}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::isWritable}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span>  <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span>  <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span>    <span class="type" style="color:#EAB766">void</span>     <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::seek}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$position</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span>    <span class="type" style="color:#EAB766">string</span>     <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::__toString}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link DirectoryIterator::valid}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>        <div class="section" id="filesystemiterator.constants">    <h2 class="title">预定义常量</h2>    <dl>            <dt id="filesystemiterator.constants.current-as-pathname"><strong><span>FilesystemIterator::CURRENT_AS_PATHNAME</span></strong></dt>       <dd>        <p class="para">Makes <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::current()}</span> return the pathname.</p>      </dd>                 <dt id="filesystemiterator.constants.current-as-fileinfo"><strong><span>FilesystemIterator::CURRENT_AS_FILEINFO</span></strong></dt>       <dd>        <p class="para">Makes <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::current()}</span> return an <a href="http://php.net/manual/zh/class.splfileinfo.php" class="classname">SplFileInfo</a> instance.</p>      </dd>                 <dt id="filesystemiterator.constants.current-as-self"><strong><span>FilesystemIterator::CURRENT_AS_SELF</span></strong></dt>       <dd>        <p class="para">Makes <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::current()}</span> return $this (the FilesystemIterator).</p>      </dd>                 <dt id="filesystemiterator.constants.current-mode-mask"><strong><span>FilesystemIterator::CURRENT_MODE_MASK</span></strong></dt>       <dd>        <p class="para">Masks <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::current()}</span></p>      </dd>                 <dt id="filesystemiterator.constants.key-as-pathname"><strong><span>FilesystemIterator::KEY_AS_PATHNAME</span></strong></dt>       <dd>        <p class="para">Makes <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::key()}</span> return the pathname.</p>      </dd>                 <dt id="filesystemiterator.constants.key-as-filename"><strong><span>FilesystemIterator::KEY_AS_FILENAME</span></strong></dt>       <dd>        <p class="para">Makes <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::key()}</span> return the filename.</p>      </dd>                 <dt id="filesystemiterator.constants.follow-symlinks"><strong><span>FilesystemIterator::FOLLOW_SYMLINKS</span></strong></dt>       <dd>        <p class="para">Makes <span class="methodname" style="color:#CC7832">{@link RecursiveDirectoryIterator::hasChildren()}</span> follow symlinks.</p>      </dd>                 <dt id="filesystemiterator.constants.key-mode-mask"><strong><span>FilesystemIterator::KEY_MODE_MASK</span></strong></dt>       <dd>        <p class="para">Masks <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::key()}</span></p>      </dd>                 <dt id="filesystemiterator.constants.new-current-and-key"><strong><span>FilesystemIterator::NEW_CURRENT_AND_KEY</span></strong></dt>       <dd>        <p class="para">Same as <em>FilesystemIterator::KEY_AS_FILENAME | FilesystemIterator::CURRENT_AS_FILEINFO</em>.</p>      </dd>                 <dt id="filesystemiterator.constants.skip-dots"><strong><span>FilesystemIterator::SKIP_DOTS</span></strong></dt>       <dd>        <p class="para">Skips dot files (<em>.</em> and <em>..</em>).</p>      </dd>                 <dt id="filesystemiterator.constants.unix-paths"><strong><span>FilesystemIterator::UNIX_PATHS</span></strong></dt>       <dd>        <p class="para">        Makes paths use Unix-style forward slash irrespective of system default.        Note that the <span class="parameter" style="color:#2EACF9">path</span> that is passed to the        constructor is not modified.       </p>      </dd>          </dl>    </div>          <div class="section">    <h2 class="title">更新日志</h2>    <p class="para">     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>5.3.1</td>         <td>Added <strong><span>FilesystemIterator::FOLLOW_SYMLINKS</span></strong></td>        </tr>        </tbody>           </table>     </p>   </div>        </div>                                                      <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link FilesystemIterator::__construct} — Constructs a new filesystem iterator</li><li>{@link FilesystemIterator::current} — The current file</li><li>{@link FilesystemIterator::getFlags} — Get the handling flags</li><li>{@link FilesystemIterator::key} — Retrieve the key for the current file</li><li>{@link FilesystemIterator::next} — Move to the next file</li><li>{@link FilesystemIterator::rewind} — Rewinds back to the beginning</li><li>{@link FilesystemIterator::setFlags} — Sets handling flags</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.iterators.php">迭代器</a></div></div>
*/
class FilesystemIterator extends DirectoryIterator {
        const CURRENT_MODE_MASK = 240;
        const CURRENT_AS_PATHNAME = 32;
        const CURRENT_AS_FILEINFO = 0;
        const CURRENT_AS_SELF = 16;
        const KEY_MODE_MASK = 3840;
        const KEY_AS_PATHNAME = 0;
        const FOLLOW_SYMLINKS = 512;
        const KEY_AS_FILENAME = 256;
        const NEW_CURRENT_AND_KEY = 256;
        const SKIP_DOTS = 4096;
        const UNIX_PATHS = 8192;
        const OTHER_MODE_MASK = 12288;

        /**
         * Constructs a new filesystem iterator
         * @link http://php.net/manual/en/filesystemiterator.construct.php
         * @param $path
         * @param $flags [optional]
         * @since 5.3.0
         */
        public function __construct ($path, $flags) {}

/**
*<div id="filesystemiterator.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">FilesystemIterator::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">FilesystemIterator::rewind</span> &mdash; <span class="dc-title">Rewinds back to the beginning</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-filesystemiterator.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Rewinds the directory back to the start.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-filesystemiterator.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-filesystemiterator.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-filesystemiterator.rewind-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4671">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::rewind()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">::</span><span style="color: #9876AA">KEY_AS_FILENAME</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> apple.jpg banana.jpg apple.jpg </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-filesystemiterator.rewind-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::rewind()} - Rewind the DirectoryIterator back to the start</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.filesystemiterator.php">FilesystemIterator</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="filesystemiterator.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">FilesystemIterator::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">FilesystemIterator::next</span> &mdash; <span class="dc-title">Move to the next file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-filesystemiterator.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Move to the next file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-filesystemiterator.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-filesystemiterator.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-filesystemiterator.next-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4670">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::next()</strong></span> example</strong></p>     <div class="example-contents"><p>      List the contents of a directory using a while loop.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">));<br />while(</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFilename</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> apple.jpg banana.jpg example.php </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-filesystemiterator.next-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::next()} - Move forward to next DirectoryIterator item</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.filesystemiterator.php">FilesystemIterator</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="filesystemiterator.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">FilesystemIterator::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">FilesystemIterator::key</span> &mdash; <span class="dc-title">Retrieve the key for the current file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-filesystemiterator.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::key</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-filesystemiterator.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-filesystemiterator.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the pathname or filename depending on the set flags.    See the <a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants" class="link">FilesystemIterator constants</a>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-filesystemiterator.key-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4669">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::key()</strong></span> example</strong></p>     <div class="example-contents"><p>      This example will list the contents of the directory containing the script.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">::</span><span style="color: #9876AA">KEY_AS_FILENAME</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$iterator&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> apple.jpg banana.jpg example.php </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-filesystemiterator.key-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants" class="link">FilesystemIterator constants</a></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::key()} - Return the key for the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getFilename()} - Return file name of current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getPathname()} - Return path and file name of current DirectoryIterator item</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.filesystemiterator.php">FilesystemIterator</a></div></div>
         * @return string the pathname or filename depending on the set flags.*/
        public function key () {}

/**
*<div id="filesystemiterator.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">FilesystemIterator::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">FilesystemIterator::current</span> &mdash; <span class="dc-title">The current file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-filesystemiterator.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Get file information of the current element.   </p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-filesystemiterator.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-filesystemiterator.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The filename, file information, or $this depending on the set flags.    See the <a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants" class="link">FilesystemIterator constants</a>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-filesystemiterator.current-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4668">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::current()</strong></span> example</strong></p>     <div class="example-contents"><p>      This example will list the contents of the directory containing the script.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">__DIR__</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">::</span><span style="color: #9876AA">CURRENT_AS_PATHNAME</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$iterator&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> /www/examples/apple.jpg /www/examples/banana.jpg /www/examples/example.php </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-filesystemiterator.current-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants" class="link">FilesystemIterator constants</a></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::current()} - Return the current DirectoryIterator item</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link DirectoryIterator::getFileName()} - Return file name of current DirectoryIterator item</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.filesystemiterator.php">FilesystemIterator</a></div></div>
         * @return mixed The filename, file information, or $this depending on the set flags.*/
        public function current () {}

/**
*<div id="filesystemiterator.getflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">FilesystemIterator::getFlags</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">FilesystemIterator::getFlags</span> &mdash; <span class="dc-title">Get the handling flags</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-filesystemiterator.getflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::getFlags</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the handling flags, as set in <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::__construct()}</span> or <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::setFlags()}</span>.   </p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-filesystemiterator.getflags-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-filesystemiterator.getflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The integer value of the set flags.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-filesystemiterator.getflags-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link FilesystemIterator::__construct()} - Constructs a new filesystem iterator</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link FilesystemIterator::setFlags()} - Sets handling flags</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.filesystemiterator.php">FilesystemIterator</a></div></div>
         * @return int The integer value of the set flags.*/
        public function getFlags () {}

/**
*<div id="filesystemiterator.setflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">FilesystemIterator::setFlags</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">FilesystemIterator::setFlags</span> &mdash; <span class="dc-title">Sets handling flags</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-filesystemiterator.setflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>FilesystemIterator::setFlags</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>   ] )</div>    <p class="para rdfs-comment">    Sets handling flags.   </p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-filesystemiterator.setflags-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The handling flags to set.        See the <a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants" class="link">FilesystemIterator constants</a>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-filesystemiterator.setflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-filesystemiterator.setflags-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4672">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::key()}</span> example</strong></p>     <div class="example-contents"><p>      This example demonstrates the difference between the      {@link FilesystemIterator::KEY_AS_PATHNAME} and      {@link FilesystemIterator::KEY_AS_FILENAME} flags.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">::</span><span style="color: #9876AA">KEY_AS_PATHNAME</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Key&nbsp;as&nbsp;Pathname:\n"</span><span style="color: #007700">;<br />foreach&nbsp;(</span><span style="color: #9876AA">$iterator&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$key&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$key&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFlags</span><span style="color: #007700">(</span><span style="color: #9876AA">FilesystemIterator</span><span style="color: #007700">::</span><span style="color: #9876AA">KEY_AS_FILENAME</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"\nKey&nbsp;as&nbsp;Filename:\n"</span><span style="color: #007700">;<br />foreach&nbsp;(</span><span style="color: #9876AA">$iterator&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$key&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$fileinfo</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$key&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Key as Pathname: /www/examples/apple.jpg /www/examples/banana.jpg /www/examples/example.php  Key as Filename: apple.jpg banana.jpg example.php </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-filesystemiterator.setflags-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link FilesystemIterator::__construct()} - Constructs a new filesystem iterator</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link FilesystemIterator::getFlags()} - Get the handling flags</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.filesystemiterator.php">FilesystemIterator</a></div></div>
         * @return void */
        public function setFlags ($flags = null) {}
}

/**
*<div id="class.recursivedirectoryiterator" class="reference">  <h1 class="title">The RecursiveDirectoryIterator class</h1>      <div class="partintro"><p class="verinfo">(PHP 5, PHP 7)</p>      <div class="section" id="recursivedirectoryiterator.intro">    <h2 class="title">简介</h2>    <p class="para">     The <strong class="classname">RecursiveDirectoryIterator</strong> provides     an interface for iterating recursively over filesystem directories.    </p>   </div>      <div class="section" id="recursivedirectoryiterator.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>        <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">RecursiveDirectoryIterator</strong>      </span>       <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.filesystemiterator.php" class="classname">FilesystemIterator</a>      </span>       <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.seekableiterator.php" class="interfacename">SeekableIterator</a></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.recursiveiterator.php" class="interfacename">RecursiveIterator</a></span>      </span>       {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// Inherited constants </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::CURRENT_AS_PATHNAME</var>}</var>      <span class="initializer"> = 32</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::CURRENT_AS_FILEINFO</var>}</var>      <span class="initializer"> = 0</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::CURRENT_AS_SELF</var>}</var>      <span class="initializer"> = 16</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::CURRENT_MODE_MASK</var>}</var>      <span class="initializer"> = 240</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::KEY_AS_PATHNAME</var>}</var>      <span class="initializer"> = 0</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::KEY_AS_FILENAME</var>}</var>      <span class="initializer"> = 256</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::FOLLOW_SYMLINKS</var>}</var>      <span class="initializer"> = 512</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::KEY_MODE_MASK</var>}</var>      <span class="initializer"> = 3840</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::NEW_CURRENT_AND_KEY</var>}</var>      <span class="initializer"> = 256</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::SKIP_DOTS</var>}</var>      <span class="initializer"> = 4096</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">FilesystemIterator::UNIX_PATHS</var>}</var>      <span class="initializer"> = 8192</span>     ;</div>              <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.getchildren.php" class="methodname" style="color:#CC7832">getChildren</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.getsubpath.php" class="methodname" style="color:#CC7832">getSubPath</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.getsubpathname.php" class="methodname" style="color:#CC7832">getSubPathname</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.haschildren.php" class="methodname" style="color:#CC7832">hasChildren</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$allow_links</span><span class="initializer"> = <strong><span>FALSE</span></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/recursivedirectoryiterator.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// Inherits </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::__construct}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::getFlags}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::setFlags}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>   ] )</div>     }</div>     </div>       <div class="section">    <h2 class="title">更新日志</h2>    <p class="para">     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>5.3.0</td>         <td>          The <a href="http://php.net/manual/zh/class.filesystemiterator.php" class="classname">FilesystemIterator</a> was introduced as           the parent class. Previously, the parent was the           <a href="http://php.net/manual/zh/class.directoryiterator.php" class="classname">DirectoryIterator</a>.         </td>        </tr>         <tr>         <td>5.3.0</td>         <td>          Implements <span class="interfacename"><a href="http://php.net/manual/zh/class.seekableiterator.php" class="interfacename">SeekableIterator</a></span>.         </td>        </tr>         <tr>         <td>5.2.11, 5.3.1</td>         <td>Added <strong><span>RecursiveDirectoryIterator::FOLLOW_SYMLINKS</span></strong></td>        </tr>        </tbody>           </table>     </p>   </div>     </div>                                                          <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link RecursiveDirectoryIterator::__construct} — Constructs a RecursiveDirectoryIterator</li><li>{@link RecursiveDirectoryIterator::getChildren} — Returns an iterator for the current entry if it is a directory</li><li>{@link RecursiveDirectoryIterator::getSubPath} — Get sub path</li><li>{@link RecursiveDirectoryIterator::getSubPathname} — Get sub path and name</li><li>{@link RecursiveDirectoryIterator::hasChildren} — Returns whether current entry is a directory and not '.' or '..'</li><li>{@link RecursiveDirectoryIterator::key} — Return path and filename of current dir entry</li><li>{@link RecursiveDirectoryIterator::next} — Move to next entry</li><li>{@link RecursiveDirectoryIterator::rewind} — Rewind dir back to the start</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.iterators.php">迭代器</a></div></div>
*/
class RecursiveDirectoryIterator extends FilesystemIterator implements RecursiveIterator {


        /**
         * Constructs a RecursiveDirectoryIterator
         * @link http://php.net/manual/en/recursivedirectoryiterator.construct.php
         * @param $path
         * @param $flags [optional]
         * @since 5.1.2
         */
        public function __construct ($path, $flags) {}

/**
*<div id="recursivedirectoryiterator.haschildren" class="refentry">  <div class="refnamediv">   <h1 class="refname">RecursiveDirectoryIterator::hasChildren</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">RecursiveDirectoryIterator::hasChildren</span> &mdash; <span class="dc-title">Returns whether current entry is a directory and not &#039;.&#039; or &#039;..&#039;</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-recursivedirectoryiterator.haschildren-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>RecursiveDirectoryIterator::hasChildren</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$allow_links</span><span class="initializer"> = <strong><span>FALSE</span></strong></span></span>   ] )</div>      <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-recursivedirectoryiterator.haschildren-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">allow_links</span></dt>       <dd>        <p class="para">               </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-recursivedirectoryiterator.haschildren-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns whether the current entry is a directory, but not &#039;.&#039; or &#039;..&#039;   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.recursivedirectoryiterator.php">RecursiveDirectoryIterator</a></div></div>
         * @return bool whether the current entry is a directory, but not '.' or '..'*/
        public function hasChildren ($allow_links = null) {}

/**
*<div id="recursivedirectoryiterator.getchildren" class="refentry">  <div class="refnamediv">   <h1 class="refname">RecursiveDirectoryIterator::getChildren</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">RecursiveDirectoryIterator::getChildren</span> &mdash; <span class="dc-title">Returns an iterator for the current entry if it is a directory</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-recursivedirectoryiterator.getchildren-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>RecursiveDirectoryIterator::getChildren</strong></span>     ( <span class="methodparam">void</span>    )</div>      <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-recursivedirectoryiterator.getchildren-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-recursivedirectoryiterator.getchildren-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The filename, file information, or $this depending on the set flags.    See the <a href="http://php.net/manual/zh/class.filesystemiterator.php#filesystemiterator.constants" class="link">FilesystemIterator    constants</a>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.recursivedirectoryiterator.php">RecursiveDirectoryIterator</a></div></div>
         * @return object An iterator for the current entry, if it is a directory.*/
        public function getChildren () {}

/**
*<div id="recursivedirectoryiterator.getsubpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">RecursiveDirectoryIterator::getSubPath</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">RecursiveDirectoryIterator::getSubPath</span> &mdash; <span class="dc-title">Get sub path</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-recursivedirectoryiterator.getsubpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>RecursiveDirectoryIterator::getSubPath</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the sub path relative to the directory given in the constructor.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-recursivedirectoryiterator.getsubpath-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-recursivedirectoryiterator.getsubpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The sub path.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-recursivedirectoryiterator.getsubpath-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4689">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">getSubPath()</strong></span> example</strong></p>      <div class="example-contents"><p>            </p></div>     <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> $directory&nbsp;=&nbsp;'/tmp';<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$it&nbsp;=&nbsp;new&nbsp;RecursiveIteratorIterator(new&nbsp;RecursiveDirectoryIterator($directory));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($it&nbsp;as&nbsp;$file)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;'SubPathName:&nbsp;'&nbsp;.&nbsp;$it-&gt;getSubPathName()&nbsp;.&nbsp;"\n";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;'SubPath:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;.&nbsp;$it-&gt;getSubPath()&nbsp;.&nbsp;"\n\n";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;">     <div class="cdata"><span>      SubPathName: fruit/apple.xml      SubPath:     fruit            SubPathName: stuff.xml      SubPath:                 SubPathName: veggies/carrot.xml      SubPath:     veggies     </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-recursivedirectoryiterator.getsubpath-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link RecursiveDirectoryIterator::getSubPathName()} - Get sub path and name</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link RecursiveDirectoryIterator::key()} - Return path and filename of current dir entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.recursivedirectoryiterator.php">RecursiveDirectoryIterator</a></div></div>
         * @return string The sub path (sub directory).*/
        public function getSubPath () {}

/**
*<div id="recursivedirectoryiterator.getsubpathname" class="refentry">  <div class="refnamediv">   <h1 class="refname">RecursiveDirectoryIterator::getSubPathname</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">RecursiveDirectoryIterator::getSubPathname</span> &mdash; <span class="dc-title">Get sub path and name</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-recursivedirectoryiterator.getsubpathname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>RecursiveDirectoryIterator::getSubPathname</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the sub path and filename.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-recursivedirectoryiterator.getsubpathname-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-recursivedirectoryiterator.getsubpathname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The sub path (sub directory) and filename.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-recursivedirectoryiterator.getsubpathname-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4690">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">getSubPathname()</strong></span> example</strong></p>      <div class="example-contents"><p>            </p></div>     <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> $directory&nbsp;=&nbsp;'/tmp';<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$it&nbsp;=&nbsp;new&nbsp;RecursiveIteratorIterator(new&nbsp;RecursiveDirectoryIterator($directory));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($it&nbsp;as&nbsp;$file)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;'SubPathName:&nbsp;'&nbsp;.&nbsp;$it-&gt;getSubPathName()&nbsp;.&nbsp;"\n";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;'SubPath:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;.&nbsp;$it-&gt;getSubPath()&nbsp;.&nbsp;"\n\n";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;">     <div class="cdata"><span>      SubPathName: fruit/apple.xml      SubPath:     fruit            SubPathName: stuff.xml      SubPath:                 SubPathName: veggies/carrot.xml      SubPath:     veggies     </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-recursivedirectoryiterator.getsubpathname-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link RecursiveDirectoryIterator::getSubPath()} - Get sub path</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link RecursiveDirectoryIterator::key()} - Return path and filename of current dir entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.recursivedirectoryiterator.php">RecursiveDirectoryIterator</a></div></div>
         * @return string The sub path (sub directory) and filename.*/
        public function getSubPathname () {}

/**
*<div id="recursivedirectoryiterator.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">RecursiveDirectoryIterator::rewind</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">RecursiveDirectoryIterator::rewind</span> &mdash; <span class="dc-title">Rewind dir back to the start</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-recursivedirectoryiterator.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>RecursiveDirectoryIterator::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>      <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-recursivedirectoryiterator.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-recursivedirectoryiterator.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.recursivedirectoryiterator.php">RecursiveDirectoryIterator</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="recursivedirectoryiterator.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">RecursiveDirectoryIterator::next</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">RecursiveDirectoryIterator::next</span> &mdash; <span class="dc-title">Move to next entry</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-recursivedirectoryiterator.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>RecursiveDirectoryIterator::next</strong></span>     ( <span class="methodparam">void</span>    )</div>      <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-recursivedirectoryiterator.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-recursivedirectoryiterator.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.recursivedirectoryiterator.php">RecursiveDirectoryIterator</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="recursivedirectoryiterator.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">RecursiveDirectoryIterator::key</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">RecursiveDirectoryIterator::key</span> &mdash; <span class="dc-title">Return path and filename of current dir entry</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-recursivedirectoryiterator.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>RecursiveDirectoryIterator::key</strong></span>     ( <span class="methodparam">void</span>    )</div>      <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-recursivedirectoryiterator.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-recursivedirectoryiterator.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The path and filename of the current dir entry.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.recursivedirectoryiterator.php">RecursiveDirectoryIterator</a></div></div>
         * @return string the pathname or filename depending on the set flags.*/
        public function key () {}

        /**
         * The current file
         * @link http://php.net/manual/en/filesystemiterator.current.php
         * @return mixed The filename, file information, or $this depending on the set flags.
         * See the FilesystemIterator constants.
         * @since 5.3.0
         */
        public function current () {}

}

/**
*<div id="class.globiterator" class="reference">   <h1 class="title">The GlobIterator class</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>     <div class="section" id="globiterator.intro">    <h2 class="title">简介</h2>    <p class="para">     遍历一个文件系统行为类似于      <span class="function">{@link glob()}</span>.    </p>   </div>     <div class="section" id="globiterator.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">GlobIterator</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.filesystemiterator.php" class="classname">FilesystemIterator</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.seekableiterator.php" class="interfacename">SeekableIterator</a></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/globiterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$pattern</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/globiterator.count.php" class="methodname" style="color:#CC7832">count</a></span>     ( <span class="methodparam">void</span>    )</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::__construct}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::getFlags}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link FilesystemIterator::setFlags}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>   ] )</div>      }</div>     </div>   </div>                   <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link GlobIterator::__construct} — Construct a directory using glob</li><li>{@link GlobIterator::count} — Get the number of directories and files</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.iterators.php">迭代器</a></div></div>
*/
class GlobIterator extends FilesystemIterator implements Countable {

        /**
         * Construct a directory using glob
         * @link http://php.net/manual/en/globiterator.construct.php
         * @param $path
         * @param $flags [optional]
         * @since 5.3.0
         */
        public function __construct ($path, $flags) {}

        /**
         * Get the number of directories and files
         * @link http://php.net/manual/en/globiterator.count.php
	 * @return int The number of returned directories and files, as an
/**
*<div id="globiterator.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">GlobIterator::count</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">GlobIterator::count</span> &mdash; <span class="dc-title">Get the number of directories and files</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-globiterator.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>GlobIterator::count</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the number of directories and files found by    the glob expression.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-globiterator.count-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-globiterator.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The number of returned directories and files, as an    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-globiterator.count-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4675">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>GlobIterator::count()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$iterator&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">GlobIterator</span><span style="color: #007700">(</span><span style="color: #DD0000">'*.xml'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Matched&nbsp;%d&nbsp;item(s)\r\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$iterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Matched 8 item(s) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-globiterator.count-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link GlobIterator::__construct()} - Construct a directory using glob</span></li>     <li class="member"><span class="function">{@link count()} - 计算数组中的单元数目，或对象中的属性个数</span></li>     <li class="member"><span class="function">{@link glob()} - 寻找与模式匹配的文件路径</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.globiterator.php">GlobIterator</a></div></div>
*/
        public function count () {}
}

/**
*<div id="class.splfileobject" class="reference">   <h1 class="title">The SplFileObject class</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p>     <div class="section" id="splfileobject.intro">    <h2 class="title">简介</h2>    <p class="para">      SplFileObject类为文件提供了一个面向对象接口.    </p>   </div>     <div class="section" id="splfileobject.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplFileObject</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.splfileinfo.php" class="classname">SplFileInfo</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.recursiveiterator.php" class="interfacename">RecursiveIterator</a></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.seekableiterator.php" class="interfacename">SeekableIterator</a></span>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.splfileobject.php#splfileobject.constants.drop-new-line"><var class="varname">DROP_NEW_LINE</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.splfileobject.php#splfileobject.constants.read-ahead"><var class="varname">READ_AHEAD</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.splfileobject.php#splfileobject.constants.skip-empty"><var class="varname">SKIP_EMPTY</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.splfileobject.php#splfileobject.constants.read-csv"><var class="varname">READ_CSV</var></a></var>      <span class="initializer"> = 8</span>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string|array</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.eof.php" class="methodname" style="color:#CC7832">eof</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fflush.php" class="methodname" style="color:#CC7832">fflush</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fgetc.php" class="methodname" style="color:#CC7832">fgetc</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fgetcsv.php" class="methodname" style="color:#CC7832">fgetcsv</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &quot;,&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &quot;\&quot;&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &quot;\\&quot;</span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fgets.php" class="methodname" style="color:#CC7832">fgets</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fgetss.php" class="methodname" style="color:#CC7832">fgetss</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$allowable_tags</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.flock.php" class="methodname" style="color:#CC7832">flock</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$operation</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$wouldblock</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fpassthru.php" class="methodname" style="color:#CC7832">fpassthru</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fputcsv.php" class="methodname" style="color:#CC7832">fputcsv</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$fields</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &quot;,&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &#039;&quot;&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &quot;\\&quot;</span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fread.php" class="methodname" style="color:#CC7832">fread</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fscanf.php" class="methodname" style="color:#CC7832">fscanf</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$format</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">&$...</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fseek.php" class="methodname" style="color:#CC7832">fseek</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$offset</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$whence</span><span class="initializer"> = SEEK_SET</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fstat.php" class="methodname" style="color:#CC7832">fstat</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.ftell.php" class="methodname" style="color:#CC7832">ftell</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.ftruncate.php" class="methodname" style="color:#CC7832">ftruncate</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$size</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.fwrite.php" class="methodname" style="color:#CC7832">fwrite</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$str</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.getchildren.php" class="methodname" style="color:#CC7832">getChildren</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.getcsvcontrol.php" class="methodname" style="color:#CC7832">getCsvControl</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.getflags.php" class="methodname" style="color:#CC7832">getFlags</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.getmaxlinelen.php" class="methodname" style="color:#CC7832">getMaxLineLen</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.haschildren.php" class="methodname" style="color:#CC7832">hasChildren</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.seek.php" class="methodname" style="color:#CC7832">seek</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$line_pos</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.setcsvcontrol.php" class="methodname" style="color:#CC7832">setCsvControl</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &quot;,&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &quot;\&quot;&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &quot;\\&quot;</span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.setflags.php" class="methodname" style="color:#CC7832">setFlags</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.setmaxlinelen.php" class="methodname" style="color:#CC7832">setMaxLineLen</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$max_len</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfileobject.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getATime}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getBasename}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$suffix</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getCTime}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getExtension}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">SplFileInfo</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getFileInfo}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getFilename}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getGroup}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getInode}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getLinkTarget}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getMTime}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getOwner}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getPath}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">SplFileInfo</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getPathInfo}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getPathname}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getPerms}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getRealPath}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getSize}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::getType}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::isDir}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::isExecutable}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::isFile}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::isLink}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::isReadable}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::isWritable}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">SplFileObject</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::openFile}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$open_mode</span><span class="initializer"> = &quot;r&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$use_include_path</span><span class="initializer"> = <strong><span>FALSE</span></strong></span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span><span class="initializer"> = <strong><span>NULL</span></strong></span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::setFileClass}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span><span class="initializer"> = &quot;SplFileObject&quot;</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::setInfoClass}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$class_name</span><span class="initializer"> = &quot;SplFileInfo&quot;</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileInfo::__toString}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>       <div class="section" id="splfileobject.constants">    <h2 class="title">预定义常量</h2>    <dl>            <dt id="splfileobject.constants.drop-new-line"><strong><span>SplFileObject::DROP_NEW_LINE</span></strong></dt>       <dd>        <p class="para">Drop newlines at the end of a line.</p>      </dd>                 <dt id="splfileobject.constants.read-ahead"><strong><span>SplFileObject::READ_AHEAD</span></strong></dt>       <dd>        <p class="para">Read on rewind/next.</p>      </dd>                 <dt id="splfileobject.constants.skip-empty"><strong><span>SplFileObject::SKIP_EMPTY</span></strong></dt>       <dd>        <p class="para">Skips empty lines in the file. This requires the <strong><span>READ_AHEAD</span></strong> flag be enabled, to work as expected.</p>      </dd>                 <dt id="splfileobject.constants.read-csv"><strong><span>SplFileObject::READ_CSV</span></strong></dt>       <dd>        <p class="para">Read lines as CSV rows.</p>      </dd>          </dl>    </div>    <div class="section">   <h2 class="title">更新日志</h2>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.9</td>        <td>         <strong><span>SplFileObject::SKIP_EMPTY</span></strong> value changed to 4.         Previously, value was 6.        </td>       </tr>       </tbody>         </table>    </p>  </div>   </div>                                                                                                                                                                                                                                            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplFileObject::__construct} — Construct a new file object</li><li>{@link SplFileObject::current} — Retrieve current line of file</li><li>{@link SplFileObject::eof} — Reached end of file</li><li>{@link SplFileObject::fflush} — Flushes the output to the file</li><li>{@link SplFileObject::fgetc} — Gets character from file</li><li>{@link SplFileObject::fgetcsv} — Gets line from file and parse as CSV fields</li><li>{@link SplFileObject::fgets} — Gets line from file</li><li>{@link SplFileObject::fgetss} — Gets line from file and strip HTML tags</li><li>{@link SplFileObject::flock} — Portable file locking</li><li>{@link SplFileObject::fpassthru} — Output all remaining data on a file pointer</li><li>{@link SplFileObject::fputcsv} — Write a field array as a CSV line</li><li>{@link SplFileObject::fread} — Read from file</li><li>{@link SplFileObject::fscanf} — Parses input from file according to a format</li><li>{@link SplFileObject::fseek} — Seek to a position</li><li>{@link SplFileObject::fstat} — Gets information about the file</li><li>{@link SplFileObject::ftell} — Return current file position</li><li>{@link SplFileObject::ftruncate} — Truncates the file to a given length</li><li>{@link SplFileObject::fwrite} — Write to file</li><li>{@link SplFileObject::getChildren} — No purpose</li><li>{@link SplFileObject::getCsvControl} — Get the delimiter, enclosure and escape character for CSV</li><li>{@link SplFileObject::getCurrentLine} — Alias of SplFileObject::fgets</li><li>{@link SplFileObject::getFlags} — Gets flags for the SplFileObject</li><li>{@link SplFileObject::getMaxLineLen} — Get maximum line length</li><li>{@link SplFileObject::hasChildren} — SplFileObject does not have children</li><li>{@link SplFileObject::key} — Get line number</li><li>{@link SplFileObject::next} — Read next line</li><li>{@link SplFileObject::rewind} — Rewind the file to the first line</li><li>{@link SplFileObject::seek} — Seek to specified line</li><li>{@link SplFileObject::setCsvControl} — Set the delimiter, enclosure and escape character for CSV</li><li>{@link SplFileObject::setFlags} — Sets flags for the SplFileObject</li><li>{@link SplFileObject::setMaxLineLen} — Set maximum line length</li><li>{@link SplFileObject::__toString} — Alias of SplFileObject::current</li><li>{@link SplFileObject::valid} — Not at EOF</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.files.php">文件处理</a></div></div>
*/
class SplFileObject extends SplFileInfo implements RecursiveIterator, SeekableIterator {
        /**
         * Drop newlines at the end of a line.
         */
        const DROP_NEW_LINE = 1;
        /**
         * Read on rewind/next.
         */
        const READ_AHEAD = 2;
        /**
         * Skip empty lines in the file. This requires the {@see READ_AHEAD} flag to work as expected.
         */
        const SKIP_EMPTY = 4;
        /**
         * Read lines as CSV rows.
         */
        const READ_CSV = 8;


        /**
         * Construct a new file object.
         *
         * @link  http://php.net/manual/en/splfileobject.construct.php
         *
         * @param string   $file_name        The file to open
         * @param string   $open_mode        [optional] The mode in which to open the file. See {@see fopen} for a list of allowed modes.
         * @param bool     $use_include_path [optional] Whether to search in the include_path for filename
         * @param resource $context          [optional] A valid context resource created with {@see stream_context_create}
         *
         * @throws RuntimeException When the filename cannot be opened
         * @throws LogicException When the filename is a directory
         *
         * @since 5.1.0
         */
        public function __construct ($file_name, $open_mode = 'r', $use_include_path = false, $context = null) {}

/**
*<div id="splfileobject.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::rewind</span> &mdash; <span class="dc-title">Rewind the file to the first line</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Rewinds the file back to the first line.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileobject.rewind-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws a <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> if cannot be rewound.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.rewind-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="splfileobject.fread.examples.basic">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::rewind()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"misc.txt"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Loop&nbsp;over&nbsp;whole&nbsp;file<br /></span><span style="color: #007700">foreach&nbsp;(</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$line</span><span style="color: #007700">)&nbsp;{&nbsp;}<br /><br /></span><span style="color: #FF8000">//&nbsp;Rewind&nbsp;to&nbsp;first&nbsp;line<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Output&nbsp;first&nbsp;line<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.rewind-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::current()} - Retrieve current line of file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::key()} - Get line number</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::seek()} - Seek to specified line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::next()} - Read next line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::valid()} - Not at EOF</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return void */
        public function rewind () {}

        /**
         * Reached end of file
         * @link http://php.net/manual/en/splfileobject.eof.php
	 * @return bool true if file is at EOF, false otherwise.
/**
*<div id="splfileobject.eof" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::eof</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::eof</span> &mdash; <span class="dc-title">Reached end of file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.eof-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::eof</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Determine whether the end of file has been reached   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.eof-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.eof-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if file is at EOF, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.eof-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4745">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::eof()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"fruits.txt"</span><span style="color: #007700">);<br />while&nbsp;(&nbsp;!&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">eof</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> apple banana cherry date elderberry </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.eof-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::valid()} - Not at EOF</span></li>     <li class="member"><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function eof () {}

/**
*<div id="splfileobject.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::valid</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::valid</span> &mdash; <span class="dc-title">Not at EOF</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Check whether EOF has been reached.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if not reached EOF, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.valid-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4773">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::valid()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Loop&nbsp;over&nbsp;a&nbsp;file,&nbsp;line&nbsp;by&nbsp;line<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"file.txt"</span><span style="color: #007700">);<br />while&nbsp;(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.valid-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::current()} - Retrieve current line of file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::key()} - Get line number</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::seek()} - Seek to specified line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::next()} - Read next line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind()} - Rewind the file to the first line</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return bool true if not reached EOF, false otherwise.*/
        public function valid () {}

/**
*<div id="splfileobject.fgets" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fgets</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fgets</span> &mdash; <span class="dc-title">Gets line from file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fgets-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fgets</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets a line from the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fgets-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fgets-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a string containing the next line from the file, or <strong><span>FALSE</span></strong> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileobject.fgets-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws a <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> if the file cannot be read.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fgets-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4750">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fgets()</strong></span> example</strong></p>     <div class="example-contents"><p>This example simply outputs the contents of <em>file.txt</em> line-by-line.</p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"file.txt"</span><span style="color: #007700">);<br />while&nbsp;(!</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">eof</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fgets-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetss()} - Gets line from file and strip HTML tags</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetc()} - Gets character from file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::current()} - Retrieve current line of file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return string a string containing the next line from the file, or false on error.*/
        public function fgets () {}

/**
*<div id="splfileobject.fread" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fread</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.11, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fread</span> &mdash; <span class="dc-title">Read from file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fread-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fread</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    )</div>    <p class="para rdfs-comment">    Reads the given number of bytes from the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fread-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>      <dd>       <span>       The number of bytes to read.      </span>     </dd>        </dl>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fread-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the string read from the file  或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fread-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4755">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fread()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Get&nbsp;contents&nbsp;of&nbsp;a&nbsp;file&nbsp;into&nbsp;a&nbsp;string<br /></span><span style="color: #9876AA">$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"/usr/local/something.txt"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSize</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-splfileobject.fread-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Note that <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fread()</strong></span> reads from the current     position of the file pointer. Use <span class="methodname" style="color:#CC7832">{@link SplFileObject::ftell()}</span>     to find the current position of the pointer and <span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind()}</span>     (or <span class="methodname" style="color:#CC7832">{@link SplFileObject::fseek()}</span>) to rewind the pointer position.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fread-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return string returns the string read from the file or FALSE on failure.*/
        public function fread ($length) {}

        /**
         * Gets line from file and parse as CSV fields
         * @link http://php.net/manual/en/splfileobject.fgetcsv.php
         * @param string $delimiter [optional] <p>
	 * The field delimiter (one character only). Defaults as a comma or the value set using <b>SplFileObject::setCsvControl</b>.
         * </p>
         * @param string $enclosure [optional] <p>
	 * The field enclosure character (one character only). Defaults as a double quotation mark or the value set using <b>SplFileObject::setCsvControl</b>.
         * </p>
         * @param string $escape [optional] <p>
	 * The escape character (one character only). Defaults as a backslash (\) or the value set using <b>SplFileObject::setCsvControl</b>.
         * </p>
         * @return array an indexed array containing the fields read, or false on error.
         * </p>
         * <p>
         * A blank line in a CSV file will be returned as an array
	 * comprising a single null field unless using <b>SplFileObject::SKIP_EMPTY | SplFileObject::DROP_NEW_LINE</b>,
/**
*<div id="function.fgetcsv" class="refentry">  <div class="refnamediv">   <h1 class="refname">fgetcsv</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fgetcsv</span> &mdash; <span class="dc-title">从文件指针中读入一行并解析 CSV 字段</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgetcsv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>fgetcsv</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &#039;,&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &#039;&quot;&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &#039;\\&#039;</span></span>   ]]]] )</div>    <p class="para rdfs-comment">    和 <span class="function">{@link fgets()}</span> 类似，只除了    <span class="function"><strong style="color:#CC7832">fgetcsv()</strong></span> 解析读入的行并找出 <acronym title="Comma Separated Value">CSV</acronym>    格式的字段然后返回一个包含这些字段的数组。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgetcsv-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        一个由 <span class="function">{@link fopen()}</span>、<span class="function">{@link popen()}</span> 或        <span class="function">{@link fsockopen()}</span> 产生的有效文件指针。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        必须大于 CVS 文件内最长的一行。在 PHP 5        中该参数是可选的。如果忽略（在 PHP 5.0.4 以后的版本中设为        0）该参数的话，那么长度就没有限制，不过可能会影响执行效率。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">delimiter</span></dt>       <dd>        <p class="para">        设置字段分界符（只允许一个字符）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">enclosure</span></dt>       <dd>        <p class="para">        设置字段环绕符（只允许一个字符）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">escape</span></dt>       <dd>        <p class="para">        设置转义字符（只允许一个字符），默认是一个反斜杠。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgetcsv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回包含读取字段的索引数组。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">         CSV 文件中的空行将被返回为一个包含有单个 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span> 字段的数组，不会被当成错误。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP 不能正确的识别行结束符，启用运行时配置可选项 <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a> 也许可以解决此问题。</span></p></blockquote>   <p class="para">    如果提供了无效的文件指针，<span class="function"><strong style="color:#CC7832">fgetcsv()</strong></span> 会返回 <strong><span>NULL</span></strong>。    其他错误，包括碰到文件结束时返回 <strong><span>FALSE</span></strong>，。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fgetcsv-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         增加了 <span class="parameter" style="color:#2EACF9">escape</span> 参数。        </td>       </tr>        <tr>        <td>4.3.5</td>        <td>         现在起 <span class="function"><strong style="color:#CC7832">fgetcsv()</strong></span> 的操作是二进制安全的。        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         增加了 <span class="parameter" style="color:#2EACF9">enclosure</span> 参数。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgetcsv-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2770">     <p><strong>Example #1 读取并显示 CSV 文件的整个内容</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$row&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />if&nbsp;((</span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.csv"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">))&nbsp;!==&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;((</span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgetcsv</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">","</span><span style="color: #007700">))&nbsp;!==&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$num&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"&lt;p&gt;&nbsp;</span><span style="color: #9876AA">$num</span><span style="color: #DD0000">&nbsp;fields&nbsp;in&nbsp;line&nbsp;</span><span style="color: #9876AA">$row</span><span style="color: #DD0000">:&nbsp;&lt;br&nbsp;/&gt;&lt;/p&gt;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$row</span><span style="color: #007700">++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(</span><span style="color: #9876AA">$c</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">$num</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$data</span><span style="color: #007700">[</span><span style="color: #9876AA">$c</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">"&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgetcsv-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     该函数对区域设置是敏感的。比如说 <var class="varname"><var class="varname">LANG</var></var> 设为     <em>en_US.UTF-8</em> 的话，单字节编码的文件就会出现读取错误。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgetcsv-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link str_getcsv()} - 解析 CSV 字符串为一个数组</span></li>     <li class="member"><span class="function">{@link explode()} - 使用一个字符串分割另一个字符串</span></li>     <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>     <li class="member"><span class="function">{@link pack()} - 将数据打包成二进制字符串</span></li>     <li class="member"><span class="function">{@link fputcsv()} - 将行格式化为 CSV 并写入文件指针</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
*/
	public function fgetcsv ($delimiter = ",", $enclosure = "\"", $escape = "\\") {}

/**
*<div id="function.fputcsv" class="refentry">  <div class="refnamediv">   <h1 class="refname">fputcsv</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">fputcsv</span> &mdash; <span class="dc-title">将行格式化为 CSV 并写入文件指针</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fputcsv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>fputcsv</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$fields</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &#039;,&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &#039;&quot;&#039;</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">fputcsv()</strong></span> 将一行（用    <span class="parameter" style="color:#2EACF9">fields</span> 数组传递）格式化为 CSV    格式并写入由 <span class="parameter" style="color:#2EACF9">handle</span>    指定的文件。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fputcsv-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">fields</span></dt>       <dd>        <p class="para">        值的一个数组。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">delimiter</span></dt>       <dd>        <p class="para">        可选的 <span class="parameter" style="color:#2EACF9">delimiter</span>    参数设定字段分界符（只允许一个字符）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">enclosure</span></dt>       <dd>        <p class="para">        可选的 <span class="parameter" style="color:#2EACF9">enclosure</span>    参数设定字段字段环绕符（只允许一个字符）。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fputcsv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回写入字符串的长度， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fputcsv-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2796">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">fputcsv()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$list&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'aaa'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bbb'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'ccc'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'dddd'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'123'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'456'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'789'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'"aaa"'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'"bbb"'</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.csv'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$list&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$fields</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fputcsv</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$fields</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例子会写入以下的<em>file.csv</em>：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> aaa,bbb,ccc,dddd 123,456,789 &quot;&quot;&quot;aaa&quot;&quot;&quot;,&quot;&quot;&quot;bbb&quot;&quot;&quot;  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fputcsv-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP 不能正确的识别行结束符，启用运行时配置可选项 <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a> 也许可以解决此问题。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fputcsv-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fgetcsv()} - 从文件指针中读入一行并解析 CSV 字段</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
     * @return int Returns the length of the written string or FALSE on failure.*/
	public function fputcsv (array $fields, $delimiter = ',' , $enclosure = '"', $escape_char = "\\") {}

        /**
         * Set the delimiter and enclosure character for CSV
         * @link http://php.net/manual/en/splfileobject.setcsvcontrol.php
         * @param string $delimiter [optional] <p>
         * The field delimiter (one character only).
         * </p>
         * @param string $enclosure [optional] <p>
         * The field enclosure character (one character only).
         * </p>
         * @param string $escape [optional] <p>
         * The field escape character (one character only).
         * </p>
         * @return void 
         * @since 5.2.0
         */
	public function setCsvControl ($delimiter = ",", $enclosure = "\"", $escape = "\\") {}

/**
*<div id="splfileobject.getcsvcontrol" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::getCsvControl</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::getCsvControl</span> &mdash; <span class="dc-title">Get the delimiter, enclosure and escape character for CSV</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.getcsvcontrol-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::getCsvControl</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the delimiter, enclosure and escape character used for parsing CSV fields.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.getcsvcontrol-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.getcsvcontrol-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an indexed array containing the delimiter, enclosure and escape character.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-splfileobject.getcsvcontrol-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.4.0</td>        <td>         The escape character can now be an an empty string.        </td>       </tr>        <tr>        <td>5.6.25, 7.0.10</td>        <td>         Added the escape character to the returned array.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.getcsvcontrol-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4762">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::getCsvControl()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"data.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCsvControl</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [0] =&gt; ,     [1] =&gt; &quot;     [2] =&gt; \ ) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.getcsvcontrol-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::setCsvControl()} - Set the delimiter, enclosure and escape character for CSV</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetcsv()} - Gets line from file and parse as CSV fields</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return array an indexed array containing the delimiter and enclosure character.*/
        public function getCsvControl () {}

        /**
         * Portable file locking
         * @link http://php.net/manual/en/splfileobject.flock.php
         * @param int $operation <p>
	 * <i>operation</i> is one of the following:
	 * <b>LOCK_SH</b> to acquire a shared lock (reader).
         * @param int $wouldblock [optional] <p>
         * Set to true if the lock would block (EWOULDBLOCK errno condition).
         * </p>
	 * @return bool true on success or false on failure.
/**
*<div id="splfileobject.flock" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::flock</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::flock</span> &mdash; <span class="dc-title">Portable file locking</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.flock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::flock</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$operation</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$wouldblock</span></span>   ] )</div>    <p class="para rdfs-comment">    Locks or unlocks the file in the same portable way as <span class="function">{@link flock()}</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.flock-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">operation</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">operation</span> is one of the following:        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">           <strong><span>LOCK_SH</span></strong> to acquire a shared lock (reader).          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><span>LOCK_EX</span></strong> to acquire an exclusive lock (writer).          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><span>LOCK_UN</span></strong> to release a lock (shared or exclusive).          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><span>LOCK_NB</span></strong> to not block while locking.          </span>         </li>        </ul>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">wouldblock</span></dt>       <dd>        <p class="para">        Set to <strong><span>TRUE</span></strong> if the lock would block (EWOULDBLOCK errno condition).       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.flock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.flock-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4752">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::flock()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/lock.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">LOCK_EX</span><span style="color: #007700">))&nbsp;{&nbsp;</span><span style="color: #FF8000">//&nbsp;do&nbsp;an&nbsp;exclusive&nbsp;lock<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;truncate&nbsp;file<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #DD0000">"Write&nbsp;something&nbsp;here\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">LOCK_UN</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;release&nbsp;the&nbsp;lock&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span style="color: #007700">}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Couldn't&nbsp;get&nbsp;the&nbsp;lock!"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-splfileobject.flock-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.5.22, 5.6.6</td>        <td>         Added support for the <span class="parameter" style="color:#2EACF9">wouldblock</span> parameter on         Windows.        </td>       </tr>              <tr>        <td>5.3.2</td>        <td>         The automatic unlocking when the file&#039;s resource handle is closed was         removed. Unlocking now always has to be done manually.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.flock-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link flock()} - 轻便的咨询文件锁定</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function flock ($operation, &$wouldblock = null) {}

        /**
         * Flushes the output to the file
         * @link http://php.net/manual/en/splfileobject.fflush.php
	 * @return bool true on success or false on failure.
/**
*<div id="splfileobject.fflush" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fflush</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fflush</span> &mdash; <span class="dc-title">Flushes the output to the file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fflush-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fflush</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Forces a write of all buffered output to the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fflush-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fflush-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fflush-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4746">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fflush()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">'misc.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #DD0000">"Foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fflush</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ftell</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fflush-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fwrite()} - Write to file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function fflush () {}

/**
*<div id="splfileobject.ftell" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::ftell</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::ftell</span> &mdash; <span class="dc-title">Return current file position</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.ftell-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::ftell</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the position of the file pointer which represents the current offset in the file stream.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.ftell-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.ftell-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     Returns the position of the file pointer as an integer, or <strong><span>FALSE</span></strong> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.ftell-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4759">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::ftell()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc/passwd"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Read&nbsp;first&nbsp;line<br /></span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Where&nbsp;are&nbsp;we?<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ftell</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.ftell-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return int the position of the file pointer as an integer, or false on error.*/
        public function ftell () {}

        /**
         * Seek to a position
         * @link http://php.net/manual/en/splfileobject.fseek.php
         * @param int $offset <p>
         * The offset. A negative value can be used to move backwards through the file which
	 * is useful when SEEK_END is used as the <i>whence</i> value.
         * </p>
         * @param int $whence [optional] <p>
	 * <i>whence</i> values are:
	 * <b>SEEK_SET</b> - Set position equal to <i>offset</i> bytes.
	 * <b>SEEK_CUR</b> - Set position to current location plus <i>offset</i>.
	 * <b>SEEK_END</b> - Set position to end-of-file plus <i>offset</i>.
         * </p>
         * <p>
	 * If <i>whence</i> is not specified, it is assumed to be <b>SEEK_SET</b>.
/**
*<div id="function.fseek" class="refentry">  <div class="refnamediv">   <h1 class="refname">fseek</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fseek</span> &mdash; <span class="dc-title">在文件指针中定位</span></p>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fseek-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>fseek</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$offset</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$whence</span><span class="initializer"> = SEEK_SET</span></span>   ] )</div>    <p class="para rdfs-comment">    在与    <span class="parameter" style="color:#2EACF9">handle</span>    关联的文件中设定文件指针位置。    新位置从文件头开始以字节数度量，是以    <span class="parameter" style="color:#2EACF9">whence</span>    指定的位置加上    <span class="parameter" style="color:#2EACF9">offset</span>。   </p>   <p class="para">    In general, it is allowed to seek past the end-of-file; if data is then    written, reads in any unwritten region between the end-of-file and the    sought position will yield bytes with value 0. However, certain streams    may not support this behavior, especially when they have an underlying    fixed size storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fseek-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件系统指针，是典型地由 <span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>(资源)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">offset</span></dt>       <dd>        <p class="para">        偏移量。       </p>       <p class="para">        要移动到文件尾之前的位置，需要给     <span class="parameter" style="color:#2EACF9">offset</span> 传递一个负值，并设置 <span class="parameter" style="color:#2EACF9">whence</span>        为 <strong><span>SEEK_END</span></strong>。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">whence</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">whence</span> values are:        <ul class="simplelist">         <li class="member"><strong><span>SEEK_SET</span></strong> - 设定位置等于 <span class="parameter" style="color:#2EACF9">offset</span> 字节。</li>         <li class="member"><strong><span>SEEK_CUR</span></strong> - 设定位置为当前位置加上 <span class="parameter" style="color:#2EACF9">offset</span>。</li>         <li class="member"><strong><span>SEEK_END</span></strong> - 设定位置为文件尾加上     <span class="parameter" style="color:#2EACF9">offset</span>。</li>        </ul>       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fseek-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     成功则返回 0；否则返回 -1。注意移动到 EOF 之后的位置不算错误。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fseek-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2802">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">fseek()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;read&nbsp;some&nbsp;data<br /></span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">4096</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;move&nbsp;back&nbsp;to&nbsp;the&nbsp;beginning&nbsp;of&nbsp;the&nbsp;file<br />//&nbsp;same&nbsp;as&nbsp;rewind($fp);<br /></span><span style="color: #9876AA">fseek</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fseek-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果使用附加模试（<em>a</em> 或 <em>a+</em>），任何写入文件数据都会被附加上去，而文件的位置将会被忽略，调用 <span class="function"><strong style="color:#CC7832">fseek()</strong></span> 的结果尚未定义。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Not all streams support seeking. For those that do not support seeking,     forward seeking from the current position is accomplished by reading     and discarding data; other forms of seeking will fail.    </p>   </p></blockquote>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fseek-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>     <li class="member"><span class="function">{@link rewind()} - 倒回文件指针的位置</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
         * @return int 0 if the seek was successful, -1 otherwise. Note that seeking*/
	public function fseek ($offset, $whence = SEEK_SET) {}

/**
*<div id="splfileobject.fgetc" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fgetc</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fgetc</span> &mdash; <span class="dc-title">Gets character from file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fgetc-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fgetc</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets a character from the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fgetc-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fgetc-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a string containing a single character read from the file or <strong><span>FALSE</span></strong> on EOF.   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><span>FALSE</span></strong>，但也可能返回等同于 <strong><span>FALSE</span></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fgetc-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4747">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fgetc()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.txt'</span><span style="color: #007700">);<br />while&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">!==&nbsp;(</span><span style="color: #9876AA">$char&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fgetc</span><span style="color: #007700">()))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$char</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fgetc-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgets()} - Gets line from file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return string a string containing a single character read from the file or false on EOF.*/
        public function fgetc () {}

        /**
         * Output all remaining data on a file pointer
         * @link http://php.net/manual/en/splfileobject.fpassthru.php
	 * @return int the number of characters read from <i>handle</i>
/**
*<div id="splfileobject.fpassthru" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fpassthru</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fpassthru</span> &mdash; <span class="dc-title">Output all remaining data on a file pointer</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fpassthru-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fpassthru</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Reads to EOF on the given file pointer from the current position and    writes the results to the output buffer.   </p>   <p class="para">    You may need to call <span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind()}</span> to reset the file    pointer to the beginning of the file if you have already written data    to the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fpassthru-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fpassthru-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of characters read from <span class="parameter" style="color:#2EACF9">handle</span>    and passed through to the output.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fpassthru-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4753">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fpassthru()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;Open&nbsp;the&nbsp;file&nbsp;in&nbsp;binary&nbsp;mode<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"./img/ok.png"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Send&nbsp;the&nbsp;right&nbsp;headers<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type:&nbsp;image/png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Length:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSize</span><span style="color: #007700">());<br /><br /></span><span style="color: #FF8000">//&nbsp;Dump&nbsp;the&nbsp;picture&nbsp;and&nbsp;end&nbsp;script<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">();<br />exit;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fpassthru-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fpassthru()} - 输出文件指针处的所有剩余数据</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function fpassthru () {}

/**
*<div id="splfileobject.fgetss" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fgetss</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fgetss</span> &mdash; <span class="dc-title">Gets line from file and strip HTML tags</span></p>   </div>   <div id="splfileobject.fgetss-refsynopsisdiv">    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">This function has been <em class="emphasis">DEPRECATED</em> as of PHP 7.3.0. Relying on this function is highly discouraged.</p></div>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fgetss-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fgetss</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$allowable_tags</span></span>   ] )</div>    <p class="para rdfs-comment">    Identical to <span class="methodname" style="color:#CC7832">{@link SplFileObject::fgets()}</span>, except that    <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fgetss()</strong></span> attempts to strip any HTML and PHP tags from    the text it reads.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fgetss-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">allowable_tags</span></dt>       <dd>        <p class="para">        Optional parameter to specify tags which should not be stripped.        </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fgetss-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a string containing the next line of the file with HTML and PHP    code stripped, or <strong><span>FALSE</span></strong> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fgetss-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4751">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fgetss()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;&lt;&lt;&lt;EOD<br /></span><span style="color: #DD0000">&lt;html&gt;&lt;body&gt;<br />&nbsp;&lt;p&gt;Welcome!&nbsp;Today&nbsp;is&nbsp;the&nbsp;&lt;?php&nbsp;echo(date('jS'));&nbsp;?&gt;&nbsp;of&nbsp;&lt;?=&nbsp;date('F');&nbsp;?&gt;.&lt;/p&gt;<br />&lt;/body&gt;&lt;/html&gt;<br />Text&nbsp;outside&nbsp;of&nbsp;the&nbsp;HTML&nbsp;block.<br /></span><span style="color: #007700">EOD;<br /></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.php"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.php"</span><span style="color: #007700">);<br />while&nbsp;(!</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">eof</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fgetss</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span>   Welcome! Today is the  of .  Text outside of the HTML block. </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fgetss-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgets()} - Gets line from file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetc()} - Gets character from file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::current()} - Retrieve current line of file</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return string a string containing the next line of the file with HTML and PHP*/
        public function fgetss ($allowable_tags = null) {}

        /**
         * Parses input from file according to a format
         * @link http://php.net/manual/en/splfileobject.fscanf.php
         * @param string $format <p>
	 * The specified format as described in the <b>sprintf</b> documentation.
         * </p>
	 * @param mixed $_ [optional] <p>
	 * The optional assigned values.
	 * </p>
	 * @return mixed If only one parameter is passed to this method, the values parsed will be
/**
*<div id="splfileobject.fscanf" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fscanf</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fscanf</span> &mdash; <span class="dc-title">Parses input from file according to a format</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fscanf-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fscanf</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$format</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">&$...</span></span>   ] )</div>    <p class="para rdfs-comment">    Reads a line from the file and interprets it according to the specified <span class="parameter" style="color:#2EACF9">format</span>, which is    described in the documentation for <span class="function">{@link sprintf()}</span>.   </p>   <p class="para">    Any whitespace in the <span class="parameter" style="color:#2EACF9">format</span> string matches any whitespace in the line from the file.    This means that even a tab <em>\t</em> in the format string can match a single space character in the input stream.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fscanf-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">format</span></dt>       <dd>        <p class="para">        The specified format as described in the <span class="function">{@link sprintf()}</span> documentation.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">...</span></dt>       <dd>        <p class="para">        The optional assigned values.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fscanf-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    If only one parameter is passed to this method, the values parsed will be    returned as an array. Otherwise, if optional parameters are passed, the    function will return the number of assigned values. The optional    parameters must be passed by reference.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fscanf-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4756">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fscanf()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"misc.txt"</span><span style="color: #007700">);<br />while&nbsp;(</span><span style="color: #9876AA">$userinfo&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fscanf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%s&nbsp;%s&nbsp;%s"</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;(</span><span style="color: #9876AA">$name</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$profession</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$countrycode</span><span style="color: #007700">)&nbsp;=&nbsp;</span><span style="color: #9876AA">$userinfo</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Do&nbsp;something&nbsp;with&nbsp;$name&nbsp;$profession&nbsp;$countrycode<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>Contents of users.txt</p></div>     <div class="example-contents"> <div class="txtcode"><span>javier   argonaut    pe hiroshi  sculptor    jp robert   slacker     us luigi    florist     it</span> </div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fscanf-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fscanf()} - 从文件中格式化输入</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function fscanf ($format, &$_ = null) {}

        /**
         * Write to file
         * @link http://php.net/manual/en/splfileobject.fwrite.php
         * @param string $str <p>
         * The string to be written to the file.
         * </p>
         * @param int $length [optional] <p>
	 * If the <i>length</i> argument is given, writing will
	 * stop after <i>length</i> bytes have been written or
	 * the end of <i>string</i> is reached, whichever comes
         * first.
         * </p>
	 * @return int the number of bytes written, or null on error.
/**
*<div id="splfileobject.fwrite" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fwrite</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fwrite</span> &mdash; <span class="dc-title">Write to file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fwrite-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fwrite</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$str</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>   ] )</div>    <p class="para rdfs-comment">    Writes the contents of <span class="parameter" style="color:#2EACF9">string</span> to the file   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fwrite-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">str</span></dt>       <dd>        <p class="para">        The string to be written to the file.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        If the <span class="parameter" style="color:#2EACF9">length</span> argument is given, writing will        stop after <span class="parameter" style="color:#2EACF9">length</span> bytes have been written or        the end of <span class="parameter" style="color:#2EACF9">string</span> is reached, whichever comes        first.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fwrite-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of bytes written, or 0 on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fwrite-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4761">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fwrite()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"fwrite.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$written&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #DD0000">"12345"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Wrote&nbsp;</span><span style="color: #9876AA">$written</span><span style="color: #DD0000">&nbsp;bytes&nbsp;to&nbsp;file"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Wrote 5 bytes to file </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fwrite-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function fwrite ($str, $length = null) {}

        /**
         * Gets information about the file
         * @link http://php.net/manual/en/splfileobject.fstat.php
         * @return array an array with the statistics of the file; the format of the array
	 * is described in detail on the <b>stat</b> manual page.
/**
*<div id="splfileobject.fstat" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::fstat</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::fstat</span> &mdash; <span class="dc-title">Gets information about the file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.fstat-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fstat</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gathers the statistics of the file. Behaves identically to <span class="function">{@link fstat()}</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.fstat-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.fstat-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array with the statistics of the file; the format of the array    is described in detail on the <span class="function">{@link stat()}</span> manual page.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.fstat-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4758">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::fstat()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc/passwd"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stat&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fstat</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Print&nbsp;only&nbsp;the&nbsp;associative&nbsp;part<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">$stat</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">13</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [dev] =&gt; 771     [ino] =&gt; 488704     [mode] =&gt; 33188     [nlink] =&gt; 1     [uid] =&gt; 0     [gid] =&gt; 0     [rdev] =&gt; 0     [size] =&gt; 1114     [atime] =&gt; 1061067181     [mtime] =&gt; 1056136526     [ctime] =&gt; 1056136526     [blksize] =&gt; 4096     [blocks] =&gt; 8 ) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.fstat-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fstat()} - 通过已打开的文件指针取得文件信息</span></li>     <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function fstat () {}

        /**
         * Truncates the file to a given length
         * @link http://php.net/manual/en/splfileobject.ftruncate.php
         * @param int $size <p>
         * The size to truncate to.
         * </p>
         * <p>
	 * If <i>size</i> is larger than the file it is extended with null bytes.
         * </p>
         * <p>
	 * If <i>size</i> is smaller than the file, the extra data will be lost.
         * </p>
	 * @return bool true on success or false on failure.
/**
*<div id="splfileobject.ftruncate" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::ftruncate</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::ftruncate</span> &mdash; <span class="dc-title">Truncates the file to a given length</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.ftruncate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::ftruncate</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$size</span></span>    )</div>    <p class="para rdfs-comment">    Truncates the file to <span class="parameter" style="color:#2EACF9">size</span> bytes.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.ftruncate-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">size</span></dt>       <dd>        <p class="para">        The size to truncate to.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         If <span class="parameter" style="color:#2EACF9">size</span> is larger than the file it is extended with null bytes.        </p>        <p class="para">         If <span class="parameter" style="color:#2EACF9">size</span> is smaller than the file, the extra data will be lost.        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.ftruncate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.ftruncate-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4760">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::ftruncate()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;file&nbsp;containing&nbsp;"Hello&nbsp;World!"<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/ftruncate"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"w+"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello&nbsp;World!"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Truncate&nbsp;to&nbsp;5&nbsp;bytes<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Rewind&nbsp;and&nbsp;read&nbsp;data<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Hello </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.ftruncate-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ftruncate()} - 将文件截断到给定的长度</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function ftruncate ($size) {}

        /**
         * Retrieve current line of file
         * @link http://php.net/manual/en/splfileobject.current.php
	 * @return string|array Retrieves the current line of the file. If the <b>SplFileObject::READ_CSV</b> flag is set, this method returns an array containing the current line parsed as CSV data.
/**
*<div id="splfileobject.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::current</span> &mdash; <span class="dc-title">Retrieve current line of file</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type string|array" style="color:#EAB766">string|array</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Retrieves the current line of the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Retrieves the current line of the file. If the <strong><span>SplFileObject::READ_CSV</span></strong> flag is set, this method returns an array containing the current line parsed as CSV data.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.current-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4744">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::current()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$k&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$line</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;echo&nbsp;(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;+&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">':&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 1: &lt;?php 2: $file = new SplFileObject(__FILE__); 3: foreach ($file as $line) { 4:     echo ($file-&gt;key() + 1) . &#039;: &#039; . $file-&gt;current(); 5: } 6: ?&gt; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.current-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::key()} - Get line number</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::seek()} - Seek to specified line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::next()} - Read next line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind()} - Rewind the file to the first line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::valid()} - Not at EOF</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function current () {}

/**
*<div id="splfileobject.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::key</span> &mdash; <span class="dc-title">Get line number</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the current line number.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     This number may not reflect the actual line number in the file      if <span class="methodname" style="color:#CC7832">{@link SplFileObject::setMaxLineLen()}</span> is used to      read fixed lengths of the file.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the current line number.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.key-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4765">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::key()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"lipsum.txt"</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$line</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">".&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$line</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 0. Lorem ipsum dolor sit amet, consectetur adipiscing elit.  1. Duis nec sapien felis, ac sodales nisl.  2. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </span></div>     </div>    </div>   </span>   <p class="para">    <div class="example" id="example-4766">     <p><strong>Example #2 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::key()</strong></span> example with <span class="methodname" style="color:#CC7832">{@link SplFileObject::setMaxLineLen()}</span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"lipsum.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setMaxLineLen</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$line</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">".&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$line&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 0. Lorem ipsum dolor s 1. it amet, consectetu 2. r adipiscing elit.  3.   4. Duis nec sapien fel 5. is, ac sodales nisl 6. .   7. Lorem ipsum dolor s 8. it amet, consectetu 9. r adipiscing elit.  </span></div>     </div>    </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.key-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::current()} - Retrieve current line of file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::seek()} - Seek to specified line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::next()} - Read next line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind()} - Rewind the file to the first line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::valid()} - Not at EOF</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return int the current line number.*/
        public function key () {}

/**
*<div id="splfileobject.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::next</span> &mdash; <span class="dc-title">Read next line</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Moves ahead to the next line in the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.next-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="splfileobject.fputcsv.examples.basic">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::next()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Read&nbsp;through&nbsp;file&nbsp;line&nbsp;by&nbsp;line<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"misc.txt"</span><span style="color: #007700">);<br />while&nbsp;(!</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">eof</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.next-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::current()} - Retrieve current line of file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::key()} - Get line number</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::seek()} - Seek to specified line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind()} - Rewind the file to the first line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::valid()} - Not at EOF</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="splfileobject.setflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::setFlags</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::setFlags</span> &mdash; <span class="dc-title">Sets flags for the SplFileObject</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.setflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::setFlags</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div>    <p class="para rdfs-comment">    Sets the flags to be used by the <a href="http://php.net/manual/zh/class.splfileobject.php" class="classname">SplFileObject</a>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.setflags-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        Bit mask of the flags to set. See         <a href="http://php.net/manual/zh/class.splfileobject.php#splfileobject.constants" class="link">SplFileObject constants</a>         for the available flags.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.setflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.setflags-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4771">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::setFlags()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"data.csv"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFlags</span><span style="color: #007700">(</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">::</span><span style="color: #9876AA">READ_CSV</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$fields</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$fields</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.setflags-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::getFlags()} - Gets flags for the SplFileObject</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return void */
        public function setFlags ($flags) {}

/**
*<div id="splfileobject.getflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::getFlags</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::getFlags</span> &mdash; <span class="dc-title">Gets flags for the SplFileObject</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.getflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::getFlags</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the flags set for an instance of SplFileObject as an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.getflags-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.getflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span> representing the flags.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.getflags-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4763">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::getFlags()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFlags</span><span style="color: #007700">()&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">::</span><span style="color: #9876AA">SKIP_EMPTY</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Skipping&nbsp;empty&nbsp;lines\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Not&nbsp;skipping&nbsp;empty&nbsp;lines\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFlags</span><span style="color: #007700">(</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">::</span><span style="color: #9876AA">SKIP_EMPTY</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFlags</span><span style="color: #007700">()&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">::</span><span style="color: #9876AA">SKIP_EMPTY</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Skipping&nbsp;empty&nbsp;lines\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Not&nbsp;skipping&nbsp;empty&nbsp;lines\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Not skipping empty lines Skipping empty lines  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.getflags-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::setFlags()} - Sets flags for the SplFileObject</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return int an integer representing the flags.*/
        public function getFlags () {}

/**
*<div id="splfileobject.setmaxlinelen" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::setMaxLineLen</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::setMaxLineLen</span> &mdash; <span class="dc-title">Set maximum line length</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.setmaxlinelen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::setMaxLineLen</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$max_len</span></span>    )</div>    <p class="para rdfs-comment">    Sets the maximum length of a line to be read.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.setmaxlinelen-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">max_len</span></dt>       <dd>        <p class="para">        The maximum length of a line.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.setmaxlinelen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileobject.setmaxlinelen-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.domainexception.php" class="classname">DomainException</a> when    <span class="parameter" style="color:#2EACF9">max_len</span> is less than zero.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.setmaxlinelen-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4772">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::setMaxLineLen()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"lipsum.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setMaxLineLen</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$line</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$line&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>Contents of lipsum.txt</p></div>     <div class="example-contents"> <div class="txtcode"><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis nec sapien felis, ac sodales nisl. Nulla vitae magna vitae purus aliquet consequat.</span> </div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Lorem ipsum dolor s it amet, consectetu r adipiscing elit.  Duis nec sapien fel is, ac sodales nisl .  Nulla vitae magna v itae purus aliquet  consequat. </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.setmaxlinelen-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832"><strong>Classname::Method()</strong></span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return void */
        public function setMaxLineLen ($max_len) {}

        /**
         * Get maximum line length
         * @link http://php.net/manual/en/splfileobject.getmaxlinelen.php
         * @return int the maximum line length if one has been set with
	 * <b>SplFileObject::setMaxLineLen</b>, default is 0.
/**
*<div id="splfileobject.getmaxlinelen" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::getMaxLineLen</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::getMaxLineLen</span> &mdash; <span class="dc-title">Get maximum line length</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.getmaxlinelen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::getMaxLineLen</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the maximum line length as set by <span class="methodname" style="color:#CC7832">{@link SplFileObject::setMaxLineLen()}</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.getmaxlinelen-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.getmaxlinelen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the maximum line length if one has been set with    <span class="methodname" style="color:#CC7832">{@link SplFileObject::setMaxLineLen()}</span>, default is <em>0</em>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.getmaxlinelen-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4764">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::getMaxLineLen()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #DD0000">"file.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMaxLineLen</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setMaxLineLen</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMaxLineLen</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(0) int(20) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.getmaxlinelen-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832"><strong>Classname::Method()</strong></span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
*/
        public function getMaxLineLen () {}

/**
*<div id="splfileobject.haschildren" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::hasChildren</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::hasChildren</span> &mdash; <span class="dc-title">SplFileObject does not have children</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.haschildren-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::hasChildren</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    An <a href="http://php.net/manual/zh/class.splfileobject.php" class="classname">SplFileObject</a> does not have children so this method always return <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.haschildren-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.haschildren-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>FALSE</span></strong>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.haschildren-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link RecursiveIterator::hasChildren()} - Returns if an iterator can be created for the current entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return bool false*/
        public function hasChildren () {}

/**
*<div id="splfileobject.getchildren" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::getChildren</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::getChildren</span> &mdash; <span class="dc-title">No purpose</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.getchildren-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::getChildren</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    An <a href="http://php.net/manual/zh/class.splfileobject.php" class="classname">SplFileObject</a> does not have children so this method returns <strong><span>NULL</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.getchildren-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.getchildren-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.getchildren-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link RecursiveIterator::getChildren()} - Returns an iterator for the current entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return null An SplFileObject does not have children so this method returns NULL.*/
        public function getChildren () {}

/**
*<div id="splfileobject.seek" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::seek</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::seek</span> &mdash; <span class="dc-title">Seek to specified line</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.seek-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFileObject::seek</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$line_pos</span></span>    )</div>    <p class="para rdfs-comment">    Seek to specified line in the file.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfileobject.seek-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">line_pos</span></dt>       <dd>        <p class="para">        The zero-based line number to seek to.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfileobject.seek-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfileobject.seek-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws a <a href="http://php.net/manual/zh/class.logicexception.php" class="classname">LogicException</a> if the     <span class="parameter" style="color:#2EACF9">line_pos</span> is negative.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfileobject.seek-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4769">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFileObject::seek()</strong></span> example</strong></p>     <div class="example-contents"><p>This example outputs the third line of the script which is found at position 2.</p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFileObject</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">seek</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> $file-&gt;seek(2);  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfileobject.seek-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::current()} - Retrieve current line of file</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::key()} - Get line number</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::next()} - Read next line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind()} - Rewind the file to the first line</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::valid()} - Not at EOF</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return void */
        public function seek ($line_pos) {}

        /**
	     * Alias of <b>SplFileObject::fgets</b>
/**
*<div id="splfileobject.getcurrentline" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFileObject::getCurrentLine</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplFileObject::getCurrentLine</span> &mdash; <span class="dc-title">Alias of <span class="methodname" style="color:#CC7832">{@link SplFileObject::fgets()}</span></span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfileobject.getcurrentline-description">   <h3 class="title">说明</h3>   <p class="simpara">    此方法是该方法的别名： <span class="methodname" style="color:#CC7832">{@link SplFileObject::fgets()}</span>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfileobject.php">SplFileObject</a></div></div>
         * @return string Returns a string containing the next line from the file, or FALSE on error.*/
        public function getCurrentLine () {}

        /**
	 * Alias of <b>SplFileObject::current</b>
         * @link http://php.net/manual/en/splfileobject.tostring.php
         * @since 5.1.0
         */
        public function __toString () {}

}

/**
*<div id="class.spltempfileobject" class="reference">   <h1 class="title">The SplTempFileObject class</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.1.2, PHP 7)</p>     <div class="section" id="spltempfileobject.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplTempFileObject class offers an object oriented interface for a temporary file.    </p>   </div>     <div class="section" id="spltempfileobject.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplTempFileObject</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.splfileobject.php" class="classname">SplFileObject</a>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.seekableiterator.php" class="interfacename">SeekableIterator</a></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.recursiveiterator.php" class="interfacename">RecursiveIterator</a></span>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// Inherited constants </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">SplFileObject::DROP_NEW_LINE</var>}</var>      <span class="initializer"> = 1</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">SplFileObject::READ_AHEAD</var>}</var>      <span class="initializer"> = 2</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">SplFileObject::SKIP_EMPTY</var>}</var>      <span class="initializer"> = 4</span>     ;</div> <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname">{@link <var class="varname">SplFileObject::READ_CSV</var>}</var>      <span class="initializer"> = 8</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spltempfileobject.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$max_memory</span></span>   ] )</div>                <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string|array</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::eof}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fflush}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetc}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetcsv}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &quot;,&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &quot;\&quot;&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &quot;\\&quot;</span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fgets}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetss}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$allowable_tags</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::flock}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$operation</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$wouldblock</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fpassthru}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fputcsv}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$fields</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &quot;,&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &#039;&quot;&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &quot;\\&quot;</span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fread}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fscanf}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$format</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">&$...</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fseek}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$offset</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$whence</span><span class="initializer"> = SEEK_SET</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fstat}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::ftell}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::ftruncate}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$size</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::fwrite}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$str</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::getChildren}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::getCsvControl}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::getFlags}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::getMaxLineLen}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::hasChildren}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::seek}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$line_pos</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::setCsvControl}</span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &quot;,&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &quot;\&quot;&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &quot;\\&quot;</span></span>   ]]] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::setFlags}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::setMaxLineLen}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$max_len</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplFileObject::valid}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>   </div>            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplTempFileObject::__construct} — Construct a new temporary file object</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.files.php">文件处理</a></div></div>
*/
class SplTempFileObject extends SplFileObject {


        /**
         * Construct a new temporary file object
         * @link http://php.net/manual/en/spltempfileobject.construct.php
         * @param $max_memory [optional]
         * @since 5.1.2
         */
        public function __construct ($max_memory) {}
}

/**
*<div id="class.spldoublylinkedlist" class="reference">  <h1 class="title">The SplDoublyLinkedList class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="spldoublylinkedlist.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplDoublyLinkedList class provides the main functionalities of a doubly linked list.    </p>   </div>      <div class="section" id="spldoublylinkedlist.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplDoublyLinkedList</strong>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>        <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam">void</span>    )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.add.php" class="methodname" style="color:#CC7832">add</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.bottom.php" class="methodname" style="color:#CC7832">bottom</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.count.php" class="methodname" style="color:#CC7832">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.getiteratormode.php" class="methodname" style="color:#CC7832">getIteratorMode</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.isempty.php" class="methodname" style="color:#CC7832">isEmpty</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.offsetexists.php" class="methodname" style="color:#CC7832">offsetExists</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.offsetget.php" class="methodname" style="color:#CC7832">offsetGet</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.offsetset.php" class="methodname" style="color:#CC7832">offsetSet</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.offsetunset.php" class="methodname" style="color:#CC7832">offsetUnset</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.pop.php" class="methodname" style="color:#CC7832">pop</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.prev.php" class="methodname" style="color:#CC7832">prev</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.push.php" class="methodname" style="color:#CC7832">push</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.serialize.php" class="methodname" style="color:#CC7832">serialize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.setiteratormode.php" class="methodname" style="color:#CC7832">setIteratorMode</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.shift.php" class="methodname" style="color:#CC7832">shift</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.top.php" class="methodname" style="color:#CC7832">top</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.unserialize.php" class="methodname" style="color:#CC7832">unserialize</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$serialized</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.unshift.php" class="methodname" style="color:#CC7832">unshift</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/spldoublylinkedlist.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       </div>                                                                                                                                                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplDoublyLinkedList::add} — Add/insert a new value at the specified index</li><li>{@link SplDoublyLinkedList::bottom} — Peeks at the node from the beginning of the doubly linked list</li><li>{@link SplDoublyLinkedList::__construct} — Constructs a new doubly linked list</li><li>{@link SplDoublyLinkedList::count} — Counts the number of elements in the doubly linked list</li><li>{@link SplDoublyLinkedList::current} — Return current array entry</li><li>{@link SplDoublyLinkedList::getIteratorMode} — Returns the mode of iteration</li><li>{@link SplDoublyLinkedList::isEmpty} — Checks whether the doubly linked list is empty</li><li>{@link SplDoublyLinkedList::key} — Return current node index</li><li>{@link SplDoublyLinkedList::next} — Move to next entry</li><li>{@link SplDoublyLinkedList::offsetExists} — Returns whether the requested $index exists</li><li>{@link SplDoublyLinkedList::offsetGet} — Returns the value at the specified $index</li><li>{@link SplDoublyLinkedList::offsetSet} — Sets the value at the specified $index to $newval</li><li>{@link SplDoublyLinkedList::offsetUnset} — Unsets the value at the specified $index</li><li>{@link SplDoublyLinkedList::pop} — Pops a node from the end of the doubly linked list</li><li>{@link SplDoublyLinkedList::prev} — Move to previous entry</li><li>{@link SplDoublyLinkedList::push} — Pushes an element at the end of the doubly linked list</li><li>{@link SplDoublyLinkedList::rewind} — Rewind iterator back to the start</li><li>{@link SplDoublyLinkedList::serialize} — Serializes the storage</li><li>{@link SplDoublyLinkedList::setIteratorMode} — Sets the mode of iteration</li><li>{@link SplDoublyLinkedList::shift} — Shifts a node from the beginning of the doubly linked list</li><li>{@link SplDoublyLinkedList::top} — Peeks at the node from the end of the doubly linked list</li><li>{@link SplDoublyLinkedList::unserialize} — Unserializes the storage</li><li>{@link SplDoublyLinkedList::unshift} — Prepends the doubly linked list with an element</li><li>{@link SplDoublyLinkedList::valid} — Check whether the doubly linked list contains more nodes</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplDoublyLinkedList implements Iterator, Countable, ArrayAccess {
        const IT_MODE_LIFO = 2;
        const IT_MODE_FIFO = 0;
        const IT_MODE_DELETE = 1;
        const IT_MODE_KEEP = 0;


/**
*<div id="spldoublylinkedlist.add" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::add</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::add</span> &mdash; <span class="dc-title">Add/insert a new value at the specified index</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.add-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::add</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div>     <p class="para rdfs-comment">    Insert the value <span class="parameter" style="color:#2EACF9">newval</span> at the    specified <span class="parameter" style="color:#2EACF9">index</span>, shuffling the    previous value at that index (and all subsequent values)    up through the list.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.add-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index where the new value is to be inserted.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">newval</span></dt>       <dd>        <p class="para">        The new value for the <span class="parameter" style="color:#2EACF9">index</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.add-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.add-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.outofrangeexception.php" class="classname">OutOfRangeException</a> when     <span class="parameter" style="color:#2EACF9">index</span> is out of bounds or when     <span class="parameter" style="color:#2EACF9">index</span> cannot be parsed as an integer.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void*/
        public function add($index, $newval) {}

/**
*<div id="spldoublylinkedlist.pop" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::pop</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::pop</span> &mdash; <span class="dc-title">Pops a node from the end of the doubly linked list</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.pop-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::pop</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.pop-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.pop-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value of the popped node.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.pop-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when the data-structure is empty.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return mixed The value of the popped node.*/
        public function pop () {}

/**
*<div id="spldoublylinkedlist.shift" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::shift</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::shift</span> &mdash; <span class="dc-title">Shifts a node from the beginning of the doubly linked list</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.shift-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::shift</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.shift-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.shift-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value of the shifted node.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.shift-errors">   <h3 class="title">错误／异常</h3>    <p class="para">     Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when the data-structure is empty.    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return mixed The value of the shifted node.*/
        public function shift () {}

/**
*<div id="spldoublylinkedlist.push" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::push</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::push</span> &mdash; <span class="dc-title">Pushes an element at the end of the doubly linked list</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.push-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::push</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div>     <p class="para rdfs-comment">    Pushes <span class="parameter" style="color:#2EACF9">value</span> at the end of the doubly linked list.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.push-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value</span></dt>       <dd>        <p class="para">        The value to push.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.push-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function push ($value) {}

/**
*<div id="spldoublylinkedlist.unshift" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::unshift</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::unshift</span> &mdash; <span class="dc-title">Prepends the doubly linked list with an element</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.unshift-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::unshift</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div>     <p class="para rdfs-comment">    Prepends <span class="parameter" style="color:#2EACF9">value</span> at the beginning of the doubly linked list.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.unshift-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value</span></dt>       <dd>        <p class="para">        The value to unshift.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.unshift-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function unshift ($value) {}

/**
*<div id="spldoublylinkedlist.top" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::top</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::top</span> &mdash; <span class="dc-title">Peeks at the node from the end of the doubly linked list</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.top-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::top</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.top-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.top-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value of the last node.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.top-errors">   <h3 class="title">错误／异常</h3>    <p class="para">     Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when the data-structure is empty.    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return mixed The value of the last node.*/
        public function top () {}

/**
*<div id="spldoublylinkedlist.bottom" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::bottom</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::bottom</span> &mdash; <span class="dc-title">Peeks at the node from the beginning of the doubly linked list</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.bottom-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::bottom</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.bottom-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.bottom-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value of the first node.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.bottom-errors">   <h3 class="title">错误／异常</h3>    <p class="para">     Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when the data-structure is empty.    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return mixed The value of the first node.*/
        public function bottom () {}

/**
*<div id="spldoublylinkedlist.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::count</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::count</span> &mdash; <span class="dc-title">Counts the number of elements in the doubly linked list</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::count</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.count-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of elements in the doubly linked list.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return int the number of elements in the doubly linked list.*/
        public function count () {}

/**
*<div id="spldoublylinkedlist.isempty" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::isEmpty</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::isEmpty</span> &mdash; <span class="dc-title">Checks whether the doubly linked list is empty</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.isempty-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::isEmpty</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.isempty-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.isempty-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns whether the doubly linked list is empty.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return bool whether the doubly linked list is empty.*/
        public function isEmpty () {}

        /**
         * Sets the mode of iteration
         * @link http://php.net/manual/en/spldoublylinkedlist.setiteratormode.php
         * @param int $mode <p>
         * There are two orthogonal sets of modes that can be set:
         * </p>
         * The direction of the iteration (either one or the other):
	 * <b>SplDoublyLinkedList::IT_MODE_LIFO</b> (Stack style)
/**
*<div id="spldoublylinkedlist.setiteratormode" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::setIteratorMode</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::setIteratorMode</span> &mdash; <span class="dc-title">Sets the mode of iteration</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.setiteratormode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::setIteratorMode</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.setiteratormode-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">mode</span></dt>       <dd>        <p class="para">        There are two orthogonal sets of modes that can be set:       </p>       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">The direction of the iteration (either one or the other):</span>         <ul class="itemizedlist">          <li class="listitem"><span class="simpara"><strong><span>SplDoublyLinkedList::IT_MODE_LIFO</span></strong> (Stack style)</span></li>          <li class="listitem"><span class="simpara"><strong><span>SplDoublyLinkedList::IT_MODE_FIFO</span></strong> (Queue style)</span></li>         </ul>        </li>        <li class="listitem">         <span class="simpara">The behavior of the iterator (either one or the other):</span>         <ul class="itemizedlist">          <li class="listitem"><span class="simpara"><strong><span>SplDoublyLinkedList::IT_MODE_DELETE</span></strong> (Elements are deleted by the iterator)</span></li>          <li class="listitem"><span class="simpara"><strong><span>SplDoublyLinkedList::IT_MODE_KEEP</span></strong> (Elements are traversed by the iterator)</span></li>         </ul>        </li>       </ul>        <p class="para">        The default mode is: <strong><span>SplDoublyLinkedList::IT_MODE_FIFO</span></strong> | <strong><span>SplDoublyLinkedList::IT_MODE_KEEP</span></strong>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.setiteratormode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function setIteratorMode ($mode) {}

/**
*<div id="spldoublylinkedlist.getiteratormode" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::getIteratorMode</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::getIteratorMode</span> &mdash; <span class="dc-title">Returns the mode of iteration</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.getiteratormode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::getIteratorMode</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.getiteratormode-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.getiteratormode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the different modes and flags that affect the iteration.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return int the different modes and flags that affect the iteration.*/
        public function getIteratorMode () {}

        /**
         * Returns whether the requested $index exists
         * @link http://php.net/manual/en/spldoublylinkedlist.offsetexists.php
         * @param mixed $index <p>
         * The index being checked.
         * </p>
	 * @return bool true if the requested <i>index</i> exists, otherwise false
/**
*<div id="spldoublylinkedlist.offsetexists" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::offsetExists</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::offsetExists</span> &mdash; <span class="dc-title">Returns whether the requested $index exists</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.offsetexists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::offsetExists</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.offsetexists-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index being checked.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.offsetexists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <strong><span>TRUE</span></strong> if the requested <span class="parameter" style="color:#2EACF9">index</span> exists, otherwise <strong><span>FALSE</span></strong>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
*/
        public function offsetExists ($index) {}

        /**
         * Returns the value at the specified $index
         * @link http://php.net/manual/en/spldoublylinkedlist.offsetget.php
         * @param mixed $index <p>
         * The index with the value.
         * </p>
	 * @return mixed The value at the specified <i>index</i>.
/**
*<div id="spldoublylinkedlist.offsetget" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::offsetGet</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::offsetGet</span> &mdash; <span class="dc-title">Returns the value at the specified $index</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.offsetget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::offsetGet</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.offsetget-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index with the value.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.offsetget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value at the specified <span class="parameter" style="color:#2EACF9">index</span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.offsetget-errors">   <h3 class="title">错误／异常</h3>  <p class="para">   Throws <a href="http://php.net/manual/zh/class.outofrangeexception.php" class="classname">OutOfRangeException</a> when <span class="parameter" style="color:#2EACF9">index</span> is out of bounds   or when <span class="parameter" style="color:#2EACF9">index</span> cannot be parsed as an integer.  </p>  </div>      <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
*/
        public function offsetGet ($index) {}

        /**
         * Sets the value at the specified $index to $newval
         * @link http://php.net/manual/en/spldoublylinkedlist.offsetset.php
         * @param mixed $index <p>
         * The index being set.
         * </p>
         * @param mixed $newval <p>
	 * The new value for the <i>index</i>.
/**
*<div id="spldoublylinkedlist.offsetset" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::offsetSet</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::offsetSet</span> &mdash; <span class="dc-title">Sets the value at the specified $index to $newval</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.offsetset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::offsetSet</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div>       <p class="para rdfs-comment">    Sets the value at the specified <span class="parameter" style="color:#2EACF9">index</span> to <span class="parameter" style="color:#2EACF9">newval</span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.offsetset-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index being set.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">newval</span></dt>       <dd>        <p class="para">        The new value for the <span class="parameter" style="color:#2EACF9">index</span>.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.offsetset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.offsetset-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.outofrangeexception.php" class="classname">OutOfRangeException</a> when <span class="parameter" style="color:#2EACF9">index</span> is out of bounds or when <span class="parameter" style="color:#2EACF9">index</span> cannot be parsed as an integer.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function offsetSet ($index, $newval) {}

/**
*<div id="spldoublylinkedlist.offsetunset" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::offsetUnset</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::offsetUnset</span> &mdash; <span class="dc-title">Unsets the value at the specified $index</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.offsetunset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::offsetUnset</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div>       <p class="para rdfs-comment">    Unsets the value at the specified index.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.offsetunset-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index being unset.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.offsetunset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-spldoublylinkedlist.offsetunset-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.outofrangeexception.php" class="classname">OutOfRangeException</a> when <span class="parameter" style="color:#2EACF9">index</span> is out of bounds    or when <span class="parameter" style="color:#2EACF9">index</span> cannot be parsed as an integer.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function offsetUnset ($index) {}

/**
*<div id="spldoublylinkedlist.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::rewind</span> &mdash; <span class="dc-title">Rewind iterator back to the start</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This rewinds the iterator to the beginning.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="spldoublylinkedlist.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::current</span> &mdash; <span class="dc-title">Return current array entry</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Get the current doubly linked list node.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current node value.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return mixed The current node value.*/
        public function current () {}

/**
*<div id="spldoublylinkedlist.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::key</span> &mdash; <span class="dc-title">Return current node index</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This function returns the current node index   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current node index.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return mixed The current node index.*/
        public function key () {}

/**
*<div id="spldoublylinkedlist.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::next</span> &mdash; <span class="dc-title">Move to next entry</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Move the iterator to the next node.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="spldoublylinkedlist.prev" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::prev</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::prev</span> &mdash; <span class="dc-title">Move to previous entry</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.prev-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::prev</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Move the iterator to the previous node.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.prev-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.prev-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void */
        public function prev () {}

/**
*<div id="spldoublylinkedlist.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::valid</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::valid</span> &mdash; <span class="dc-title">Check whether the doubly linked list contains more nodes</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks if the doubly linked list contains any more nodes.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the doubly linked list contains any more nodes, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return bool true if the doubly linked list contains any more nodes, false otherwise.*/
        public function valid () {}

/**
*<div id="spldoublylinkedlist.unserialize" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplDoublyLinkedList::unserialize</h1>   <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplDoublyLinkedList::unserialize</span> &mdash; <span class="dc-title">Unserializes the storage</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-spldoublylinkedlist.unserialize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplDoublyLinkedList::unserialize</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$serialized</span></span>    )</div>    <p class="para rdfs-comment">    Unserializes the storage, from <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::serialize()}</span>.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-spldoublylinkedlist.unserialize-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <span class="parameter" style="color:#2EACF9">serialized</span></dt>      <dd>       <span>       The serialized string.      </span>     </dd>        </dl>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-spldoublylinkedlist.unserialize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-spldoublylinkedlist.unserialize-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::serialize()} - Serializes the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.spldoublylinkedlist.php">SplDoublyLinkedList</a></div></div>
         * @return void*/
         public function unserialize($serialized) {}

         /**
         * Serializes the storage
         * @link http://php.net/manual/ru/spldoublylinkedlist.unserialize.php
         * @return string The serialized string.
         * @since 5.4.0
         */
         public function  serialize () {}

}

/**
*<div id="class.splqueue" class="reference">  <h1 class="title">The SplQueue class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="splqueue.intro">    <h2 class="title">简介</h2>    <p class="para">     SplQueue 类通过使用一个双向链表来提供队列的主要功能。    </p>   </div>      <div class="section" id="splqueue.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplQueue</strong>      </span>       <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.spldoublylinkedlist.php" class="classname">SplDoublyLinkedList</a>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>        <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splqueue.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam">void</span>    )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splqueue.dequeue.php" class="methodname" style="color:#CC7832">dequeue</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splqueue.enqueue.php" class="methodname" style="color:#CC7832">enqueue</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splqueue.setiteratormode.php" class="methodname" style="color:#CC7832">setIteratorMode</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::add}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::bottom}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::count}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::getIteratorMode}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::isEmpty}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetExists}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetGet}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetSet}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetUnset}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::pop}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::prev}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::push}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::serialize}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::setIteratorMode}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::shift}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::top}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::unserialize}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$serialized</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::unshift}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::valid}</span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       </div>                             <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplQueue::__construct} — Constructs a new queue implemented using a doubly linked list</li><li>{@link SplQueue::dequeue} — Dequeues a node from the queue</li><li>{@link SplQueue::enqueue} — Adds an element to the queue</li><li>{@link SplQueue::setIteratorMode} — Sets the mode of iteration</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplQueue extends SplDoublyLinkedList {


/**
*<div id="splqueue.enqueue" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplQueue::enqueue</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplQueue::enqueue</span> &mdash; <span class="dc-title">Adds an element to the queue</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splqueue.enqueue-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplQueue::enqueue</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div>     <p class="para rdfs-comment">    Enqueues <span class="parameter" style="color:#2EACF9">value</span> at the end of the queue.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="methodname" style="color:#CC7832"><strong>SplQueue::enqueue()</strong></span> is an alias of <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::push()}</span>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splqueue.enqueue-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value</span></dt>       <dd>        <p class="para">        The value to enqueue.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splqueue.enqueue-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splqueue.php">SplQueue</a></div></div>
         * @return void */
        public function enqueue ($value) {}

/**
*<div id="splqueue.dequeue" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplQueue::dequeue</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplQueue::dequeue</span> &mdash; <span class="dc-title">Dequeues a node from the queue</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splqueue.dequeue-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplQueue::dequeue</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Dequeues <span class="parameter" style="color:#2EACF9">value</span> from the top of the queue.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="methodname" style="color:#CC7832"><strong>SplQueue::dequeue()</strong></span> is an alias of <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::shift()}</span>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splqueue.dequeue-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splqueue.dequeue-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value of the dequeued node.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splqueue.php">SplQueue</a></div></div>
         * @return mixed The value of the dequeued node.*/
        public function dequeue () {}

/**
*<div id="splqueue.setiteratormode" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplQueue::setIteratorMode</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplQueue::setIteratorMode</span> &mdash; <span class="dc-title">Sets the mode of iteration</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splqueue.setiteratormode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplQueue::setIteratorMode</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splqueue.setiteratormode-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">mode</span></dt>       <dd>        <p class="para">        There is only one iteration parameter you can modify.       </p>       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">The behavior of the iterator (either one or the other):</span>         <ul class="itemizedlist">          <li class="listitem"><span class="simpara"><strong><span>SplDoublyLinkedList::IT_MODE_DELETE</span></strong> (Elements are deleted by the iterator)</span></li>          <li class="listitem"><span class="simpara"><strong><span>SplDoublyLinkedList::IT_MODE_KEEP</span></strong> (Elements are traversed by the iterator)</span></li>         </ul>        </li>       </ul>        <p class="para">        The default mode is: <strong><span>SplDoublyLinkedList::IT_MODE_FIFO</span></strong> | <strong><span>SplDoublyLinkedList::IT_MODE_KEEP</span></strong>       </p>        <div class="warning"><strong class="warning">Warning</strong>        <p class="para">         The direction of iteration can not be changed for SplQueues, it is always <strong><span>SplDoublyLinkedList::IT_MODE_FIFO</span></strong>.        </p>       </div>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splqueue.setiteratormode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splqueue.setiteratormode-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws a <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> on trying to change the direction of iteration by using <strong><span>SplDoublyLinkedList::IT_MODE_LIFO</span></strong>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splqueue.php">SplQueue</a></div></div>
     * @return void*/
    public function setIteratorMode ($mode) {}

}
/**
*<div id="class.splstack" class="reference">  <h1 class="title">The SplStack class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="splstack.intro">    <h2 class="title">简介</h2>    <p class="para">     SplStack类通过使用一个双向链表来提供栈的主要功能。    </p>   </div>      <div class="section" id="splstack.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplStack</strong>      </span>       <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.spldoublylinkedlist.php" class="classname">SplDoublyLinkedList</a>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>        <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splstack.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam">void</span>    )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splstack.setiteratormode.php" class="methodname" style="color:#CC7832">setIteratorMode</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::add}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::bottom}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::count}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::getIteratorMode}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::isEmpty}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetExists}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetGet}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetSet}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::offsetUnset}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::pop}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::prev}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::push}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::serialize}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::setIteratorMode}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::shift}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::top}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::unserialize}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$serialized</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::unshift}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplDoublyLinkedList::valid}</span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       </div>                   <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplStack::__construct} — Constructs a new stack implemented using a doubly linked list</li><li>{@link SplStack::setIteratorMode} — Sets the mode of iteration</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplStack extends SplDoublyLinkedList {

/**
*<div id="splstack.setiteratormode" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplStack::setIteratorMode</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplStack::setIteratorMode</span> &mdash; <span class="dc-title">Sets the mode of iteration</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splstack.setiteratormode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplStack::setIteratorMode</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splstack.setiteratormode-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">mode</span></dt>       <dd>        <p class="para">        There is only one iteration parameter you can modify.       </p>       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">The behavior of the iterator (either one or the other):</span>         <ul class="itemizedlist">          <li class="listitem"><span class="simpara">SplDoublyLinkedList::IT_MODE_DELETE (Elements are deleted by the iterator)</span></li>          <li class="listitem"><span class="simpara">SplDoublyLinkedList::IT_MODE_KEEP (Elements are traversed by the iterator)</span></li>         </ul>        </li>       </ul>        <p class="para">        The default mode is 0x2 : SplDoublyLinkedList::IT_MODE_LIFO | SplDoublyLinkedList::IT_MODE_KEEP       </p>        <div class="warning"><strong class="warning">Warning</strong>        <p class="para">         The direction of iteration can no longer be changed for SplStacks.          Trying to do so will result in a <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> being thrown.        </p>       </div>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splstack.setiteratormode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splstack.php">SplStack</a></div></div>
     * @return void*/
    public function setIteratorMode ($mode) {}
}

/**
*<div id="class.splheap" class="reference">  <h1 class="title">The SplHeap class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="splheap.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplHeap class provides the main functionalities of a Heap.    </p>   </div>      <div class="section" id="splheap.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">abstract</span> <strong class="classname">SplHeap</strong>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam">void</span>    )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">abstract</span> <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.compare.php" class="methodname" style="color:#CC7832">compare</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.count.php" class="methodname" style="color:#CC7832">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.extract.php" class="methodname" style="color:#CC7832">extract</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.insert.php" class="methodname" style="color:#CC7832">insert</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.iscorrupted.php" class="methodname" style="color:#CC7832">isCorrupted</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.isempty.php" class="methodname" style="color:#CC7832">isEmpty</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.recoverfromcorruption.php" class="methodname" style="color:#CC7832">recoverFromCorruption</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.top.php" class="methodname" style="color:#CC7832">top</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splheap.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       </div>                                                                                         <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplHeap::compare} — Compare elements in order to place them correctly in the heap while sifting up</li><li>{@link SplHeap::__construct} — Constructs a new empty heap</li><li>{@link SplHeap::count} — Counts the number of elements in the heap</li><li>{@link SplHeap::current} — Return current node pointed by the iterator</li><li>{@link SplHeap::extract} — Extracts a node from top of the heap and sift up</li><li>{@link SplHeap::insert} — Inserts an element in the heap by sifting it up</li><li>{@link SplHeap::isCorrupted} — Tells if the heap is in a corrupted state</li><li>{@link SplHeap::isEmpty} — Checks whether the heap is empty</li><li>{@link SplHeap::key} — Return current node index</li><li>{@link SplHeap::next} — Move to the next node</li><li>{@link SplHeap::recoverFromCorruption} — Recover from the corrupted state and allow further actions on the heap</li><li>{@link SplHeap::rewind} — Rewind iterator back to the start (no-op)</li><li>{@link SplHeap::top} — Peeks at the node from the top of the heap</li><li>{@link SplHeap::valid} — Check whether the heap contains more nodes</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
abstract class SplHeap implements Iterator, Countable {

/**
*<div id="splheap.extract" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::extract</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::extract</span> &mdash; <span class="dc-title">Extracts a node from top of the heap and sift up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.extract-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::extract</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.extract-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.extract-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value of the extracted node.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splheap.extract-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when the data-structure is empty.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return mixed The value of the extracted node.*/
        public function extract () {}

/**
*<div id="splheap.insert" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::insert</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::insert</span> &mdash; <span class="dc-title">Inserts an element in the heap by sifting it up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.insert-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::insert</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div>     <p class="para rdfs-comment">    Insert <span class="parameter" style="color:#2EACF9">value</span> in the heap.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.insert-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value</span></dt>       <dd>        <p class="para">        The value to insert.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.insert-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return void */
        public function insert ($value) {}

        /**
	 * Peeks at the node from the top of the heap
/**
*<div id="splheap.top" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::top</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::top</span> &mdash; <span class="dc-title">Peeks at the node from the top of the heap</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.top-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::top</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.top-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.top-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value of the node on the top.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splheap.top-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when the data-structure is empty.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return mixed The value of the node on the top.*/
        public function top () {}

/**
*<div id="splheap.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::count</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::count</span> &mdash; <span class="dc-title">Counts the number of elements in the heap</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::count</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.count-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of elements in the heap.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return int the number of elements in the heap.*/
        public function count () {}

/**
*<div id="splheap.isempty" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::isEmpty</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::isEmpty</span> &mdash; <span class="dc-title">Checks whether the heap is empty</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.isempty-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::isEmpty</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.isempty-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.isempty-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns whether the heap is empty.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return bool whether the heap is empty.*/
        public function isEmpty () {}

/**
*<div id="splheap.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::rewind</span> &mdash; <span class="dc-title">Rewind iterator back to the start (no-op)</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This rewinds the iterator to the beginning. This is a no-op for heaps    as the iterator is virtual and in fact never moves from the top of the     heap.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="splheap.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::current</span> &mdash; <span class="dc-title">Return current node pointed by the iterator</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Get the current datastructure node.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current node value.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return mixed The current node value.*/
        public function current () {}

/**
*<div id="splheap.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::key</span> &mdash; <span class="dc-title">Return current node index</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This function returns the current node index   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current node index.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return mixed The current node index.*/
        public function key () {}

/**
*<div id="splheap.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::next</span> &mdash; <span class="dc-title">Move to the next node</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Move to the next node. This will delete the top node of the heap.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="splheap.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::valid</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::valid</span> &mdash; <span class="dc-title">Check whether the heap contains more nodes</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks if the heap contains any more nodes.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the heap contains any more nodes, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return bool true if the heap contains any more nodes, false otherwise.*/
        public function valid () {}

/**
*<div id="splheap.recoverfromcorruption" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::recoverFromCorruption</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::recoverFromCorruption</span> &mdash; <span class="dc-title">Recover from the corrupted state and allow further actions on the heap</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.recoverfromcorruption-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::recoverFromCorruption</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.recoverfromcorruption-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.recoverfromcorruption-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
         * @return void */
        public function recoverFromCorruption () {}

        /**
         * Compare elements in order to place them correctly in the heap while sifting up.
         * @link http://php.net/manual/en/splheap.compare.php
         * @param mixed $value1 <p>
         * The value of the first node being compared.
         * </p>
         * @param mixed $value2 <p>
         * The value of the second node being compared.
         * </p>
	 * @return int Result of the comparison, positive integer if <i>value1</i> is greater than <i>value2</i>, 0 if they are equal, negative integer otherwise.
/**
*<div id="splheap.compare" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::compare</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::compare</span> &mdash; <span class="dc-title">Compare elements in order to place them correctly in the heap while sifting up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.compare-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">abstract</span> <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::compare</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div>     <p class="para rdfs-comment">    Compare <span class="parameter" style="color:#2EACF9">value1</span> with <span class="parameter" style="color:#2EACF9">value2</span>.   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     Throwing exceptions in <span class="methodname" style="color:#CC7832"><strong>SplHeap::compare()</strong></span> can     corrupt the Heap and place it in a blocked state. You can unblock it by     calling <span class="methodname" style="color:#CC7832">{@link SplHeap::recoverFromCorruption()}</span>.      However, some elements might not be placed correctly and it may hence     break the heap-property.    </p>   </div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.compare-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value1</span></dt>       <dd>        <p class="para">        The value of the first node being compared.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">value2</span></dt>       <dd>        <p class="para">        The value of the second node being compared.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.compare-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Result of the comparison, positive integer if <span class="parameter" style="color:#2EACF9">value1</span> is greater than <span class="parameter" style="color:#2EACF9">value2</span>, 0 if they are equal, negative integer otherwise.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Having multiple elements with the same value in a Heap is not recommended. They will end up in an arbitrary relative position.    </p>   </p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
*/
        abstract protected function compare ($value1, $value2);

/**
*<div id="splheap.iscorrupted" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplHeap::isCorrupted</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">SplHeap::isCorrupted</span> &mdash; <span class="dc-title">Tells if the heap is in a corrupted state</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splheap.iscorrupted-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplHeap::isCorrupted</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splheap.iscorrupted-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splheap.iscorrupted-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the heap is corrupted, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splheap.php">SplHeap</a></div></div>
     * @return bool*/
        public function isCorrupted(){}

}

/**
*<div id="class.splminheap" class="reference">  <h1 class="title">The SplMinHeap class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="splminheap.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplMinHeap class provides the main functionalities of a heap, keeping the minimum on the top.    </p>   </div>      <div class="section" id="splminheap.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplMinHeap</strong>      </span>       <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.splheap.php" class="classname">SplHeap</a>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splminheap.compare.php" class="methodname" style="color:#CC7832">compare</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">abstract</span> <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::compare}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::count}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::extract}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::insert}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::isCorrupted}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::isEmpty}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::recoverFromCorruption}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::top}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::valid}</span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       </div>           <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplMinHeap::compare} — Compare elements in order to place them correctly in the heap while sifting up</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplMinHeap extends SplHeap {

        /**
         * Compare elements in order to place them correctly in the heap while sifting up.
         * @link http://php.net/manual/en/splminheap.compare.php
         * @param mixed $value1 <p>
         * The value of the first node being compared.
         * </p>
         * @param mixed $value2 <p>
         * The value of the second node being compared.
         * </p>
	 * @return void Result of the comparison, positive integer if <i>value1</i> is lower than <i>value2</i>, 0 if they are equal, negative integer otherwise.
/**
*<div id="splminheap.compare" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplMinHeap::compare</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplMinHeap::compare</span> &mdash; <span class="dc-title">Compare elements in order to place them correctly in the heap while sifting up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splminheap.compare-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplMinHeap::compare</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div>     <p class="para rdfs-comment">    Compare <span class="parameter" style="color:#2EACF9">value1</span> with <span class="parameter" style="color:#2EACF9">value2</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splminheap.compare-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value1</span></dt>       <dd>        <p class="para">        The value of the first node being compared.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">value2</span></dt>       <dd>        <p class="para">        The value of the second node being compared.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splminheap.compare-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Result of the comparison, positive integer if <span class="parameter" style="color:#2EACF9">value1</span> is lower than <span class="parameter" style="color:#2EACF9">value2</span>, 0 if they are equal, negative integer otherwise.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Having multiple elements with the same value in a Heap is not recommended. They will end up in an arbitrary relative position.    </p>   </p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splminheap.php">SplMinHeap</a></div></div>
*/
        protected function compare ($value1, $value2) {}

        /**
         * Extracts a node from top of the heap and sift up.
         * @link http://php.net/manual/en/splheap.extract.php
         * @return mixed The value of the extracted node.
         * @since 5.3.0
         */
        public function extract () {}

        /**
         * Inserts an element in the heap by sifting it up.
         * @link http://php.net/manual/en/splheap.insert.php
         * @param mixed $value <p>
         * The value to insert.
         * </p>
         * @return void 
         * @since 5.3.0
         */
        public function insert ($value) {}

        /**
	 * Peeks at the node from the top of the heap
         * @link http://php.net/manual/en/splheap.top.php
         * @return mixed The value of the node on the top.
         * @since 5.3.0
         */
        public function top () {}

        /**
         * Counts the number of elements in the heap.
         * @link http://php.net/manual/en/splheap.count.php
         * @return int the number of elements in the heap.
         * @since 5.3.0
         */
        public function count () {}

        /**
         * Checks whether the heap is empty.
         * @link http://php.net/manual/en/splheap.isempty.php
         * @return bool whether the heap is empty.
         * @since 5.3.0
         */
        public function isEmpty () {}

        /**
         * Rewind iterator back to the start (no-op)
         * @link http://php.net/manual/en/splheap.rewind.php
         * @return void 
         * @since 5.3.0
         */
        public function rewind () {}

        /**
         * Return current node pointed by the iterator
         * @link http://php.net/manual/en/splheap.current.php
         * @return mixed The current node value.
         * @since 5.3.0
         */
        public function current () {}

        /**
         * Return current node index
         * @link http://php.net/manual/en/splheap.key.php
         * @return mixed The current node index.
         * @since 5.3.0
         */
        public function key () {}

        /**
         * Move to the next node
         * @link http://php.net/manual/en/splheap.next.php
         * @return void 
         * @since 5.3.0
         */
        public function next () {}

        /**
         * Check whether the heap contains more nodes
         * @link http://php.net/manual/en/splheap.valid.php
         * @return bool true if the heap contains any more nodes, false otherwise.
         * @since 5.3.0
         */
        public function valid () {}

        /**
         * Recover from the corrupted state and allow further actions on the heap.
         * @link http://php.net/manual/en/splheap.recoverfromcorruption.php
         * @return void 
         * @since 5.3.0
         */
        public function recoverFromCorruption () {}

}

/**
*<div id="class.splmaxheap" class="reference">  <h1 class="title">The SplMaxHeap class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="splmaxheap.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplMaxHeap class provides the main functionalities of a heap, keeping the maximum on the top.    </p>   </div>      <div class="section" id="splmaxheap.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplMaxHeap</strong>      </span>       <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.splheap.php" class="classname">SplHeap</a>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splmaxheap.compare.php" class="methodname" style="color:#CC7832">compare</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">abstract</span> <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::compare}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::count}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::current}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::extract}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::insert}</span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::isCorrupted}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::isEmpty}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::key}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::next}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::recoverFromCorruption}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::rewind}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::top}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832">{@link SplHeap::valid}</span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       </div>           <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplMaxHeap::compare} — Compare elements in order to place them correctly in the heap while sifting up</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplMaxHeap extends SplHeap {

/**
*<div id="splmaxheap.compare" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplMaxHeap::compare</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplMaxHeap::compare</span> &mdash; <span class="dc-title">Compare elements in order to place them correctly in the heap while sifting up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splmaxheap.compare-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">protected</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplMaxHeap::compare</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value2</span></span>    )</div>     <p class="para rdfs-comment">    Compare <span class="parameter" style="color:#2EACF9">value1</span> with <span class="parameter" style="color:#2EACF9">value2</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splmaxheap.compare-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value1</span></dt>       <dd>        <p class="para">        The value of the first node being compared.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">value2</span></dt>       <dd>        <p class="para">        The value of the second node being compared.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splmaxheap.compare-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Result of the comparison, positive integer if <span class="parameter" style="color:#2EACF9">value1</span> is greater than <span class="parameter" style="color:#2EACF9">value2</span>, 0 if they are equal, negative integer otherwise.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Having multiple elements with the same value in a Heap is not recommended. They will end up in an arbitrary relative position.    </p>   </p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splmaxheap.php">SplMaxHeap</a></div></div>
     * @return void Result of the comparison, positive integer if <i>value1</i> is greater than <i>value2</i>, 0 if they are equal, negative integer otherwise.*/
    protected function compare ($value1, $value2) {}

}
/**
*<div id="class.splpriorityqueue" class="reference">  <h1 class="title">The SplPriorityQueue class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="splpriorityqueue.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplPriorityQueue class provides the main functionalities of a      prioritized queue, implemented using a max heap.    </p>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:      <span class="simpara">      The order of elements with identical priority is <em class="emphasis">undefined</em>.      It may differ from the order in which they have been inserted.     </span>    </p></blockquote>   </div>      <div class="section" id="splpriorityqueue.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplPriorityQueue</strong>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ( <span class="methodparam">void</span>    )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.compare.php" class="methodname" style="color:#CC7832">compare</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$priority1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$priority2</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.count.php" class="methodname" style="color:#CC7832">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.extract.php" class="methodname" style="color:#CC7832">extract</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.getextractflags.php" class="methodname" style="color:#CC7832">getExtractFlags</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.insert.php" class="methodname" style="color:#CC7832">insert</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$priority</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.iscorrupted.php" class="methodname" style="color:#CC7832">isCorrupted</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.isempty.php" class="methodname" style="color:#CC7832">isEmpty</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.recoverfromcorruption.php" class="methodname" style="color:#CC7832">recoverFromCorruption</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.setextractflags.php" class="methodname" style="color:#CC7832">setExtractFlags</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.top.php" class="methodname" style="color:#CC7832">top</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splpriorityqueue.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       </div>                                                                                                      <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplPriorityQueue::compare} — Compare priorities in order to place elements correctly in the heap while sifting up</li><li>{@link SplPriorityQueue::__construct} — Constructs a new empty queue</li><li>{@link SplPriorityQueue::count} — Counts the number of elements in the queue</li><li>{@link SplPriorityQueue::current} — Return current node pointed by the iterator</li><li>{@link SplPriorityQueue::extract} — Extracts a node from top of the heap and sift up</li><li>{@link SplPriorityQueue::getExtractFlags} — Get the flags of extraction</li><li>{@link SplPriorityQueue::insert} — Inserts an element in the queue by sifting it up</li><li>{@link SplPriorityQueue::isCorrupted} — Tells if the priority queue is in a corrupted state</li><li>{@link SplPriorityQueue::isEmpty} — Checks whether the queue is empty</li><li>{@link SplPriorityQueue::key} — Return current node index</li><li>{@link SplPriorityQueue::next} — Move to the next node</li><li>{@link SplPriorityQueue::recoverFromCorruption} — Recover from the corrupted state and allow further actions on the queue</li><li>{@link SplPriorityQueue::rewind} — Rewind iterator back to the start (no-op)</li><li>{@link SplPriorityQueue::setExtractFlags} — Sets the mode of extraction</li><li>{@link SplPriorityQueue::top} — Peeks at the node from the top of the queue</li><li>{@link SplPriorityQueue::valid} — Check whether the queue contains more nodes</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplPriorityQueue implements Iterator, Countable {
        const EXTR_BOTH = 3;
        const EXTR_PRIORITY = 2;
        const EXTR_DATA = 1;


        /**
         * Compare priorities in order to place elements correctly in the heap while sifting up.
         * @link http://php.net/manual/en/splpriorityqueue.compare.php
         * @param mixed $priority1 <p>
         * The priority of the first node being compared.
         * </p>
         * @param mixed $priority2 <p>
         * The priority of the second node being compared.
         * </p>
	 * @return int Result of the comparison, positive integer if <i>priority1</i> is greater than <i>priority2</i>, 0 if they are equal, negative integer otherwise.
/**
*<div id="splpriorityqueue.compare" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::compare</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::compare</span> &mdash; <span class="dc-title">Compare priorities in order to place elements correctly in the heap while sifting up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.compare-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::compare</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$priority1</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$priority2</span></span>    )</div>     <p class="para rdfs-comment">    Compare <span class="parameter" style="color:#2EACF9">priority1</span> with <span class="parameter" style="color:#2EACF9">priority2</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.compare-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">priority1</span></dt>       <dd>        <p class="para">        The priority of the first node being compared.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">priority2</span></dt>       <dd>        <p class="para">        The priority of the second node being compared.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.compare-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Result of the comparison, positive integer if <span class="parameter" style="color:#2EACF9">priority1</span> is greater than <span class="parameter" style="color:#2EACF9">priority2</span>, 0 if they are equal, negative integer otherwise.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Multiple elements with the same priority will get dequeued in no particular order.    </p>   </p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
*/
        public function compare ($priority1, $priority2) {}

/**
*<div id="splpriorityqueue.insert" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::insert</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::insert</span> &mdash; <span class="dc-title">Inserts an element in the queue by sifting it up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.insert-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::insert</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$priority</span></span>    )</div>     <p class="para rdfs-comment">    Insert <span class="parameter" style="color:#2EACF9">value</span> with the priority <span class="parameter" style="color:#2EACF9">priority</span> in the queue.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.insert-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value</span></dt>       <dd>        <p class="para">        The value to insert.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">priority</span></dt>       <dd>        <p class="para">        The associated priority.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.insert-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return void */
        public function insert ($value, $priority) {}

        /**
         * Sets the mode of extraction
         * @link http://php.net/manual/en/splpriorityqueue.setextractflags.php
         * @param int $flags <p>
	 * Defines what is extracted by <b>SplPriorityQueue::current</b>,
	 * <b>SplPriorityQueue::top</b> and
 	 * <b>SplPriorityQueue::extract</b>.
        * </p>
	 * <b>SplPriorityQueue::EXTR_DATA</b> (0x00000001): Extract the data
/**
*<div id="splpriorityqueue.setextractflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::setExtractFlags</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::setExtractFlags</span> &mdash; <span class="dc-title">Sets the mode of extraction</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.setextractflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::setExtractFlags</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.setextractflags-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        Defines what is extracted by <span class="methodname" style="color:#CC7832">{@link SplPriorityQueue::current()}</span>,        <span class="methodname" style="color:#CC7832">{@link SplPriorityQueue::top()}</span> and         <span class="methodname" style="color:#CC7832">{@link SplPriorityQueue::extract()}</span>.       </p>       <ul class="itemizedlist">        <li class="listitem"><span class="simpara"><strong><span>SplPriorityQueue::EXTR_DATA</span></strong> (0x00000001): Extract the data</span></li>        <li class="listitem"><span class="simpara"><strong><span>SplPriorityQueue::EXTR_PRIORITY</span></strong> (0x00000002): Extract the priority</span></li>        <li class="listitem"><span class="simpara"><strong><span>SplPriorityQueue::EXTR_BOTH</span></strong> (0x00000003): Extract an array containing both</span></li>       </ul>       <p class="para">        The default mode is <strong><span>SplPriorityQueue::EXTR_DATA</span></strong>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.setextractflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return void */
        public function setExtractFlags ($flags) {}

        /**
	 * Peeks at the node from the top of the queue
/**
*<div id="splpriorityqueue.top" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::top</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::top</span> &mdash; <span class="dc-title">Peeks at the node from the top of the queue</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.top-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::top</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.top-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.top-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value or priority (or both) of the top node, depending on the extract flag.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return mixed The value or priority (or both) of the top node, depending on the extract flag.*/
        public function top () {}

/**
*<div id="splpriorityqueue.extract" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::extract</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::extract</span> &mdash; <span class="dc-title">Extracts a node from top of the heap and sift up</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.extract-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::extract</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.extract-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.extract-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value or priority (or both) of the extracted node, depending on the extract flag.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return mixed The value or priority (or both) of the extracted node, depending on the extract flag.*/
        public function extract () {}

/**
*<div id="splpriorityqueue.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::count</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::count</span> &mdash; <span class="dc-title">Counts the number of elements in the queue</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::count</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.count-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of elements in the queue.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return int the number of elements in the queue.*/
        public function count () {}

/**
*<div id="splpriorityqueue.isempty" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::isEmpty</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::isEmpty</span> &mdash; <span class="dc-title">Checks whether the queue is empty</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.isempty-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::isEmpty</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.isempty-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.isempty-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns whether the queue is empty.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return bool whether the queue is empty.*/
        public function isEmpty () {}

/**
*<div id="splpriorityqueue.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::rewind</span> &mdash; <span class="dc-title">Rewind iterator back to the start (no-op)</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This rewinds the iterator to the beginning. This is a no-op for heaps    as the iterator is virtual and in fact never moves from the top of the     heap.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="splpriorityqueue.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::current</span> &mdash; <span class="dc-title">Return current node pointed by the iterator</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Get the current datastructure node.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value or priority (or both) of the current node, depending on the extract flag.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return mixed The value or priority (or both) of the current node, depending on the extract flag.*/
        public function current () {}

/**
*<div id="splpriorityqueue.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::key</span> &mdash; <span class="dc-title">Return current node index</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This function returns the current node index   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current node index.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return mixed The current node index.*/
        public function key () {}

/**
*<div id="splpriorityqueue.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::next</span> &mdash; <span class="dc-title">Move to the next node</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Extracts the top node from the queue.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="splpriorityqueue.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::valid</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::valid</span> &mdash; <span class="dc-title">Check whether the queue contains more nodes</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks if the queue contains any more nodes.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the queue contains any more nodes, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return bool true if the queue contains any more nodes, false otherwise.*/
        public function valid () {}

/**
*<div id="splpriorityqueue.recoverfromcorruption" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::recoverFromCorruption</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::recoverFromCorruption</span> &mdash; <span class="dc-title">Recover from the corrupted state and allow further actions on the queue</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.recoverfromcorruption-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::recoverFromCorruption</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.recoverfromcorruption-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.recoverfromcorruption-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
         * @return void */
        public function recoverFromCorruption () {}

/**
*<div id="splpriorityqueue.iscorrupted" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::isCorrupted</h1>   <p class="verinfo">(No version information available, might only be in Git)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::isCorrupted</span> &mdash; <span class="dc-title">Tells if the priority queue is in a corrupted state</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.iscorrupted-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::isCorrupted</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.iscorrupted-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.iscorrupted-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the priority queue is corrupted, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
     * @return bool*/
    public function isCorrupted() {}

/**
*<div id="splpriorityqueue.getextractflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplPriorityQueue::getExtractFlags</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">SplPriorityQueue::getExtractFlags</span> &mdash; <span class="dc-title">Get the flags of extraction</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splpriorityqueue.getextractflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplPriorityQueue::getExtractFlags</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splpriorityqueue.getextractflags-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splpriorityqueue.getextractflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">       </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splpriorityqueue.php">SplPriorityQueue</a></div></div>
     * @return int*/
    public function getExtractFlags() {}

}

/**
*<div id="class.splfixedarray" class="reference">  <h1 class="title">The SplFixedArray class</h1>      <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>      <div class="section" id="splfixedarray.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplFixedArray class provides the main functionalities of array. The      main differences between a SplFixedArray and a normal PHP array is that      the SplFixedArray is of fixed length and allows only integers within      the range as indexes. The advantage is that it allows a faster array     implementation.    </p>   </div>      <div class="section" id="splfixedarray.synopsis">    <h2 class="title">类摘要</h2>       <div class="classsynopsis">     <div class="ooclass"></div>         <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplFixedArray</strong>      </span>       <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>        <span class="oointerface">,        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>        {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$size</span><span class="initializer"> = 0</span></span>   ] )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.count.php" class="methodname" style="color:#CC7832">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type" style="color:#EAB766">SplFixedArray</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.fromarray.php" class="methodname" style="color:#CC7832">fromArray</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$array</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$save_indexes</span><span class="initializer"> = <strong><span>TRUE</span></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.getsize.php" class="methodname" style="color:#CC7832">getSize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.offsetexists.php" class="methodname" style="color:#CC7832">offsetExists</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.offsetget.php" class="methodname" style="color:#CC7832">offsetGet</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.offsetset.php" class="methodname" style="color:#CC7832">offsetSet</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.offsetunset.php" class="methodname" style="color:#CC7832">offsetUnset</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.setsize.php" class="methodname" style="color:#CC7832">setSize</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$size</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.toarray.php" class="methodname" style="color:#CC7832">toArray</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splfixedarray.wakeup.php" class="methodname" style="color:#CC7832">__wakeup</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>    <div class="section" id="splfixedarray.examples">    <h2 class="title">范例</h2>    <p class="para">     <div class="example" id="example-4593">      <p><strong>Example #1 <strong class="classname">SplFixedArray</strong> usage example</strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Initialize&nbsp;the&nbsp;array&nbsp;with&nbsp;a&nbsp;fixed&nbsp;length<br /></span><span style="color: #9876AA">$array&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFixedArray</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #9876AA">4</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);&nbsp;</span><span style="color: #FF8000">//&nbsp;NULL<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);&nbsp;</span><span style="color: #FF8000">//&nbsp;int(2)<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #DD0000">"4"</span><span style="color: #007700">]);&nbsp;</span><span style="color: #FF8000">//&nbsp;string(3)&nbsp;"foo"<br /><br />//&nbsp;Increase&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;array&nbsp;to&nbsp;10<br /></span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSize</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #9876AA">9</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">"asdf"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Shrink&nbsp;the&nbsp;array&nbsp;to&nbsp;a&nbsp;size&nbsp;of&nbsp;2<br /></span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSize</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;The&nbsp;following&nbsp;lines&nbsp;throw&nbsp;a&nbsp;RuntimeException:&nbsp;Index&nbsp;invalid&nbsp;or&nbsp;out&nbsp;of&nbsp;range<br /></span><span style="color: #007700">try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #DD0000">"non-numeric"</span><span style="color: #007700">]);<br />}&nbsp;catch(</span><span style="color: #9876AA">RuntimeException&nbsp;$re</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"RuntimeException:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$re</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br />try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">[-</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br />}&nbsp;catch(</span><span style="color: #9876AA">RuntimeException&nbsp;$re</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"RuntimeException:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$re</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br />try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">[</span><span style="color: #9876AA">5</span><span style="color: #007700">]);<br />}&nbsp;catch(</span><span style="color: #9876AA">RuntimeException&nbsp;$re</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"RuntimeException:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$re</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> NULL int(2) string(3) &quot;foo&quot; RuntimeException: Index invalid or out of range RuntimeException: Index invalid or out of range RuntimeException: Index invalid or out of range </span></div>      </div>     </div>    </p>   </div>        </div>                                                                                                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplFixedArray::__construct} — Constructs a new fixed array</li><li>{@link SplFixedArray::count} — Returns the size of the array</li><li>{@link SplFixedArray::current} — Return current array entry</li><li>{@link SplFixedArray::fromArray} — Import a PHP array in a SplFixedArray instance</li><li>{@link SplFixedArray::getSize} — Gets the size of the array</li><li>{@link SplFixedArray::key} — Return current array index</li><li>{@link SplFixedArray::next} — Move to next entry</li><li>{@link SplFixedArray::offsetExists} — Returns whether the requested index exists</li><li>{@link SplFixedArray::offsetGet} — Returns the value at the specified index</li><li>{@link SplFixedArray::offsetSet} — Sets a new value at a specified index</li><li>{@link SplFixedArray::offsetUnset} — Unsets the value at the specified $index</li><li>{@link SplFixedArray::rewind} — Rewind iterator back to the start</li><li>{@link SplFixedArray::setSize} — Change the size of an array</li><li>{@link SplFixedArray::toArray} — Returns a PHP array from the fixed array</li><li>{@link SplFixedArray::valid} — Check whether the array contains more elements</li><li>{@link SplFixedArray::__wakeup} — Reinitialises the array after being unserialised</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplFixedArray implements Iterator, ArrayAccess, Countable {

        /**
         * Constructs a new fixed array
         * @link http://php.net/manual/en/splfixedarray.construct.php
         * @param int $size [optional]
         * @since 5.3.0
         */
        public function __construct ($size = 0) {}

/**
*<div id="splfixedarray.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::count</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::count</span> &mdash; <span class="dc-title">Returns the size of the array</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::count</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the size of the array.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.count-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the size of the array.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfixedarray.count-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4595">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::count()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$array&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFixedArray</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 5 5 </span></div>     </div>    </div>   </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-splfixedarray.count-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     This method is functionally equivalent to <span class="methodname" style="color:#CC7832">{@link SplFixedArray::getSize()}</span>.    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     The count of elements is always equal to the set size because all values are initially      initialized with <strong><span>NULL</span></strong>.    </p>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfixedarray.count-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFixedArray::getSize()} - Gets the size of the array</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return int the size of the array.*/
        public function count () {}

/**
*<div id="splfixedarray.toarray" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::toArray</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::toArray</span> &mdash; <span class="dc-title">Returns a PHP array from the fixed array</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.toarray-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::toArray</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns a PHP array from the fixed array.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.toarray-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.toarray-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a PHP <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>, similar to the fixed array.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfixedarray.toarray-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4599">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFixedArray::toArray()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fa&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFixedArray</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$fa</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$fa</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$fa</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">toArray</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> array(3) {   [0]=&gt;   int(0)   [1]=&gt;   NULL   [2]=&gt;   int(2) } </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return array a PHP array, similar to the fixed array.*/
        public function toArray () {}

        /**
	 * Import a PHP array in a <b>SplFixedArray</b> instance
         * @link http://php.net/manual/en/splfixedarray.fromarray.php
         * @param array $array <p>
         * The array to import.
         * </p>
	 * @param bool $save_indexes [optional] <p>
         * Try to save the numeric indexes used in the original array. 
         * </p>
	 * @return SplFixedArray an instance of <b>SplFixedArray</b>
         * containing the array content.
         * @since 5.3.0
         */
	public static function fromArray (array $array, $save_indexes = true) {}

/**
*<div id="splfixedarray.getsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::getSize</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::getSize</span> &mdash; <span class="dc-title">Gets the size of the array</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.getsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::getSize</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the size of the array.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.getsize-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.getsize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the size of the array, as an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfixedarray.getsize-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4597">     <p><strong>Example #1 <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::getSize()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$array&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFixedArray</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSize</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 5 10 </span></div>     </div>    </div>   </span>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-splfixedarray.getsize-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     This method is functionally equivalent to <span class="methodname" style="color:#CC7832">{@link SplFixedArray::count()}</span>    </p>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splfixedarray.getsize-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFixedArray::count()} - Returns the size of the array</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return int the size of the array, as an integer.*/
        public function getSize () {}

/**
*<div id="splfixedarray.setsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::setSize</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::setSize</span> &mdash; <span class="dc-title">Change the size of an array</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.setsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::setSize</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$size</span></span>    )</div>    <p class="para rdfs-comment">    Change the size of an array to the new size of <span class="parameter" style="color:#2EACF9">size</span>. If     <span class="parameter" style="color:#2EACF9">size</span> is less than the current array size, any values after the new size     will be discarded. If <span class="parameter" style="color:#2EACF9">size</span> is greater than the current array size, the     array will be padded with <strong><span>NULL</span></strong> values.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.setsize-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">size</span></dt>       <dd>        <p class="para">        The new array size. This should be a value between <em>0</em> and <strong><span>PHP_INT_MAX</span></strong>.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.setsize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfixedarray.setsize-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.invalidargumentexception.php" class="classname">InvalidArgumentException</a> when <span class="parameter" style="color:#2EACF9">size</span> is less than zero.   </p>   <p class="para">    Raises <strong><span>E_WARNING</span></strong> when <span class="parameter" style="color:#2EACF9">size</span> cannot be used as a number.   </p>   </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splfixedarray.setsize-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4598">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplFixedArray::setSize()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />&nbsp;&nbsp;&nbsp;$array&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplFixedArray</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSize</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$array</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 5 10 </span></div>     </div>    </div>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return bool*/
        public function setSize ($size) {}

        /**
         * Returns whether the requested index exists
         * @link http://php.net/manual/en/splfixedarray.offsetexists.php
         * @param int $index <p>
         * The index being checked.
         * </p>
	 * @return bool true if the requested <i>index</i> exists, otherwise false
/**
*<div id="splfixedarray.offsetexists" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::offsetExists</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::offsetExists</span> &mdash; <span class="dc-title">Returns whether the requested index exists</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.offsetexists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::offsetExists</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div>    <p class="para rdfs-comment">    Checks whether the requested index <span class="parameter" style="color:#2EACF9">index</span>     exists.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.offsetexists-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index being checked.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.offsetexists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <strong><span>TRUE</span></strong> if the requested <span class="parameter" style="color:#2EACF9">index</span> exists, otherwise <strong><span>FALSE</span></strong>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
*/
        public function offsetExists ($index) {}

        /**
         * Returns the value at the specified index
         * @link http://php.net/manual/en/splfixedarray.offsetget.php
         * @param int $index <p>
         * The index with the value.
         * </p>
	 * @return mixed The value at the specified <i>index</i>.
/**
*<div id="splfixedarray.offsetget" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::offsetGet</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::offsetGet</span> &mdash; <span class="dc-title">Returns the value at the specified index</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.offsetget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::offsetGet</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div>    <p class="para rdfs-comment">    Returns the value at the index <span class="parameter" style="color:#2EACF9">index</span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.offsetget-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index with the value.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.offsetget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The value at the specified <span class="parameter" style="color:#2EACF9">index</span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfixedarray.offsetget-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when <span class="parameter" style="color:#2EACF9">index</span> is outside     the defined size of the array or when <span class="parameter" style="color:#2EACF9">index</span> cannot be parsed as an integer.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
*/
        public function offsetGet ($index) {}

        /**
         * Sets a new value at a specified index
         * @link http://php.net/manual/en/splfixedarray.offsetset.php
         * @param int $index <p>
         * The index being set.
         * </p>
         * @param mixed $newval <p>
	 * The new value for the <i>index</i>.
/**
*<div id="splfixedarray.offsetset" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::offsetSet</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::offsetSet</span> &mdash; <span class="dc-title">Sets a new value at a specified index</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.offsetset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::offsetSet</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$newval</span></span>    )</div>    <p class="para rdfs-comment">    Sets the value at the specified <span class="parameter" style="color:#2EACF9">index</span> to <span class="parameter" style="color:#2EACF9">newval</span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.offsetset-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index being set.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">newval</span></dt>       <dd>        <p class="para">        The new value for the <span class="parameter" style="color:#2EACF9">index</span>.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.offsetset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfixedarray.offsetset-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when <span class="parameter" style="color:#2EACF9">index</span> is outside    the defined size of the array or when <span class="parameter" style="color:#2EACF9">index</span> cannot be parsed as an integer.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return void */
        public function offsetSet ($index, $newval) {}

/**
*<div id="splfixedarray.offsetunset" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::offsetUnset</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::offsetUnset</span> &mdash; <span class="dc-title">Unsets the value at the specified $index</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.offsetunset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::offsetUnset</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$index</span></span>    )</div>    <p class="para rdfs-comment">    Unsets the value at the specified index.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.offsetunset-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">index</span></dt>       <dd>        <p class="para">        The index being unset.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.offsetunset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfixedarray.offsetunset-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when <span class="parameter" style="color:#2EACF9">index</span> is outside    the defined size of the array or when <span class="parameter" style="color:#2EACF9">index</span> cannot be parsed as an integer.   </p>  </div>     <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return void */
        public function offsetUnset ($index) {}

/**
*<div id="splfixedarray.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::rewind</span> &mdash; <span class="dc-title">Rewind iterator back to the start</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Rewinds the iterator to the beginning.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="splfixedarray.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::current</span> &mdash; <span class="dc-title">Return current array entry</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Get the current array element.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current element value.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splfixedarray.current-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> when the internal array pointer points to an     invalid index or is out of bounds.    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return mixed The current element value.*/
        public function current () {}

/**
*<div id="splfixedarray.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::key</span> &mdash; <span class="dc-title">Return current array index</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the current array index.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current array index.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return int The current array index.*/
        public function key () {}

/**
*<div id="splfixedarray.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::next</span> &mdash; <span class="dc-title">Move to next entry</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Move the iterator to the next array entry.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="splfixedarray.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplFixedArray::valid</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplFixedArray::valid</span> &mdash; <span class="dc-title">Check whether the array contains more elements</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splfixedarray.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplFixedArray::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks if the array contains any more elements.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splfixedarray.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splfixedarray.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the array contains any more elements, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splfixedarray.php">SplFixedArray</a></div></div>
         * @return bool true if the array contains any more elements, false otherwise.*/
        public function valid () {}

    public function __wakeup()
    {
    }


}

/**
 * The <b>SplObserver</b> interface is used alongside
 * <b>SplSubject</b> to implement the Observer Design Pattern.
 * @link http://php.net/manual/en/class.splobserver.php
 */
interface SplObserver  {

        /**
         * Receive update from subject
         * @link http://php.net/manual/en/splobserver.update.php
         * @param SplSubject $subject <p>
	 * The <b>SplSubject</b> notifying the observer of an update.
         * </p>
         * @return void 
         * @since 5.1.0
         */
        public function update (SplSubject $subject);

}

/**
 * The <b>SplSubject</b> interface is used alongside
 * <b>SplObserver</b> to implement the Observer Design Pattern.
 * @link http://php.net/manual/en/class.splsubject.php
 */
interface SplSubject  {

        /**
         * Attach an SplObserver
         * @link http://php.net/manual/en/splsubject.attach.php
         * @param SplObserver $observer <p>
	 * The <b>SplObserver</b> to attach.
         * </p>
         * @return void 
         * @since 5.1.0
         */
        public function attach (SplObserver $observer);

        /**
         * Detach an observer
         * @link http://php.net/manual/en/splsubject.detach.php
         * @param SplObserver $observer <p>
	 * The <b>SplObserver</b> to detach.
         * </p>
         * @return void 
         * @since 5.1.0
         */
        public function detach (SplObserver $observer);

        /**
         * Notify an observer
         * @link http://php.net/manual/en/splsubject.notify.php
         * @return void 
         * @since 5.1.0
         */
        public function notify ();

}

/**
*<div id="class.splobjectstorage" class="reference">   <h1 class="title">The SplObjectStorage class</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>     <div class="section" id="splobjectstorage.intro">    <h2 class="title">简介</h2>    <p class="para">     The SplObjectStorage class provides a map from objects to data or, by     ignoring data, an object set. This dual purpose can be useful in many     cases involving the need to uniquely identify objects.    </p>   </div>     <div class="section" id="splobjectstorage.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">SplObjectStorage</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Serializable</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">ArrayAccess</strong></span>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.addall.php" class="methodname" style="color:#CC7832">addAll</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/class.splobjectstorage.php" class="type SplObjectStorage" style="color:#EAB766">SplObjectStorage</a></span> <span class="parameter" style="color:#2EACF9">$storage</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.attach.php" class="methodname" style="color:#CC7832">attach</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$data</span><span class="initializer"> = <strong><span>NULL</span></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.contains.php" class="methodname" style="color:#CC7832">contains</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.count.php" class="methodname" style="color:#CC7832">count</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">object</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.detach.php" class="methodname" style="color:#CC7832">detach</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.gethash.php" class="methodname" style="color:#CC7832">getHash</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.getinfo.php" class="methodname" style="color:#CC7832">getInfo</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.offsetexists.php" class="methodname" style="color:#CC7832">offsetExists</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">mixed</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.offsetget.php" class="methodname" style="color:#CC7832">offsetGet</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.offsetset.php" class="methodname" style="color:#CC7832">offsetSet</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$data</span><span class="initializer"> = <strong><span>NULL</span></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.offsetunset.php" class="methodname" style="color:#CC7832">offsetUnset</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.removeall.php" class="methodname" style="color:#CC7832">removeAll</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/class.splobjectstorage.php" class="type SplObjectStorage" style="color:#EAB766">SplObjectStorage</a></span> <span class="parameter" style="color:#2EACF9">$storage</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.removeallexcept.php" class="methodname" style="color:#CC7832">removeAllExcept</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/class.splobjectstorage.php" class="type SplObjectStorage" style="color:#EAB766">SplObjectStorage</a></span> <span class="parameter" style="color:#2EACF9">$storage</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.serialize.php" class="methodname" style="color:#CC7832">serialize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.setinfo.php" class="methodname" style="color:#CC7832">setInfo</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$data</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.unserialize.php" class="methodname" style="color:#CC7832">unserialize</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$serialized</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/splobjectstorage.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>     <div class="section" id="splobjectstorage.examples">    <h2 class="title">范例</h2>    <p class="para">     <div class="example" id="example-4600">      <p><strong>Example #1 <strong class="classname">SplObjectStorage</strong> as a set</strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;As&nbsp;an&nbsp;object&nbsp;set<br /></span><span style="color: #9876AA">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o3&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o3</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">detach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(true) bool(true) bool(false) bool(true) bool(false) bool(false) </span></div>      </div>     </div>     <div class="example" id="example-4601">      <p><strong>Example #2 <strong class="classname">SplObjectStorage</strong> as a map</strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;As&nbsp;a&nbsp;map&nbsp;from&nbsp;objects&nbsp;to&nbsp;data<br /></span><span style="color: #9876AA">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o3&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o1</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">"data&nbsp;for&nbsp;object&nbsp;1"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o2</span><span style="color: #007700">]&nbsp;=&nbsp;array(</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">2</span><span style="color: #007700">,</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /><br />if&nbsp;(isset(</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o2</span><span style="color: #007700">]))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o2</span><span style="color: #007700">]);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> array(3) {   [0]=&gt;   int(1)   [1]=&gt;   int(2)   [2]=&gt;   int(3) } </span></div>      </div>     </div>    </p>   </div>    </div>                                                                                                                                                         <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link SplObjectStorage::addAll} — Adds all objects from another storage</li><li>{@link SplObjectStorage::attach} — Adds an object in the storage</li><li>{@link SplObjectStorage::contains} — Checks if the storage contains a specific object</li><li>{@link SplObjectStorage::count} — Returns the number of objects in the storage</li><li>{@link SplObjectStorage::current} — Returns the current storage entry</li><li>{@link SplObjectStorage::detach} — Removes an object from the storage</li><li>{@link SplObjectStorage::getHash} — Calculate a unique identifier for the contained objects</li><li>{@link SplObjectStorage::getInfo} — Returns the data associated with the current iterator entry</li><li>{@link SplObjectStorage::key} — Returns the index at which the iterator currently is</li><li>{@link SplObjectStorage::next} — Move to the next entry</li><li>{@link SplObjectStorage::offsetExists} — Checks whether an object exists in the storage</li><li>{@link SplObjectStorage::offsetGet} — Returns the data associated with an object</li><li>{@link SplObjectStorage::offsetSet} — Associates data to an object in the storage</li><li>{@link SplObjectStorage::offsetUnset} — Removes an object from the storage</li><li>{@link SplObjectStorage::removeAll} — Removes objects contained in another storage from the current storage</li><li>{@link SplObjectStorage::removeAllExcept} — Removes all objects except for those contained in another storage from the current storage</li><li>{@link SplObjectStorage::rewind} — Rewind the iterator to the first storage element</li><li>{@link SplObjectStorage::serialize} — Serializes the storage</li><li>{@link SplObjectStorage::setInfo} — Sets the data associated with the current iterator entry</li><li>{@link SplObjectStorage::unserialize} — Unserializes a storage from its string representation</li><li>{@link SplObjectStorage::valid} — Returns if the current iterator entry is valid</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.datastructures.php">数据结构</a></div></div>
*/
class SplObjectStorage implements Countable, Iterator, Serializable, ArrayAccess {

/**
*<div id="splobjectstorage.attach" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::attach</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::attach</span> &mdash; <span class="dc-title">Adds an object in the storage</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.attach-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::attach</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$data</span><span class="initializer"> = <strong><span>NULL</span></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Adds an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> inside the storage, and optionally associate it to some data.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.attach-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">object</span></dt>       <dd>        <p class="para">        The <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> to add.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">data</span></dt>       <dd>        <p class="para">        The data to associate with the <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.attach-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.attach-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4603">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::attach()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;similar&nbsp;to&nbsp;$s[$o1]&nbsp;=&nbsp;NULL;<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;similar&nbsp;to&nbsp;$s[$o2]&nbsp;=&nbsp;"hello";<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o1</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o2</span><span style="color: #007700">]);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> NULL string(5) &quot;hello&quot; </span></div>     </div>    </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-splobjectstorage.attach-changelog">    <h3 class="title">更新日志</h3>    <span>     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>5.3.0</td>         <td>          Added the <span class="parameter" style="color:#2EACF9">data</span> parameter.         </td>        </tr>        </tbody>           </table>     </span>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.attach-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::detach()} - Removes an object from the storage</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetSet()} - Associates data to an object in the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return void */
        public function attach ($object, $data = null) {}

        /**
	 * Removes an object from the storage
/**
*<div id="splobjectstorage.detach" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::detach</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::detach</span> &mdash; <span class="dc-title">Removes an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> from the storage</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.detach-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::detach</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div>    <p class="para rdfs-comment">    Removes the <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> from the storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.detach-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">object</span></dt>       <dd>        <p class="para">        The <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> to remove.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.detach-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.detach-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4607">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::detach()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$o&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">detach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(1) int(0) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.detach-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::attach()} - Adds an object in the storage</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::removeAll()} - Removes objects contained in another storage from the current storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return void */
        public function detach ($object) {}

        /**
         * Checks if the storage contains a specific object
         * @link http://php.net/manual/en/splobjectstorage.contains.php
         * @param object $object <p>
         * The object to look for.
         * </p>
	 * @return bool true if the object is in the storage, false otherwise.
/**
*<div id="splobjectstorage.contains" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::contains</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::contains</span> &mdash; <span class="dc-title">Checks if the storage contains a specific object</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.contains-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::contains</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div>    <p class="para rdfs-comment">    Checks if the storage contains the <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> provided.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.contains-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">object</span></dt>       <dd>        <p class="para">        The <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> to look for.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.contains-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> is in the storage, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.contains-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4604">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::contains()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o1</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(true) bool(false) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.contains-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetExists()} - Checks whether an object exists in the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
*/
        public function contains ($object) {}

        /**
         * Adds all objects from another storage
         * @link http://php.net/manual/en/splobjectstorage.addall.php
         * @param SplObjectStorage $storage <p>
         * The storage you want to import.
         * </p>
         * @return void 
         * @since 5.3.0
         */
	public function addAll ($storage) {}

        /**
         * Removes objects contained in another storage from the current storage
         * @link http://php.net/manual/en/splobjectstorage.removeall.php
         * @param SplObjectStorage $storage <p>
         * The storage containing the elements to remove.
         * </p>
         * @return void 
         * @since 5.3.0
         */
	public function removeAll ($storage) {}

        /**
	 * Removes all objects except for those contained in another storage from the current storage
	 * @link http://php.net/manual/en/splobjectstorage.removeallexcept.php
	 * @param SplObjectStorage $storage <p>
	 * The storage containing the elements to retain in the current storage.
	 * </p>
	 * @return void
	 * @since 5.3.6
	 */
	public function removeAllExcept ($storage) {}

	/**
/**
*<div id="splobjectstorage.getinfo" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::getInfo</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::getInfo</span> &mdash; <span class="dc-title">Returns the data associated with the current iterator entry</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.getinfo-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::getInfo</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the data, or info, associated with the object pointed by the current iterator position.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.getinfo-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.getinfo-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The data associated with the current iterator position.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.getinfo-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4609">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::getInfo()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />while(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$index&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$object&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;similar&nbsp;to&nbsp;current($s)<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$data&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getInfo</span><span style="color: #007700">();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$object</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> object(stdClass)#2 (0) { } string(2) &quot;d1&quot; object(stdClass)#3 (0) { } string(2) &quot;d2&quot; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.getinfo-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::current()} - Returns the current storage entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::rewind()} - Rewind the iterator to the first storage element</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::key()} - Returns the index at which the iterator currently is</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::next()} - Move to the next entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::valid()} - Returns if the current iterator entry is valid</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::setInfo()} - Sets the data associated with the current iterator entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return mixed The data associated with the current iterator position.*/
        public function getInfo () {}

/**
*<div id="splobjectstorage.setinfo" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::setInfo</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::setInfo</span> &mdash; <span class="dc-title">Sets the data associated with the current iterator entry</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.setinfo-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::setInfo</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$data</span></span>    )</div>    <p class="para rdfs-comment">    Associates data, or info, with the object currently pointed to by the iterator.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.setinfo-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">data</span></dt>       <dd>        <p class="para">        The data to associate with the current iterator entry.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.setinfo-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.setinfo-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4620">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::setInfo()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />while(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setInfo</span><span style="color: #007700">(</span><span style="color: #DD0000">"new"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o1</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o2</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(3) &quot;new&quot; string(3) &quot;new&quot; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.setinfo-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::current()} - Returns the current storage entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::rewind()} - Rewind the iterator to the first storage element</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::key()} - Returns the index at which the iterator currently is</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::next()} - Move to the next entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::valid()} - Returns if the current iterator entry is valid</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::getInfo()} - Returns the data associated with the current iterator entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return void */
        public function setInfo ($data) {}

/**
*<div id="splobjectstorage.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::count</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::count</span> &mdash; <span class="dc-title">Returns the number of objects in the storage</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::count</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Counts the number of objects in the storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.count-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The number of objects in the storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.count-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4605">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::count()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(2) int(2) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.count-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::attach()} - Adds an object in the storage</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::detach()} - Removes an object from the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return int The number of objects in the storage.*/
        public function count () {}

/**
*<div id="splobjectstorage.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::rewind</span> &mdash; <span class="dc-title">Rewind the iterator to the first storage element</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Rewind the iterator to the first storage element.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.rewind-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4618">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::rewind()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />while(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$index&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$object&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;similar&nbsp;to&nbsp;current($s)<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$data&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getInfo</span><span style="color: #007700">();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$object</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(1) int(0) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.rewind-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::next()} - Move to the next entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return void */
        public function rewind () {}

        /**
         * Returns if the current iterator entry is valid
         * @link http://php.net/manual/en/splobjectstorage.valid.php
	 * @return bool true if the iterator entry is valid, false otherwise.
/**
*<div id="splobjectstorage.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::valid</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::valid</span> &mdash; <span class="dc-title">Returns if the current iterator entry is valid</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns if the current iterator entry is valid.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the iterator entry is valid, <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.valid-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4622">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::valid()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />while(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 0 1 </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.valid-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::current()} - Returns the current storage entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::getInfo()} - Returns the data associated with the current iterator entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
*/
        public function valid () {}

/**
*<div id="splobjectstorage.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::key</span> &mdash; <span class="dc-title">Returns the index at which the iterator currently is</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the index at which the iterator currently is.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The index corresponding to the position of the iterator.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.key-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4610">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::key()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />while(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$index&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$object&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;similar&nbsp;to&nbsp;current($s)<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$index</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$object</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(0) object(stdClass)#2 (0) { } int(1) object(stdClass)#3 (0) { } </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.key-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::rewind()} - Rewind the iterator to the first storage element</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::current()} - Returns the current storage entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::next()} - Move to the next entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::valid()} - Returns if the current iterator entry is valid</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return int The index corresponding to the position of the iterator.*/
        public function key () {}

/**
*<div id="splobjectstorage.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::current</span> &mdash; <span class="dc-title">Returns the current storage entry</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">object</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the current storage entry.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> at the current iterator position.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.current-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4606">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::current()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />while(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$index&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$object&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;similar&nbsp;to&nbsp;current($s)<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$data&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getInfo</span><span style="color: #007700">();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$object</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> object(stdClass)#2 (0) { } string(2) &quot;d1&quot; object(stdClass)#3 (0) { } string(2) &quot;d2&quot; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.current-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::rewind()} - Rewind the iterator to the first storage element</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::key()} - Returns the index at which the iterator currently is</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::next()} - Move to the next entry</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::valid()} - Returns if the current iterator entry is valid</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::getInfo()} - Returns the data associated with the current iterator entry</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return object The object at the current iterator position.*/
        public function current () {}

/**
*<div id="splobjectstorage.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::next</span> &mdash; <span class="dc-title">Move to the next entry</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Moves the iterator to the next <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> in the storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.next-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4611">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::next()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br />while(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$index&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$object&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;similar&nbsp;to&nbsp;current($s)<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$index</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$object</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(0) object(stdClass)#2 (0) { } int(1) object(stdClass)#3 (0) { } </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.next-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SPLObjectStorage::rewind()} - Rewind the iterator to the first storage element</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return void */
        public function next () {}

/**
*<div id="splobjectstorage.unserialize" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::unserialize</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::unserialize</span> &mdash; <span class="dc-title">Unserializes a storage from its string representation</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.unserialize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::unserialize</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$serialized</span></span>    )</div>    <p class="para rdfs-comment">    Unserializes storage entries and attach them to the current storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.unserialize-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">serialized</span></dt>       <dd>        <p class="para">        The serialized representation of a storage.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.unserialize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.unserialize-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4621">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::unserialize()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s1</span><span style="color: #007700">[</span><span style="color: #9876AA">$o</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">"data"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unserialize</span><span style="color: #007700">(</span><span style="color: #9876AA">$s1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">serialize</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$s2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(1) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.unserialize-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::serialize()} - Serializes the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return void */
        public function unserialize ($serialized) {}

/**
*<div id="splobjectstorage.serialize" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::serialize</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::serialize</span> &mdash; <span class="dc-title">Serializes the storage</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.serialize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::serialize</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns a string representation of the storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.serialize-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.serialize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    A string representing the storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.serialize-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4619">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::serialize()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">"data"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">serialize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> x:i:1;O:8:&quot;stdClass&quot;:0:{},s:4:&quot;data&quot;;;m:a:0:{} </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.serialize-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::unserialize()} - Unserializes a storage from its string representation</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return string A string representing the storage.*/
        public function serialize () {}

        /**
         * Checks whether an object exists in the storage
         * @link http://php.net/manual/en/splobjectstorage.offsetexists.php
         * @param object $object <p>
         * The object to look for.
         * </p>
	 * @return bool true if the object exists in the storage,
/**
*<div id="splobjectstorage.offsetexists" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::offsetExists</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::offsetExists</span> &mdash; <span class="dc-title">Checks whether an object exists in the storage</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.offsetexists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::offsetExists</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div>    <p class="para rdfs-comment">    Checks whether an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> exists in the storage.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::offsetExists()</strong></span> is an alias of <span class="methodname" style="color:#CC7832">{@link SplObjectStorage::contains()}</span>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.offsetexists-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">object</span></dt>       <dd>        <p class="para">        The <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> to look for.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.offsetexists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if the <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> exists in the storage,    and <strong><span>FALSE</span></strong> otherwise.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.offsetexists-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4612">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::offsetExists()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">offsetExists</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Similar&nbsp;to&nbsp;isset($s[$o1])<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">offsetExists</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Similar&nbsp;to&nbsp;isset($s[$o2])<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(true) bool(false) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.offsetexists-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetSet()} - Associates data to an object in the storage</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetGet()} - Returns the data associated with an object</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetUnset()} - Removes an object from the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
*/
        public function offsetExists ($object) {}

        /**
         * Associates data to an object in the storage
         * @link http://php.net/manual/en/splobjectstorage.offsetset.php
         * @param object $object <p>
         * The object to associate data with.
         * </p>
	 * @param mixed $data [optional] <p>
         * The data to associate with the object.
         * </p>
         * @return void 
         * @since 5.3.0
         */
	public function offsetSet ($object, $data = null) {}

/**
*<div id="splobjectstorage.offsetunset" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::offsetUnset</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::offsetUnset</span> &mdash; <span class="dc-title">Removes an object from the storage</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.offsetunset-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::offsetUnset</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div>    <p class="para rdfs-comment">    Removes an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> from the storage.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::offsetUnset()</strong></span> is an alias of <span class="methodname" style="color:#CC7832">{@link SplObjectStorage::detach()}</span>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.offsetunset-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">object</span></dt>       <dd>        <p class="para">        The <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> to remove.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.offsetunset-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.offsetunset-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4615">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::offsetUnset()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$o&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">offsetUnset</span><span style="color: #007700">(</span><span style="color: #9876AA">$o</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;Similar&nbsp;to&nbsp;unset($s[$o])<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(1) int(0) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.offsetunset-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetGet()} - Returns the data associated with an object</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetSet()} - Associates data to an object in the storage</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetExists()} - Checks whether an object exists in the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return void */
        public function offsetUnset ($object) {}

/**
*<div id="splobjectstorage.offsetget" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::offsetGet</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::offsetGet</span> &mdash; <span class="dc-title">Returns the data associated with an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span></span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.offsetget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::offsetGet</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div>    <p class="para rdfs-comment">    Returns the data associated with an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> in the storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.offsetget-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">object</span></dt>       <dd>        <p class="para">        The <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> to look for.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.offsetget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The data previously associated with the <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> in the storage.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splobjectstorage.offsetget-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.unexpectedvalueexception.php" class="classname">UnexpectedValueException</a> when <span class="parameter" style="color:#2EACF9">object</span> could not be found.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.offsetget-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4613">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::offsetGet()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SplObjectStorage</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">StdClass</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o1</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attach</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">);<br /><br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">offsetGet</span><span style="color: #007700">(</span><span style="color: #9876AA">$o1</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Similar&nbsp;to&nbsp;$s[$o1]<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">offsetGet</span><span style="color: #007700">(</span><span style="color: #9876AA">$o2</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Similar&nbsp;to&nbsp;$s[$o2]<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(5) &quot;hello&quot; NULL </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.offsetget-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetSet()} - Associates data to an object in the storage</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetExists()} - Checks whether an object exists in the storage</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link SplObjectStorage::offsetUnset()} - Removes an object from the storage</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return mixed The data previously associated with the object in the storage.*/
        public function offsetGet ($object) {}

/**
*<div id="splobjectstorage.gethash" class="refentry">  <div class="refnamediv">   <h1 class="refname">SplObjectStorage::getHash</h1>   <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7)</p><p class="refpurpose"><span class="refname">SplObjectStorage::getHash</span> &mdash; <span class="dc-title">    Calculate a unique identifier for the contained objects   </span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-splobjectstorage.gethash-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>SplObjectStorage::getHash</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">$object</span></span>    )</div>    <p class="para rdfs-comment">    This method calculates an identifier for the objects added to an    <a href="http://php.net/manual/zh/class.splobjectstorage.php" class="classname">SplObjectStorage</a> object.   </p>   <p class="para">    The implementation in <a href="http://php.net/manual/zh/class.splobjectstorage.php" class="classname">SplObjectStorage</a> returns    the same value as <span class="function">{@link spl_object_hash()}</span>.   </p>   <p class="para">    The storage object will never contain more than one object with the same identifier.    As such, it can be used to implement a set (a collection of unique values)    where the quality of an object being unique is determined by the value    returned by this function being unique.   </p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-splobjectstorage.gethash-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <span class="parameter" style="color:#2EACF9">object</span></dt>      <dd>       <span>       The object whose identifier is to be calculated.      </span>     </dd>        </dl>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-splobjectstorage.gethash-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    A <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> with the calculated identifier.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-splobjectstorage.gethash-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    A <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> is thrown when the returned    value is not a <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-splobjectstorage.gethash-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4608">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">SplObjectStorage::getHash()</strong></span> example</strong></p> <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">OneSpecimenPerClassStorage&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">SplObjectStorage&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">getHash</span><span style="color: #007700">(</span><span style="color: #9876AA">$o</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">$o</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br />class&nbsp;</span><span style="color: #9876AA">A&nbsp;</span><span style="color: #007700">{}<br /><br /></span><span style="color: #9876AA">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">OneSpecimenPerClassStorage</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">stdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">stdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$o3&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">A</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o1</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//$o2&nbsp;is&nbsp;considered&nbsp;equal&nbsp;to&nbsp;$o1&nbsp;so&nbsp;the&nbsp;value&nbsp;is&nbsp;replaced<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o2</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$o3</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//these&nbsp;are&nbsp;considered&nbsp;equal&nbsp;to&nbsp;the&nbsp;objects&nbsp;before<br />//so&nbsp;they&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;access&nbsp;the&nbsp;values&nbsp;stored&nbsp;under&nbsp;them<br /></span><span style="color: #9876AA">$p1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">stdClass</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$p2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">A</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$p1</span><span style="color: #007700">],&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">$s</span><span style="color: #007700">[</span><span style="color: #9876AA">$p2</span><span style="color: #007700">],&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 2 3 </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-splobjectstorage.gethash-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link spl_object_hash()} - 返回指定对象的hash id</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.splobjectstorage.php">SplObjectStorage</a></div></div>
         * @return string A string with the calculated identifier.*/
        public function getHash($object) {}

}

/**
*<div id="class.multipleiterator" class="reference">   <h1 class="title">The MultipleIterator class</h1>     <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p>     <div class="section" id="multipleiterator.intro">    <h2 class="title">简介</h2>    <p class="para">     An Iterator that sequentially iterates over all attached iterators    </p>   </div>     <div class="section" id="multipleiterator.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MultipleIterator</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.multipleiterator.php#multipleiterator.constants.mit-need-any"><var class="varname">MIT_NEED_ANY</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.multipleiterator.php#multipleiterator.constants.mit-need-all"><var class="varname">MIT_NEED_ALL</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.multipleiterator.php#multipleiterator.constants.mit-keys-numeric"><var class="varname">MIT_KEYS_NUMERIC</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.multipleiterator.php#multipleiterator.constants.mit-keys-assoc"><var class="varname">MIT_KEYS_ASSOC</var></a></var>      <span class="initializer"> = 2</span>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span>    <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>     ([ <span class="methodparam">     <span class="type" style="color:#EAB766">int</span>      <span class="parameter" style="color:#2EACF9">$flags</span>     <span class="initializer"> = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC</span>    </span>   ] )</div>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.attachiterator.php" class="methodname" style="color:#CC7832">attachIterator</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/class.iterator.php" class="type Iterator" style="color:#EAB766">Iterator</a></span> <span class="parameter" style="color:#2EACF9">$iterator</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$infos</span></span>   ] )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.containsiterator.php" class="methodname" style="color:#CC7832">containsIterator</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/class.iterator.php" class="type Iterator" style="color:#EAB766">Iterator</a></span> <span class="parameter" style="color:#2EACF9">$iterator</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.countiterators.php" class="methodname" style="color:#CC7832">countIterators</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.current.php" class="methodname" style="color:#CC7832">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.detachiterator.php" class="methodname" style="color:#CC7832">detachIterator</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/class.iterator.php" class="type Iterator" style="color:#EAB766">Iterator</a></span> <span class="parameter" style="color:#2EACF9">$iterator</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.getflags.php" class="methodname" style="color:#CC7832">getFlags</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.key.php" class="methodname" style="color:#CC7832">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.next.php" class="methodname" style="color:#CC7832">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">void</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.setflags.php" class="methodname" style="color:#CC7832">setFlags</a></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div> <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><a href="http://php.net/manual/zh/multipleiterator.valid.php" class="methodname" style="color:#CC7832">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>       <div class="section" id="multipleiterator.constants">    <h2 class="title">预定义常量</h2>    <dl>             <dt id="multipleiterator.constants.mit-need-any"><strong><span>MultipleIterator::MIT_NEED_ANY</span></strong></dt>       <dd>        <p class="para">        Do not require all sub iterators to be valid in iteration.       </p>      </dd>                  <dt id="multipleiterator.constants.mit-need-all"><strong><span>MultipleIterator::MIT_NEED_ALL</span></strong></dt>       <dd>        <p class="para">        Require all sub iterators to be valid in iteration.       </p>      </dd>                  <dt id="multipleiterator.constants.mit-keys-numeric"><strong><span>MultipleIterator::MIT_KEYS_NUMERIC</span></strong></dt>       <dd>        <p class="para">        Keys are created from the sub iterators position.       </p>      </dd>                  <dt id="multipleiterator.constants.mit-keys-assoc"><strong><span>MultipleIterator::MIT_KEYS_ASSOC</span></strong></dt>       <dd>        <p class="para">        Keys are created from sub iterators associated information.       </p>      </dd>           </dl>    </div>     </div>                                                                                         <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MultipleIterator::attachIterator} — Attaches iterator information</li><li>{@link MultipleIterator::__construct} — Constructs a new MultipleIterator</li><li>{@link MultipleIterator::containsIterator} — Checks if an iterator is attached</li><li>{@link MultipleIterator::countIterators} — Gets the number of attached iterator instances</li><li>{@link MultipleIterator::current} — Gets the registered iterator instances</li><li>{@link MultipleIterator::detachIterator} — Detaches an iterator</li><li>{@link MultipleIterator::getFlags} — Gets the flag information</li><li>{@link MultipleIterator::key} — Gets the registered iterator instances</li><li>{@link MultipleIterator::next} — Moves all attached iterator instances forward</li><li>{@link MultipleIterator::rewind} — Rewinds all attached iterator instances</li><li>{@link MultipleIterator::setFlags} — Sets flags</li><li>{@link MultipleIterator::valid} — Checks the validity of sub iterators</li></ul> <div class="up"><a href="http://php.net/manual/zh/spl.iterators.php">迭代器</a></div></div>
*/
class MultipleIterator implements Iterator {
        const MIT_NEED_ANY = 0;
        const MIT_NEED_ALL = 1;
        const MIT_KEYS_NUMERIC = 0;
        const MIT_KEYS_ASSOC = 2;


        /**
         * Constructs a new MultipleIterator
         * @link http://php.net/manual/en/multipleiterator.construct.php
         * @param $flags [optional] Defaults to MultipleIterator::MIT_NEED_ALL | MultipleIterator::MIT_KEYS_NUMERIC
         * @since 5.3.0
         */
        public function __construct ($flags) {}

/**
*<div id="multipleiterator.getflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::getFlags</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::getFlags</span> &mdash; <span class="dc-title">Gets the flag information</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.getflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::getFlags</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets information about the flags.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.getflags-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.getflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Information about the flags, as an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.getflags-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.multipleiterator.php#multipleiterator.constants" class="link">Flag Constants</a></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::__construct()} - Constructs a new MultipleIterator</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::setFlags()} - Sets flags</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return int Information about the flags, as an integer.*/
        public function getFlags () {}

        /**
         * Sets flags
         * @link http://php.net/manual/en/multipleiterator.setflags.php
	 * @param int $flags <p>
/**
*<div id="multipleiterator.setflags" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::setFlags</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::setFlags</span> &mdash; <span class="dc-title">Sets flags</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.setflags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::setFlags</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div>    <p class="para rdfs-comment">    Sets flags.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.setflags-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The flags to set, according to the        <a href="http://php.net/manual/zh/class.multipleiterator.php#multipleiterator.constants" class="link">Flag Constants</a>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.setflags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.setflags-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.multipleiterator.php#multipleiterator.constants" class="link">Flag Constants</a></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::__construct()} - Constructs a new MultipleIterator</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::getFlags()} - Gets the flag information</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return void */
        public function setFlags ($flags) {}

        /**
         * Attaches iterator information
         * @link http://php.net/manual/en/multipleiterator.attachiterator.php
         * @param Iterator $iterator <p>
         * The new iterator to attach.
         * </p>
         * @param string $infos [optional] <p>
         * The associative information for the Iterator, which must be an
	 * integer, a string, or null.
         * </p>
         * @return void Description...
         * @since 5.3.0
         */
	public function attachIterator (Iterator $iterator, $infos = null) {}

        /**
         * Detaches an iterator
         * @link http://php.net/manual/en/multipleiterator.detachiterator.php
         * @param Iterator $iterator <p>
         * The iterator to detach.
         * </p>
         * @return void 
         * @since 5.3.0
         */
	public function detachIterator (Iterator $iterator) {}

        /**
         * Checks if an iterator is attached
         * @link http://php.net/manual/en/multipleiterator.containsiterator.php
         * @param Iterator $iterator <p>
         * The iterator to check.
         * </p>
         * @return bool true on success or false on failure.
         * @since 5.3.0
         */
	public function containsIterator (Iterator $iterator) {}

/**
*<div id="multipleiterator.countiterators" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::countIterators</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::countIterators</span> &mdash; <span class="dc-title">Gets the number of attached iterator instances</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.countiterators-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::countIterators</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the number of attached iterator instances.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.countiterators-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.countiterators-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The number of attached iterator instances (as an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>).   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.countiterators-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::containsIterator()} - Checks if an iterator is attached</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return int The number of attached iterator instances (as an integer).*/
        public function countIterators () {}

/**
*<div id="multipleiterator.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::rewind</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::rewind</span> &mdash; <span class="dc-title">Rewinds all attached iterator instances</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Rewinds all attached iterator instances.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.rewind-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.rewind-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::next()} - Moves all attached iterator instances forward</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return void */
        public function rewind () {}

/**
*<div id="multipleiterator.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::valid</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::valid</span> &mdash; <span class="dc-title">Checks the validity of sub iterators</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Checks the validity of sub iterators.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.valid-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> if one or all sub iterators are valid depending on flags,    otherwise <strong><span>FALSE</span></strong>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.valid-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::__construct()} - Constructs a new MultipleIterator</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return boolean true if one or all sub iterators are valid depending on flags,*/
        public function valid () {}

/**
*<div id="multipleiterator.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::key</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::key</span> &mdash; <span class="dc-title">Gets the registered iterator instances</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::key</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Get the registered iterator instances key() result.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.key-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    An <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> of all registered iterator instances,    or <strong><span>FALSE</span></strong> if no sub iterator is attached.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-multipleiterator.key-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    A <a href="http://php.net/manual/zh/class.logicexception.php" class="classname">LogicException</a> if mode <strong><span>MIT_NEED_ALL</span></strong> is set,    and at least one attached iterator is not valid.   </p>   <p class="para">    Calling this method from <a href="http://php.net/manual/zh/control-structures.foreach.php" class="xref">foreach</a>    triggers warning &quot;Illegal type returned&quot;.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.key-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::current()} - Gets the registered iterator instances</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return array An array of all registered iterator instances,*/
        public function key () {}

/**
*<div id="multipleiterator.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::current</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::current</span> &mdash; <span class="dc-title">Gets the registered iterator instances</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Get the registered iterator instances current() result.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.current-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    An <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> containing the current values of each attached iterator,    or <strong><span>FALSE</span></strong> if no iterators are attached.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-multipleiterator.current-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    A <a href="http://php.net/manual/zh/class.runtimeexception.php" class="classname">RuntimeException</a> if mode <strong><span>MIT_NEED_ALL</span></strong>    is set and at least one attached iterator is not valid. Or an    <strong class="classname">IllegalValueException</strong> if a key is <strong><span>NULL</span></strong> and    <strong><span>MIT_KEYS_ASSOC</span></strong> is set.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.current-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::valid()} - Checks the validity of sub iterators</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return array|false An array containing the current values of each attached iterator,*/
        public function current () {}

/**
*<div id="multipleiterator.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">MultipleIterator::next</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">MultipleIterator::next</span> &mdash; <span class="dc-title">Moves all attached iterator instances forward</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-multipleiterator.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="modifier">public</span> <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>MultipleIterator::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Moves all attached iterator instances forward.   </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-multipleiterator.next-parameters">   <h3 class="title">参数</h3>   <span>此函数没有参数。</span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-multipleiterator.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-multipleiterator.next-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="methodname" style="color:#CC7832">{@link MultipleIterator::rewind()} - Rewinds all attached iterator instances</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.multipleiterator.php">MultipleIterator</a></div></div>
         * @return void */
        public function next () {}

}

