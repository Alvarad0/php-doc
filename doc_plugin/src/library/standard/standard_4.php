<?php

/**
*<div id="function.error-get-last" class="refentry">  <div class="refnamediv">   <h1 class="refname">error_get_last</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">error_get_last</span> &mdash; <span class="dc-title">获取最后发生的错误</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.error-get-last-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>error_get_last</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    获取关于最后一个发生的错误的信息。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.error-get-last-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回了一个关联数组，描述了最后错误的信息，以该错误的 &quot;type&quot;、    &quot;message&quot;、&quot;file&quot; 和 &quot;line&quot; 为数组的键。    如果该错误由 PHP 内置函数导致的，&quot;message&quot;会以该函数名开头。    如果还没有错误则返回 <strong><span>NULL</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.error-get-last-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-459">     <p><strong>Example #1 An <span class="function"><strong style="color:#CC7832">error_get_last()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">error_get_last</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [type] =&gt; 8     [message] =&gt; Undefined variable: a     [file] =&gt; C:\WWW\index.php     [line] =&gt; 2 ) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.error-get-last-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/errorfunc.constants.php" class="link">Error 常量</a></li>     <li class="member"><var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.phperrormsg.php" class="classname">$php_errormsg</a></var></var> 变量</li>     <li class="member"><span class="function">{@link error_clear_last()} - 清除最近一次错误</span></li>     <li class="member"><a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.display-errors" class="link"><span class="parameter" style="color:#2EACF9">display_errors</span> 指令</a></li>     <li class="member"><a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.php-errors" class="link"><span class="parameter" style="color:#2EACF9">html_errors</span> 指令</a></li>     <li class="member"><a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.xmlrpc-errors" class="link"><span class="parameter" style="color:#2EACF9">xmlrpc_errors</span> 指令</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.errorfunc.php">错误处理 函数</a></div></div>
 * @return array an associative array describing the last error with keys "type",*/
function error_get_last () {}

/**
*<div id="function.call-user-func" class="refentry">  <div class="refnamediv">   <h1 class="refname">call_user_func</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">call_user_func</span> &mdash; <span class="dc-title">把第一个参数作为回调函数调用</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.call-user-func-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>call_user_func</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#2EACF9">$callback</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$parameter</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$...</span></span>   ]] )</div>    <p class="para rdfs-comment">    第一个参数 <span class="parameter" style="color:#2EACF9">callback</span> 是被调用的回调函数，其余参数是回调函数的参数。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.call-user-func-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">callback</span></dt>       <dd>        <p class="para">        将被调用的回调函数（<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">parameter</span></dt>       <dd>        <p class="para">        0个或以上的参数，被传入回调函数。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         请注意，传入<span class="function"><strong style="color:#CC7832">call_user_func()</strong></span>的参数不能为引用传递。         <div class="example" id="example-6183">          <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">call_user_func()</strong></span> 的参考例子</strong></p>          <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL</span><span style="color: #007700">);<br />function&nbsp;</span><span style="color: #9876AA">increment</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$var</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$var</span><span style="color: #007700">++;<br />}<br /><br /></span><span style="color: #9876AA">$a&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #DD0000">'increment'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'increment'</span><span style="color: #007700">,&nbsp;array(&amp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;You&nbsp;can&nbsp;use&nbsp;this&nbsp;instead&nbsp;before&nbsp;PHP&nbsp;5.3<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>          </div>           <div class="example-contents"><p>以上例程会输出：</p></div>          <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 0 1 </span></div>          </div>         </div>        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.call-user-func-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回回调函数的返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.call-user-func-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         对面向对象里面的关键字的解析有所增强。在此之前，使用两个冒号来连接一个类和里面的一个方法，把它作为参数来作为回调函数的话，将会发出一个<strong><span>E_STRICT</span></strong>的警告，因为这个传入的参数被视为静态方法。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.call-user-func-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6184">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">call_user_func()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">barber</span><span style="color: #007700">(</span><span style="color: #9876AA">$type</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"You&nbsp;wanted&nbsp;a&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #DD0000">&nbsp;haircut,&nbsp;no&nbsp;problem\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #DD0000">'barber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"mushroom"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #DD0000">'barber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"shave"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> You wanted a mushroom haircut, no problem You wanted a shave haircut, no problem </span></div>     </div>    </div>    <div class="example" id="example-6185">     <p><strong>Example #3 <span class="function"><strong style="color:#CC7832">call_user_func()</strong></span> 命名空间的使用</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">namespace&nbsp;</span><span style="color: #9876AA">Foobar</span><span style="color: #007700">;<br /><br />class&nbsp;</span><span style="color: #9876AA">Foo&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;</span><span style="color: #DD0000">"Hello&nbsp;world!\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #9876AA">__NAMESPACE__&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo::test'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;As&nbsp;of&nbsp;PHP&nbsp;5.3.0<br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #9876AA">__NAMESPACE__&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;As&nbsp;of&nbsp;PHP&nbsp;5.3.0<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Hello world! Hello world! </span></div>     </div>    </div>    <div class="example" id="example-6186">     <p><strong>Example #4 用<span class="function"><strong style="color:#CC7832">call_user_func()</strong></span>来调用一个类里面的方法</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">myclass&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;function&nbsp;</span><span style="color: #9876AA">say_hello</span><span style="color: #007700">()<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Hello!\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #9876AA">$classname&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"myclass"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #9876AA">$classname</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'say_hello'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #9876AA">$classname&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">'::say_hello'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;As&nbsp;of&nbsp;5.2.3<br /><br /></span><span style="color: #9876AA">$myobject&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">myclass</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #9876AA">$myobject</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'say_hello'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Hello! Hello! Hello! </span></div>     </div>       </div>    <div class="example" id="example-6187">     <p><strong>Example #5 把完整的函数作为回调传入<span class="function"><strong style="color:#CC7832">call_user_func()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />call_user_func</span><span style="color: #007700">(function(</span><span style="color: #9876AA">$arg</span><span style="color: #007700">)&nbsp;{&nbsp;print&nbsp;</span><span style="color: #DD0000">"[</span><span style="color: #9876AA">$arg</span><span style="color: #DD0000">]\n"</span><span style="color: #007700">;&nbsp;},&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;As&nbsp;of&nbsp;PHP&nbsp;5.3.0&nbsp;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> [test] </span></div>     </div>       </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.call-user-func-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <p class="para">在函数中注册有多个回调内容时(如使用 <span class="function"><strong style="color:#CC7832">call_user_func()</strong></span> 与 <span class="function">{@link call_user_func_array()}</span>)，如在前一个回调中有未捕获的异常，其后的将不再被调用。</p></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.call-user-func-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>     <li class="member"><span class="function">{@link is_callable()} - 检测参数是否为合法的可调用结构</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.callback" class="link">callback</a> 类型的信息</li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionFunction::invoke()} - Invokes function</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionMethod::invoke()} - Invoke</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.funchand.php">函数处理 函数</a></div></div>
 * @return mixed the function result, or false on error.*/
function call_user_func ($function, ...$parameter) {}

/**
*<div id="function.call-user-func-array" class="refentry">  <div class="refnamediv">   <h1 class="refname">call_user_func_array</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">call_user_func_array</span> &mdash; <span class="dc-title">调用回调函数，并把一个数组参数作为回调函数的参数</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.call-user-func-array-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>call_user_func_array</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#2EACF9">$callback</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$param_arr</span></span>    )</div>    <p class="para rdfs-comment">       把第一个参数作为回调函数（<span class="parameter" style="color:#2EACF9">callback</span>）调用，把参数数组作（<span class="parameter" style="color:#2EACF9">param_arr</span>）为回调函数的的参数传入。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.call-user-func-array-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">callback</span></dt>       <dd>        <p class="para">           被调用的回调函数。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">param_arr</span></dt>       <dd>        <p class="para">           要被传入回调函数的数组，这个数组得是索引数组。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.call-user-func-array-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">       返回回调函数的结果。如果出错的话就返回<strong><span>FALSE</span></strong>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.call-user-func-array-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>            对面向对象里面的关键字的解析有所增强。在此之前，使用两个冒号来连接一个类和里面的一个方法，把它作为参数来作为回调函数的话，将会发出一个<strong><span>E_STRICT</span></strong>的警告，因为这个传入的参数被视为静态方法。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.call-user-func-array-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6179">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">call_user_func_array()</strong></span>例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">foobar</span><span style="color: #007700">(</span><span style="color: #9876AA">$arg</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$arg2</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">__FUNCTION__</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"&nbsp;got&nbsp;</span><span style="color: #9876AA">$arg</span><span style="color: #DD0000">&nbsp;and&nbsp;</span><span style="color: #9876AA">$arg2</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br />class&nbsp;</span><span style="color: #9876AA">foo&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;</span><span style="color: #9876AA">bar</span><span style="color: #007700">(</span><span style="color: #9876AA">$arg</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$arg2</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">__METHOD__</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"&nbsp;got&nbsp;</span><span style="color: #9876AA">$arg</span><span style="color: #DD0000">&nbsp;and&nbsp;</span><span style="color: #9876AA">$arg2</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /><br /></span><span style="color: #FF8000">//&nbsp;Call&nbsp;the&nbsp;foobar()&nbsp;function&nbsp;with&nbsp;2&nbsp;arguments<br /></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">"foobar"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"one"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"two"</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;Call&nbsp;the&nbsp;$foo-&gt;bar()&nbsp;method&nbsp;with&nbsp;2&nbsp;arguments<br /></span><span style="color: #9876AA">$foo&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">foo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(array(</span><span style="color: #9876AA">$foo</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">"three"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"four"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> foobar got one and two foo::bar got three and four </span></div>     </div>    </div>    <div class="example" id="example-6180">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">call_user_func_array()</strong></span>使用命名空间的情况</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">namespace&nbsp;</span><span style="color: #9876AA">Foobar</span><span style="color: #007700">;<br /><br />class&nbsp;</span><span style="color: #9876AA">Foo&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;</span><span style="color: #DD0000">"Hello&nbsp;</span><span style="color: #007700">{</span><span style="color: #9876AA">$name</span><span style="color: #007700">}</span><span style="color: #DD0000">!\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;As&nbsp;of&nbsp;PHP&nbsp;5.3.0<br /></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #9876AA">__NAMESPACE__&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo::test'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'Hannes'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;As&nbsp;of&nbsp;PHP&nbsp;5.3.0<br /></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(array(</span><span style="color: #9876AA">__NAMESPACE__&nbsp;</span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'Philip'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Hello Hannes! Hello Philip! </span></div>     </div>    </div>    <div class="example" id="example-6181">     <p><strong>Example #3 把完整的函数作为回调传入<span class="function"><strong style="color:#CC7832">call_user_func_array()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$func&nbsp;</span><span style="color: #007700">=&nbsp;function(</span><span style="color: #9876AA">$arg1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$arg2</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$arg1&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">$arg2</span><span style="color: #007700">;<br />};<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$func</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">)));&nbsp;</span><span style="color: #FF8000">//&nbsp;As&nbsp;of&nbsp;PHP&nbsp;5.3.0&nbsp;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(8) </span></div>     </div>    </div>    <div class="example" id="example-6182">     <p><strong>Example #4 传引用</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">mega</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">){<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$a&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">55</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"function&nbsp;mega&nbsp;\$a=</span><span style="color: #9876AA">$a</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">$bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">77</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'mega'</span><span style="color: #007700">,array(&amp;</span><span style="color: #9876AA">$bar</span><span style="color: #007700">));<br />echo&nbsp;</span><span style="color: #DD0000">"global&nbsp;\$bar=</span><span style="color: #9876AA">$bar</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> function mega $a=55 global $bar=55 </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.call-user-func-array-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">        PHP 5.4之前，如果<span class="parameter" style="color:#2EACF9">param_arr</span>里面的参数是引用传值，那么不管原函数默认的各个参数是不是引用传值，都会以引用方式传入到回调函数。虽然以引用传值这种方式来传递参数给回调函数，不会发出不支持的警告，但是不管怎么说，这样做还是不被支持的。并且在PHP 5.4里面被去掉了。而且，这也不适用于内部函数，for which the function signature is honored。如果回调函数默认设置需要接受的参数是引用传递的时候，按值传递，结果将会输出一个警告。<span class="function">{@link call_user_func()}</span> 将会返回 <strong><span>FALSE</span></strong>（there is, however, an exception for passed values with reference count = 1, such as in literals, as these can be turned into references without ill effects — but also without writes to that value having any effect —; do not rely in this behavior, though, as the reference count is an implementation detail and the soundness of this behavior is questionable）。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <p class="para">在函数中注册有多个回调内容时(如使用 <span class="function">{@link call_user_func()}</span> 与 <span class="function"><strong style="color:#CC7832">call_user_func_array()</strong></span>)，如在前一个回调中有未捕获的异常，其后的将不再被调用。</p></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.call-user-func-array-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.callback" class="link">callback</a> 类型的信息</li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionFunction::invokeArgs()} - Invokes function args</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionMethod::invokeArgs()} - 带参数执行</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.funchand.php">函数处理 函数</a></div></div>
 * @return mixed the function result, or false on error.*/
function call_user_func_array ($function, array $param_arr) {}

/**
*<div id="function.call-user-method" class="refentry">  <div class="refnamediv">   <h1 class="refname">call_user_method</h1>   <p class="verinfo">(PHP 4, PHP 5)</p><p class="refpurpose"><span class="refname">call_user_method</span> &mdash; <span class="dc-title">对特定对象调用用户方法</span></p>   </div>  <div id="function.call-user-method-refsynopsisdiv">   <div class="warning"><strong class="warning">Warning</strong>     <p class="para">  This function was <em class="emphasis">DEPRECATED</em> in PHP 4.1.0, and  <em class="emphasis">REMOVED</em> in PHP 7.0.0. </p> <p class="para">  Alternatives to this function include: </p>     <ul class="simplelist">     <li class="member"><span class="function">{@link call_user_func()}</span></li>    </ul>   </div>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.call-user-method-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>call_user_method</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$method_name</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">&$obj</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$parameter</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$...</span></span>   ]] )</div>   </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.call-user-method-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">method_name</span></dt>       <dd>        <p class="para">        要调用的方法名称。       </p>      </dd>                 <dt>        <span class="parameter" style="color:#2EACF9">obj</span>      </dt>       <dd>        <p class="para">        要调用的 <span class="parameter" style="color:#2EACF9">method_name</span> 所在的对象  <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>。       </p>      </dd>                 <dt>        <span class="parameter" style="color:#2EACF9">parameter ...</span>      </dt>       <dd>        <p class="para">        可选参数       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.call-user-method-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6124">     <p><strong>Example #1 代替 <span class="function"><strong style="color:#CC7832">call_user_method()</strong></span> </strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />call_user_func</span><span style="color: #007700">(array(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$method_name</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">$parameter&nbsp;</span><span style="color: #FF8000">//&nbsp;,&nbsp;...&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.call-user-method-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>     <li class="member"><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.classobj.php">类/对象 函数</a></div></div>
 * @return mixed */
function call_user_method ($method_name, &$obj, $parameter = null, $_ = null) {}

/**
*<div id="function.call-user-method-array" class="refentry">  <div class="refnamediv">   <h1 class="refname">call_user_method_array</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.5, PHP 5)</p><p class="refpurpose"><span class="refname">call_user_method_array</span> &mdash; <span class="dc-title">以参数列表的数组，调用用户方法</span></p>   </div>  <div id="function.call-user-method-array-refsynopsisdiv">   <div class="warning"><strong class="warning">Warning</strong>     <p class="para">  This function was <em class="emphasis">DEPRECATED</em> in PHP 4.1.0, and  <em class="emphasis">REMOVED</em> in PHP 7.0.0. </p> <p class="para">  Alternatives to this function include: </p>     <ul class="simplelist">     <li class="member"><span class="function">{@link call_user_func_array()}</span></li>    </ul>   </div>  </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.call-user-method-array-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>call_user_method_array</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$method_name</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#2EACF9">&$obj</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$params</span></span>    )</div>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.call-user-method-array-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">method_name</span></dt>       <dd>        <p class="para">        要调用的方法名称。       </p>      </dd>                 <dt>        <span class="parameter" style="color:#2EACF9">obj</span>      </dt>       <dd>        <p class="para">        要调用的 <span class="parameter" style="color:#2EACF9">method_name</span> 所在的对象 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>。       </p>      </dd>                 <dt>        <span class="parameter" style="color:#2EACF9">params</span>      </dt>       <dd>        <p class="para">        数组形式的一组参数。       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.call-user-method-array-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6123">     <p><strong>Example #1 代替 <span class="function"><strong style="color:#CC7832">call_user_method_array()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />call_user_func_array</span><span style="color: #007700">(array(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$method_name</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">$params</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.call-user-method-array-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>     <li class="member"><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.classobj.php">类/对象 函数</a></div></div>
 * @return mixed */
function call_user_method_array ($method_name, &$obj, array $params) {}

/**
*<div id="function.forward-static-call" class="refentry">  <div class="refnamediv">   <h1 class="refname">forward_static_call</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">forward_static_call</span> &mdash; <span class="dc-title">Call a static method</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.forward-static-call-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>forward_static_call</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#2EACF9">$function</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$parameter</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$...</span></span>   ]] )</div>    <p class="para rdfs-comment">    Calls a user defined function or method given by the <span class="parameter" style="color:#2EACF9">function</span>    parameter, with the following arguments. This function must be called within a method    context, it can&#039;t be used outside a class.    It uses the <a href="http://php.net/manual/zh/language.oop5.late-static-bindings.php" class="link">late static    binding</a>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.forward-static-call-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">function</span></dt>       <dd>        <p class="para">        The function or method to be called. This parameter may be an array,        with the name of the class, and the method, or a string, with a function        name.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">parameter</span></dt>       <dd>        <p class="para">        Zero or more parameters to be passed to the function.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.forward-static-call-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the function result, or <strong><span>FALSE</span></strong> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.forward-static-call-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6192">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">forward_static_call()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">A<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span style="color: #9876AA">NAME&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'A'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$args&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;static::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$args</span><span style="color: #007700">).</span><span style="color: #DD0000">"&nbsp;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class&nbsp;</span><span style="color: #9876AA">B&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">A<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span style="color: #9876AA">NAME&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'B'</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">self</span><span style="color: #007700">::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">forward_static_call</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'A'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">),&nbsp;</span><span style="color: #DD0000">'more'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'args'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">forward_static_call</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'other'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'args'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #9876AA">B</span><span style="color: #007700">::</span><span style="color: #9876AA">test</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /><br />function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$args&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"C&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$args</span><span style="color: #007700">).</span><span style="color: #DD0000">"&nbsp;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> B B more,args  C other,args </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.forward-static-call-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link forward_static_call_array()} - Call a static method and pass the arguments as array</span></li>     <li class="member"><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>     <li class="member"><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>     <li class="member"><span class="function">{@link is_callable()} - 检测参数是否为合法的可调用结构</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.callback" class="link">callback</a> 类型的信息</li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.funchand.php">函数处理 函数</a></div></div>
 * @return mixed the function result, or false on error.*/
function forward_static_call ($function, $parameter = null, $_ = null) {}

/**
*<div id="function.forward-static-call-array" class="refentry">  <div class="refnamediv">   <h1 class="refname">forward_static_call_array</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">forward_static_call_array</span> &mdash; <span class="dc-title">Call a static method and pass the arguments as array</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.forward-static-call-array-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>forward_static_call_array</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#2EACF9">$function</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$parameters</span></span>    )</div>    <p class="para rdfs-comment">    Calls a user defined function or method given by the <span class="parameter" style="color:#2EACF9">function</span>    parameter. This function must be called within a method context, it can&#039;t be     used outside a class.    It uses the <a href="http://php.net/manual/zh/language.oop5.late-static-bindings.php" class="link">late static    binding</a>.    All arguments of the forwarded method are passed as values,    and as an array, similarly to <span class="function">{@link call_user_func_array()}</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.forward-static-call-array-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">function</span></dt>       <dd>        <p class="para">        The function or method to be called. This parameter may be an <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>,        with the name of the class, and the method, or a <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, with a function        name.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">parameter</span></dt>       <dd>        <p class="para">        One parameter, gathering all the method parameter in one array.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         Note that the parameters for <span class="function"><strong style="color:#CC7832">forward_static_call_array()</strong></span> are         not passed by reference.        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.forward-static-call-array-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the function result, or <strong><span>FALSE</span></strong> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.forward-static-call-array-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6191">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">forward_static_call_array()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">A<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span style="color: #9876AA">NAME&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'A'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$args&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;static::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$args</span><span style="color: #007700">).</span><span style="color: #DD0000">"&nbsp;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />class&nbsp;</span><span style="color: #9876AA">B&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">A<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span style="color: #9876AA">NAME&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'B'</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">self</span><span style="color: #007700">::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">forward_static_call_array</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'A'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'more'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'args'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">forward_static_call_array</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'other'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'args'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #9876AA">B</span><span style="color: #007700">::</span><span style="color: #9876AA">test</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /><br />function&nbsp;</span><span style="color: #9876AA">test</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$args&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"C&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$args</span><span style="color: #007700">).</span><span style="color: #DD0000">"&nbsp;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> B B more,args  C other,args </span></div>     </div>    </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.forward-static-call-array-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link forward_static_call()} - Call a static method</span></li>     <li class="member"><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>     <li class="member"><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>     <li class="member"><span class="function">{@link is_callable()} - 检测参数是否为合法的可调用结构</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.callback" class="link">callback</a> 类型的信息</li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.funchand.php">函数处理 函数</a></div></div>
 * @return mixed the function result, or false on error.*/
function forward_static_call_array ($function, array $parameters = null) {}

/**
*<div id="function.serialize" class="refentry">    <div class="refnamediv">     <h1 class="refname">serialize</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">serialize</span> &mdash; <span class="dc-title">      产生一个可存储的值的表示     </span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.serialize-unknown-seealsp">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>serialize</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>       )</div>      <p class="simpara">      <span class="function"><strong style="color:#CC7832">serialize()</strong></span> 返回字符串，此字符串包含了表示       <span class="parameter" style="color:#2EACF9">value</span> 的字节流，可以存储于任何地方。     </p>     <p class="simpara">      这有利于存储或传递 PHP 的值，同时不丢失其类型和结构。     </p>    <p class="simpara">     想要将已序列化的字符串变回 PHP 的值，可使用     <span class="function">{@link unserialize()}</span>。<span class="function"><strong style="color:#CC7832">serialize()</strong></span>     可处理除了 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>      之外的任何类型。甚至可以 <span class="function"><strong style="color:#CC7832">serialize()</strong></span> 那些包含了指向其自身引用的数组。你正      <span class="function"><strong style="color:#CC7832">serialize()</strong></span>  的数组／对象中的引用也将被存储。    </p>    <p class="simpara">    当序列化对象时，PHP 将试图在序列动作之前调用该对象的成员函数    <span class="function"><strong style="color:#CC7832">__sleep()</strong></span>。这样就允许对象在被序列化之前做任何清除操作。类似的，当使用     <span class="function">{@link unserialize()}</span> 恢复对象时， 将调用    <span class="function"><strong style="color:#CC7832">__wakeup()</strong></span> 成员函数。    </p>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:      <p class="para">      在 PHP 3 中，对象属性将被序列化，但是方法则会丢失。PHP 4       打破了此限制，可以同时存储属性和方法。请参见<a href="http://php.net/manual/zh/language.oop5.php" class="link">类与对象</a>中的<a href="http://php.net/manual/zh/language.oop5.serialization.php" class="link">序列化对象</a>部分获取更多信息。     </p>    </p></blockquote>     <p class="para">      <div class="example" id="example-6362">       <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">serialize()</strong></span> 示例</strong></p>       <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;$session_data&nbsp;是包含了当前用户&nbsp;session&nbsp;信息的多维数组。<br />//&nbsp;我们使用&nbsp;serialize()&nbsp;在请求结束之前将其存储到数据库中。<br /><br /></span><span style="color: #9876AA">$conn&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">odbc_connect&nbsp;</span><span style="color: #007700">(</span><span style="color: #DD0000">"webdb"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"php"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"chicken"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stmt&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">odbc_prepare&nbsp;</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"UPDATE&nbsp;sessions&nbsp;SET&nbsp;data&nbsp;=&nbsp;?&nbsp;WHERE&nbsp;id&nbsp;=&nbsp;?"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$sqldata&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(</span><span style="color: #9876AA">serialize</span><span style="color: #007700">(</span><span style="color: #9876AA">$session_data</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">$PHP_AUTH_USER</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">odbc_execute&nbsp;</span><span style="color: #007700">(</span><span style="color: #9876AA">$stmt</span><span style="color: #007700">,&nbsp;&amp;</span><span style="color: #9876AA">$sqldata</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$stmt&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">odbc_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"INSERT&nbsp;INTO&nbsp;sessions&nbsp;(id,&nbsp;data)&nbsp;VALUES(?,&nbsp;?)"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">odbc_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$stmt</span><span style="color: #007700">,&nbsp;&amp;</span><span style="color: #9876AA">$sqldata</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;出错&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>       </div>       </div>     </p>    <p class="para">     参见：<span class="function">{@link unserialize()}</span>。    </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return string a string containing a byte-stream representation of */
function serialize ($value) {}

/**
*<div id="function.unserialize" class="refentry">    <div class="refnamediv">     <h1 class="refname">unserialize</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">unserialize</span> &mdash; <span class="dc-title">      从已存储的表示中创建 PHP 的值     </span></p>     </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.unserialize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>unserialize</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$str</span></span>    )</div>      <p class="simpara">      <span class="function"><strong style="color:#CC7832">unserialize()</strong></span> 对单一的已序列化的变量进行操作，将其转换回       PHP 的值。     </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.unserialize-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">str</span></dt>       <dd>        <p class="para">        序列化后的字符串。       </p>       <p class="para">        若被解序列化的变量是一个对象，在成功地重新构造对象之后，PHP      会自动地试图去调用 <a href="http://php.net/manual/zh/language.oop5.magic.php#object.wakeup" class="link">__wakeup()</a>      成员函数（如果存在的话）。       </p>       <p class="para">        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:          <strong>unserialize_callback_func 指令</strong><br />         <p class="para">         如果在解序列化的时候需要实例化一个未定义类，则可以设置回调函数以供调用（以免得到的是不完整的       <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> “__PHP_Incomplete_Class”）。可通过       <var class="filename">php.ini</var>、<span class="function">{@link ini_set()}</span> 或 <var class="filename">.htaccess</var>        定义‘unserialize_callback_func’。每次实例化一个未定义类时它都会被调用。若要禁止这个特性，只需置空此设定。         </p>        </p></blockquote>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.unserialize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回的是转换之后的值，可为       <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>、<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>、<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>、<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      或 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>。      </p>   <p class="para">    如果传递的字符串不可解序列化，则返回 <strong><span>FALSE</span></strong>，并产生一个 <strong><span>E_NOTICE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.unserialize-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.2.0</td>        <td>         添加了 unserialize_callback_func 指令。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.unserialize-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6364">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">unserialize()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;这里，我们使用&nbsp;unserialize()&nbsp;装载来自数据库的&nbsp;$session_data&nbsp;数组中的会话数据。<br />//&nbsp;此例是描述&nbsp;serialize()&nbsp;的那个例子的补充。<br /><br /></span><span style="color: #9876AA">$conn&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">odbc_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"webdb"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"php"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"chicken"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stmt&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">odbc_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"SELECT&nbsp;data&nbsp;FROM&nbsp;sessions&nbsp;WHERE&nbsp;id&nbsp;=&nbsp;?"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$sqldata&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'PHP_AUTH_USER'</span><span style="color: #007700">]);<br />if&nbsp;(!</span><span style="color: #9876AA">odbc_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$stmt</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sqldata</span><span style="color: #007700">)&nbsp;||&nbsp;!</span><span style="color: #9876AA">odbc_fetch_into</span><span style="color: #007700">(</span><span style="color: #9876AA">$stmt</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$tmp</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;如果执行出错或返回错误，则初始化为空数组<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$session_data&nbsp;</span><span style="color: #007700">=&nbsp;array();<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;现在我们需要的是&nbsp;$tmp[0]&nbsp;中已序列化的数据。<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$session_data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">unserialize</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmp</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$session_data</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;出错，初始化为空数组<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$session_data&nbsp;</span><span style="color: #007700">=&nbsp;array();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    <div class="example" id="example-6365">     <p><strong>Example #2 unserialize_callback_func 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$serialized_object</span><span style="color: #007700">=</span><span style="color: #DD0000">'O:1:"a":1:{s:5:"value";s:3:"100";}'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;unserialize_callback_func&nbsp;从&nbsp;PHP&nbsp;4.2.0&nbsp;起可用<br /></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'unserialize_callback_func'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'mycallback'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;设置您的回调函数<br /><br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">mycallback</span><span style="color: #007700">(</span><span style="color: #9876AA">$classname</span><span style="color: #007700">)&nbsp;<br />{<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;只需包含含有类定义的文件<br />&nbsp;&nbsp;&nbsp;//&nbsp;$classname&nbsp;指出需要的是哪一个类<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.unserialize-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     如果反序列化了 <strong><span>FALSE</span></strong> 的值，或者在过程中发生了错误，都会返回 <strong><span>FALSE</span></strong>。     可以通过 <span class="parameter" style="color:#2EACF9">str</span> 和 <em>serialize(false)</em> 进行比较，或者捕捉 <strong><span>E_NOTICE</span></strong> 错误来判断这种特殊情况。    </p>   </div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.unserialize-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link serialize()} - 产生一个可存储的值的表示</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.oop5.autoload.php" class="link">自动加载对象</a></li>     <li class="member"><a href="http://php.net/manual/zh/var.configuration.php#unserialize-callback-func" class="link">unserialize_callback_func</a></li>     <li class="member"><a href="http://php.net/manual/zh/language.oop5.magic.php#object.wakeup" class="link">__wakeup()</a></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return mixed The converted value is returned, and can be a boolean,*/
function unserialize ($str, array $options = null) {}

/**
*<div id="function.var-dump" class="refentry">    <div class="refnamediv">     <h1 class="refname">var_dump</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">var_dump</span> &mdash; <span class="dc-title">打印变量的相关信息</span></p>     </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.var-dump-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>var_dump</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$expression</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$...</span></span>      ] )</div>      <p class="simpara">      此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。     </p>     <p class="simpara">    In PHP 5 all public, private and protected properties of objects will be    returned in the output.   </p>     <div class="tip"><strong class="tip">Tip</strong><p class="simpara">和直接将结果输出到浏览器一样，可使用<a href="http://php.net/manual/zh/book.outcontrol.php" class="link">输出控制函数</a>来捕获当前函数的输出，然后(例如)保存到一个 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 中。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.var-dump-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">expression</span></dt>       <dd>        <p class="para">        你要打印的变量。       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.var-dump-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.var-dump-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6368">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">var_dump()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$a&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"c"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> array(3) {   [0]=&gt;   int(1)   [1]=&gt;   int(2)   [2]=&gt;   array(3) {     [0]=&gt;     string(1) &quot;a&quot;     [1]=&gt;     string(1) &quot;b&quot;     [2]=&gt;     string(1) &quot;c&quot;   } } </span></div>     </div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$b&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">3.1</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> float(3.1) bool(true) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.var-dump-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link var_export()} - 输出或返回一个变量的字符串表示</span></li>     <li class="member"><span class="function">{@link print_r()} - 以易于理解的格式打印变量。</span></li>    </ul>   </span>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return void */
function var_dump ($expression, $_ = null) {}

/**
*<div id="function.var-export" class="refentry">    <div class="refnamediv">     <h1 class="refname">var_export</h1>     <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">var_export</span> &mdash; <span class="dc-title">输出或返回一个变量的字符串表示</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.var-export-unknown-seealsp">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>var_export</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$expression</span></span>       [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$return</span></span>      ] )</div>      <p class="simpara">       此函数返回关于传递给该函数的变量的结构信息，它和       <span class="function">{@link var_dump()}</span> 类似，不同的是其返回的表示是合法的       PHP 代码。     </p>     <p class="simpara">      您可以通过将函数的第二个参数设置为      <strong><span>TRUE</span></strong>，从而返回变量的表示。     </p>     <p class="simpara">      比较 <span class="function"><strong style="color:#CC7832">var_export()</strong></span> 和      <span class="function">{@link var_dump()}</span>.     </p>     <p class="para">      <div class="informalexample">       <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> &lt;pre&gt;<br /><span style="color: #9876AA">&lt;?php<br />$a&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;array&nbsp;(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"c"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_export&nbsp;</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;输出：<br />array&nbsp;(<br />&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;1,<br />&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;2,<br />&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;<br />&nbsp;&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'a',<br />&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'b',<br />&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'c',<br />&nbsp;&nbsp;),<br />)<br /><br /><br /></span><span style="color: #9876AA">$b&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">3.1</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$v&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">TRUE</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$v</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;输出：<br />3.1<br /><br /></span><span style="color: #9876AA">?&gt;<br /></span>&lt;/pre&gt;</span> </span></div>       </div>       </div>     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return mixed the variable representation when the return */
function var_export ($expression, $return = null) {}

/**
*<div id="function.debug-zval-dump" class="refentry">  <div class="refnamediv">   <h1 class="refname">debug_zval_dump</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">debug_zval_dump</span> &mdash; <span class="dc-title">Dumps a string representation of an internal zend value to output</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.debug-zval-dump-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>debug_zval_dump</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$variable</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$...</span></span>   ] )</div>    <p class="para rdfs-comment">    Dumps a string representation of an internal zend value to output.   </p>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.debug-zval-dump-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">variable</span></dt>       <dd>        <p class="para">        The variable being evaluated.       </p>      </dd>          </dl>    </span>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.debug-zval-dump-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.debug-zval-dump-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6348">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">debug_zval_dump()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$var1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'Hello&nbsp;World'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$var2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$var2&nbsp;</span><span style="color: #007700">=&amp;&nbsp;</span><span style="color: #9876AA">$var1</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">debug_zval_dump</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$var1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> &amp;string(11) &quot;Hello World&quot; refcount(3) </span></div>     </div>    </div>   </span>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <strong>Beware the <em>refcount</em></strong><br />    <p class="para">     The <em>refcount</em> value returned by this function is     non-obvious in certain circumstances. For example, a developer might     expect the above example to indicate a <em>refcount</em> of     <em>2</em>. The third reference is created when actually     calling <span class="function"><strong style="color:#CC7832">debug_zval_dump()</strong></span>.    </p>    <p class="para">     This behavior is further compounded when a variable is not passed to     <span class="function"><strong style="color:#CC7832">debug_zval_dump()</strong></span> by reference. To illustrate, consider     a slightly modified version of the above example:    </p>    <p class="para">     <div class="example" id="example-6349">            <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$var1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'Hello&nbsp;World'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$var2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$var2&nbsp;</span><span style="color: #007700">=&amp;&nbsp;</span><span style="color: #9876AA">$var1</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">debug_zval_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$var1</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;not&nbsp;passed&nbsp;by&nbsp;reference,&nbsp;this&nbsp;time<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>       <div class="example-contents"><p>以上例程会输出：</p></div>      <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(11) &quot;Hello World&quot; refcount(1) </span></div>      </div>     </div>    </p>    <p class="para">     Why <em>refcount(1)</em>? Because a copy of <em>$var1</em> is     being made, when the function is called.    </p>    <p class="para">     This function becomes even <em class="emphasis">more</em> confusing when a     variable with a <em>refcount</em> of <em>1</em> is     passed (by copy/value):    </p>    <p class="para">     <div class="example" id="example-6350">            <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$var1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'Hello&nbsp;World'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">debug_zval_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$var1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>       <div class="example-contents"><p>以上例程会输出：</p></div>      <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(11) &quot;Hello World&quot; refcount(2) </span></div>      </div>     </div>    </p>    <p class="para">     A <em>refcount</em> of <em>2</em>, here, is extremely     non-obvious. Especially considering the above examples. So what&#039;s     happening?    </p>    <p class="para">     When a variable has a single reference (as did <em>$var1</em>     before it was used as an argument to <span class="function"><strong style="color:#CC7832">debug_zval_dump()</strong></span>),     PHP&#039;s engine optimizes the manner in which it is passed to a function.     Internally, PHP treats <em>$var1</em> like a reference (in that     the <em>refcount</em> is increased for the scope of this     function), with the caveat that <em class="emphasis">if</em> the passed reference     happens to be written to, a copy is made, but only at the moment of     writing. This is known as &quot;copy on write.&quot;    </p>    <p class="para">     So, if <span class="function"><strong style="color:#CC7832">debug_zval_dump()</strong></span> happened to write to its sole     parameter (and it doesn&#039;t), then a copy would be made. Until then, the     parameter remains a reference, causing the <em>refcount</em> to     be incremented to <em>2</em> for the scope of the function call.    </p>   </p></blockquote>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.debug-zval-dump-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link var_dump()} - 打印变量的相关信息</span></li>     <li class="member"><span class="function">{@link debug_backtrace()} - 产生一条回溯跟踪(backtrace)</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.references.php" class="link">References Explained</a></li>     <li class="member"><a href="http://derickrethans.nl/php_references_article.php" class="link external">&raquo;&nbsp;References Explained (by Derick Rethans)</a></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return void */
function debug_zval_dump ($variable) {}

/**
*<div id="function.print-r" class="refentry">    <div class="refnamediv">     <h1 class="refname">print_r</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">print_r</span> &mdash; <span class="dc-title">      以易于理解的格式打印变量。     </span></p>     </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.print-r-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>print_r</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$expression</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$return</span><span class="initializer"> = <strong><span>FALSE</span></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">print_r()</strong></span> 以人类易读的格式显示一个变量的信息。   </p>   <p class="para">    <span class="function"><strong style="color:#CC7832">print_r()</strong></span>、    <span class="function">{@link var_dump()}</span>、    <span class="function">{@link var_export()}</span>     都会显示对象 protected 和 private 的属性。    Class 的静态属性（static） 则不会显示。   </p>  </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.print-r-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">expression</span></dt>       <dd>        <p class="para">        要打印的表达式。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">return</span></dt>       <dd>        <p class="para">        想要获取 <span class="function"><strong style="color:#CC7832">print_r()</strong></span> 输出的内容，使用 <span class="parameter" style="color:#2EACF9">return</span> 参数。        当此参数为 <strong><span>TRUE</span></strong>，<span class="function"><strong style="color:#CC7832">print_r()</strong></span> 会直接返回信息，而不是输出。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.print-r-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果输入的内容是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>、 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span> 或 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>，会直接输出值本身。    如果输入的内容是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，展示的格式会显示数组的键和包含的元素。<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 也类似。   </p>   <p class="para">    当 <span class="parameter" style="color:#2EACF9">return</span> 参数设置成 <strong><span>TRUE</span></strong>，本函数会返回 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 格式。否则返回 <strong><span>TRUE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.print-r-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <p class="para">当使用了<span class="parameter" style="color:#2EACF9">return</span> 参数时，本函数使用其内部输出缓冲，因此不能在 <span class="function">{@link ob_start()}</span> 回调函数的内部使用。</p></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.print-r-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6360">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">print_r()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> &lt;pre&gt;<br /><span style="color: #9876AA">&lt;?php<br />$a&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(</span><span style="color: #DD0000">'a'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'b'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'banana'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'c'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array&nbsp;(</span><span style="color: #DD0000">'x'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'y'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'z'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">print_r&nbsp;</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;<br /></span>&lt;/pre&gt;</span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> &lt;pre&gt; Array (     [a] =&gt; apple     [b] =&gt; banana     [c] =&gt; Array         (             [0] =&gt; x             [1] =&gt; y             [2] =&gt; z         ) ) &lt;/pre&gt; </span></div>     </div>    </div>   </span>   <p class="para">    <div class="example" id="example-6361">     <p><strong>Example #2 <span class="parameter" style="color:#2EACF9">return</span> 参数的例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$b&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(</span><span style="color: #DD0000">'m'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'monkey'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'foo'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'bar'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array&nbsp;(</span><span style="color: #DD0000">'x'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'y'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'z'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$results&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$results&nbsp;包含了&nbsp;print_r&nbsp;的输出<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.print-r-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ob_start()} - 打开输出控制缓冲</span></li>     <li class="member"><span class="function">{@link var_dump()} - 打印变量的相关信息</span></li>     <li class="member"><span class="function">{@link var_export()} - 输出或返回一个变量的字符串表示</span></li>    </ul>   </span>  </div>            <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return mixed If given a string, integer or float,*/
function print_r ($expression, $return = null) {}

/**
*<div id="function.memory-get-usage" class="refentry">  <div class="refnamediv">   <h1 class="refname">memory_get_usage</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">memory_get_usage</span> &mdash; <span class="dc-title">返回分配给 PHP 的内存量</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.memory-get-usage-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>memory_get_usage</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$real_usage</span><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    返回当前分配给你的 PHP 脚本的内存量，单位是字节（byte）。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.memory-get-usage-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">real_usage</span></dt>       <dd>        <p class="para">        如果设置为 <strong><span>TRUE</span></strong>，获取系统分配总的内存尺寸，包括未使用的页。如果未设置或者设置为 <strong><span>FALSE</span></strong>，仅仅报告实际使用的内存量。       </p>      </dd>          </dl>    </span>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">PHP 不跟踪非<em>emalloc()</em> 分配的内存</p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.memory-get-usage-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回内存量字节数。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.memory-get-usage-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.2.1</td>        <td>         不需要在编译时使用 <a href="http://php.net/manual/zh/ini.core.php#ini.memory-limit" class="link">--enable-memory-limit</a> 选项就能够使用这个函数。        </td>       </tr>        <tr>        <td>5.2.0</td>        <td>         增加了参数 <span class="parameter" style="color:#2EACF9">real_usage</span>。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.memory-get-usage-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-516">     <p><strong>Example #1 一个 <span class="function"><strong style="color:#CC7832">memory_get_usage()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//这只是个例子，下面的数字取决于你的系统<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">memory_get_usage</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;36640<br /><br /></span><span style="color: #9876AA">$a&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">4242</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">memory_get_usage</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;57960<br /><br /></span><span style="color: #007700">unset(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">memory_get_usage</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;36744<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.memory-get-usage-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link memory_get_peak_usage()} - 返回分配给 PHP 内存的峰值</span></li>     <li class="member"><a href="http://php.net/manual/zh/ini.core.php#ini.memory-limit" class="link">memory_limit</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return int the memory amount in bytes.*/
function memory_get_usage ($real_usage = null) {}

/**
*<div id="function.memory-get-peak-usage" class="refentry">  <div class="refnamediv">   <h1 class="refname">memory_get_peak_usage</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">memory_get_peak_usage</span> &mdash; <span class="dc-title">返回分配给 PHP 内存的峰值</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.memory-get-peak-usage-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>memory_get_peak_usage</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$real_usage</span><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    返回分配给你的 PHP 脚本的内存峰值字节数。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.memory-get-peak-usage-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">real_usage</span></dt>       <dd>        <p class="para">        如果设置为 <strong><span>TRUE</span></strong> 可以获取从系统分配到的真实内存尺寸。        如果未设置，或者设置为 <strong><span>FALSE</span></strong>，仅会报告 <em>emalloc()</em> 使用的内存。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.memory-get-peak-usage-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回内存峰值的字节数。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.memory-get-peak-usage-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.2.1</td>        <td>         使用此函数无需在编译时加上 <a href="http://php.net/manual/zh/ini.core.php#ini.memory-limit" class="link">--enable-memory-limit</a>  选项。        </td>       </tr>        <tr>        <td>5.2.0</td>        <td>         添加参数 <span class="parameter" style="color:#2EACF9">real_usage</span>。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.memory-get-peak-usage-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link memory_get_usage()} - 返回分配给 PHP 的内存量</span></li>     <li class="member"><a href="http://php.net/manual/zh/ini.core.php#ini.memory-limit" class="link">memory_limit</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return int the memory peak in bytes.*/
function memory_get_peak_usage ($real_usage = null) {}

/**
*<div id="function.register-shutdown-function" class="refentry">  <div class="refnamediv">   <h1 class="refname">register_shutdown_function</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">register_shutdown_function</span> &mdash; <span class="dc-title">注册一个会在php中止时执行的函数</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.register-shutdown-function-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>register_shutdown_function</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#2EACF9">$callback</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$parameter</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$...</span></span>   ]] )</div>    <p class="para rdfs-comment">   注册一个 <span class="parameter" style="color:#2EACF9">callback</span> ，它会在脚本执行完成或者 <span class="function">{@link exit()}</span> 后被调用。   </p>   <p class="para">    可以多次调用 <span class="function"><strong style="color:#CC7832">register_shutdown_function()</strong></span> ，这些被注册的回调会按照他们注册时的顺序被依次调用。    如果你在注册的方法内部调用 <span class="function">{@link exit()}</span>， 那么所有处理会被中止，并且其他注册的中止回调也不会再被调用。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.register-shutdown-function-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">callback</span></dt>       <dd>        <p class="para">        待注册的中止回调       </p>       <p class="para">        中止回调是作为请求的一部分被执行的，因此可以在它们中进行输出或者读取输出缓冲区。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">parameter</span></dt>       <dd>        <p class="para">        可以通过传入额外的参数来将参数传给中止函数       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">...</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.register-shutdown-function-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.register-shutdown-function-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果传入的callback不是可调用的，那么将会产生一个 <strong><span>E_WARNING</span></strong>    级别的错误。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.register-shutdown-function-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6203">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">register_shutdown_function()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">shutdown</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;This&nbsp;is&nbsp;our&nbsp;shutdown&nbsp;function,&nbsp;in&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;here&nbsp;we&nbsp;can&nbsp;do&nbsp;any&nbsp;last&nbsp;operations<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;before&nbsp;the&nbsp;script&nbsp;is&nbsp;complete.<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'Script&nbsp;executed&nbsp;with&nbsp;success'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">register_shutdown_function</span><span style="color: #007700">(</span><span style="color: #DD0000">'shutdown'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.register-shutdown-function-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     在某些web server（如Apache）上，可以在中止函数内对脚本的工作目录进行修改。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果进程被信号SIGTERM或SIGKILL杀死，那么中止函数将不会被调用。尽管你无法中断SIGKILL，但你可以通过<span class="function">{@link pcntl_signal()}</span> 来捕获SIGTERM，通过在其中调用<span class="function">{@link exit()}</span>来进行一个正常的中止。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.register-shutdown-function-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/ini.core.php#ini.auto-append-file" class="link">auto_append_file</a></li>     <li class="member"><span class="function">{@link exit()} - 输出一个消息并且退出当前脚本</span></li>     <li class="member"><a href="http://php.net/manual/zh/features.connection-handling.php" class="link">连接处理</a> 章节</li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.funchand.php">函数处理 函数</a></div></div>
 * @return void */
function register_shutdown_function ($function, $parameter = null, $_ = null) {}

/**
*<div id="function.register-tick-function" class="refentry">  <div class="refnamediv">   <h1 class="refname">register_tick_function</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">register_tick_function</span> &mdash; <span class="dc-title">Register a function for execution on each tick</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.register-tick-function-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>register_tick_function</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#2EACF9">$function</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$arg</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$...</span></span>   ]] )</div>    <p class="simpara">    Registers the given <span class="parameter" style="color:#2EACF9">function</span> to be executed when a    <a href="http://php.net/manual/zh/control-structures.declare.php#control-structures.declare.ticks" class="link">tick</a> is called.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.register-tick-function-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">function</span></dt>       <dd>        <p class="para">        The function name as a string, or an array consisting of an object and        a method.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">arg</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">...</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.register-tick-function-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.register-tick-function-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6204">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">register_tick_function()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">declare(</span><span style="color: #9876AA">ticks</span><span style="color: #007700">=</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;using&nbsp;a&nbsp;function&nbsp;as&nbsp;the&nbsp;callback<br /></span><span style="color: #9876AA">register_tick_function</span><span style="color: #007700">(</span><span style="color: #DD0000">'my_function'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;using&nbsp;an&nbsp;object-&gt;method<br /></span><span style="color: #9876AA">$object&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">my_class</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">register_tick_function</span><span style="color: #007700">(array(&amp;</span><span style="color: #9876AA">$object</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'my_method'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.register-tick-function-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         Ticks are now supported on threaded web server modules.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.register-tick-function-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     <span class="function"><strong style="color:#CC7832">register_tick_function()</strong></span> should not be used with     threaded web server modules with PHP 5.2 or lower.    </p>   </div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.register-tick-function-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/control-structures.declare.php" class="link">declare</a></li>     <li class="member"><span class="function">{@link unregister_tick_function()} - De-register a function for execution on each tick</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.funchand.php">函数处理 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function register_tick_function ($function, $arg = null, $_ = null) {}

/**
*<div id="function.unregister-tick-function" class="refentry">  <div class="refnamediv">   <h1 class="refname">unregister_tick_function</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">unregister_tick_function</span> &mdash; <span class="dc-title">De-register a function for execution on each tick</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.unregister-tick-function-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>unregister_tick_function</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$function_name</span></span>    )</div>    <p class="simpara">    De-registers the function named by <span class="parameter" style="color:#2EACF9">function_name</span> so it is    no longer executed when a <a href="http://php.net/manual/zh/control-structures.declare.php" class="link">tick</a> is    called.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.unregister-tick-function-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">function_name</span></dt>       <dd>        <p class="para">        The function name, as a string.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.unregister-tick-function-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.unregister-tick-function-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link register_tick_function()} - Register a function for execution on each tick</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.funchand.php">函数处理 函数</a></div></div>
 * @return void */
function unregister_tick_function ($function) {}

/**
*<div id="function.highlight-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">highlight_file</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">highlight_file</span> &mdash; <span class="dc-title">语法高亮一个文件</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.highlight-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>highlight_file</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$return</span><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    使用PHP内置的语法高亮器所定义的颜色，打印输出或者返回 <span class="parameter" style="color:#2EACF9">filename</span> 文件中语法高亮版本的代码。   </p>   <p class="para">    许多服务器配置了自动高亮 <em class="emphasis">phps</em> 扩展的文件。    比如，访问 <var class="filename">example.phps</var> 会显示语法高亮后的文件。    添加以下一行代码到 <var class="filename">httpd.conf</var> 使此生效：   </p>   <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="descriptioncode"><span>AddType application/x-httpd-php-source .phps</span> </div>   </div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.highlight-file-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        欲高亮文件的路径。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">return</span></dt>       <dd>        <p class="para">        设置该参数为 <strong><span>TRUE</span></strong> 使函数返回高亮后的代码。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.highlight-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">      如果 <span class="parameter" style="color:#2EACF9">return</span> 设置为 <strong><span>TRUE</span></strong>，高亮后的代码不会被打印输出，而是以字符串的形式返回。      高亮成功返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.highlight-file-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.2.1</td>        <td>        该函数现在也受 <a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode" class="link">safe_mode</a> 和 <a href="http://php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a> 的限制和影响。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.highlight-file-notes">   <h3 class="title">注释</h3>   <div class="caution"><strong class="caution">Caution</strong>    <p class="para">     应当注意在使用 <span class="function"><strong style="color:#CC7832">highlight_file()</strong></span> 时，确认没有在不经意间泄漏敏感信息，类似密码或者其他任何具有潜在安全风险的信息。    </p>   </div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <p class="para">当使用了<span class="parameter" style="color:#2EACF9">return</span> 参数时，本函数使用其内部输出缓冲，因此不能在 <span class="function">{@link ob_start()}</span> 回调函数的内部使用。</p></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.highlight-file-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link highlight_string()} - 字符串的语法高亮</span></li>         <li class="member"><a href="http://php.net/manual/zh/misc.configuration.php#ini.syntax-highlighting" class="link">Highlighting INI 指令</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return string|bool If return is set to true, returns the highlighted*/
function highlight_file ($filename, $return = null) {}

/**
*<div id="function.show-source" class="refentry">  <div class="refnamediv">   <h1 class="refname">show_source</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">show_source</span> &mdash; <span class="dc-title">别名 <span class="function">{@link highlight_file()}</span></span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.show-source-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link highlight_file()}</span>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
*/
function show_source ($file_name, $return) {}

/**
*<div id="function.highlight-string" class="refentry">  <div class="refnamediv">   <h1 class="refname">highlight_string</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">highlight_string</span> &mdash; <span class="dc-title">字符串的语法高亮</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.highlight-string-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>highlight_string</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$str</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$return</span><span class="initializer"> = false</span></span>   ] )</div>    <p class="simpara">    使用PHP内置的语法高亮器所定义的颜色，打印输出或者返回输出或者返回语法高亮版本的PHP代码。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.highlight-string-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">str</span></dt>       <dd>        <p class="para">        需要高亮的PHP代码，应当包含开始标签。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">return</span></dt>       <dd>        <p class="para">        设置该参数为 <strong><span>TRUE</span></strong> 使函数返回高亮后的代码。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.highlight-string-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">      如果 <span class="parameter" style="color:#2EACF9">return</span> 设置为 <strong><span>TRUE</span></strong>，高亮后的代码不会被打印输出，而是以字符串的形式返回。      高亮成功返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.highlight-string-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4536">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">highlight_string()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />highlight_string</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;?php&nbsp;phpinfo();&nbsp;?&gt;'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> &lt;code&gt;&lt;span style=&quot;color: #000000&quot;&gt; &lt;span style=&quot;color: #9876AA&quot;&gt;&amp;lt;?php phpinfo&lt;/span&gt;&lt;span style=&quot;color: #007700&quot;&gt;(); &lt;/span&gt;&lt;span style=&quot;color: #9876AA&quot;&gt;?&amp;gt;&lt;/span&gt; &lt;/span&gt; &lt;/code&gt; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.highlight-string-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <p class="para">当使用了<span class="parameter" style="color:#2EACF9">return</span> 参数时，本函数使用其内部输出缓冲，因此不能在 <span class="function">{@link ob_start()}</span> 回调函数的内部使用。</p></p></blockquote>   <p class="para">    产生的 HTML 标记可能会有更改。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.highlight-string-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link highlight_file()} - 语法高亮一个文件</span></li>     <li class="member"><a href="http://php.net/manual/zh/misc.configuration.php#ini.syntax-highlighting" class="link">高亮 INI 指令</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return string|bool If return is set to true, returns the highlighted*/
function highlight_string ($str, $return = null) {}

/**
*<div id="function.php-strip-whitespace" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_strip_whitespace</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">php_strip_whitespace</span> &mdash; <span class="dc-title">返回删除注释和空格后的PHP源码</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.php-strip-whitespace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>php_strip_whitespace</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    )</div>    <p class="para rdfs-comment">    返回删除注释和空格后 <span class="parameter" style="color:#2EACF9">filename</span> 的PHP源码。这对实际代码数量和注释数量的对比很有用。    此函数与 <a href="http://php.net/manual/zh/features.commandline.php" class="link">命令行</a> 下执行 <strong class="command">php -w</strong> 相似。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.php-strip-whitespace-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        PHP文件的路径。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.php-strip-whitespace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    在成功时返回过滤后的代码，或者在失败时返回空字符串。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     此函数在PHP 5.0.1后以所述方式工作。之前它仅会返回一个空字符串。关于更多此BUG的信息与其行为，详见BUG报告 <a href="http://bugs.php.net/29606" class="link external">&raquo;&nbsp;#29606</a>。    </p>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.php-strip-whitespace-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4540">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">php_strip_whitespace()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;PHP&nbsp;comment&nbsp;here<br /><br />//<br />&nbsp;*&nbsp;Another&nbsp;PHP&nbsp;comment<br />&nbsp;<br /><br /></span><span style="color: #007700">echo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">php_strip_whitespace</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;Newlines&nbsp;are&nbsp;considered&nbsp;whitespace,&nbsp;and&nbsp;are&nbsp;removed&nbsp;too:<br /></span><span style="color: #9876AA">do_nothing</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> &lt;?php  echo php_strip_whitespace(__FILE__); do_nothing(); ?&gt; </span></div>     </div>     <div class="example-contents"><p>      可以注意到PHP的注释已不存在，成为第一个echo语句前的换行和空格。     </p></div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return string The stripped source code will be returned on success, or an empty string*/
function php_strip_whitespace ($filename) {}

/**
*<div id="function.ini-get" class="refentry">  <div class="refnamediv">   <h1 class="refname">ini_get</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ini_get</span> &mdash; <span class="dc-title">获取一个配置选项的值</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ini-get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>ini_get</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$varname</span></span>    )</div>    <p class="para rdfs-comment">    成功时返回配置选项的值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ini-get-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">varname</span></dt>       <dd>        <p class="para">        配置选项名称。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ini-get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功是返回配置选项值的字符串，<em>null</em> 的值则返回空字符串。如果配置选项不存在，将会返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ini-get-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-513">     <p><strong>Example #1 一些 <span class="function"><strong style="color:#CC7832">ini_get()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//<br />我们的&nbsp;php.ini&nbsp;包含了以下的设置：<br /><br />display_errors&nbsp;=&nbsp;On<br />register_globals&nbsp;=&nbsp;Off<br />post_max_size&nbsp;=&nbsp;8M<br /><br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'display_errors&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'register_globals&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'register_globals'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'post_max_size&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'post_max_size'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'post_max_size+1&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;(</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'post_max_size'</span><span style="color: #007700">)+</span><span style="color: #9876AA">1</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'post_max_size&nbsp;in&nbsp;bytes&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">return_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'post_max_size'</span><span style="color: #007700">));<br /><br />function&nbsp;</span><span style="color: #9876AA">return_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">$val</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$val&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$val</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$last&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strtolower</span><span style="color: #007700">(</span><span style="color: #9876AA">$val</span><span style="color: #007700">[</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$val</span><span style="color: #007700">)-</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;switch(</span><span style="color: #9876AA">$last</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;自&nbsp;PHP&nbsp;5.1.0&nbsp;起可以使用修饰符&nbsp;'G'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">case&nbsp;</span><span style="color: #DD0000">'g'</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$val&nbsp;</span><span style="color: #007700">*=&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #DD0000">'m'</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$val&nbsp;</span><span style="color: #007700">*=&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #DD0000">'k'</span><span style="color: #007700">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$val&nbsp;</span><span style="color: #007700">*=&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$val</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span>  display_errors = 1 register_globals = 0 post_max_size = 8M post_max_size+1 = 9 post_max_size in bytes = 8388608  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.ini-get-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <strong>当查询一个 boolean 值</strong><br />    <p class="para">     一个 <em>off</em> 的 boolean ini 值将会以空字符串或者 &quot;0&quot; 返回；<em>on</em> 的 ini 值会以 &quot;1&quot; 返回。     此函数也会返回 INI 值的文字字符串。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <strong>当查询一个内存尺寸的值</strong><br />    <p class="para">     许多内存尺寸的 ini 值，类似 <a href="http://php.net/manual/zh/ini.core.php#ini.upload-max-filesize" class="link">upload_max_filesize</a> 是以简写表示法储存在 <var class="filename">php.ini</var> 文件里。     <span class="function"><strong style="color:#CC7832">ini_get()</strong></span> 会返回 <var class="filename">php.ini</var> 文件中储存的确切字符串，而<em class="emphasis">不是</em>它的等量 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>。     尝试对这些值使用常规算术运算函数将不会得到预期的结果。     以上例子显示了转换简写表示法为字节的一种方式，和 PHP 源码所做的比较像。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">ini_get()</strong></span> 无法读取 &quot;array&quot; 的 ini 选项，例如  pdo.dsn.*，在这个例子中会返回  <strong><span>FALSE</span></strong> 。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.ini-get-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         当配置项不存在，之前会返回空字符串，现在会返回 <strong><span>FALSE</span></strong>。        </td>       </tr>       </tbody>         </table>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ini-get-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link get_cfg_var()} - 获取 PHP 配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>     <li class="member"><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string the value of the configuration option as a string on success, or*/
function ini_get ($varname) {}

/**
*<div id="function.ini-get-all" class="refentry">  <div class="refnamediv">   <h1 class="refname">ini_get_all</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ini_get_all</span> &mdash; <span class="dc-title">获取所有配置选项</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ini-get-all-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>ini_get_all</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$extension</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$details</span><span class="initializer"> = true</span></span>   ]] )</div>    <p class="para rdfs-comment">    获取所有已注册的配置选项   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ini-get-all-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">extension</span></dt>       <dd>        <p class="para">        可选的扩展名称。如果设置了，此函数仅仅返回指定该扩展的选项。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">details</span></dt>       <dd>        <p class="para">        获取详细设置或者仅仅是每个设置的当前值。 默认是 <strong><span>TRUE</span></strong>（获取详细信息）。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ini-get-all-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个关联数组，指令名称是数组的键。   </p>   <p class="para">    当 <span class="parameter" style="color:#2EACF9">details</span> 为 <strong><span>TRUE</span></strong>（默认），数组会包含 <em>global_value</em>（<var class="filename">php.ini</var> 中的设置）、<em>local_value</em>（可能是 <span class="function">{@link ini_set()}</span> 或 <var class="filename">.htaccess</var> 中的设置） 以及 <em>access</em>（访问级别）。   </p>   <p class="para">    当 <span class="parameter" style="color:#2EACF9">details</span> 为 <strong><span>FALSE</span></strong>，这个值会是选项的当前值。   </p>   <p class="para">    参见<a href="http://php.net/manual/zh/configuration.changes.modes.php" class="link">手册章节</a>中访问级别含义的信息。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     指令可以有多个访问级别，这也是为什么 <em>access</em> 会显示适当的位掩码。    </p>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.ini-get-all-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">ini_get_all()</strong></span> 忽略 &quot;array&quot; 的 ini 选项，例如     pdo.dsn.*。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.ini-get-all-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         增加参数 <span class="parameter" style="color:#2EACF9">details</span>。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ini-get-all-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-511">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">ini_get_all()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">(</span><span style="color: #DD0000">"pcre"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [pcre.backtrack_limit] =&gt; Array         (             [global_value] =&gt; 100000             [local_value] =&gt; 100000             [access] =&gt; 7         )      [pcre.recursion_limit] =&gt; Array         (             [global_value] =&gt; 100000             [local_value] =&gt; 100000             [access] =&gt; 7         )  ) Array (     [allow_call_time_pass_reference] =&gt; Array         (             [global_value] =&gt; 0             [local_value] =&gt; 0             [access] =&gt; 6         )      [allow_url_fopen] =&gt; Array         (             [global_value] =&gt; 1             [local_value] =&gt; 1             [access] =&gt; 4         )      ...  ) </span></div>     </div>    </div>    <div class="example" id="example-512">     <p><strong>Example #2 禁用 <span class="parameter" style="color:#2EACF9">details</span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">(</span><span style="color: #DD0000">"pcre"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Added&nbsp;in&nbsp;PHP&nbsp;5.3.0<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Added&nbsp;in&nbsp;PHP&nbsp;5.3.0<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [pcre.backtrack_limit] =&gt; 100000     [pcre.recursion_limit] =&gt; 100000 ) Array (     [allow_call_time_pass_reference] =&gt; 0     [allow_url_fopen] =&gt; 1     ... ) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ini-get-all-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/configuration.changes.php" class="xref">怎样修改配置设定</a></li>     <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>     <li class="member"><span class="function">{@link get_loaded_extensions()} - 返回所有编译并加载模块名的 array</span></li>     <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>     <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionExtension::getINIEntries()} - 获取ini配置</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return array an associative array with directive name as the array key.*/
function ini_get_all ($extension = null, $details = null) {}

/**
*<div id="function.ini-set" class="refentry">  <div class="refnamediv">   <h1 class="refname">ini_set</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ini_set</span> &mdash; <span class="dc-title">为一个配置选项设置值</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ini-set-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>ini_set</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$varname</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$newvalue</span></span>    )</div>    <p class="para rdfs-comment">    设置指定配置选项的值。这个选项会在脚本运行时保持新的值，并在脚本结束时恢复。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ini-set-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">varname</span></dt>       <dd>        <p class="para">       </p>       <p class="para">        不是所有有效的选项都能够用 <span class="function"><strong style="color:#CC7832">ini_set()</strong></span> 来改变的。        这里有个有效选项的清单<a href="http://php.net/manual/zh/ini.list.php" class="link">附录</a>。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">newvalue</span></dt>       <dd>        <p class="para">        选项新的值。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ini-set-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回旧的值，失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ini-set-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-515">     <p><strong>Example #1 设置一个 ini 选项</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">);<br /><br />if&nbsp;(!</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'1'</span><span style="color: #007700">);<br />}<br /><br />echo&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ini-set-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link get_cfg_var()} - 获取 PHP 配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>     <li class="member"><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>     <li class="member">      <a href="http://php.net/manual/zh/configuration.changes.php" class="link">如何改变配置选项</a>     </li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string|bool the old value on success, false on failure.*/
function ini_set ($varname, $newvalue) {}

/**
*<div id="function.ini-alter" class="refentry">  <div class="refnamediv">   <h1 class="refname">ini_alter</h1>    <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ini_alter</span> &mdash; <span class="dc-title">别名 <span class="function">{@link ini_set()}</span></span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ini-alter-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名： <span class="function">{@link ini_set()}</span>.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
*/
function ini_alter ($varname, $newvalue) {}

/**
*<div id="function.ini-restore" class="refentry">  <div class="refnamediv">   <h1 class="refname">ini_restore</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ini_restore</span> &mdash; <span class="dc-title">恢复配置选项的值</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ini-restore-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>ini_restore</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$varname</span></span>    )</div>    <p class="para rdfs-comment">    恢复指定的配置选项到它的原始值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ini-restore-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">varname</span></dt>       <dd>        <p class="para">        配置选项名称。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ini-restore-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ini-restore-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-514">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">ini_restore()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$setting&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'y2k_compliance'</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">'Current&nbsp;value&nbsp;for&nbsp;\''&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$setting&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">'\':&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$setting</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #9876AA">$setting</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$setting</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #9876AA">0&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">'New&nbsp;value&nbsp;for&nbsp;\''&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$setting&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">'\':&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$setting</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">ini_restore</span><span style="color: #007700">(</span><span style="color: #9876AA">$setting</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">'Original&nbsp;value&nbsp;for&nbsp;\''&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$setting&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">'\':&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$setting</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Current value for &#039;y2k_compliance&#039;: 1 New value for &#039;y2k_compliance&#039;: 0 Original value for &#039;y2k_compliance&#039;: 1 </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ini-restore-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>     <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return void */
function ini_restore ($varname) {}

/**
*<div id="function.get-include-path" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_include_path</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_include_path</span> &mdash; <span class="dc-title">获取当前的 include_path 配置选项</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-include-path-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>get_include_path</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    获取当前 <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>    配置选项的值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-include-path-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回字符串的路径。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.get-include-path-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-497">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">get_include_path()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;或使用&nbsp;ini_get()<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'include_path'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-include-path-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>     <li class="member"><span class="function">{@link restore_include_path()} - 还原 include_path 配置选项的值</span></li>     <li class="member"><span class="function">{@link set_include_path()} - 设置 include_path 配置选项</span></li>     <li class="member"><span class="function">{@link include} - include</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string the path, as a string.*/
function get_include_path () {}

/**
*<div id="function.set-include-path" class="refentry">  <div class="refnamediv">   <h1 class="refname">set_include_path</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">set_include_path</span> &mdash; <span class="dc-title">设置 include_path 配置选项</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.set-include-path-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>set_include_path</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$new_include_path</span></span>    )</div>    <p class="para rdfs-comment">    为当前脚本设置 <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>    运行时的配置选项。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.set-include-path-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">new_include_path</span></dt>       <dd>        <p class="para">        <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 新的值。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.set-include-path-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回旧的 <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.set-include-path-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-531">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">set_include_path()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />set_include_path</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/lib/pear'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;或使用&nbsp;ini_set<br /></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'include_path'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'/usr/lib/pear'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    <div class="example" id="example-532">     <p><strong>Example #2 添加到include path</strong></p>     <div class="example-contents"><p>      利用常量 <strong><span>PATH_SEPARATOR</span></strong> 可跨平台扩展 include path。     </p></div>     <div class="example-contents"><p>      这个例子中我们把 <var class="filename">/usr/lib/pear</var> 添加到了      现有的 <em>include_path</em> 的尾部。     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$path&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'/usr/lib/pear'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">set_include_path</span><span style="color: #007700">(</span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #9876AA">PATH_SEPARATOR&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.set-include-path-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>     <li class="member"><span class="function">{@link get_include_path()} - 获取当前的 include_path 配置选项</span></li>     <li class="member"><span class="function">{@link restore_include_path()} - 还原 include_path 配置选项的值</span></li>     <li class="member"><span class="function">{@link include} - include</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string|bool the old include_path on*/
function set_include_path ($new_include_path) {}

/**
*<div id="function.restore-include-path" class="refentry">  <div class="refnamediv">   <h1 class="refname">restore_include_path</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">restore_include_path</span> &mdash; <span class="dc-title">还原 include_path 配置选项的值</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.restore-include-path-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>restore_include_path</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    还原到 <var class="filename">php.ini</var> 中设置的 <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 主值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.restore-include-path-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.restore-include-path-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-530">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">restore_include_path()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;.:/usr/local/lib/php<br /><br /></span><span style="color: #9876AA">set_include_path</span><span style="color: #007700">(</span><span style="color: #DD0000">'/inc'</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;/inc<br /><br /></span><span style="color: #9876AA">restore_include_path</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;或使用&nbsp;ini_restore<br /></span><span style="color: #9876AA">ini_restore</span><span style="color: #007700">(</span><span style="color: #DD0000">'include_path'</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;.:/usr/local/lib/php<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.restore-include-path-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>     <li class="member"><span class="function">{@link get_include_path()} - 获取当前的 include_path 配置选项</span></li>     <li class="member"><span class="function">{@link set_include_path()} - 设置 include_path 配置选项</span></li>     <li class="member"><span class="function">{@link include} - include</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return void */
function restore_include_path () {}

/**
*<div id="function.setcookie" class="refentry">  <div class="refnamediv">   <h1 class="refname">setcookie</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">setcookie</span> &mdash; <span class="dc-title">发送 Cookie</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.setcookie-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>setcookie</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$name</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$value</span><span class="initializer"> = &quot;&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$expire</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span><span class="initializer"> = &quot;&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$domain</span><span class="initializer"> = &quot;&quot;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$secure</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$httponly</span><span class="initializer"> = false</span></span>   ]]]]]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 定义了 Cookie，会和剩下的 HTTP 头一起发送给客户端。    和其他 HTTP 头一样，必须在脚本产生任意输出<em class="emphasis">之前</em>发送 Cookie（由于协议的限制）。    请在产生任何输出之前（包括 <em>&lt;html&gt;</em> 和 <em>&lt;head&gt;</em> 或者空格）调用本函数。   </p>   <p class="para">    一旦设置 Cookie 后，下次打开页面时可以使用 <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.cookies.php" class="classname">$_COOKIE</a></var></var> 读取。    Cookie 值同样也存在于 <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.request.php" class="classname">$_REQUEST</a></var></var>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.setcookie-parameters">   <h3 class="title">参数</h3>   <span>    <a href="http://www.faqs.org/rfcs/rfc6265" class="link external">&raquo;&nbsp;RFC 6265</a> 提供了 <span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 每个参数的参考标准。    <dl>            <dt> <span class="parameter" style="color:#2EACF9">name</span></dt>       <dd>        <p class="para">        Cookie 名称。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">value</span></dt>       <dd>        <p class="para">        Cookie 值。        这个值储存于用户的电脑里，请勿储存敏感信息。        比如 <span class="parameter" style="color:#2EACF9">name</span> 是 <em>&#039;cookiename&#039;</em>，        可通过 <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.cookies.php" class="classname">$_COOKIE['cookiename']</a></var></var> 获取它的值。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">expire</span></dt>       <dd>        <p class="para">        Cookie 的过期时间。        这是个 Unix 时间戳，即 Unix 纪元以来（格林威治时间 1970 年 1 月 1 日 00:00:00）的秒数。        也就是说，基本可以用 <span class="function">{@link time()}</span> 函数的结果加上希望过期的秒数。        或者也可以用 <span class="function">{@link mktime()}</span>。        <em>time()+60*60*24*30</em> 就是设置 Cookie 30 天后过期。        如果设置成零，或者忽略参数， Cookie 会在会话结束时过期（也就是关掉浏览器时）。       </p>       <p class="para">        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:          <p class="para">           你可能注意到了，<span class="parameter" style="color:#2EACF9">expire</span> 使用 Unix 时间戳而非 <em>Wdy, DD-Mon-YYYY          HH:MM:SS GMT</em> 这样的日期格式，是因为 PHP 内部作了转换。         </p>        </p></blockquote>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">path</span></dt>       <dd>        <p class="para">        Cookie 有效的服务器路径。        设置成 <em>&#039;/&#039;</em> 时，Cookie 对整个域名 <span class="parameter" style="color:#2EACF9">domain</span> 有效。                如果设置成 <em>&#039;/foo/&#039;</em>， Cookie 仅仅对 <span class="parameter" style="color:#2EACF9">domain</span> 中 <em>/foo/</em> 目录及其子目录有效（比如 <em>/foo/bar/</em>）。        默认值是设置 Cookie 时的当前目录。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">domain</span></dt>       <dd>        <p class="para">        Cookie 的有效域名/子域名。        设置成子域名（例如 <em>&#039;www.example.com&#039;</em>），会使 Cookie 对这个子域名和它的三级域名有效（例如 w2.www.example.com）。        要让 Cookie 对整个域名有效（包括它的全部子域名），只要设置成域名就可以了（这个例子里是 <em>&#039;example.com&#039;</em>）。       </p>       <p class="para">        旧版浏览器仍然在使用废弃的 <a href="http://www.faqs.org/rfcs/rfc2109" class="link external">&raquo;&nbsp;RFC 2109</a>，        需要一个前置的点 <em>.</em> 来匹配所有子域名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">secure</span></dt>       <dd>        <p class="para">        设置这个 Cookie 是否仅仅通过安全的 HTTPS 连接传给客户端。        设置成 <strong><span>TRUE</span></strong> 时，只有安全连接存在时才会设置 Cookie。        如果是在服务器端处理这个需求，程序员需要仅仅在安全连接上发送此类 Cookie        （通过 <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.server.php" class="classname">$_SERVER["HTTPS"]</a></var></var> 判断）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">httponly</span></dt>       <dd>        <p class="para">        设置成 <strong><span>TRUE</span></strong>，Cookie 仅可通过 HTTP 协议访问。        这意思就是 Cookie 无法通过类似 JavaScript 这样的脚本语言访问。        要有效减少 XSS 攻击时的身份窃取行为，可建议用此设置（虽然不是所有浏览器都支持），不过这个说法经常有争议。        PHP 5.2.0 中添加。        <strong><span>TRUE</span></strong> 或 <strong><span>FALSE</span></strong>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.setcookie-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果在调用本函数以前就产生了输出，<span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 会调用失败并返回 <strong><span>FALSE</span></strong>。    如果 <span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 成功运行，返回 <strong><span>TRUE</span></strong>。当然，它的意思并非用户是否已接受 Cookie。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.setcookie-examples">   <h3 class="title">范例</h3>   <span>    发送 Cookie 的几个例子：    <div class="example" id="header-register-callback.example.basic">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 发送例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$value&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'something&nbsp;from&nbsp;somewhere'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">time</span><span style="color: #007700">()+</span><span style="color: #9876AA">3600</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;1&nbsp;小时过期&nbsp;&nbsp;<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">time</span><span style="color: #007700">()+</span><span style="color: #9876AA">3600</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"/~rasmus/"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    注意：在发送 Cookie 时，值的部分会被自动 urlencode 编码。收到 Cookie 时，会自动解码，并赋值到可变的 Cookie 名称上。    如果不想被编码，可以使用 <span class="function">{@link setrawcookie()}</span> 代替——如果你的 PHP 版本是 5 及以上。    在脚本里查看我们的测试 Cookie 的内容，使用下面的一个例子：   </p>   <p class="para">    <div class="informalexample">     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;打印一个单独的&nbsp;Cookie<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">];<br /><br /></span><span style="color: #FF8000">//&nbsp;&nbsp;debug/test&nbsp;查看所有&nbsp;Cookie&nbsp;的另一种方式<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$_COOKIE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-5499">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 删除例子</strong></p>     <div class="example-contents"><p>      要删除一个 Cookie，应该设置过期时间为过去，以触发浏览器的删除机制。      下面的例子展示了如何删除上个例子里的 Cookie：     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;设置过期时间为一个小时前<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">""</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">time</span><span style="color: #007700">()&nbsp;-&nbsp;</span><span style="color: #9876AA">3600</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">""</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">time</span><span style="color: #007700">()&nbsp;-&nbsp;</span><span style="color: #9876AA">3600</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"/~rasmus/"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-5500">     <p><strong>Example #3 <span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 和数组</strong></p>     <div class="example-contents"><p>      通过带 array 标记的 Cookie 名称，也可以把 Cookie 设置成数组。      如果有数组元素，可以把它放进 Cookie 里；      脚本接收到时，Cookie 名称里的值会是一个数组：     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;设置&nbsp;Cookie<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[three]"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"cookiethree"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[two]"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"cookietwo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[one]"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"cookieone"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;网页刷新后，打印出以下内容<br /></span><span style="color: #007700">if&nbsp;(isset(</span><span style="color: #9876AA">$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">'cookie'</span><span style="color: #007700">]))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style="color: #9876AA">$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">'cookie'</span><span style="color: #007700">]&nbsp;as&nbsp;</span><span style="color: #9876AA">$name&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$name&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$value&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$name</span><span style="color: #DD0000">&nbsp;:&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #DD0000">&nbsp;&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> three : cookiethree two : cookietwo one : cookieone </span></div>     </div>    </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.setcookie-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.5.0</td>        <td>         发送给客户端的 Set-Cookie 头现在会包含 Max-Age 属性。        </td>       </tr>        <tr>        <td>5.2.0</td>        <td>         添加 <span class="parameter" style="color:#2EACF9">httponly</span> 参数。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.setcookie-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     要在调用本函数前输出内容，可以使用输出缓冲：让输出的内容在服务器里缓冲起来，     直至真正发送给浏览器。     可在脚本里调用 <span class="function">{@link ob_start()}</span> 和 <span class="function">{@link ob_end_flush()}</span>，     或设置 <em>output_buffering</em> <var class="filename">php.ini</var> 或服务器配置文件里的配置指令。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果 PHP 指令 <a href="http://php.net/manual/zh/ini.core.php#ini.register-globals" class="link">register_globals</a>     设置成 <em>on</em>，Cookie 值会自动设置成变量。     下面的例子里会存在 <var class="varname"><var class="varname">$TestCookie</var></var>。     我们推荐你使用 <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.cookies.php" class="classname">$_COOKIE</a></var></var>。    </p>   </p></blockquote>   <p class="para">    注意避坑：    <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       在页面（ Cookie 可见的页面）下次刷新前，Cookie 不会生效。       测试 Cookie 是否已经成功设置，需要在下次页面加载时、Cookie 过期前检测。       过期时间是通过 <span class="parameter" style="color:#2EACF9">expire</span> 参数设置的。       直接调用 <em>print_r($_COOKIE);</em> 调试检测 Cookie 是个很好的方式。      </span>     </li>     <li class="listitem">      <span class="simpara">       为同一个参数再次设置 Cookie 前，必须先把它删掉。       如果参数的值是空 string 或 <strong><span>FALSE</span></strong>，并且其他参数和上次调用 setcookie 仍旧一样，       则指定的名称会被远程客户端删除。       内部的实现是：将值设置成 &#039;deleted&#039;，并且过期时间是一年前。      </span>     </li>     <li class="listitem">      <span class="simpara">       因为设置值成 <strong><span>FALSE</span></strong> 会导致 Cookie 被删除，所以要避免使用布尔值。       代替方式：<em class="emphasis">0</em> 是 <strong><span>FALSE</span></strong>，<em class="emphasis">1</em> 是 <strong><span>TRUE</span></strong>。      </span>     </li>     <li class="listitem">      <span class="simpara">       Cookie 名称可以设置成数组名称，PHP 脚本里会是数组，       但用户系统里储存的是单独分开的 Cookie。        可以考虑使用 <span class="function">{@link explode()}</span> 为一个 Cookie 设置多个名称和值。       不建议将 <span class="function">{@link serialize()}</span> 用于此处，因为它会导致安全漏洞。      </span>     </li>    </ul>   </p>   <p class="simpara">    多次调用 <span class="function"><strong style="color:#CC7832">setcookie()</strong></span> 会按调用顺序执行。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.setcookie-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link header()} - 发送原生 HTTP 头</span></li>     <li class="member"><span class="function">{@link setrawcookie()} - 发送未经 URL 编码的 cookie</span></li>     <li class="member"><a href="http://php.net/manual/zh/features.cookies.php" class="link">Cookie 章节</a></li>     <li class="member"><a href="http://www.faqs.org/rfcs/rfc6265" class="link external">&raquo;&nbsp;RFC 6265</a></li>     <li class="member"><a href="http://www.faqs.org/rfcs/rfc2109" class="link external">&raquo;&nbsp;RFC 2109</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool If output exists prior to calling this function,*/
function setcookie ($name, $value = "", $expire = 0, $path = "", $domain = "", $secure = false, $httponly = false) {}

/**
*<div id="function.setrawcookie" class="refentry">  <div class="refnamediv">   <h1 class="refname">setrawcookie</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">setrawcookie</span> &mdash; <span class="dc-title">发送未经 URL 编码的 cookie</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.setrawcookie-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>setrawcookie</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$name</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$value</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$expire</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$domain</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$secure</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$httponly</span><span class="initializer"> = false</span></span>   ]]]]]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">setrawcookie()</strong></span> 和    <span class="function">{@link setcookie()}</span> 非常相似，唯一不同之处是发送到浏览器的  cookie 值没有自动经过 URL 编码（urlencode）。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.setrawcookie-parameters">   <h3 class="title">参数</h3>   <span>    相关参数的信息参见 <span class="function">{@link setcookie()}</span> 的文档。   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.setrawcookie-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.setrawcookie-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.5.0</td>        <td>         发送给客户端的 Set-Cookie 头现在会加上 Max-Age 属性。        </td>       </tr>        <tr>        <td>5.2.0</td>        <td>         增加了 <span class="parameter" style="color:#2EACF9">httponly</span> 参数。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.setrawcookie-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link setcookie()} - 发送 Cookie</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function setrawcookie ($name, $value = null, $expire = 0, $path = "", $domain = "", $secure = false, $httponly = false) {}

/**
*<div id="function.header" class="refentry">  <div class="refnamediv">   <h1 class="refname">header</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">header</span> &mdash; <span class="dc-title">发送原生 HTTP 头</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.header-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>header</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$string</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$replace</span><span class="initializer"> = true</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$http_response_code</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">header()</strong></span> 用于发送原生的 <acronym title="Hypertext Transfer Protocol">HTTP</acronym>    头。关于 <acronym title="Hypertext Transfer Protocol">HTTP</acronym> 头的更多信息请参考 <a href="http://www.faqs.org/rfcs/rfc2616" class="link external">&raquo;&nbsp;HTTP/1.1 specification</a>。   </p>   <p class="para">    请注意 <span class="function"><strong style="color:#CC7832">header()</strong></span> 必须在任何实际输出之前调用，不管是普通的 HTML 标签，还是文件或 PHP 输出的空行，空格。这是个常见的错误，在通过<span class="function">{@link include}</span>，<span class="function">{@link require}</span>，或者其访问其他文件里面的函数的时候，如果在<span class="function"><strong style="color:#CC7832">header()</strong></span>被调用之前，其中有空格或者空行。    同样的问题也存在于单独的 PHP/HTML 文件中。    <div class="informalexample">     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> &lt;html&gt;<br /><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;This&nbsp;will&nbsp;give&nbsp;an&nbsp;error.&nbsp;Note&nbsp;the&nbsp;output<br />&nbsp;*&nbsp;above,&nbsp;which&nbsp;is&nbsp;before&nbsp;the&nbsp;header()&nbsp;call&nbsp;<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Location:&nbsp;http://www.example.com/'</span><span style="color: #007700">);<br />exit;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.header-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">string</span></dt>       <dd>        <p class="para">        头字符串。       </p>       <p class="para">        有两种特别的头。第一种以“<em>HTTP/</em>”开头的 (case is not        significant)，将会被用来计算出将要发送的HTTP状态码。         例如在 Apache 服务器上用 PHP 脚本来处理不存在文件的请求（使用 <em>ErrorDocument</em> 指令）， 就会希望脚本响应了正确的状态码。       </p>       <p class="para">        <div class="informalexample">         <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">"HTTP/1.0&nbsp;404&nbsp;Not&nbsp;Found"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>         </div>         </div>       </p>       <p class="para">        第二种特殊情况是“Location:”的头信息。它不仅把报文发送给浏览器，而且还将返回给浏览器一个 <em>REDIRECT</em>（302）的状态码，除非状态码已经事先被设置为了<em>201</em>或者<em>3xx</em>。       </p>       <p class="para">        <div class="informalexample">         <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Location:&nbsp;http://www.example.com/"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;Redirect&nbsp;browser&nbsp;<br /><br />//&nbsp;Make&nbsp;sure&nbsp;that&nbsp;code&nbsp;below&nbsp;does&nbsp;not&nbsp;get&nbsp;executed&nbsp;when&nbsp;we&nbsp;redirect.&nbsp;<br /></span><span style="color: #007700">exit;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>         </div>         </div>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">replace</span></dt>       <dd>        <p class="para">        可选参数 <span class="parameter" style="color:#2EACF9">replace</span> 表明是否用后面的头替换前面相同类型的头。                默认情况下会替换。如果传入 <strong><span>FALSE</span></strong>，就可以强制使相同的头信息并存。例如：       </p>       <p class="para">        <div class="informalexample">         <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">'WWW-Authenticate:&nbsp;Negotiate'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'WWW-Authenticate:&nbsp;NTLM'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>         </div>         </div>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">http_response_code</span></dt>       <dd>        <p class="para">        强制指定HTTP响应的值。注意，这个参数只有在报文字符串（<span class="parameter" style="color:#2EACF9">string</span>）不为空的情况下才有效。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.header-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.header-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.2</td>        <td>         这个函数现在可以一次性阻止多个报文信息的发送，从而作为对报文信息注入攻击的一种防护。         </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.header-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5488">     <p><strong>Example #1 下载对话框</strong></p>     <div class="example-contents"><p>      如果你想提醒用户去保存你发送的数据，例如保存一个生成的PDF文件。你可以使用<a href="http://www.faqs.org/rfcs/rfc2183" class="link external">&raquo;&nbsp;Content-Disposition</a>的报文信息来提供一个推荐的文件名，并且强制浏览器显示一个文件下载的对话框。     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;We'll&nbsp;be&nbsp;outputting&nbsp;a&nbsp;PDF<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type:&nbsp;application/pdf'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;It&nbsp;will&nbsp;be&nbsp;called&nbsp;downloaded.pdf<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Disposition:&nbsp;attachment;&nbsp;filename="downloaded.pdf"'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;The&nbsp;PDF&nbsp;source&nbsp;is&nbsp;in&nbsp;original.pdf<br /></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'original.pdf'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    <div class="example" id="example-5489">     <p><strong>Example #2 缓存指令</strong></p>     <div class="example-contents"><p>      PHP脚本总是会生成一些动态内容，而这些内容是不应该被缓存的，不管是客户端浏览器还是在服务器端和客户端浏览器之间的任何代理。我们可以像这样来强制设置浏览器和各个代理层不缓存数据：     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Cache-Control:&nbsp;no-cache,&nbsp;must-revalidate"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;HTTP/1.1<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Expires:&nbsp;Sat,&nbsp;26&nbsp;Jul&nbsp;1997&nbsp;05:00:00&nbsp;GMT"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;Date&nbsp;in&nbsp;the&nbsp;past<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:        <p class="para">        也许你会遇到这样的情况，那就是即使你没使用上面这段代码，你的页面也没有被缓存。大多数情况是因为用户可以自己设置他们的浏览器从而改变浏览器默认的缓存行为。一旦发送了上面这段报文信息，那么你就应该重写那些可能用到缓存了的代码。       </p>       <p class="para">        此外，在启用session的情况下，<span class="function">{@link session_cache_limiter()}</span>和<em>session.cache_limiter</em>的配置可以用来自动地生成正确的缓存相关的头信息。       </p>      </p></blockquote>     </p></div>    </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.header-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:  <p class="para">  数据头只会在SAPI支持时得到处理和输出。 </p> </p></blockquote>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     你所有需要输出到浏览器的数据将会一直缓存在服务器端，直到你发送他们，这将造成比较大的资源开销。你可以是用输出缓冲来避开这个问题。你可以通过在脚本里使用<span class="function">{@link ob_start()}</span>和<span class="function">{@link ob_end_flush()}</span>或者直接在你的<var class="filename">php.ini</var>文件里设置<em>output_buffering</em>，也可以直接在服务器的配置文件里设置。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     HTTP状态信息的报文永远都是最新被发送到客户端的，而不管<span class="function"><strong style="color:#CC7832">header()</strong></span>是否是在最先发送的。报文状态码可能会被重写，当调用<span class="function"><strong style="color:#CC7832">header()</strong></span>来设定新的状态码，除非HTTP报文已经被发送了。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     在IE 4.01和IE 5.5里有bug，要解决就升级浏览器吧，想必也没人用那么远古的神器了吧。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">如果安全模式（<a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode" class="link">safe mode</a>）被激活，那么脚本的uid将会被添加到<em>WWW-Authenticate</em>的<em>realm</em>部分，前提是你设置了这个头信息的情况下（使用 HTTP 认证）。    </span>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     HTTP/1.1需要一个绝对的网络资源地址（<acronym title="Uniform Resource Identifier">URI</acronym>）来作为一个参数供<a href="http://tools.ietf.org/html/rfc7231-sec14.html#sec14.30" class="link external">&raquo;&nbsp;Location:</a>使用，在其中必须包含了协议，主机地址还有完整的路径，但是一些客户端可以接受相对的网络资源地址。你可以在一个相对的网路资源地址的基础上使用<var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.server.php" class="classname">$_SERVER['HTTP_HOST']</a></var></var>，<var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.server.php" class="classname">$_SERVER['PHP_SELF']</a></var></var>和<span class="function">{@link dirname()}</span>来组装一个绝对的网路资源地址。     <div class="informalexample">      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Redirect&nbsp;to&nbsp;a&nbsp;different&nbsp;page&nbsp;in&nbsp;the&nbsp;current&nbsp;directory&nbsp;that&nbsp;was&nbsp;requested&nbsp;<br /></span><span style="color: #9876AA">$host&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'HTTP_HOST'</span><span style="color: #007700">];<br /></span><span style="color: #9876AA">$uri&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">rtrim</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'PHP_SELF'</span><span style="color: #007700">]),&nbsp;</span><span style="color: #DD0000">'/\\'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$extra&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'mypage.php'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Location:&nbsp;http://</span><span style="color: #9876AA">$host$uri</span><span style="color: #DD0000">/</span><span style="color: #9876AA">$extra</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br />exit;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>      </div>    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     在执行Location header跳转的时候，Session ID无法通传递的，即使<a href="http://php.net/manual/zh/session.configuration.php#ini.session.use-trans-sid" class="link">session.use_trans_sid</a>是激活状态的。只能通过手动传递using <strong><span>SID</span></strong>的值来实现。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.header-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link headers_sent()} - 检测 HTTP 头是否已经发送</span></li>     <li class="member"><span class="function">{@link setcookie()} - 发送 Cookie</span></li>     <li class="member"><span class="function">{@link http_response_code()} - 获取/设置响应的 HTTP 状态码</span></li>     <li class="member">      The section on <a href="http://php.net/manual/zh/features.http-auth.php" class="link">HTTP      authentication</a>     </li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return void */
function header ($string, $replace = true, $http_response_code = null) {}

/**
*<div id="function.header-remove" class="refentry">  <div class="refnamediv">   <h1 class="refname">header_remove</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">header_remove</span> &mdash; <span class="dc-title">删除之前设置的 HTTP 头</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.header-remove-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>header_remove</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$name</span></span>   ] )</div>    <p class="para rdfs-comment">    删除之前用 <span class="function">{@link header()}</span> 设置的 HTTP 头。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.header-remove-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">name</span></dt>       <dd>        <p class="para">        要移除的头名称。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <span class="simpara">         参数不分大小写。        </span>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.header-remove-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.header-remove-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5486">     <p><strong>Example #1 取消指定的头</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Foo:&nbsp;Bar"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Bar:&nbsp;Baz"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header_remove</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Foo"</span><span style="color: #007700">);&nbsp;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> X-Bar: Baz </span></div>     </div>    </div>    <div class="example" id="example-5487">     <p><strong>Example #2 取消之前全部指定的头</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Foo:&nbsp;Bar"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Bar:&nbsp;Baz"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header_remove</span><span style="color: #007700">();&nbsp;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.header-remove-notes">   <h3 class="title">注释</h3>   <div class="caution"><strong class="caution">Caution</strong>    <p class="para">     本函数会删除<em class="emphasis">所有</em> PHP 设置的头，     包括 Cookie、Session 和 <em>X-Powered-By</em>。    </p>   </div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:  <p class="para">  数据头只会在SAPI支持时得到处理和输出。 </p> </p></blockquote>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.header-remove-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link header()} - 发送原生 HTTP 头</span></li>     <li class="member"><span class="function">{@link headers_sent()} - 检测 HTTP 头是否已经发送</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return void */
function header_remove ($name = null) {}

/**
*<div id="function.headers-sent" class="refentry">  <div class="refnamediv">   <h1 class="refname">headers_sent</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">headers_sent</span> &mdash; <span class="dc-title">检测 HTTP 头是否已经发送</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.headers-sent-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>headers_sent</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$file</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$line</span></span>   ]] )</div>    <p class="para rdfs-comment">    检测 HTTP 头是否已经发送。   </p>   <p class="para">     HTTP 头已经发送时，就无法通过 <span class="function">{@link header()}</span> 添加更多头字段。    使用此函数起码可以防止 HTTP 头出错。另一个解决方案是用 <a href="http://php.net/manual/zh/ref.outcontrol.php" class="link">输出缓冲</a>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.headers-sent-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">file</span></dt>       <dd>        <p class="para">        若设置了可选参数 <span class="parameter" style="color:#2EACF9">file</span> and        <span class="parameter" style="color:#2EACF9">line</span>，        <span class="function"><strong style="color:#CC7832">headers_sent()</strong></span> 会把 PHP 文件名放在 <span class="parameter" style="color:#2EACF9">file</span> 变量里，        输出开始的行号放在 <span class="parameter" style="color:#2EACF9">line</span> 变量里。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">line</span></dt>       <dd>        <p class="para">        输出开始的行号。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.headers-sent-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    HTTP 头未发送时，<span class="function"><strong style="color:#CC7832">headers_sent()</strong></span> 返回 <strong><span>FALSE</span></strong>，否则返回 <strong><span>TRUE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.headers-sent-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5491">     <p><strong>Example #1 使用 <span class="function"><strong style="color:#CC7832">headers_sent()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;没有&nbsp;HTTP&nbsp;头就发送一个<br /></span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">headers_sent</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Location:&nbsp;http://www.example.com/'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;使用&nbsp;file&nbsp;和&nbsp;line&nbsp;参数选项的例子<br />//&nbsp;注意&nbsp;$filename&nbsp;和&nbsp;$linenum&nbsp;用于下文中使用<br />//&nbsp;所以不要提前为它们赋值<br /></span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">headers_sent</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$linenum</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Location:&nbsp;http://www.example.com/'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;<br /><br /></span><span style="color: #FF8000">//&nbsp;很有可能在这里触发错误<br /></span><span style="color: #007700">}&nbsp;else&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Headers&nbsp;already&nbsp;sent&nbsp;in&nbsp;</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">&nbsp;on&nbsp;line&nbsp;</span><span style="color: #9876AA">$linenum</span><span style="color: #DD0000">\n"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"Cannot&nbsp;redirect,&nbsp;for&nbsp;now&nbsp;please&nbsp;click&nbsp;this&nbsp;&lt;a&nbsp;"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"href=\"http://www.example.com\"&gt;link&lt;/a&gt;&nbsp;instead\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.headers-sent-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:  <p class="para">  数据头只会在SAPI支持时得到处理和输出。 </p> </p></blockquote>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.headers-sent-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ob_start()} - 打开输出控制缓冲</span></li>     <li class="member"><span class="function">{@link trigger_error()} - 产生一个用户级别的 error/warning/notice 信息</span></li>     <li class="member"><span class="function">{@link headers_list()} - 返回已发送的 HTTP 响应头（或准备发送的）</span></li>     <li class="member">      <span class="function">{@link header()} - 发送原生 HTTP 头</span> 中有更多相关细节的讨论。     </li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool headers_sent will return false if no HTTP headers*/
function headers_sent (&$file = null, &$line = null) {}

/**
*<div id="function.headers-list" class="refentry">  <div class="refnamediv">   <h1 class="refname">headers_list</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">headers_list</span> &mdash; <span class="dc-title">返回已发送的 HTTP 响应头（或准备发送的）</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.headers-list-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>headers_list</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">headers_list()</strong></span> 会返回准备发送给浏览器/客户端的 HTTP 头列表。    检测这些头是否已经发送，使用 <span class="function">{@link headers_sent()}</span>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.headers-list-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数字索引的头数组。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.headers-list-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5490">     <p><strong>Example #1 使用 <span class="function"><strong style="color:#CC7832">headers_list()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;setcookie()&nbsp;会自己添加一个响应头&nbsp;<br /></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bar'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;添加自定义的响应头<br />&nbsp;大多数客户端会主动忽略&nbsp;<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Sample-Test:&nbsp;foo"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;响应中指定内容为明文&nbsp;text&nbsp;<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type:&nbsp;text/plain'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;所以会发送什么头呢？&nbsp;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">headers_list</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> array(4) {   [0]=&gt;   string(23) &quot;X-Powered-By: PHP/5.1.3&quot;   [1]=&gt;   string(19) &quot;Set-Cookie: foo=bar&quot;   [2]=&gt;   string(18) &quot;X-Sample-Test: foo&quot;   [3]=&gt;   string(24) &quot;Content-type: text/plain&quot; }  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.headers-list-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:  <p class="para">  数据头只会在SAPI支持时得到处理和输出。 </p> </p></blockquote>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.headers-list-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link headers_sent()} - 检测 HTTP 头是否已经发送</span></li>     <li class="member"><span class="function">{@link header()} - 发送原生 HTTP 头</span></li>     <li class="member"><span class="function">{@link setcookie()} - 发送 Cookie</span></li>     <li class="member"><span class="function">{@link apache_response_headers()} - 获得全部 HTTP 响应头信息</span></li>     <li class="member"><span class="function">{@link http_response_code()} - 获取/设置响应的 HTTP 状态码</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return array a numerically indexed array of headers.*/
function headers_list () {}

/**
*<div id="function.connection-aborted" class="refentry">  <div class="refnamediv">   <h1 class="refname">connection_aborted</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">connection_aborted</span> &mdash; <span class="dc-title">检查客户端是否已经断开</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.connection-aborted-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>connection_aborted</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    检查客户端是否已经断开。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.connection-aborted-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果客户端已经断开则返回1，否则返回0。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.connection-aborted-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link connection_status()} - 返回连接的状态位</span></li>     <li class="member"><span class="function">{@link ignore_user_abort()} - 设置客户端断开连接时是否中断脚本的执行</span></li>     <li class="member">      查看<a href="http://php.net/manual/zh/features.connection-handling.php" class="link">连接处理</a>      了解PHP处理连接的详情。     </li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return int 1 if client disconnected, 0 otherwise.*/
function connection_aborted () {}

/**
*<div id="function.connection-status" class="refentry">  <div class="refnamediv">   <h1 class="refname">connection_status</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">connection_status</span> &mdash; <span class="dc-title">返回连接的状态位</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.connection-status-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>connection_status</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    获得当前连接的状态位。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.connection-status-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     获得当前连接的状态位, 可以用于与    <em>CONNECTION_XXX</em> 定义的常量来确定连接状态。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.connection-status-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link connection_aborted()} - 检查客户端是否已经断开</span></li>     <li class="member"><span class="function">{@link ignore_user_abort()} - 设置客户端断开连接时是否中断脚本的执行</span></li>     <li class="member">      查看<a href="http://php.net/manual/zh/features.connection-handling.php" class="link">连接处理</a>      了解PHP处理连接的详情。     </li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return int the connection status bitfield, which can be used against the*/
function connection_status () {}

/**
*<div id="function.ignore-user-abort" class="refentry">  <div class="refnamediv">   <h1 class="refname">ignore_user_abort</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ignore_user_abort</span> &mdash; <span class="dc-title">设置客户端断开连接时是否中断脚本的执行</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ignore-user-abort-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>ignore_user_abort</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$value</span></span>   ] )</div>    <p class="para rdfs-comment">     设置客户端断开连接时是否中断脚本的执行   </p>   <p class="para">    PHP 以命令行脚本执行时，当脚本终端结束，脚本不会被立即中止，除非设置 <span class="parameter" style="color:#2EACF9">value</span> 为 <strong><span>TRUE</span></strong>，否则脚本输出任意字符时会被中止。</p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ignore-user-abort-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">value</span></dt>       <dd>        <p class="para">        如果设置了该值，函数会把 <a href="http://php.net/manual/zh/misc.configuration.php#ini.ignore-user-abort" class="link">ignore_user_abort</a> ini 的值设置为 <span class="parameter" style="color:#2EACF9">value</span>。        如果未设置该值，函数不会改变设置，仅会返回之前的设置。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ignore-user-abort-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    以整型返回之前的设置   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ignore-user-abort-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4538">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">ignore_user_abort()</strong></span>例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Ignore&nbsp;user&nbsp;aborts&nbsp;and&nbsp;allow&nbsp;the&nbsp;script<br />//&nbsp;to&nbsp;run&nbsp;forever<br /></span><span style="color: #9876AA">ignore_user_abort</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">set_time_limit</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">'Testing&nbsp;connection&nbsp;handling&nbsp;in&nbsp;PHP'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Run&nbsp;a&nbsp;pointless&nbsp;loop&nbsp;that&nbsp;sometime&nbsp;<br />//&nbsp;hopefully&nbsp;will&nbsp;make&nbsp;us&nbsp;click&nbsp;away&nbsp;from&nbsp;<br />//&nbsp;page&nbsp;or&nbsp;click&nbsp;the&nbsp;"Stop"&nbsp;button.<br /></span><span style="color: #007700">while(</span><span style="color: #9876AA">1</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Did&nbsp;the&nbsp;connection&nbsp;fail?<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if(</span><span style="color: #9876AA">connection_status</span><span style="color: #007700">()&nbsp;!=&nbsp;</span><span style="color: #9876AA">CONNECTION_NORMAL</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Sleep&nbsp;for&nbsp;10&nbsp;seconds<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sleep</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;If&nbsp;this&nbsp;is&nbsp;reached,&nbsp;then&nbsp;the&nbsp;'break'&nbsp;<br />//&nbsp;was&nbsp;triggered&nbsp;from&nbsp;inside&nbsp;the&nbsp;while&nbsp;loop<br /><br />//&nbsp;So&nbsp;here&nbsp;we&nbsp;can&nbsp;log,&nbsp;or&nbsp;perform&nbsp;any&nbsp;other&nbsp;tasks<br />//&nbsp;we&nbsp;need&nbsp;without&nbsp;actually&nbsp;being&nbsp;dependent&nbsp;on&nbsp;the&nbsp;<br />//&nbsp;browser.<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.ignore-user-abort-notes">   <h3 class="title">注释</h3>   <p class="para">    在PHP尝试发送信息到客户端之前，不会检测到用户是否已中断连接。    仅使用 echo 语句不能确保信息已发送，参见 <span class="function">{@link flush()}</span> 函数。    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ignore-user-abort-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link connection_aborted()} - 检查客户端是否已经断开</span></li>     <li class="member"><span class="function">{@link connection_status()} - 返回连接的状态位</span></li>     <li class="member">      <a href="http://php.net/manual/zh/features.connection-handling.php" class="link">Connection Handling</a>      关于PHP连接处理的完整描述。     </li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return int the previous setting, as an integer.*/
function ignore_user_abort ($value = null) {}

/**
*<div id="function.parse-ini-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">parse_ini_file</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">parse_ini_file</span> &mdash; <span class="dc-title">解析一个配置文件</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.parse-ini-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>parse_ini_file</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$process_sections</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$scanner_mode</span><span class="initializer"> = INI_SCANNER_NORMAL</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">parse_ini_file()</strong></span> 载入一个由    <span class="parameter" style="color:#2EACF9">filename</span> 指定的 ini    文件，并将其中的设置作为一个联合数组返回。   </p>   <p class="para">    ini 文件的结构和 <var class="filename">php.ini</var> 的相似。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.parse-ini-file-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        要解析的 ini 文件的文件名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">process_sections</span></dt>       <dd>        <p class="para">        如果将最后的    <span class="parameter" style="color:#2EACF9">process_sections</span> 参数设为    <strong><span>TRUE</span></strong>，将得到一个多维数组，包括了配置文件中每一节的名称和设置。<span class="parameter" style="color:#2EACF9">process_sections</span>    的默认值是 <strong><span>FALSE</span></strong>。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">scanner_mode</span></dt>       <dd>        <p class="para">        Can either be <strong><span>INI_SCANNER_NORMAL</span></strong> (default) or         <strong><span>INI_SCANNER_RAW</span></strong>. If <strong><span>INI_SCANNER_RAW</span></strong>         is supplied, then option values will not be parsed.       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.parse-ini-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时以关联数组 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 返回设置，失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.parse-ini-file-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          Added optional <span class="parameter" style="color:#2EACF9">scanner_mode</span> parameter.          Single quotes may now be used around variable assignments.          Hash marks (<em>#</em>) may no longer be used as comments          and will throw a deprecation warning if used.        </td>       </tr>        <tr>        <td>5.2.7</td>        <td>         On syntax error this function will return <strong><span>FALSE</span></strong> rather than an empty         array.        </td>       </tr>        <tr>        <td>5.2.4</td>        <td>         由数字组成的键名和小节名会被 PHP 当作<a href="http://php.net/manual/zh/language.types.integer.php" class="link">整数</a>来处理，因此以    0 开头的数字会被当作八进制而以 0x 开头的会被当作十六进制。        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         该函数也开始处理选项值内的新行。        </td>       </tr>        <tr>        <td>4.2.1</td>        <td>         本函数也开始受到<a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode" class="link">安全模式</a>和     <a href="http://php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a> 的影响。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.parse-ini-file-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2823">     <p><strong>Example #1 <var class="filename">sample.ini</var> 的内容</strong></p>     <div class="example-contents"> <div class="cdata"><span> ; This is a sample configuration file ; Comments start with &#039;;&#039;, as in php.ini  [first_section] one = 1 five = 5 animal = BIRD  [second_section] path = &quot;/usr/local/bin&quot; URL = &quot;http://www.example.com/~username&quot;  [third_section] phpversion[] = &quot;5.0&quot; phpversion[] = &quot;5.1&quot; phpversion[] = &quot;5.2&quot; phpversion[] = &quot;5.3&quot; </span></div>     </div>     </div>    <div class="example" id="example-2824">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">parse_ini_file()</strong></span> 例子</strong></p>     <div class="example-contents"><p>       <a href="http://php.net/manual/zh/language.constants.php" class="link">常量</a>也可以在 ini    文件中被解析，因此如果在运行 <span class="function"><strong style="color:#CC7832">parse_ini_file()</strong></span>    之前定义了常量作为 ini 的值，将会被集成到结果中去。只有 ini    的值会被求值。例如：     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />define</span><span style="color: #007700">(</span><span style="color: #DD0000">'BIRD'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Dodo&nbsp;bird'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Parse&nbsp;without&nbsp;sections<br /></span><span style="color: #9876AA">$ini_array&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">parse_ini_file</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.ini"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$ini_array</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Parse&nbsp;with&nbsp;sections<br /></span><span style="color: #9876AA">$ini_array&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">parse_ini_file</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.ini"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$ini_array</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [one] =&gt; 1     [five] =&gt; 5     [animal] =&gt; Dodo bird     [path] =&gt; /usr/local/bin     [URL] =&gt; http://www.example.com/~username     [phpversion] =&gt; Array         (             [0] =&gt; 5.0             [1] =&gt; 5.1             [2] =&gt; 5.2             [3] =&gt; 5.3         )  ) Array (     [first_section] =&gt; Array         (             [one] =&gt; 1             [five] =&gt; 5             [animal] =&gt; Dodo bird         )      [second_section] =&gt; Array         (             [path] =&gt; /usr/local/bin             [URL] =&gt; http://www.example.com/~username         )      [third_section] =&gt; Array         (             [phpversion] =&gt; Array                 (                     [0] =&gt; 5.0                     [1] =&gt; 5.1                     [2] =&gt; 5.2                     [3] =&gt; 5.3                 )          )  ) </span></div>     </div>    </div>   </span>   <p class="para">    <div class="example" id="example-2825">     <p><strong>Example #3 <span class="function"><strong style="color:#CC7832">parse_ini_file()</strong></span> parsing a php.ini file</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;A&nbsp;simple&nbsp;function&nbsp;used&nbsp;for&nbsp;comparing&nbsp;the&nbsp;results&nbsp;below<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">yesno</span><span style="color: #007700">(</span><span style="color: #9876AA">$expression</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;return(</span><span style="color: #9876AA">$expression&nbsp;</span><span style="color: #007700">?&nbsp;</span><span style="color: #DD0000">'Yes'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'No'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Get&nbsp;the&nbsp;path&nbsp;to&nbsp;php.ini&nbsp;using&nbsp;the&nbsp;php_ini_loaded_file()&nbsp;<br />//&nbsp;function&nbsp;available&nbsp;as&nbsp;of&nbsp;PHP&nbsp;5.2.4<br /></span><span style="color: #9876AA">$ini_path&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">php_ini_loaded_file</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Parse&nbsp;php.ini<br /></span><span style="color: #9876AA">$ini&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">parse_ini_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$ini_path</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Print&nbsp;and&nbsp;compare&nbsp;the&nbsp;values,&nbsp;note&nbsp;that&nbsp;using&nbsp;get_cfg_var()<br />//&nbsp;will&nbsp;give&nbsp;the&nbsp;same&nbsp;results&nbsp;for&nbsp;parsed&nbsp;and&nbsp;loaded&nbsp;here<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'(parsed)&nbsp;magic_quotes_gpc&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">yesno</span><span style="color: #007700">(</span><span style="color: #9876AA">$ini</span><span style="color: #007700">[</span><span style="color: #DD0000">'magic_quotes_gpc'</span><span style="color: #007700">])&nbsp;.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'(loaded)&nbsp;magic_quotes_gpc&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">yesno</span><span style="color: #007700">(</span><span style="color: #9876AA">get_cfg_var</span><span style="color: #007700">(</span><span style="color: #DD0000">'magic_quotes_gpc'</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> (parsed) magic_quotes_gpc = Yes (loaded) magic_quotes_gpc = Yes </span></div>     </div>    </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.parse-ini-file-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     本函数和 <var class="filename">php.ini</var>     文件没有关系，该文件在运行脚本时就已经处理过了。本函数可以用来读取你自己的应用程序的配置文件。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果 ini 文件中的值包含任何非字母数字的字符，需要将其括在双引号中（&quot;）。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     有些保留字不能作为 ini 文件中的键名，包括：null，yes，no，true 和 false。值为     null，no 和 false 等效于 &quot;&quot;，值为 yes 和 true 等效于 &quot;1&quot;。字符     <em>{}|&amp;~![()&quot;</em> 也不能用在键名的任何地方，而且这些字符在选项值中有着特殊的意义。    </span>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.parse-ini-file-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link parse_ini_string()} - 解析配置字符串</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return array|bool The settings are returned as an associative array on success,*/
function parse_ini_file ($filename, $process_sections = false, $scanner_mode = INI_SCANNER_NORMAL) {}

/**
*<div id="function.parse-ini-string" class="refentry">  <div class="refnamediv">   <h1 class="refname">parse_ini_string</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">parse_ini_string</span> &mdash; <span class="dc-title">解析配置字符串</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.parse-ini-string-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>parse_ini_string</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$ini</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$process_sections</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$scanner_mode</span><span class="initializer"> = INI_SCANNER_NORMAL</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">parse_ini_string()</strong></span> 返回 <span class="parameter" style="color:#2EACF9">ini</span> 字符串解析后的关联数组   </p>   <p class="para">    ini 字符串的格式参考 <var class="filename">php.ini</var>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.parse-ini-string-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">ini</span></dt>       <dd>        <p class="para">        ini 字符串内容       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">process_sections</span></dt>       <dd>        <p class="para">        设置 <span class="parameter" style="color:#2EACF9">process_sections</span> 参数为 <strong><span>TRUE</span></strong>,得到一个多维数组,包含名称和设置。<span class="parameter" style="color:#2EACF9">process_sections</span> 默认为 <strong><span>FALSE</span></strong>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">scanner_mode</span></dt>       <dd>        <p class="para">        可以是 <strong><span>INI_SCANNER_NORMAL</span></strong> (默认)或 <strong><span>INI_SCANNER_RAW</span></strong> 。如果是 <strong><span>INI_SCANNER_RAW</span></strong>,那么选项值不会被解析。       </p>       <p class="para">     As of PHP 5.6.1 can also be specified as <strong><span>INI_SCANNER_TYPED</span></strong>.     In this mode boolean, null and integer types are preserved when possible.     String values <em>&quot;true&quot;</em>, <em>&quot;on&quot;</em> and <em>&quot;yes&quot;</em>     are converted to <strong><span>TRUE</span></strong>. <em>&quot;false&quot;</em>, <em>&quot;off&quot;</em>, <em>&quot;no&quot;</em>     and <em>&quot;none&quot;</em> are considered <strong><span>FALSE</span></strong>. <em>&quot;null&quot;</em> is converted to <strong><span>NULL</span></strong>     in typed mode. Also, all numeric strings are converted to integer type if it is possible.    </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.parse-ini-string-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    执行成功返回一个关联数组,返回 <strong><span>FALSE</span></strong> 为失败   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.parse-ini-string-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     保留关键字不能作为 ini 的键，包括 null, yes, no, true, false, on, off, none以及空值，off，no 和错误的结果集，值为 yes 和 正确的结果集。除非使用 <strong><span>INI_SCANNER_TYPED</span></strong> 模式。 字符 <em>?{}|&amp;~![()^&quot;</em> 不能在任何地方使用作为键和有特殊意义的值。    </span>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.parse-ini-string-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link parse_ini_file()} - 解析一个配置文件</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return array|bool The settings are returned as an associative array on success,*/
function parse_ini_string ($ini, $process_sections = false, $scanner_mode = INI_SCANNER_NORMAL) {}

/**
*<div id="function.is-uploaded-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">is_uploaded_file</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_uploaded_file</span> &mdash; <span class="dc-title">判断文件是否是通过 HTTP POST 上传的</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-uploaded-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_uploaded_file</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    )</div>    <p class="para rdfs-comment">     如果 <span class="parameter" style="color:#2EACF9">filename</span> 所给出的文件是通过    HTTP POST 上传的则返回 <strong><span>TRUE</span></strong>。这可以用来确保恶意的用户无法欺骗脚本去访问本不能访问的文件，例如    <var class="filename">/etc/passwd</var>。   </p>   <p class="para">    这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。   </p>   <p class="para">    为了能使 <span class="function"><strong style="color:#CC7832">is_uploaded_file()</strong></span> 函数正常工作，必段指定类似于    <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.files.php" class="classname">$_FILES['userfile']['tmp_name']</a></var></var> 的变量，而在从客户端上传的文件名    <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.files.php" class="classname">$_FILES['userfile']['name']</a></var></var> 不能正常运作。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-uploaded-file-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        要检查的文件名。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-uploaded-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-uploaded-file-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2813">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">is_uploaded_file()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">is_uploaded_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'tmp_name'</span><span style="color: #007700">]))&nbsp;{<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"File&nbsp;"</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]&nbsp;.</span><span style="color: #DD0000">"&nbsp;uploaded&nbsp;successfully.\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Displaying&nbsp;contents\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #9876AA">$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'tmp_name'</span><span style="color: #007700">]);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Possible&nbsp;file&nbsp;upload&nbsp;attack:&nbsp;"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"filename&nbsp;'"</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'tmp_name'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">"'."</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-uploaded-file-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link move_uploaded_file()} - 将上传的文件移动到新位置</span></li>     <li class="member"><var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.files.php" class="classname">$_FILES</a></var></var></li>     <li class="member">关于用法的简单例子       <a href="http://php.net/manual/zh/features.file-upload.php" class="link">文件上传处理</a></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function is_uploaded_file ($filename) {}

/**
*<div id="function.move-uploaded-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">move_uploaded_file</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">move_uploaded_file</span> &mdash; <span class="dc-title">将上传的文件移动到新位置</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.move-uploaded-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>move_uploaded_file</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$destination</span></span>    )</div>    <p class="para rdfs-comment">    本函数检查并确保由 <span class="parameter" style="color:#2EACF9">filename</span>    指定的文件是合法的上传文件（即通过 PHP 的 HTTP POST    上传机制所上传的）。如果文件合法，则将其移动为由    <span class="parameter" style="color:#2EACF9">destination</span> 指定的文件。   </p>   <p class="para">    这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.move-uploaded-file-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        上传的文件的文件名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">destination</span></dt>       <dd>        <p class="para">        移动文件到这个位置。       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.move-uploaded-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>。   </p>   <p class="para">    如果 <span class="parameter" style="color:#2EACF9">filename</span>    不是合法的上传文件，不会出现任何操作，<span class="function"><strong style="color:#CC7832">move_uploaded_file()</strong></span>    将返回 <strong><span>FALSE</span></strong>。   </p>   <p class="para">    如果 <span class="parameter" style="color:#2EACF9">filename</span>    是合法的上传文件，但出于某些原因无法移动，不会出现任何操作，<span class="function"><strong style="color:#CC7832">move_uploaded_file()</strong></span>    将返回 <strong><span>FALSE</span></strong>。此外还会发出一条警告。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.move-uploaded-file-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2822">     <p><strong>Example #1 Uploading multiple files</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$uploads_dir&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'/uploads'</span><span style="color: #007700">;<br />foreach&nbsp;(</span><span style="color: #9876AA">$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">"pictures"</span><span style="color: #007700">][</span><span style="color: #DD0000">"error"</span><span style="color: #007700">]&nbsp;as&nbsp;</span><span style="color: #9876AA">$key&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$error</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$error&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">UPLOAD_ERR_OK</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$tmp_name&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">"pictures"</span><span style="color: #007700">][</span><span style="color: #DD0000">"tmp_name"</span><span style="color: #007700">][</span><span style="color: #9876AA">$key</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$name&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">"pictures"</span><span style="color: #007700">][</span><span style="color: #DD0000">"name"</span><span style="color: #007700">][</span><span style="color: #9876AA">$key</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">move_uploaded_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmp_name</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$uploads_dir</span><span style="color: #DD0000">/</span><span style="color: #9876AA">$name</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.move-uploaded-file-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">move_uploaded_file()</strong></span> 对<a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode" class="link">安全模式</a>和     <a href="http://php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a> 都是敏感的。不过，限制只针对     <span class="parameter" style="color:#2EACF9">destination</span> 路径，因为允许移动上传的文件名     <span class="parameter" style="color:#2EACF9">filename</span>     可能会与这些限制产生冲突。<span class="function"><strong style="color:#CC7832">move_uploaded_file()</strong></span>     仅作用于通过 PHP 上传的文件以确保这个操作的安全性。    </p>   </p></blockquote>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     如果目标文件已经存在，将会被覆盖。    </p>   </div>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.move-uploaded-file-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link is_uploaded_file()} - 判断文件是否是通过 HTTP POST 上传的</span></li>     <li class="member"><span class="function">{@link rename()} - 重命名一个文件或目录</span></li>     <li class="member">参见<a href="http://php.net/manual/zh/features.file-upload.php" class="link">文件上传处理</a>一章中的简单使用例子。</li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool If filename is not a valid upload file,*/
function move_uploaded_file ($filename, $destination) {}

/**
*<div id="function.gethostbyaddr" class="refentry">  <div class="refnamediv">   <h1 class="refname">gethostbyaddr</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">gethostbyaddr</span> &mdash; <span class="dc-title">    获取指定的IP地址对应的主机名   </span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.gethostbyaddr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>gethostbyaddr</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$ip_address</span></span>    )</div>    <p class="para rdfs-comment">    返回指定的IP地址（<span class="parameter" style="color:#2EACF9">ip_address</span>）对应的主机名。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.gethostbyaddr-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">ip_address</span></dt>       <dd>        <p class="para">        主机的IP地址。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.gethostbyaddr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功则返回主机名；失败则原样输出（输出IP地址）；如果输入的格式不正常，则返回<strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.gethostbyaddr-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5479">     <p><strong>Example #1 一个使用 <span class="function"><strong style="color:#CC7832">gethostbyaddr()</strong></span> 的简单例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$hostname&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">gethostbyaddr</span><span style="color: #007700">(</span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">]);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$hostname</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.gethostbyaddr-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>     <li class="member"><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return string the host name or the unmodified ip_address*/
function gethostbyaddr ($ip_address) {}

/**
*<div id="function.gethostbyname" class="refentry">  <div class="refnamediv">   <h1 class="refname">gethostbyname</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">gethostbyname</span> &mdash; <span class="dc-title">    返回主机名对应的 IPv4地址。   </span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.gethostbyname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>gethostbyname</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$hostname</span></span>    )</div>    <p class="para rdfs-comment">    返回主机名 <span class="parameter" style="color:#2EACF9">hostname</span> 对应的 IPv4 互联网地址。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.gethostbyname-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">hostname</span></dt>       <dd>        <p class="para">        主机名       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.gethostbyname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 IPv4 地址，失败时原封不动返回 <span class="parameter" style="color:#2EACF9">hostname</span> 字符串。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.gethostbyname-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5480">     <p><strong>Example #1 简单的 <span class="function"><strong style="color:#CC7832">gethostbyname()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$ip&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">gethostbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$ip</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.gethostbyname-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link gethostbyaddr()} - 获取指定的IP地址对应的主机名</span></li>     <li class="member"><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>     <li class="member"><span class="function">{@link inet_pton()} - Converts a human readable IP address to its packed in_addr representation</span></li>     <li class="member"><span class="function">{@link inet_ntop()} - Converts a packed internet address to a human readable representation</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return string the IPv4 address or a string containing the unmodified*/
function gethostbyname ($hostname) {}

/**
 * Get a list of IPv4 addresses corresponding to a given Internet host
 * @since 4.0
 * @since 5.0
   name
/**
*<div id="function.gethostbynamel" class="refentry">  <div class="refnamediv">   <h1 class="refname">gethostbynamel</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">gethostbynamel</span> &mdash; <span class="dc-title">     获取互联网主机名对应的 IPv4 地址列表   </span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.gethostbynamel-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>gethostbynamel</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$hostname</span></span>    )</div>    <p class="para rdfs-comment">     返回互联网主机名 <span class="parameter" style="color:#2EACF9">hostname</span> 解析出来的 IPv4 地址列表。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.gethostbynamel-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">hostname</span></dt>       <dd>        <p class="para">        主机名。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.gethostbynamel-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 IPv4 地址数组，    或在 <span class="parameter" style="color:#2EACF9">hostname</span> 无法解析时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.gethostbynamel-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5481">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">gethostbynamel()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$hosts&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">gethostbynamel</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$hosts</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [0] =&gt; 192.0.34.166 ) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.gethostbynamel-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>     <li class="member"><span class="function">{@link gethostbyaddr()} - 获取指定的IP地址对应的主机名</span></li>     <li class="member"><span class="function">{@link checkdnsrr()} - 给指定的主机（域名）或者IP地址做DNS通信检查</span></li>     <li class="member"><span class="function">{@link getmxrr()} - 获取互联网主机名对应的 MX 记录</span></li>     <li class="member">Linux 手册页 <em>named(8)</em></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return array an array of IPv4 addresses or false if*/
function gethostbynamel ($hostname) {}

/**
*<div id="function.gethostname" class="refentry">  <div class="refnamediv">   <h1 class="refname">gethostname</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">gethostname</span> &mdash; <span class="dc-title">获取主机名</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.gethostname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>gethostname</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">gethostname()</strong></span> 可以获取本地机器的标准主机名。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.gethostname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回主机名称字符串，失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.gethostname-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5482">     <p><strong>Example #1 简单的 <span class="function"><strong style="color:#CC7832">gethostname()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">gethostname</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;may&nbsp;output&nbsp;e.g,:&nbsp;sandie<br /><br />//&nbsp;Or,&nbsp;an&nbsp;option&nbsp;that&nbsp;also&nbsp;works&nbsp;before&nbsp;PHP&nbsp;5.3<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">php_uname</span><span style="color: #007700">(</span><span style="color: #DD0000">'n'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;may&nbsp;output&nbsp;e.g,:&nbsp;sandie<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.gethostname-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>     <li class="member"><span class="function">{@link gethostbyaddr()} - 获取指定的IP地址对应的主机名</span></li>     <li class="member"><span class="function">{@link php_uname()} - 返回运行 PHP 的系统的有关信息</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return string a string with the hostname on success, otherwise false is */
function gethostname () {}

/**
*<div id="function.dns-check-record" class="refentry">  <div class="refnamediv">   <h1 class="refname">dns_check_record</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dns_check_record</span> &mdash; <span class="dc-title">别名 <span class="function">{@link checkdnsrr()}</span></span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.dns-check-record-description">   <h3 class="title">说明</h3>   <p class="para">    此函数是该函数的别名：    <span class="function">{@link checkdnsrr()}</span>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool Returns <b>TRUE</b> if any records are found; returns <b>FALSE</b> if no records were found or if an error occurred.*/
function dns_check_record ($host, $type) {}

/**
*<div id="function.checkdnsrr" class="refentry">  <div class="refnamediv">   <h1 class="refname">checkdnsrr</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">checkdnsrr</span> &mdash; <span class="dc-title">给指定的主机（域名）或者IP地址做DNS通信检查</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.checkdnsrr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>checkdnsrr</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$host</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$type</span><span class="initializer"> = &quot;MX&quot;</span></span>   ] )</div>    <p class="para rdfs-comment">    根据不同记录（<span class="parameter" style="color:#2EACF9">type</span>）类型查询主机（<span class="parameter" style="color:#2EACF9">host</span>）相应的DNS记录。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.checkdnsrr-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">host</span></dt>       <dd>        <p class="para">        主机（<span class="parameter" style="color:#2EACF9">host</span>）可以是一个IP地址也可以是域名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>       <dd>        <p class="para">        解析记录类型（<span class="parameter" style="color:#2EACF9">type</span>）可能是下面这些类型中的任何一个：A，MX，NS，SOA，PTR，CNAME，AAAA，A6， SRV，NAPTR，TXT 或者 ANY。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.checkdnsrr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果记录能找到，就返回<strong><span>TRUE</span></strong>；如果查找不到该DNS记录或者发生了错误，就返回<strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.checkdnsrr-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          这个函数在Windows平台上也可以使用了。        </td>       </tr>        <tr>        <td>5.2.4</td>        <td>         增加了TXT的记录<span class="parameter" style="color:#2EACF9">类型</span>。        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         增加了AAAA的记录<span class="parameter" style="color:#2EACF9">类型</span>。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.checkdnsrr-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     出于对低版本在windows平台上的兼容性，可以试试<a href="http://pear.php.net/" class="link external">&raquo;&nbsp;PEAR</a>扩展包里面提供的     <a href="http://pear.php.net/package/Net_DNS" class="link external">&raquo;&nbsp;Net_DNS</a>类。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.checkdnsrr-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link dns_get_record()} - 获取指定主机的DNS记录</span></li>     <li class="member"><span class="function">{@link getmxrr()} - 获取互联网主机名对应的 MX 记录</span></li>     <li class="member"><span class="function">{@link gethostbyaddr()} - 获取指定的IP地址对应的主机名</span></li>     <li class="member"><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>     <li class="member"><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>     <li class="member">the named(8) manual page</li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool true if any records are found; returns false if no records*/
function checkdnsrr ($host, $type = null) {}

/**
*<div id="function.dns-get-mx" class="refentry">  <div class="refnamediv">   <h1 class="refname">dns_get_mx</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dns_get_mx</span> &mdash; <span class="dc-title">别名 <span class="function">{@link getmxrr()}</span></span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.dns-get-mx-description">   <h3 class="title">说明</h3>   <p class="para">    此函数是该函数的别名：    <span class="function">{@link getmxrr()}</span>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
*/
function dns_get_mx ($hostname, &$mxhosts, &$weight) {}

/**
*<div id="function.getmxrr" class="refentry">  <div class="refnamediv">   <h1 class="refname">getmxrr</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">getmxrr</span> &mdash; <span class="dc-title">获取互联网主机名对应的 MX 记录</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.getmxrr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>getmxrr</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$hostname</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$mxhosts</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$weight</span></span>   ] )</div>    <p class="para rdfs-comment">    搜索 <span class="parameter" style="color:#2EACF9">hostname</span>对应的 MX DNS 记录。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.getmxrr-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">hostname</span></dt>       <dd>        <p class="para">        互联网主机名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">mxhosts</span></dt>       <dd>        <p class="para">        找到的 MX 记录列表存放于 <span class="parameter" style="color:#2EACF9">mxhosts</span> 数组。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">weight</span></dt>       <dd>        <p class="para">        提供了 <span class="parameter" style="color:#2EACF9">weight</span> 数组后，它会用找到的权重信息填充数组。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.getmxrr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    找到记录返回  <strong><span>TRUE</span></strong>，没找到或者出错时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.getmxrr-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         Windows 平台上也能用这个函数了。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.getmxrr-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     本函数不应使用于地址验证。     仅在 MX 记录在 DNS 中找到时才会返回，然而根据 <a href="http://www.faqs.org/rfcs/rfc2821" class="link external">&raquo;&nbsp;RFC 2821</a>，     没有 MX 记录时， <span class="parameter" style="color:#2EACF9">hostname</span> 本身就是 MX 主机，优先级为 <em>0</em>。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     在兼容 Windows 实现之前的版本， 可以使用     <a href="http://pear.php.net/" class="link external">&raquo;&nbsp;PEAR</a> class 的     <a href="http://pear.php.net/package/Net_DNS" class="link external">&raquo;&nbsp;Net_DNS</a>。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.getmxrr-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link checkdnsrr()} - 给指定的主机（域名）或者IP地址做DNS通信检查</span></li>     <li class="member"><span class="function">{@link dns_get_record()} - 获取指定主机的DNS记录</span></li>     <li class="member"><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>     <li class="member"><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>     <li class="member"><span class="function">{@link gethostbyaddr()} - 获取指定的IP地址对应的主机名</span></li>     <li class="member">Linux 手册页面 <em>named(8)</em></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool true if any records are found; returns false if no records*/
function getmxrr ($hostname, array &$mxhosts, array &$weight = null) {}

/**
*<div id="function.dns-get-record" class="refentry">     <div class="refnamediv">         <h1 class="refname">dns_get_record</h1>         <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dns_get_record</span> &mdash; <span class="dc-title">获取指定主机的DNS记录</span></p>      </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.dns-get-record-description">         <h3 class="title">说明</h3>         <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">             <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>dns_get_record</strong></span>              ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$hostname</span></span>             [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$type</span><span class="initializer"> = DNS_ANY</span></span>             [, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$authns</span></span>             [, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$addtl</span></span>             [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">&$raw</span><span class="initializer"> = false</span></span>         ]]]] )</div>          <p class="para rdfs-comment">             获取指定主机（<span class="parameter" style="color:#2EACF9">hostname</span>）的DNS记录。         </p>     </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.dns-get-record-parameters">         <h3 class="title">参数</h3>         <span>             <dl>                                       <dt> <span class="parameter" style="color:#2EACF9">hostname</span></dt>                      <dd>                          <p class="para">                             主机名（<span class="parameter" style="color:#2EACF9">hostname</span>）应该是一个DNS解析生效的域名，例如“<em>www.example.com</em>”。主机名也可以是通过对逆向解析域做DNS逆向域名解析而得到，但是在大多数情况下<span class="function">{@link gethostbyaddr()}</span>更加适合做逆向域名解析。                         </p>                         <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:                              <p class="para">                                 每个DNS标准，邮件地址必须是<em>user.host</em>这样的格式（例如<em>hostmaster.example.com</em>而不是<em>hostmaster@example.com</em>），在使用<span class="function">{@link mail()}</span>这个函数之前请检查这个值，有必要的话还需要修改。                             </p>                         </p></blockquote>                     </dd>                                                        <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>                      <dd>                          <p class="para">                             默认情况下，<span class="function"><strong style="color:#CC7832">dns_get_record()</strong></span>将会搜索所有与<span class="parameter" style="color:#2EACF9">hostname</span>相关的记录，可以通过设置<span class="parameter" style="color:#2EACF9">type</span>来限定查询。<span class="parameter" style="color:#2EACF9">type</span>的值可以是下面的其中的任何一个： <strong><span>DNS_A</span></strong>，<strong><span>DNS_CNAME</span></strong>，<strong><span>DNS_HINFO</span></strong>，<strong><span>DNS_MX</span></strong>，<strong><span>DNS_NS</span></strong>，<strong><span>DNS_PTR</span></strong>，<strong><span>DNS_SOA</span></strong>，<strong><span>DNS_TXT</span></strong>，<strong><span>DNS_AAAA</span></strong>，<strong><span>DNS_SRV</span></strong>，<strong><span>DNS_NAPTR</span></strong>，<strong><span>DNS_A6</span></strong>，<strong><span>DNS_ALL</span></strong>或者<strong><span>DNS_ANY</span></strong>。                         </p>                         <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:                              <p class="para">                                 由于dns在各个平台上表现有些不一样，<strong><span>DNS_ANY</span></strong>不会总是返回所有的记录，<strong><span>DNS_ALL</span></strong>虽然慢一些，但是会得到所有的记录，所以使用DNS_ALL更加可靠些。                             </p>                         </p></blockquote>                     </dd>                                                        <dt> <span class="parameter" style="color:#2EACF9">authns</span></dt>                      <dd>                          <p class="para">                             以引用方式传递，如果写了该参数，那么将会得到该解析记录的DNS服务器（<em class="emphasis">Authoritative Name Servers</em>）的信息。                         </p>                     </dd>                                                        <dt> <span class="parameter" style="color:#2EACF9">addtl</span></dt>                      <dd>                          <p class="para">                             以引用方式传递，如果填写了该参数，将会得到<em class="emphasis">其他所有的DNS解析记录</em>。                         </p>                     </dd>                                                        <dt> <span class="parameter" style="color:#2EACF9">raw</span></dt>                      <dd>                          <p class="para">                             在原生模式下，在进行额外的查询的时候之前我们只执行请求的DNS类型，而不是循环查询所有的类型。                         </p>                     </dd>                               </dl>          </span>     </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.dns-get-record-returnvalues">         <h3 class="title">返回值</h3>         <p class="para">             这个函数返回一个关联数组，如果失败则  或者在失败时返回 <strong><span>FALSE</span></strong>。每个关联数组都至少包含了以下的这些键。             <em class="emphasis">at minimum</em> the following keys:             <table class="doctable table">                 <caption><strong>Basic DNS attributes</strong></caption>                                      <thead>                         <tr>                             <th>Attribute</th>                             <th>Meaning</th>                         </tr>                      </thead>                      <tbody class="tbody">                         <tr>                             <td>host</td>                             <td>                                 The record in the DNS namespace to which the rest of the associated data refers.                             </td>                         </tr>                          <tr>                             <td>class</td>                             <td>                                 <span class="function"><strong style="color:#CC7832">dns_get_record()</strong></span> only returns Internet class records and as                                 such this parameter will always return <em>IN</em>.                             </td>                         </tr>                          <tr>                             <td>type</td>                             <td>                                 String containing the record type.  Additional attributes will also be contained                                 in the resulting array dependant on the value of type. See table below.                             </td>                         </tr>                          <tr>                             <td>ttl</td>                             <td>                                 <em>&quot;Time To Live&quot;</em> remaining for this record. This will <em class="emphasis">not</em> equal                                 the record&#039;s original ttl, but will rather equal the original ttl minus whatever                                 length of time has passed since the authoritative name server was queried.                             </td>                         </tr>                      </tbody>                              </table>          </p>         <p class="para">             <table class="doctable table">                 <caption><strong>Other keys in associative arrays dependant on &#039;type&#039;</strong></caption>                                      <thead>                         <tr>                             <th>Type</th>                             <th>Extra Columns</th>                         </tr>                      </thead>                      <tbody class="tbody">                         <tr>                             <td><em>A</em></td>                             <td>                                 <em>ip</em>: An IPv4 addresses in dotted decimal notation.                             </td>                         </tr>                          <tr>                             <td><em>MX</em></td>                             <td>                                 <em>pri</em>: Priority of mail exchanger.                                 Lower numbers indicate greater priority.                                 <em>target</em>: FQDN of the mail exchanger.                                 See also <span class="function">{@link dns_get_mx()}</span>.                             </td>                         </tr>                          <tr>                             <td><em>CNAME</em></td>                             <td>                                 <em>target</em>: FQDN of location in DNS namespace to which                                 the record is aliased.                             </td>                         </tr>                          <tr>                             <td><em>NS</em></td>                             <td>                                 <em>target</em>: FQDN of the name server which is authoritative                                 for this hostname.                             </td>                         </tr>                          <tr>                             <td><em>PTR</em></td>                             <td>                                 <em>target</em>: Location within the DNS namespace to which                                 this record points.                             </td>                         </tr>                          <tr>                             <td><em>TXT</em></td>                             <td>                                 <em>txt</em>: Arbitrary string data associated with this record.                             </td>                         </tr>                          <tr>                             <td><em>HINFO</em></td>                             <td>                                 <em>cpu</em>: IANA number designating the CPU of the machine                                 referenced by this record.                                 <em>os</em>: IANA number designating the Operating System on                                 the machine referenced by this record.                                 See IANA&#039;s <a href="http://www.iana.org/assignments/operating-system-names" class="link external">&raquo;&nbsp;<em>Operating System                                 Names</em></a> for the meaning of these values.                             </td>                         </tr>                          <tr>                             <td><em>SOA</em></td>                             <td>                                 <em>mname</em>: FQDN of the machine from which the resource                                 records originated.                                 <em>rname</em>: Email address of the administrative contain                                 for this domain.                                 <em>serial</em>: Serial # of this revision of the requested                                 domain.                                 <em>refresh</em>: Refresh interval (seconds) secondary name                                 servers should use when updating remote copies of this domain.                                 <em>retry</em>: Length of time (seconds) to wait after a                                 failed refresh before making a second attempt.                                 <em>expire</em>: Maximum length of time (seconds) a secondary                                 DNS server should retain remote copies of the zone data without a                                 successful refresh before discarding.                                 <em>minimum-ttl</em>: Minimum length of time (seconds) a                                 client can continue to use a DNS resolution before it should request                                 a new resolution from the server.  Can be overridden by individual                                 resource records.                             </td>                         </tr>                          <tr>                             <td><em>AAAA</em></td>                             <td>                                 <em>ipv6</em>: IPv6 address                             </td>                         </tr>                          <tr>                             <td><em>A6</em>(PHP &gt;= 5.1.0)</td>                             <td>                                 <em>masklen</em>: Length (in bits) to inherit from the target                                 specified by <span class="parameter" style="color:#2EACF9">chain</span>.                                 <em>ipv6</em>: Address for this specific record to merge with                                 <span class="parameter" style="color:#2EACF9">chain</span>.                                 <em>chain</em>: Parent record to merge with                                 <span class="parameter" style="color:#2EACF9">ipv6</span> data.                             </td>                         </tr>                          <tr>                             <td><em>SRV</em></td>                             <td>                                 <em>pri</em>: (Priority) lowest priorities should be used first.                                 <em>weight</em>: Ranking to weight which of commonly prioritized                                 <span class="parameter" style="color:#2EACF9">targets</span> should be chosen at random.                                 <em>target</em> and <em>port</em>: hostname and port                                 where the requested service can be found.                                 For additional information see: <a href="http://www.faqs.org/rfcs/rfc2782" class="link external">&raquo;&nbsp;RFC 2782</a>                             </td>                         </tr>                          <tr>                             <td><em>NAPTR</em></td>                             <td>                                 <em>order</em> and <em>pref</em>: Equivalent to                                 <span class="parameter" style="color:#2EACF9">pri</span> and <span class="parameter" style="color:#2EACF9">weight</span> above.                                 <em>flags</em>, <em>services</em>, <em>regex</em>,                                 and <em>replacement</em>: Parameters as defined by                                 <a href="http://www.faqs.org/rfcs/rfc2915" class="link external">&raquo;&nbsp;RFC 2915</a>.                             </td>                         </tr>                      </tbody>                              </table>          </p>     </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.dns-get-record-changelog">         <h3 class="title">更新日志</h3>         <span>             <table class="doctable informaltable">                                      <thead>                         <tr>                             <th>版本</th>                             <th>说明</th>                         </tr>                      </thead>                      <tbody class="tbody">                         <tr>                             <td>5.4.0</td>                             <td>                                 增加了参数<span class="parameter" style="color:#2EACF9">raw</span>。                             </td>                         </tr>                          <tr>                             <td>5.3.0</td>                             <td>                                 可以是在windows平台上使用这个函数了。                             </td>                         </tr>                          <tr>                             <td>5.3.0</td>                             <td>                                 在此版本之前，如果给参数<span class="parameter" style="color:#2EACF9">authns</span>传入值，则必须同时传入<span class="parameter" style="color:#2EACF9">addtl</span>的值。                             </td>                         </tr>                      </tbody>                              </table>          </span>     </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.dns-get-record-examples">         <h3 class="title">范例</h3>         <span>             <div class="example" id="example-5475">                 <p><strong>Example #1 使用 <span class="function"><strong style="color:#CC7832">dns_get_record()</strong></span>函数</strong></p>                 <div class="example-contents">                     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">dns_get_record</span><span style="color: #007700">(</span><span style="color: #DD0000">"php.net"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>                 </div>                  <div class="example-contents"><p>以上例程的输出类似于：</p></div>                 <div class="example-contents screen" style="background:black;padding-left:5px;">                     <div class="cdata"><span> Array (     [0] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; MX             [pri] =&gt; 5             [target] =&gt; pair2.php.net             [class] =&gt; IN             [ttl] =&gt; 6765         )      [1] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; A             [ip] =&gt; 64.246.30.37             [class] =&gt; IN             [ttl] =&gt; 8125         )  ) </span></div>                 </div>             </div>             <div class="example" id="example-5476">                 <p><strong>Example #2 使用<span class="function"><strong style="color:#CC7832">dns_get_record()</strong></span>配合DNS_ANY的例子</strong></p>                 <div class="example-contents"><p>                     由于我们经常会想获取一个邮件服务器的对应的IP地址的MX记录是否已经生效。在使用<span class="function"><strong style="color:#CC7832">dns_get_record()</strong></span>函数之后，<span class="parameter" style="color:#2EACF9">addtl</span>能够返回一个相关的数组记录，<span class="parameter" style="color:#2EACF9">authns</span>参数则会返回授权服务器的列表信息。                 </p></div>                 <div class="example-contents">                     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Request&nbsp;"ANY"&nbsp;record&nbsp;for&nbsp;php.net,<br />&nbsp;&nbsp;&nbsp;and&nbsp;create&nbsp;$authns&nbsp;and&nbsp;$addtl&nbsp;arrays<br />&nbsp;&nbsp;&nbsp;containing&nbsp;list&nbsp;of&nbsp;name&nbsp;servers&nbsp;and<br />&nbsp;&nbsp;&nbsp;any&nbsp;additional&nbsp;records&nbsp;which&nbsp;go&nbsp;with<br />&nbsp;&nbsp;&nbsp;them&nbsp;<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">dns_get_record</span><span style="color: #007700">(</span><span style="color: #DD0000">"php.net"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">DNS_ANY</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$authns</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$addtl</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Result&nbsp;=&nbsp;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Auth&nbsp;NS&nbsp;=&nbsp;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$authns</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Additional&nbsp;=&nbsp;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$addtl</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>                 </div>                  <div class="example-contents"><p>以上例程的输出类似于：</p></div>                 <div class="example-contents screen" style="background:black;padding-left:5px;">                     <div class="cdata"><span> Result = Array (     [0] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; MX             [pri] =&gt; 5             [target] =&gt; pair2.php.net             [class] =&gt; IN             [ttl] =&gt; 6765         )      [1] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; A             [ip] =&gt; 64.246.30.37             [class] =&gt; IN             [ttl] =&gt; 8125         )  ) Auth NS = Array (     [0] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; NS             [target] =&gt; remote1.easydns.com             [class] =&gt; IN             [ttl] =&gt; 10722         )      [1] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; NS             [target] =&gt; remote2.easydns.com             [class] =&gt; IN             [ttl] =&gt; 10722         )      [2] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; NS             [target] =&gt; ns1.easydns.com             [class] =&gt; IN             [ttl] =&gt; 10722         )      [3] =&gt; Array         (             [host] =&gt; php.net             [type] =&gt; NS             [target] =&gt; ns2.easydns.com             [class] =&gt; IN             [ttl] =&gt; 10722         )  ) Additional = Array (     [0] =&gt; Array         (             [host] =&gt; pair2.php.net             [type] =&gt; A             [ip] =&gt; 216.92.131.5             [class] =&gt; IN             [ttl] =&gt; 6766         )      [1] =&gt; Array         (             [host] =&gt; remote1.easydns.com             [type] =&gt; A             [ip] =&gt; 64.39.29.212             [class] =&gt; IN             [ttl] =&gt; 100384         )      [2] =&gt; Array         (             [host] =&gt; remote2.easydns.com             [type] =&gt; A             [ip] =&gt; 212.100.224.80             [class] =&gt; IN             [ttl] =&gt; 81241         )      [3] =&gt; Array         (             [host] =&gt; ns1.easydns.com             [type] =&gt; A             [ip] =&gt; 216.220.40.243             [class] =&gt; IN             [ttl] =&gt; 81241         )      [4] =&gt; Array         (             [host] =&gt; ns2.easydns.com             [type] =&gt; A             [ip] =&gt; 216.220.40.244             [class] =&gt; IN             [ttl] =&gt; 81241         )  ) </span></div>                 </div>             </div>         </span>     </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.dns-get-record-notes">         <h3 class="title">注释</h3>         <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:              <p class="para">                 For compatibility with versions before PHP 5.3.0 on some operating systems,                 try the <a href="http://pear.php.net/" class="link external">&raquo;&nbsp;PEAR</a> class                 <a href="http://pear.php.net/package/Net_DNS" class="link external">&raquo;&nbsp;Net_DNS</a>.             </p>         </p></blockquote>     </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.dns-get-record-seealso">         <h3 class="title">参见</h3>         <span>             <ul class="simplelist">                 <li class="member"><span class="function">{@link dns_get_mx()} - 别名 getmxrr</span></li>                 <li class="member"><span class="function">{@link dns_check_record()} - 别名 checkdnsrr</span></li>             </ul>         </span>     </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return array This function returns an array of associative arrays. Each associative array contains*/
function dns_get_record ($hostname, $type = DNS_ANY, array &$authns = null, array &$addtl = null, &$raw = false) {}