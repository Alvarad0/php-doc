<?php

/**
*<div id="function.stream-select" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_select</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_select</span> &mdash; <span class="dc-title">Runs the equivalent of the select() system call on the given    arrays of streams with a timeout specified by tv_sec and tv_usec </span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-select-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>stream_select</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$read</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$write</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$except</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$tv_sec</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$tv_usec</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> function accepts arrays of streams and    waits for them to change status. Its operation is equivalent to that of    the <span class="function">{@link socket_select()}</span> function except in that it acts on streams.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-select-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">read</span></dt>       <dd>        <p class="para">        The streams listed in the <span class="parameter" style="color:#2EACF9">read</span> array will be watched to        see if characters become available for reading (more precisely, to see if        a read will not block - in particular, a stream resource is also ready on        end-of-file, in which case an <span class="function">{@link fread()}</span> will return        a zero length string).       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">write</span></dt>       <dd>        <p class="para">        The streams listed in the <span class="parameter" style="color:#2EACF9">write</span> array will be        watched to see if a write will not block.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">except</span></dt>       <dd>        <p class="para">        The streams listed in the <span class="parameter" style="color:#2EACF9">except</span> array will be        watched for high priority exceptional (&quot;out-of-band&quot;) data arriving.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         When <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> returns, the arrays         <span class="parameter" style="color:#2EACF9">read</span>, <span class="parameter" style="color:#2EACF9">write</span> and         <span class="parameter" style="color:#2EACF9">except</span> are modified to indicate which stream         resource(s) actually changed status.        </p>       </p></blockquote>       <span class="simpara">        You do not need to pass every array to        <span class="function"><strong style="color:#CC7832">stream_select()</strong></span>. You can leave it out and use an        empty array or <strong><span>NULL</span></strong> instead. Also do not forget that those arrays are        passed <em class="emphasis">by reference</em> and will be modified after        <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> returns.       </span>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">tv_sec</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">tv_sec</span> and <span class="parameter" style="color:#2EACF9">tv_usec</span>        together form the <em class="emphasis">timeout</em> parameter,        <span class="parameter" style="color:#2EACF9">tv_sec</span> specifies the number of seconds while        <span class="parameter" style="color:#2EACF9">tv_usec</span> the number of microseconds.        The <span class="parameter" style="color:#2EACF9">timeout</span> is an upper bound on the amount of time        that <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> will wait before it returns.        If <span class="parameter" style="color:#2EACF9">tv_sec</span> and <span class="parameter" style="color:#2EACF9">tv_usec</span> are        both set to <em>0</em>, <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> will        not wait for data - instead it will return immediately, indicating the        current status of the streams.       </p>       <p class="para">        If <span class="parameter" style="color:#2EACF9">tv_sec</span> is <strong><span>NULL</span></strong> <span class="function"><strong style="color:#CC7832">stream_select()</strong></span>        can block indefinitely, returning only when an event on one of the        watched streams occurs (or if a signal interrupts the system call).       </p>       <div class="warning"><strong class="warning">Warning</strong>        <p class="para">         Using a timeout value of <em>0</em> allows you to         instantaneously poll the status of the streams, however, it is NOT a         good idea to use a <em>0</em> timeout value in a loop as it         will cause your script to consume too much CPU time.        </p>        <p class="para">         It is much better to specify a timeout value of a few seconds, although         if you need to be checking and running other code concurrently, using a         timeout value of at least <em>200000</em> microseconds will         help reduce the CPU usage of your script.        </p>        <p class="para">         Remember that the timeout value is the maximum time that will elapse;         <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> will return as soon as the         requested streams are ready for use.        </p>       </div>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">tv_usec</span></dt>       <dd>        <p class="para">        See <span class="parameter" style="color:#2EACF9">tv_sec</span> description.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-select-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    On success <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> returns the number of    stream resources contained in the modified arrays, which may be zero if    the timeout expires before anything interesting happens. On error <strong><span>FALSE</span></strong>    is returned and a warning raised (this can happen if the system call is    interrupted by an incoming signal).   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-select-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4828">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> Example</strong></p>     <div class="example-contents"><p>      This example checks to see if data has arrived for reading on either      <span class="parameter" style="color:#2EACF9">$stream1</span> or <span class="parameter" style="color:#2EACF9">$stream2</span>.      Since the timeout value is <em>0</em> it will return      immediately:     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Prepare&nbsp;the&nbsp;read&nbsp;array&nbsp;<br /></span><span style="color: #9876AA">$read&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">$stream1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$stream2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$write&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$except&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br />if&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">===&nbsp;(</span><span style="color: #9876AA">$num_changed_streams&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$read</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$write</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$except</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Error&nbsp;handling&nbsp;<br /></span><span style="color: #007700">}&nbsp;elseif&nbsp;(</span><span style="color: #9876AA">$num_changed_streams&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;At&nbsp;least&nbsp;on&nbsp;one&nbsp;of&nbsp;the&nbsp;streams&nbsp;something&nbsp;interesting&nbsp;happened&nbsp;<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-select-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Due to a limitation in the current Zend Engine it is not possible to pass a     constant modifier like <strong><span>NULL</span></strong> directly as a parameter to a function     which expects this parameter to be passed by reference. Instead use a     temporary variable or an expression with the leftmost member being a     temporary variable:     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$e&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">stream_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$w</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>    </div>     </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">    Be sure to use the <em>===</em> operator when checking for an    error. Since the <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> may return 0 the    comparison with <em>==</em> would evaluate to <strong><span>TRUE</span></strong>:    <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$e&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br />if&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">stream_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$w</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"stream_select()&nbsp;failed\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>    </div>     </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     If you read/write to a stream returned in the arrays be aware that     they do not necessarily read/write the full amount of data you have     requested. Be prepared to even only be able to read/write a single     byte.    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Some streams (like <em>zlib</em>) cannot be selected by this     function.    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Windows compatibility: <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> used on a     pipe returned from <span class="function">{@link proc_open()}</span> may cause data loss     under Windows 98.    </p>    <p class="para">     Use of <span class="function"><strong style="color:#CC7832">stream_select()</strong></span> on     file descriptors returned by <span class="function">{@link proc_open()}</span> will fail     and return <strong><span>FALSE</span></strong> under Windows.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-select-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return int On success stream_select returns the number of*/
function stream_select (array &$read, array &$write, array &$except, $tv_sec, $tv_usec = null) {}

/**
*<div id="function.stream-context-create" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_create</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_create</span> &mdash; <span class="dc-title">创建资源流上下文</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-create-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_create</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$options</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$params</span></span>   ]] )</div>    <p class="para rdfs-comment">    创建并返回一个资源流上下文，该资源流中包含了 <span class="parameter" style="color:#2EACF9">options</span> 中提前设定的所有参数的值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-create-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">options</span></dt>       <dd>        <p class="para">        必须是一个二维关联数组，格式如下：<em>$arr[&#039;wrapper&#039;][&#039;option&#039;] = $value</em> 。       </p>       <p class="para">        默认是一个空数组。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">params</span></dt>       <dd>        <p class="para">        必须是 <em>$arr[&#039;parameter&#039;] = $value</em> 格式的关联数组。        请参考 <a href="http://php.net/manual/zh/context.php" class="link">context parameters</a> 里的标准资源流参数列表。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-create-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    上下文资源流，类型为 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-context-create-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         增加了可选参数 <span class="parameter" style="color:#2EACF9">params</span> 。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-context-create-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-4808">    <p><strong>Example #1 使用 <span class="function"><strong style="color:#CC7832">stream_context_create()</strong></span></strong></p>    <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$opts&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;</span><span style="color: #DD0000">'http'</span><span style="color: #007700">=&gt;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'method'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'header'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"Accept-language:&nbsp;en\r\n"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"Cookie:&nbsp;foo=bar\r\n"<br />&nbsp;&nbsp;</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$context&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(</span><span style="color: #9876AA">$opts</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Sends&nbsp;an&nbsp;http&nbsp;request&nbsp;to&nbsp;www.example.com<br />&nbsp;&nbsp;&nbsp;with&nbsp;additional&nbsp;headers&nbsp;shown&nbsp;above&nbsp;<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>    </div>    </div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-context-create-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_context_set_option()} - 对资源流、数据包或者上下文设置参数</span></li>    <li class="member">Listing of supported wrappers (<a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>)</li>    <li class="member">Context options (<a href="http://php.net/manual/zh/context.php" class="xref">上下文（Context）选项和参数</a>)</li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource A stream context resource.*/
function stream_context_create (array $options = null, array $params = null) {}

/**
*<div id="function.stream-context-set-params" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_set_params</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_set_params</span> &mdash; <span class="dc-title">Set parameters for a stream/wrapper/context</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-set-params-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_set_params</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_or_context</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$params</span></span>    )</div>    <p class="para rdfs-comment">    Sets parameters on the specified context.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-set-params-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream_or_context</span></dt>       <dd>        <p class="para">        The stream or context to apply the parameters too.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">params</span></dt>       <dd>        <p class="para">        An array of parameters to set.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         <span class="parameter" style="color:#2EACF9">params</span> should be an associative array of the structure:         <em>$params[&#039;paramname&#039;] = &quot;paramvalue&quot;;</em>.        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 options" id="refsect1-function.stream-context-set-params-options">   <h3 class="title">Supported parameters</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>Parameters</th>       <th>Purpose</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td><em>notification</em></td>       <td>        Name of user-defined callback function to be called whenever a stream triggers a notification.        Only supported for <a href="http://php.net/manual/zh/wrappers.http.php" class="link">http://</a> and        <a href="http://php.net/manual/zh/wrappers.ftp.php" class="link">ftp://</a> stream wrappers.       </td>      </tr>       <tr>       <td><em>options</em></td>       <td>        Array of options as in <a href="http://php.net/manual/zh/context.php" class="link">context options and         parameters</a>.       </td>      </tr>      </tbody>       </table>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-params-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-context-set-params-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_notification_callback()} - A callback function for the notification context parameter</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_context_set_params ($stream_or_context, array $params) {}

/**
*<div id="function.stream-context-get-params" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_get_params</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_get_params</span> &mdash; <span class="dc-title">Retrieves parameters from a context</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-get-params-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_get_params</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_or_context</span></span>    )</div>    <p class="para rdfs-comment">    Retrieves parameter and options information from the stream or context.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-get-params-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream_or_context</span></dt>       <dd>        <p class="para">        A stream <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> or a        <a href="http://php.net/manual/zh/context.php" class="link">context</a> <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-get-params-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an associate array containing all context options and parameters.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-context-get-params-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4811">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_context_get_params()</strong></span> example</strong></p>     <div class="example-contents"><p>      Basic usage example     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$ctx&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$params&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"notification"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"stream_notification_callback"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">stream_context_set_params</span><span style="color: #007700">(</span><span style="color: #9876AA">$ctx</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$params</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_context_get_params</span><span style="color: #007700">(</span><span style="color: #9876AA">$ctx</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> array(2) {   [&quot;notification&quot;]=&gt;   string(28) &quot;stream_notification_callback&quot;   [&quot;options&quot;]=&gt;   array(0) {   } } </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-context-get-params-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_context_set_option()} - 对资源流、数据包或者上下文设置参数</span></li>     <li class="member"><span class="function"><strong style="color:#CC7832">stream_context_get_params()</strong></span></li>     <li class="member"><span class="function">{@link stream_context_set_params()} - Set parameters for a stream/wrapper/context</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return array an associate array containing all context options and parameters.*/
function stream_context_get_params ($stream_or_context) {}

/**
*<div id="function.stream-context-set-option" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_set_option</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_set_option</span> &mdash; <span class="dc-title">对资源流、数据包或者上下文设置参数</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-set-option-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_or_context</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$wrapper</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$option</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">     <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>      ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_or_context</span></span>     , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$options</span></span>     )</div>    <p class="simpara">      给指定的上下文设置参数。参数 <span class="parameter" style="color:#2EACF9">value</span>      是设置 <span class="parameter" style="color:#2EACF9">wrapper</span> 的 <span class="parameter" style="color:#2EACF9">option</span> 参数的值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-set-option-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream_or_context</span></dt>       <dd>        <p class="para">        需要添加参数的资源流或者上下文。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">options</span></dt>       <dd>        <p class="para">        添加给默认的上下文的参数。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         <span class="parameter" style="color:#2EACF9">options</span> 必须是一个 <em>$arr[&#039;wrapper&#039;][&#039;option&#039;] = $value</em> 格式二维关联数组 。        </p>        <p class="para">         请参考 <a href="http://php.net/manual/zh/context.php" class="link">context options and parameters</a> 查看资源流参数列表。         </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-option-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_context_set_option ($stream_or_context, $wrapper, $option, $value) {}

/**
*<div id="function.stream-context-set-option" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_set_option</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_set_option</span> &mdash; <span class="dc-title">对资源流、数据包或者上下文设置参数</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-set-option-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_or_context</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$wrapper</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$option</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$value</span></span>    )</div>     <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">     <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>      ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_or_context</span></span>     , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$options</span></span>     )</div>    <p class="simpara">      给指定的上下文设置参数。参数 <span class="parameter" style="color:#2EACF9">value</span>      是设置 <span class="parameter" style="color:#2EACF9">wrapper</span> 的 <span class="parameter" style="color:#2EACF9">option</span> 参数的值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-set-option-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream_or_context</span></dt>       <dd>        <p class="para">        需要添加参数的资源流或者上下文。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">options</span></dt>       <dd>        <p class="para">        添加给默认的上下文的参数。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         <span class="parameter" style="color:#2EACF9">options</span> 必须是一个 <em>$arr[&#039;wrapper&#039;][&#039;option&#039;] = $value</em> 格式二维关联数组 。        </p>        <p class="para">         请参考 <a href="http://php.net/manual/zh/context.php" class="link">context options and parameters</a> 查看资源流参数列表。         </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-option-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_context_set_option ($stream_or_context, array $options) {}

/**
*<div id="function.stream-context-get-options" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_get_options</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_get_options</span> &mdash; <span class="dc-title">获取资源流/数据包/上下文的参数</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-get-options-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_get_options</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_or_context</span></span>    )</div>    <p class="simpara">    返回指定资源流或者上下文的数组参数。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-get-options-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream_or_context</span></dt>       <dd>        <p class="para">        获取参数信息的 <span class="type" style="color:#EAB766"><span class="type stream" style="color:#EAB766">stream</span></span> 或者 <span class="type" style="color:#EAB766"><span class="type context" style="color:#EAB766">context</span></span> 。       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-get-options-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个包含有原参数的关联数组。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-context-get-options-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4810">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_context_get_options()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$params&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"method"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"POST"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">stream_context_get_default</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"http"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$params</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_context_get_options</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_context_get_default</span><span style="color: #007700">()));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> array(1) {   [&quot;http&quot;]=&gt;   array(1) {     [&quot;method&quot;]=&gt;     string(4) &quot;POST&quot;   } } </span></div>     </div>    </div>   </span>  </div>     <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return array an associative array with the options.*/
function stream_context_get_options ($stream_or_context) {}

/**
*<div id="function.stream-context-get-default" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_get_default</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_get_default</span> &mdash; <span class="dc-title">Retrieve the default stream context</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-get-default-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_get_default</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$options</span></span>   ] )</div>    <p class="simpara">    Returns the default stream context which is used whenever file operations    (<span class="function">{@link fopen()}</span>, <span class="function">{@link file_get_contents()}</span>, etc...)    are called without a context parameter.  Options for the default context    can optionally be specified with this function using the same syntax as    <span class="function">{@link stream_context_create()}</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-get-default-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">options</span></dt>       <dd>        <span class="simpara">        <span class="parameter" style="color:#2EACF9">options</span> must be an associative        array of associative arrays in the format        <em>$arr[&#039;wrapper&#039;][&#039;option&#039;] = $value</em>.       </span>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         As of PHP 5.3.0, the <span class="function">{@link stream_context_set_default()}</span> function         can be used to set the default context.        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-get-default-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    A stream context <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-context-get-default-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4809">     <p><strong>Example #1 Using <span class="function"><strong style="color:#CC7832">stream_context_get_default()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$default_opts&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;</span><span style="color: #DD0000">'http'</span><span style="color: #007700">=&gt;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'method'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'header'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"Accept-language:&nbsp;en\r\n"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"Cookie:&nbsp;foo=bar"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'proxy'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"tcp://10.54.1.39:8000"<br />&nbsp;&nbsp;</span><span style="color: #007700">)<br />);<br /><br /><br /></span><span style="color: #9876AA">$alternate_opts&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;</span><span style="color: #DD0000">'http'</span><span style="color: #007700">=&gt;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'method'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"POST"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'header'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"Content-type:&nbsp;application/x-www-form-urlencoded\r\n"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"Content-length:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #DD0000">"baz=bomb"</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'content'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"baz=bomb"<br />&nbsp;&nbsp;</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$default&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_context_get_default</span><span style="color: #007700">(</span><span style="color: #9876AA">$default_opts</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$alternate&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(</span><span style="color: #9876AA">$alternate_opts</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Sends&nbsp;a&nbsp;regular&nbsp;GET&nbsp;request&nbsp;to&nbsp;proxy&nbsp;server&nbsp;at&nbsp;10.54.1.39<br />&nbsp;*&nbsp;For&nbsp;www.example.com&nbsp;using&nbsp;context&nbsp;options&nbsp;specified&nbsp;in&nbsp;$default_opts<br />&nbsp;<br /></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Sends&nbsp;a&nbsp;POST&nbsp;request&nbsp;directly&nbsp;to&nbsp;www.example.com<br />&nbsp;*&nbsp;Using&nbsp;context&nbsp;options&nbsp;specified&nbsp;in&nbsp;$alternate_opts<br />&nbsp;<br /></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$alternate</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-context-get-default-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>     <li class="member">Listing of supported wrappers with context options (<a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>).</li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource A stream context resource.*/
function stream_context_get_default (array $options = null) {}

/**
*<div id="function.stream-context-set-default" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_context_set_default</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_context_set_default</span> &mdash; <span class="dc-title">Set the default stream context</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-context-set-default-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_context_set_default</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$options</span></span>    )</div>    <p class="simpara">    Set the default stream context which will be used whenever file operations    (<span class="function">{@link fopen()}</span>, <span class="function">{@link file_get_contents()}</span>, etc...)    are called without a context parameter. Uses the same syntax as    <span class="function">{@link stream_context_create()}</span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-context-set-default-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">options</span></dt>       <dd>        <p class="para">        The options to set for the default context.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         <span class="parameter" style="color:#2EACF9">options</span> must be an associative         array of associative arrays in the format         <em>$arr[&#039;wrapper&#039;][&#039;option&#039;] = $value</em>.        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-default-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the default stream context.    </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-context-set-default-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4812">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_context_set_default()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$default_opts&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;</span><span style="color: #DD0000">'http'</span><span style="color: #007700">=&gt;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'method'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'header'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"Accept-language:&nbsp;en\r\n"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"Cookie:&nbsp;foo=bar"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'proxy'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"tcp://10.54.1.39:8000"<br />&nbsp;&nbsp;</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$default&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_context_set_default</span><span style="color: #007700">(</span><span style="color: #9876AA">$default_opts</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Sends&nbsp;a&nbsp;regular&nbsp;GET&nbsp;request&nbsp;to&nbsp;proxy&nbsp;server&nbsp;at&nbsp;10.54.1.39<br />&nbsp;*&nbsp;For&nbsp;www.example.com&nbsp;using&nbsp;context&nbsp;options&nbsp;specified&nbsp;in&nbsp;$default_opts<br />&nbsp;<br /></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-context-set-default-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>     <li class="member"><span class="function">{@link stream_context_get_default()} - Retrieve the default stream context</span></li>     <li class="member">Listing of supported wrappers with context options (<a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>).</li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource the default stream context.*/
function stream_context_set_default (array $options) {}

/**
*<div id="function.stream-filter-prepend" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_filter_prepend</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_filter_prepend</span> &mdash; <span class="dc-title">Attach a filter to a stream</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-filter-prepend-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_filter_prepend</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filtername</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$read_write</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$params</span></span>   ]] )</div>    <p class="para rdfs-comment">    Adds <span class="parameter" style="color:#2EACF9">filtername</span> to the list of filters    attached to <span class="parameter" style="color:#2EACF9">stream</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-filter-prepend-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        The target stream.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">filtername</span></dt>       <dd>        <p class="para">        The filter name.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">read_write</span></dt>       <dd>        <p class="para">        By default, <span class="function"><strong style="color:#CC7832">stream_filter_prepend()</strong></span> will        attach the filter to the <em>read filter chain</em>        if the file was opened for reading (i.e. File Mode:        <em>r</em>, and/or <em>+</em>).  The filter        will also be attached to the <em>write filter chain</em>        if the file was opened for writing (i.e. File Mode:        <em>w</em>, <em>a</em>, and/or <em>+</em>).        <strong><span>STREAM_FILTER_READ</span></strong>,        <strong><span>STREAM_FILTER_WRITE</span></strong>, and/or        <strong><span>STREAM_FILTER_ALL</span></strong> can also be passed to the        <span class="parameter" style="color:#2EACF9">read_write</span> parameter to override this behavior.        See <span class="function">{@link stream_filter_append()}</span> for an example of        using this parameter.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">params</span></dt>       <dd>        <p class="para">        This filter will be added with the specified <span class="parameter" style="color:#2EACF9">params</span>        to the <em class="emphasis">beginning</em> of the list and will therefore be        called first during stream operations.  To add a filter to the end of the        list, use <span class="function">{@link stream_filter_append()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-filter-prepend-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a resource on success or <strong><span>FALSE</span></strong> on failure. The resource can be    used to refer to this filter instance during a call to    <span class="function">{@link stream_filter_remove()}</span>.   </p>    <p class="para">    <strong><span>FALSE</span></strong> is returned if <span class="parameter" style="color:#2EACF9">stream</span> is not a resource or    if <span class="parameter" style="color:#2EACF9">filtername</span> cannot be located.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-filter-prepend-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         Prior to PHP 5.1.0, this function returns <strong><span>TRUE</span></strong> on success         或者在失败时返回 <strong><span>FALSE</span></strong>.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-filter-prepend-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <strong>When using custom (user) filters</strong><br />    <span class="simpara">     <span class="function">{@link stream_filter_register()}</span> must be called first     in order to register the desired user filter to <span class="parameter" style="color:#2EACF9">filtername</span>.    </span>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     Stream data is read from resources (both local and remote) in chunks,     with any unconsumed data kept in internal buffers.  When a new     filter is prepended to a stream, data in the internal buffers,     which has already been processed through other filters will     <em class="emphasis">not</em> be reprocessed through the new filter     at that time.  This differs from the behavior of     <span class="function">{@link stream_filter_append()}</span>.    </span>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     When a filter is added for read and write, two instances of the filter     are created. <span class="function"><strong style="color:#CC7832">stream_filter_prepend()</strong></span> must be called twice      with <strong><span>STREAM_FILTER_READ</span></strong> and      <strong><span>STREAM_FILTER_WRITE</span></strong> to get both filter resources.    </span>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-filter-prepend-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_filter_register()} - Register a user defined stream filter</span></li>    <li class="member"><span class="function">{@link stream_filter_append()} - Attach a filter to a stream</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource a resource which can be used to refer to this filter*/
function stream_filter_prepend ($stream, $filtername, $read_write = null, $params = null) {}

/**
*<div id="function.stream-filter-append" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_filter_append</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_filter_append</span> &mdash; <span class="dc-title">Attach a filter to a stream</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-filter-append-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_filter_append</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filtername</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$read_write</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$params</span></span>   ]] )</div>    <p class="para rdfs-comment">    Adds <span class="parameter" style="color:#2EACF9">filtername</span> to the list of filters    attached to <span class="parameter" style="color:#2EACF9">stream</span>.     </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-filter-append-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        The target stream.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">filtername</span></dt>       <dd>        <p class="para">        The filter name.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">read_write</span></dt>       <dd>        <p class="para">        By default, <span class="function"><strong style="color:#CC7832">stream_filter_append()</strong></span> will        attach the filter to the <em>read filter chain</em>        if the file was opened for reading (i.e. File Mode:        <em>r</em>, and/or <em>+</em>).  The filter        will also be attached to the <em>write filter chain</em>        if the file was opened for writing (i.e. File Mode:        <em>w</em>, <em>a</em>, and/or <em>+</em>).        <strong><span>STREAM_FILTER_READ</span></strong>,        <strong><span>STREAM_FILTER_WRITE</span></strong>, and/or        <strong><span>STREAM_FILTER_ALL</span></strong> can also be passed to the        <span class="parameter" style="color:#2EACF9">read_write</span> parameter to override this behavior.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">params</span></dt>       <dd>        <p class="para">        This filter will be added with the specified         <span class="parameter" style="color:#2EACF9">params</span> to the <em class="emphasis">end</em> of        the list and will therefore be called last during stream operations.        To add a filter to the beginning of the list, use        <span class="function">{@link stream_filter_prepend()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-filter-append-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a resource on success or <strong><span>FALSE</span></strong> on failure. The resource can be    used to refer to this filter instance during a call to    <span class="function">{@link stream_filter_remove()}</span>.   </p>    <p class="para">    <strong><span>FALSE</span></strong> is returned if <span class="parameter" style="color:#2EACF9">stream</span> is not a resource or    if <span class="parameter" style="color:#2EACF9">filtername</span> cannot be located.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-filter-append-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         Prior to PHP 5.1.0, this function returns <strong><span>TRUE</span></strong> on success         或者在失败时返回 <strong><span>FALSE</span></strong>.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-filter-append-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4814">     <p><strong>Example #1 Controlling where filters are applied</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Open&nbsp;a&nbsp;test&nbsp;file&nbsp;for&nbsp;reading&nbsp;and&nbsp;writing&nbsp;<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'w+'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Apply&nbsp;the&nbsp;ROT13&nbsp;filter&nbsp;to&nbsp;the<br />&nbsp;*&nbsp;write&nbsp;filter&nbsp;chain,&nbsp;but&nbsp;not&nbsp;the<br />&nbsp;*&nbsp;read&nbsp;filter&nbsp;chain&nbsp;<br /></span><span style="color: #9876AA">stream_filter_append</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"string.rot13"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_FILTER_WRITE</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Write&nbsp;a&nbsp;simple&nbsp;string&nbsp;to&nbsp;the&nbsp;file<br />&nbsp;*&nbsp;it&nbsp;will&nbsp;be&nbsp;ROT13&nbsp;transformed&nbsp;on&nbsp;the<br />&nbsp;*&nbsp;way&nbsp;out&nbsp;<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"This&nbsp;is&nbsp;a&nbsp;test\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Back&nbsp;up&nbsp;to&nbsp;the&nbsp;beginning&nbsp;of&nbsp;the&nbsp;file&nbsp;<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Read&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;file&nbsp;back&nbsp;out.<br />&nbsp;*&nbsp;Had&nbsp;the&nbsp;filter&nbsp;been&nbsp;applied&nbsp;to&nbsp;the<br />&nbsp;*&nbsp;read&nbsp;filter&nbsp;chain&nbsp;as&nbsp;well,&nbsp;we&nbsp;would&nbsp;see<br />&nbsp;*&nbsp;the&nbsp;text&nbsp;ROT13ed&nbsp;back&nbsp;to&nbsp;its&nbsp;original&nbsp;state&nbsp;<br /></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Expected&nbsp;Output<br />&nbsp;&nbsp;&nbsp;---------------<br /><br />Guvf&nbsp;vf&nbsp;n&nbsp;grfg<br /><br />&nbsp;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-filter-append-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <strong>When using custom (user) filters</strong><br />    <span class="simpara">     <span class="function">{@link stream_filter_register()}</span> must be called first     in order to register the desired user filter to <span class="parameter" style="color:#2EACF9">filtername</span>.    </span>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     Stream data is read from resources (both local and remote) in chunks,     with any unconsumed data kept in internal buffers.  When a new     filter is appended to a stream, data in the internal buffers is processed through     the new filter at that time.  This differs from the behavior of     <span class="function">{@link stream_filter_prepend()}</span>.    </span>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     When a filter is added for read and write, two instances of the filter     are created. <span class="function"><strong style="color:#CC7832">stream_filter_append()</strong></span> must be called twice      with <strong><span>STREAM_FILTER_READ</span></strong> and      <strong><span>STREAM_FILTER_WRITE</span></strong> to get both filter resources.    </span>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-filter-append-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_filter_register()} - Register a user defined stream filter</span></li>    <li class="member"><span class="function">{@link stream_filter_prepend()} - Attach a filter to a stream</span></li>    <li class="member"><span class="function">{@link stream_get_filters()} - 获取已注册的数据流过滤器列表</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource a resource which can be used to refer to this filter*/
function stream_filter_append ($stream, $filtername, $read_write = null, $params = null) {}

/**
*<div id="function.stream-filter-remove" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_filter_remove</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_filter_remove</span> &mdash; <span class="dc-title">从资源流里移除某个过滤器</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-filter-remove-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_filter_remove</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream_filter</span></span>    )</div>    <p class="para rdfs-comment">    移除之前通过 <span class="function">{@link stream_filter_prepend()}</span> 或者 <span class="function">{@link stream_filter_append()}</span> 添加到资源流里面的过滤器。    在移除之前，残留在过滤器内部缓冲区里的所有数据刷新到下一个过滤器。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-filter-remove-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream_filter</span></dt>       <dd>        <p class="para">        需要被移除的资源流过滤器。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-filter-remove-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-filter-remove-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4817">     <p><strong>Example #1 动态地重新过滤一个资源流</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Open&nbsp;a&nbsp;test&nbsp;file&nbsp;for&nbsp;reading&nbsp;and&nbsp;writing&nbsp;<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rw"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$rot13_filter&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_filter_append</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"string.rot13"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_FILTER_WRITE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"This&nbsp;is&nbsp;"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">stream_filter_remove</span><span style="color: #007700">(</span><span style="color: #9876AA">$rot13_filter</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"a&nbsp;test\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Guvf vf a test </span></div>     </div>    </div>       </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-filter-remove-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_filter_register()} - Register a user defined stream filter</span></li>     <li class="member"><span class="function">{@link stream_filter_append()} - Attach a filter to a stream</span></li>     <li class="member"><span class="function">{@link stream_filter_prepend()} - Attach a filter to a stream</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_filter_remove ($stream_filter) {}

/**
*<div id="function.stream-socket-client" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_client</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_client</span> &mdash; <span class="dc-title">Open Internet or Unix domain socket connection</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-client-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_client</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$remote_socket</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$errno</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$errstr</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#2EACF9">$timeout</span><span class="initializer"> = ini_get(&quot;default_socket_timeout&quot;)</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = STREAM_CLIENT_CONNECT</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ]]]]] )</div>    <p class="para rdfs-comment">    Initiates a stream or datagram connection to the destination specified    by <span class="parameter" style="color:#2EACF9">remote_socket</span>.  The type of socket created    is determined by the transport specified using standard URL formatting:    <em>transport://target</em>.  For Internet Domain sockets    (AF_INET) such as TCP and UDP, the <em>target</em> portion    of the <span class="parameter" style="color:#2EACF9">remote_socket</span> parameter should consist of    a hostname or IP address followed by a colon and a port number.  For Unix    domain sockets, the <span class="parameter" style="color:#2EACF9">target</span> portion should point    to the socket file on the filesystem.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     The stream will by default be opened in blocking mode.  You can     switch it to non-blocking mode by using     <span class="function">{@link stream_set_blocking()}</span>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-client-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">remote_socket</span></dt>       <dd>        <p class="para">        Address to the socket to connect to.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">errno</span></dt>       <dd>        <p class="para">        Will be set to the system level error number if connection fails.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">errstr</span></dt>       <dd>        <p class="para">        Will be set to the system level error message if the connection fails.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">timeout</span></dt>       <dd>        <p class="para">        Number of seconds until the <em>connect()</em> system call        should timeout.        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:          <span class="simpara">          This parameter only applies when not making asynchronous          connection attempts.         </span>        </p></blockquote>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:          <p class="para">          To set a timeout for reading/writing data over the socket, use the          <span class="function">{@link stream_set_timeout()}</span>, as the          <span class="parameter" style="color:#2EACF9">timeout</span> only applies while making connecting          the socket.         </p>        </p></blockquote>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        Bitmask field which may be set to any combination of connection flags.        Currently the select of connection flags is limited to        <strong><span>STREAM_CLIENT_CONNECT</span></strong> (default),        <strong><span>STREAM_CLIENT_ASYNC_CONNECT</span></strong> and        <strong><span>STREAM_CLIENT_PERSISTENT</span></strong>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <p class="para">        A valid context resource created with <span class="function">{@link stream_context_create()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-client-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    On success a stream resource is returned which may    be used together with the other file functions (such as    <span class="function">{@link fgets()}</span>, <span class="function">{@link fgetss()}</span>,    <span class="function">{@link fwrite()}</span>, <span class="function">{@link fclose()}</span>, and    <span class="function">{@link feof()}</span>), <strong><span>FALSE</span></strong> on failure.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.stream-socket-client-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    On failure the <span class="parameter" style="color:#2EACF9">errno</span> and    <span class="parameter" style="color:#2EACF9">errstr</span> arguments will be populated with the actual    system level error that occurred in the system-level    <em>connect()</em> call. If the value returned in    <span class="parameter" style="color:#2EACF9">errno</span> is <em>0</em> and the    function returned <strong><span>FALSE</span></strong>, it is an indication that the error    occurred before the <em>connect()</em> call. This is    most likely due to a problem initializing the socket. Note that    the <span class="parameter" style="color:#2EACF9">errno</span> and    <span class="parameter" style="color:#2EACF9">errstr</span> arguments will always be passed by    reference.   </p>  </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-socket-client-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4831">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_socket_client()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">"tcp://www.example.com:80"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">30</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$errstr</span><span style="color: #DD0000">&nbsp;(</span><span style="color: #9876AA">$errno</span><span style="color: #DD0000">)&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"GET&nbsp;/&nbsp;HTTP/1.0\r\nHost:&nbsp;www.example.com\r\nAccept:&nbsp;/\r\n\r\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>    <div class="example" id="example-4832">     <p><strong>Example #2 Using UDP connection</strong></p>     <div class="example-contents"><p>      Retrieving the day and time from the UDP service &quot;daytime&quot; (port 13)      on localhost.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">"udp://127.0.0.1:13"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"ERROR:&nbsp;</span><span style="color: #9876AA">$errno</span><span style="color: #DD0000">&nbsp;-&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #DD0000">&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">26</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-socket-client-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">      UDP sockets will sometimes appear to have opened without an error,      even if the remote host is unreachable.  The error will only      become apparent when you read or write data to/from the socket.      The reason for this is because UDP is a &quot;connectionless&quot; protocol,      which means that the operating system does not try to establish      a link for the socket until it actually needs to send or receive data.    </p>   </div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">当指定数值型的 IPv6 地址（例如 <em>fe80::1</em>）时必须用方括号将 IP 围起来——例如， <em>tcp://[fe80::1]:80</em>。</span></p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Depending on the environment, the Unix domain or the optional     connect timeout may not be available.  A list of available     transports can be retrieved using <span class="function">{@link stream_get_transports()}</span>.     See <a href="http://php.net/manual/zh/transports.php" class="xref">所支持的套接字传输器（Socket Transports）列表</a> for a list of built in transports.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-client-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_socket_server()} - Create an Internet or Unix domain server socket</span></li>     <li class="member"><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>     <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>     <li class="member"><span class="function">{@link stream_select()} - Runs the equivalent of the select() system call on the given    arrays of streams with a timeout specified by tv_sec and tv_usec</span></li>     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>     <li class="member"><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>     <li class="member"><a href="http://php.net/manual/zh/ref.curl.php" class="xref">cURL 函数</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource|bool On success a stream resource is returned which may*/
function stream_socket_client ($remote_socket, &$errno = null, &$errstr = null, $timeout = null, $flags = null, $context = null) {}

/**
*<div id="function.stream-socket-server" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_server</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_server</span> &mdash; <span class="dc-title">Create an Internet or Unix domain server socket</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-server-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_server</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$local_socket</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$errno</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$errstr</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ]]]] )</div>    <p class="para rdfs-comment">    Creates a stream or datagram socket on the specified    <span class="parameter" style="color:#2EACF9">local_socket</span>.       </p>   <p class="para">    This function only creates a socket, to begin accepting connections    use <span class="function">{@link stream_socket_accept()}</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-server-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">local_socket</span></dt>       <dd>        <p class="para">        The type of socket created is determined by the transport specified        using standard URL formatting: <em>transport://target</em>.       </p>       <p class="para">        For Internet Domain sockets (<strong><span>AF_INET</span></strong>) such as TCP and UDP, the        <em>target</em> portion of the         <span class="parameter" style="color:#2EACF9">remote_socket</span> parameter should consist of a        hostname or IP address followed by a colon and a port number.  For        Unix domain sockets, the <em>target</em> portion should        point to the socket file on the filesystem.       </p>       <p class="para">        Depending on the environment, Unix domain sockets may not be available.        A list of available transports can be retrieved using        <span class="function">{@link stream_get_transports()}</span>. See        <a href="http://php.net/manual/zh/transports.php" class="xref">所支持的套接字传输器（Socket Transports）列表</a> for a list of bulitin transports.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">errno</span></dt>       <dd>        <p class="para">        If the optional <span class="parameter" style="color:#2EACF9">errno</span> and <span class="parameter" style="color:#2EACF9">errstr</span>        arguments are present they will be set to indicate the actual system        level error that occurred in the system-level <em>socket()</em>,        <em>bind()</em>, and <em>listen()</em> calls. If        the value returned in <span class="parameter" style="color:#2EACF9">errno</span> is         <em>0</em> and the function returned <strong><span>FALSE</span></strong>, it is an        indication that the error occurred before the <em>bind()</em>        call. This is most likely due to a problem initializing the socket.         Note that the <span class="parameter" style="color:#2EACF9">errno</span> and        <span class="parameter" style="color:#2EACF9">errstr</span> arguments will always be passed by reference.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">errstr</span></dt>       <dd>        <p class="para">        See <span class="parameter" style="color:#2EACF9">errno</span> description.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        A bitmask field which may be set to any combination of socket creation        flags.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         For UDP sockets, you must use <strong><span>STREAM_SERVER_BIND</span></strong> as         the <span class="parameter" style="color:#2EACF9">flags</span> parameter.        </p>       </p></blockquote>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-server-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the created stream, or <strong><span>FALSE</span></strong> on error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-socket-server-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4837">     <p><strong>Example #1 Using TCP server sockets</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">"tcp://0.0.0.0:8000"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$socket</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$errstr</span><span style="color: #DD0000">&nbsp;(</span><span style="color: #9876AA">$errno</span><span style="color: #DD0000">)&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;while&nbsp;(</span><span style="color: #9876AA">$conn&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_accept</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'The&nbsp;local&nbsp;time&nbsp;is&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'n/j/Y&nbsp;g:i&nbsp;a'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />&nbsp;&nbsp;}<br />&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    The example below shows how to act as a time server which can respond    to time queries as shown in an example on <span class="function">{@link stream_socket_client()}</span>.    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:      <span class="simpara">      Most systems require root access to create a server socket on a port      below 1024.     </span>    </p></blockquote>    <div class="example" id="stream-notification-callback.example.basic">     <p><strong>Example #2 Using UDP server sockets</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">"udp://127.0.0.1:1113"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_SERVER_BIND</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$socket</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$errstr</span><span style="color: #DD0000">&nbsp;(</span><span style="color: #9876AA">$errno</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br />}<br /><br />do&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$pkt&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$peer</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$peer</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">stream_socket_sendto</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">"D&nbsp;M&nbsp;j&nbsp;H:i:s&nbsp;Y\r\n"</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$peer</span><span style="color: #007700">);<br />}&nbsp;while&nbsp;(</span><span style="color: #9876AA">$pkt&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-socket-server-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">当指定数值型的 IPv6 地址（例如 <em>fe80::1</em>）时必须用方括号将 IP 围起来——例如， <em>tcp://[fe80::1]:80</em>。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-server-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_socket_client()} - Open Internet or Unix domain socket connection</span></li>    <li class="member"><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>    <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>    <li class="member"><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>    <li class="member"><a href="http://php.net/manual/zh/ref.curl.php" class="link">Curl extension</a></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource the created stream, or false on error.*/
function stream_socket_server ($local_socket, &$errno = null, &$errstr = null, $flags = null, $context = null) {}

/**
*<div id="function.stream-socket-accept" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_accept</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_accept</span> &mdash; <span class="dc-title">接受由 <span class="function">{@link stream_socket_server()}</span> 创建的套接字连接</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-accept-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_accept</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$server_socket</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#2EACF9">$timeout</span><span class="initializer"> = ini_get(&quot;default_socket_timeout&quot;)</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$peername</span></span>   ]] )</div>    <p class="para rdfs-comment">    接受由 <span class="function">{@link stream_socket_server()}</span> 创建的套接字连接。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-accept-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">server_socket</span></dt>       <dd>        <p class="para">        需要接受的服务器创建的套接字连接。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">timeout</span></dt>       <dd>        <p class="para">        覆盖默认的套接字接受的超时时限。输入的时间需以秒为单位。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">peername</span></dt>       <dd>        <p class="para">        如果包含该参数并且是可以从选中的传输数据中获取到，则将被设置给连接中的客户端主机的名称（地址）（怕出入很大，附带上原文：Will be set to the name (address) of the client which connected, if        included and available from the selected transport.）        </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         也可以之后通过 <span class="function">{@link stream_socket_get_name()}</span> 来确定。        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-accept-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回接受套接之后的资源流  或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-socket-accept-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     该函数不能被用于 UDP 套接字。可以使用 <span class="function">{@link stream_socket_recvfrom()}</span> 和     <span class="function">{@link stream_socket_sendto()}</span> 来取而代之。    </p>  </div>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-accept-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_socket_server()} - Create an Internet or Unix domain server socket</span></li>     <li class="member"><span class="function">{@link stream_socket_get_name()} - 获取本地或者远程的套接字名称</span></li>     <li class="member"><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>     <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>     <li class="member"><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>     <li class="member"><a href="http://php.net/manual/zh/ref.curl.php" class="xref">cURL 函数</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return resource|bool Returns a stream to the accepted socket connection or FALSE on failure.*/
function stream_socket_accept ($server_socket, $timeout = null, &$peername = null) {}

/**
*<div id="function.stream-socket-get-name" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_get_name</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_get_name</span> &mdash; <span class="dc-title">获取本地或者远程的套接字名称</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-get-name-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_get_name</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$want_peer</span></span>    )</div>    <p class="para rdfs-comment">    返回给定的本地或者远程套接字连接的名称。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-get-name-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        需要获取其名称的套接字连接。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">want_peer</span></dt>       <dd>        <p class="para">        如果设置为 <strong><span>TRUE</span></strong> ，那么将返回 <em>remote</em> 套接字连接名称；如果设置为 <strong><span>FALSE</span></strong> 则返回 <em>local</em> 套接字连接名称。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-get-name-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    套接字连接的名称。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-get-name-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_socket_accept()} - 接受由 stream_socket_server 创建的套接字连接</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return string The name of the socket.*/
function stream_socket_get_name ($handle, $want_peer) {}

/**
*<div id="function.stream-socket-recvfrom" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_recvfrom</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_recvfrom</span> &mdash; <span class="dc-title">Receives data from a socket, connected or not </span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-recvfrom-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_recvfrom</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$address</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">stream_socket_recvfrom()</strong></span> accepts    data from a remote socket up to <span class="parameter" style="color:#2EACF9">length</span> bytes.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-recvfrom-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        The remote socket.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        The number of bytes to receive from the <span class="parameter" style="color:#2EACF9">socket</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The value of <span class="parameter" style="color:#2EACF9">flags</span> can be any combination        of the following:        <table class="doctable table">         <caption><strong>Possible values for <span class="parameter" style="color:#2EACF9">flags</span></strong></caption>                   <tbody class="tbody">           <tr>            <td><strong><span>STREAM_OOB</span></strong></td>            <td>             Process OOB (<em>out-of-band</em>) data.            </td>           </tr>            <tr>            <td><strong><span>STREAM_PEEK</span></strong></td>            <td>             Retrieve data from the socket, but do not consume the buffer.             Subsequent calls to <span class="function">{@link fread()}</span> or             <span class="function"><strong style="color:#CC7832">stream_socket_recvfrom()</strong></span> will see             the same data.            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">address</span></dt>       <dd>        <p class="para">        If <span class="parameter" style="color:#2EACF9">address</span> is provided it will be populated with        the address of the remote socket.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-recvfrom-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the read data, as a string   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-socket-recvfrom-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4835">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_socket_recvfrom()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Open&nbsp;a&nbsp;server&nbsp;socket&nbsp;to&nbsp;port&nbsp;1234&nbsp;on&nbsp;localhost&nbsp;<br /></span><span style="color: #9876AA">$server&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1234'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Accept&nbsp;a&nbsp;connection&nbsp;<br /></span><span style="color: #9876AA">$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_accept</span><span style="color: #007700">(</span><span style="color: #9876AA">$server</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Grab&nbsp;a&nbsp;packet&nbsp;(1500&nbsp;is&nbsp;a&nbsp;typical&nbsp;MTU&nbsp;size)&nbsp;of&nbsp;OOB&nbsp;data&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Received&nbsp;Out-Of-Band:&nbsp;'"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1500</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_OOB</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Take&nbsp;a&nbsp;peek&nbsp;at&nbsp;the&nbsp;normal&nbsp;in-band&nbsp;data,&nbsp;but&nbsp;don't&nbsp;comsume&nbsp;it.&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Data:&nbsp;'"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1500</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_PEEK</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Get&nbsp;the&nbsp;exact&nbsp;same&nbsp;packet&nbsp;again,&nbsp;but&nbsp;remove&nbsp;it&nbsp;from&nbsp;the&nbsp;buffer&nbsp;this&nbsp;time.&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Data:&nbsp;'"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1500</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;it&nbsp;up&nbsp;<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$server</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-socket-recvfrom-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     If a message received is longer than the <span class="parameter" style="color:#2EACF9">length</span>     parameter, excess bytes may be discarded depending on the type of socket     the message is received from (such as UDP).    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Calls to <span class="function"><strong style="color:#CC7832">stream_socket_recvfrom()</strong></span> on socket-based     streams, after calls to buffer-based stream functions (like     <span class="function">{@link fread()}</span> or <span class="function">{@link stream_get_line()}</span>) read     data directly from the socket and bypass the stream buffer.     </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-recvfrom-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_socket_sendto()} - Sends a message to a socket, whether it is connected or not</span></li>    <li class="member"><span class="function">{@link stream_socket_client()} - Open Internet or Unix domain socket connection</span></li>    <li class="member"><span class="function">{@link stream_socket_server()} - Create an Internet or Unix domain server socket</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return string the read data, as a string*/
function stream_socket_recvfrom ($socket, $length, $flags = null, &$address = null) {}

/**
*<div id="function.stream-socket-sendto" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_sendto</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_sendto</span> &mdash; <span class="dc-title">Sends a message to a socket, whether it is connected or not </span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-sendto-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_sendto</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$data</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$address</span></span>   ]] )</div>    <p class="para rdfs-comment">    Sends the specified <span class="parameter" style="color:#2EACF9">data</span> through the    <span class="parameter" style="color:#2EACF9">socket</span>.     </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-sendto-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        The socket to send <span class="parameter" style="color:#2EACF9">data</span> to.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">data</span></dt>       <dd>        <p class="para">        The data to be sent.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The value of <span class="parameter" style="color:#2EACF9">flags</span> can be any combination        of the following:        <table class="doctable table">         <caption><strong>possible values for <span class="parameter" style="color:#2EACF9">flags</span></strong></caption>                   <tbody class="tbody">           <tr>            <td><strong><span>STREAM_OOB</span></strong></td>            <td>             Process OOB (out-of-band) data.            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">address</span></dt>       <dd>        <p class="para">        The address specified when the socket stream was created will be used        unless an alternate address is specified in <span class="parameter" style="color:#2EACF9">address</span>.       </p>       <p class="para">        If specified, it must be in dotted quad (or [ipv6]) format.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-sendto-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a result code, as an integer.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-socket-sendto-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4836">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_socket_sendto()</strong></span> Example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Open&nbsp;a&nbsp;socket&nbsp;to&nbsp;port&nbsp;1234&nbsp;on&nbsp;localhost&nbsp;<br /></span><span style="color: #9876AA">$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1234'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Send&nbsp;ordinary&nbsp;data&nbsp;via&nbsp;ordinary&nbsp;channels.&nbsp;<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Normal&nbsp;data&nbsp;transmit."</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Send&nbsp;more&nbsp;data&nbsp;out&nbsp;of&nbsp;band.&nbsp;<br /></span><span style="color: #9876AA">stream_socket_sendto</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Out&nbsp;of&nbsp;Band&nbsp;data."</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_OOB</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;it&nbsp;up&nbsp;<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-sendto-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_socket_recvfrom()} - Receives data from a socket, connected or not</span></li>    <li class="member"><span class="function">{@link stream_socket_client()} - Open Internet or Unix domain socket connection</span></li>    <li class="member"><span class="function">{@link stream_socket_server()} - Create an Internet or Unix domain server socket</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return int a result code, as an integer.*/
function stream_socket_sendto ($socket, $data, $flags = null, $address = null) {}

/**
*<div id="function.stream-socket-enable-crypto" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_enable_crypto</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_enable_crypto</span> &mdash; <span class="dc-title">Turns encryption on/off on an already connected socket</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-enable-crypto-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_enable_crypto</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$enable</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$crypto_type</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$session_stream</span></span>   ]] )</div>     <p class="simpara">    Enable or disable encryption on the stream.   </p>    <p class="simpara">    Once the crypto settings are established, cryptography can be turned    on and off dynamically by passing <strong><span>TRUE</span></strong> or <strong><span>FALSE</span></strong> in the    <span class="parameter" style="color:#2EACF9">enable</span> parameter.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-enable-crypto-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        The stream resource.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">enable</span></dt>       <dd>        <p class="para">        Enable/disable cryptography on the stream.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">crypto_type</span></dt>       <dd>        <p class="para">        Setup encryption on the stream.        Valid methods are        <ul class="itemizedlist">         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_SSLv2_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_SSLv3_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_SSLv23_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_ANY_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLS_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_SSLv2_SERVER</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_SSLv3_SERVER</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_SSLv23_SERVER</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_ANY_SERVER</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLS_SERVER</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLSv1_0_SERVER</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLSv1_1_SERVER</span></strong></span></li>         <li class="listitem"><span class="simpara"><strong><span>STREAM_CRYPTO_METHOD_TLSv1_2_SERVER</span></strong></span></li>        </ul>       </p>       <p class="para">        If omitted, the <em>crypto_method</em> context option on        the stream&#039;s SSL context will be used instead.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">session_stream</span></dt>       <dd>        <p class="para">        Seed the stream with settings from <span class="parameter" style="color:#2EACF9">session_stream</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-enable-crypto-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>TRUE</span></strong> on success, <strong><span>FALSE</span></strong> if negotiation has failed or    <em>0</em> if there isn&#039;t enough data and you should try again    (only for non-blocking sockets).   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-socket-enable-crypto-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.6.0</td>        <td>         Introduce <strong><span>STREAM_CRYPTO_METHOD_ANY_CLIENT</span></strong>, <strong><span>STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT</span></strong>, <strong><span>STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT</span></strong>, <strong><span>STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT</span></strong>, <strong><span>STREAM_CRYPTO_METHOD_ANY_SERVER</span></strong>, <strong><span>STREAM_CRYPTO_METHOD_TLSv1_0_SERVER</span></strong>, <strong><span>STREAM_CRYPTO_METHOD_TLSv1_1_SERVER</span></strong>, <strong><span>STREAM_CRYPTO_METHOD_TLSv1_2_SERVER</span></strong>.        </td>       </tr>        <tr>        <td>5.6.0</td>        <td>         The <span class="parameter" style="color:#2EACF9">crypto_type</span> is now optional.        </td>       </tr>       </tbody>         </table>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-socket-enable-crypto-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4833">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_socket_enable_crypto()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">"tcp://myproto.example.com:31337"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">30</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">"Unable&nbsp;to&nbsp;connect:&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #DD0000">&nbsp;(</span><span style="color: #9876AA">$errno</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Turn&nbsp;on&nbsp;encryption&nbsp;for&nbsp;login&nbsp;phase&nbsp;<br /></span><span style="color: #9876AA">stream_socket_enable_crypto</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_CRYPTO_METHOD_SSLv23_CLIENT</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"USER&nbsp;god\r\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"PASS&nbsp;secret\r\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Turn&nbsp;off&nbsp;encryption&nbsp;for&nbsp;the&nbsp;rest&nbsp;<br /></span><span style="color: #9876AA">stream_socket_enable_crypto</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br />while&nbsp;(</span><span style="color: #9876AA">$motd&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$motd</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> </span></div>     </div>    </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-enable-crypto-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/ref.openssl.php" class="xref">OpenSSL 函数</a></li>     <li class="member"><a href="http://php.net/manual/zh/transports.php" class="xref">所支持的套接字传输器（Socket Transports）列表</a></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return mixed true on success, false if negotiation has failed or*/
function stream_socket_enable_crypto ($stream, $enable, $crypto_type = null, $session_stream = null) {}

/**
*<div id="function.stream-socket-shutdown" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_shutdown</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.1, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_shutdown</span> &mdash; <span class="dc-title">Shutdown a full-duplex connection</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-shutdown-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_shutdown</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$how</span></span>    )</div>    <p class="para rdfs-comment">    Shutdowns (partially or not) a full-duplex connection.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     The associated buffer, or buffers, may or may not be emptied.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-shutdown-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        An open stream (opened with <span class="function">{@link stream_socket_client()}</span>,        for example)       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">how</span></dt>       <dd>        <p class="para">        One of the following constants: <strong><span>STREAM_SHUT_RD</span></strong>        (disable further receptions), <strong><span>STREAM_SHUT_WR</span></strong>        (disable further transmissions) or        <strong><span>STREAM_SHUT_RDWR</span></strong> (disable further receptions and        transmissions).       </p>      </dd>          </dl>    </span>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-shutdown-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-socket-shutdown-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="stream-notification-callback.example.download">     <p><strong>Example #1 A <span class="function"><strong style="color:#CC7832">stream_socket_shutdown()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$server&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1337'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$client&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1337'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fputs</span><span style="color: #007700">(</span><span style="color: #9876AA">$client</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">stream_socket_shutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">$client</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_SHUT_WR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fputs</span><span style="color: #007700">(</span><span style="color: #9876AA">$client</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;doesn't&nbsp;work&nbsp;now<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> int(5)  Notice: fputs(): send of 5 bytes failed with errno=32 Broken pipe in test.php on line 9 int(0) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-socket-shutdown-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_socket_shutdown ($stream, $how) {}

/**
*<div id="function.stream-socket-pair" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_socket_pair</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_socket_pair</span> &mdash; <span class="dc-title">    创建一对完全一样的网络套接字连接流   </span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-socket-pair-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>stream_socket_pair</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$domain</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$type</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$protocol</span></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">stream_socket_pair()</strong></span> 创建一对完全一样的网络套接字连接，这个函数通常会被用在进程间通信(Inter-Process Communication)    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-socket-pair-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">domain</span></dt>       <dd>        <p class="para">        使用的协议族： <strong><span>STREAM_PF_INET</span></strong>,        <strong><span>STREAM_PF_INET6</span></strong> or        <strong><span>STREAM_PF_UNIX</span></strong>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>       <dd>        <p class="para">        通信类型:        <strong><span>STREAM_SOCK_DGRAM</span></strong>,        <strong><span>STREAM_SOCK_RAW</span></strong>,        <strong><span>STREAM_SOCK_RDM</span></strong>,        <strong><span>STREAM_SOCK_SEQPACKET</span></strong> or        <strong><span>STREAM_SOCK_STREAM</span></strong>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">protocol</span></dt>       <dd>        <p class="para">        使用的传输协议: <strong><span>STREAM_IPPROTO_ICMP</span></strong>,        <strong><span>STREAM_IPPROTO_IP</span></strong>,        <strong><span>STREAM_IPPROTO_RAW</span></strong>,        <strong><span>STREAM_IPPROTO_TCP</span></strong> or        <strong><span>STREAM_IPPROTO_UDP</span></strong>              </p>      </dd>          </dl>    </span>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     Please consult the <a href="http://php.net/manual/zh/stream.constants.php" class="link">Streams constant      list</a> for further details on each constant.    </span>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-socket-pair-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果成功将返回一个<span class="type" style="color:#EAB766"><span class="type 数组" style="color:#EAB766">数组</span></span>包括了两个socket资源，错误时返回<strong><span>FALSE</span></strong>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-socket-pair-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         这个函数在windows平台不可用        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-socket-pair-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4834">     <p><strong>Example #1 A <span class="function"><strong style="color:#CC7832">stream_socket_pair()</strong></span> example</strong></p>     <div class="example-contents"><p>      This example shows the basic usage of      <span class="function"><strong style="color:#CC7832">stream_socket_pair()</strong></span> in Inter-Process Comunication.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$sockets&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_pair</span><span style="color: #007700">(</span><span style="color: #9876AA">STREAM_PF_UNIX</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_IPPROTO_IP</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$pid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">pcntl_fork</span><span style="color: #007700">();<br /><br />if&nbsp;(</span><span style="color: #9876AA">$pid&nbsp;</span><span style="color: #007700">==&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">'could&nbsp;not&nbsp;fork'</span><span style="color: #007700">);<br /><br />}&nbsp;else&nbsp;if&nbsp;(</span><span style="color: #9876AA">$pid</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;parent&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">],&nbsp;</span><span style="color: #DD0000">"child&nbsp;PID:&nbsp;</span><span style="color: #9876AA">$pid</span><span style="color: #DD0000">\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br /><br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;child&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">],&nbsp;</span><span style="color: #DD0000">"message&nbsp;from&nbsp;child\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> child PID: 1378 message from child </span></div>     </div>    </div>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return array|bool an array with the two socket resources on success, or*/
function stream_socket_pair ($domain, $type, $protocol) {}

/**
*<div id="function.stream-copy-to-stream" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_copy_to_stream</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_copy_to_stream</span> &mdash; <span class="dc-title">Copies data from one stream to another</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-copy-to-stream-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>stream_copy_to_stream</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$source</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$dest</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$maxlength</span><span class="initializer"> = -1</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$offset</span><span class="initializer"> = 0</span></span>   ]] )</div>    <p class="para rdfs-comment">    Makes a copy of up to <span class="parameter" style="color:#2EACF9">maxlength</span> bytes    of data from the current position (or from the    <span class="parameter" style="color:#2EACF9">offset</span> position, if specified) in    <span class="parameter" style="color:#2EACF9">source</span> to <span class="parameter" style="color:#2EACF9">dest</span>. If    <span class="parameter" style="color:#2EACF9">maxlength</span> is not specified, all remaining content in    <span class="parameter" style="color:#2EACF9">source</span> will be copied.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-copy-to-stream-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">source</span></dt>       <dd>        <p class="para">        The source stream       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">dest</span></dt>       <dd>        <p class="para">        The destination stream       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">maxlength</span></dt>       <dd>        <p class="para">        Maximum bytes to copy       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">offset</span></dt>       <dd>        <p class="para">        The offset where to start to copy data       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-copy-to-stream-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the total count of bytes copied,  或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-copy-to-stream-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         Added the <span class="parameter" style="color:#2EACF9">offset</span> parameter        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-copy-to-stream-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4813">     <p><strong>Example #1 A <span class="function"><strong style="color:#CC7832">stream_copy_to_stream()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$src&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$dest1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'first1k.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$dest2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'remainder.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">stream_copy_to_stream</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$dest1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"&nbsp;bytes&nbsp;copied&nbsp;to&nbsp;first1k.txt\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">stream_copy_to_stream</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$dest2</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"&nbsp;bytes&nbsp;copied&nbsp;to&nbsp;remainder.txt\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-copy-to-stream-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link copy()} - 拷贝文件</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return int the total count of bytes copied.*/
function stream_copy_to_stream ($source, $dest, $maxlength = null, $offset = null) {}

/**
*<div id="function.stream-get-contents" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_get_contents</h1>    <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_get_contents</span> &mdash; <span class="dc-title">读取资源流到一个字符串</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-get-contents-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>stream_get_contents</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$maxlength</span><span class="initializer"> = -1</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$offset</span><span class="initializer"> = -1</span></span>   ]] )</div>    <p class="para rdfs-comment">    与 <span class="function">{@link file_get_contents()}</span> 一样，但是     <span class="function"><strong style="color:#CC7832">stream_get_contents()</strong></span> 是对一个已经打开的资源流进行操作，并将其内容写入一个字符串返回。    返回的内容取决于 <span class="parameter" style="color:#2EACF9">maxlength</span> 字节长度和 <span class="parameter" style="color:#2EACF9">offset</span> 指定的起始位置。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-get-contents-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span> (<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>)</dt>       <dd>        <p class="para">        一个资源流（例如 <span class="function">{@link fopen()}</span> 操作之后返回的结果）       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">maxlength</span> (<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>)</dt>       <dd>        <p class="para">        需要读取的最大的字节数。默认是-1（读取全部的缓冲数据）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">offset</span> (<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>)</dt>       <dd>        <p class="para">        在读取数据之前先查找指定的偏移量。如果这个数字是负数，就不进行查找，直接从当前位置开始读取。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-get-contents-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个字符串  或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-get-contents-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         增加参数 <span class="parameter" style="color:#2EACF9">offset</span> 。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-get-contents-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4818">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_get_contents()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">$stream&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;print&nbsp;all&nbsp;the&nbsp;page&nbsp;starting&nbsp;at&nbsp;the&nbsp;offset&nbsp;10<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">,&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br />}<br /><br /><br />if&nbsp;(</span><span style="color: #9876AA">$stream&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.net'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;print&nbsp;the&nbsp;first&nbsp;5&nbsp;bytes<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-get-contents-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-get-contents-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fpassthru()} - 输出文件指针处的所有剩余数据</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return string|bool a string or false on failure.*/
function stream_get_contents ($handle, $maxlength = null, $offset = null) {}

/**
*<div id="function.stream-supports-lock" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_supports_lock</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_supports_lock</span> &mdash; <span class="dc-title">Tells whether the stream supports locking</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-supports-lock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_supports_lock</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    )</div>    <p class="para rdfs-comment">    Tells whether the stream supports locking through     <span class="function">{@link flock()}</span>.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-supports-lock-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        The stream to check.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-supports-lock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-supports-lock-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link flock()} - 轻便的咨询文件锁定</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_supports_lock ($stream) {}

/**
*<div id="function.fgetcsv" class="refentry">  <div class="refnamediv">   <h1 class="refname">fgetcsv</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fgetcsv</span> &mdash; <span class="dc-title">从文件指针中读入一行并解析 CSV 字段</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgetcsv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>fgetcsv</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &#039;,&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &#039;&quot;&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$escape</span><span class="initializer"> = &#039;\\&#039;</span></span>   ]]]] )</div>    <p class="para rdfs-comment">    和 <span class="function">{@link fgets()}</span> 类似，只除了    <span class="function"><strong style="color:#CC7832">fgetcsv()</strong></span> 解析读入的行并找出 <acronym title="Comma Separated Value">CSV</acronym>    格式的字段然后返回一个包含这些字段的数组。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgetcsv-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        一个由 <span class="function">{@link fopen()}</span>、<span class="function">{@link popen()}</span> 或        <span class="function">{@link fsockopen()}</span> 产生的有效文件指针。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        必须大于 CVS 文件内最长的一行。在 PHP 5        中该参数是可选的。如果忽略（在 PHP 5.0.4 以后的版本中设为        0）该参数的话，那么长度就没有限制，不过可能会影响执行效率。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">delimiter</span></dt>       <dd>        <p class="para">        设置字段分界符（只允许一个字符）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">enclosure</span></dt>       <dd>        <p class="para">        设置字段环绕符（只允许一个字符）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">escape</span></dt>       <dd>        <p class="para">        设置转义字符（只允许一个字符），默认是一个反斜杠。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgetcsv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回包含读取字段的索引数组。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">         CSV 文件中的空行将被返回为一个包含有单个 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span> 字段的数组，不会被当成错误。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP 不能正确的识别行结束符，启用运行时配置可选项 <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a> 也许可以解决此问题。</span></p></blockquote>   <p class="para">    如果提供了无效的文件指针，<span class="function"><strong style="color:#CC7832">fgetcsv()</strong></span> 会返回 <strong><span>NULL</span></strong>。    其他错误，包括碰到文件结束时返回 <strong><span>FALSE</span></strong>，。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fgetcsv-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         增加了 <span class="parameter" style="color:#2EACF9">escape</span> 参数。        </td>       </tr>        <tr>        <td>4.3.5</td>        <td>         现在起 <span class="function"><strong style="color:#CC7832">fgetcsv()</strong></span> 的操作是二进制安全的。        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         增加了 <span class="parameter" style="color:#2EACF9">enclosure</span> 参数。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgetcsv-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2770">     <p><strong>Example #1 读取并显示 CSV 文件的整个内容</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$row&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />if&nbsp;((</span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.csv"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">))&nbsp;!==&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;((</span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgetcsv</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">","</span><span style="color: #007700">))&nbsp;!==&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$num&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"&lt;p&gt;&nbsp;</span><span style="color: #9876AA">$num</span><span style="color: #DD0000">&nbsp;fields&nbsp;in&nbsp;line&nbsp;</span><span style="color: #9876AA">$row</span><span style="color: #DD0000">:&nbsp;&lt;br&nbsp;/&gt;&lt;/p&gt;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$row</span><span style="color: #007700">++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(</span><span style="color: #9876AA">$c</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">$num</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$data</span><span style="color: #007700">[</span><span style="color: #9876AA">$c</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">"&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgetcsv-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     该函数对区域设置是敏感的。比如说 <var class="varname"><var class="varname">LANG</var></var> 设为     <em>en_US.UTF-8</em> 的话，单字节编码的文件就会出现读取错误。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgetcsv-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link str_getcsv()} - 解析 CSV 字符串为一个数组</span></li>     <li class="member"><span class="function">{@link explode()} - 使用一个字符串分割另一个字符串</span></li>     <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>     <li class="member"><span class="function">{@link pack()} - 将数据打包成二进制字符串</span></li>     <li class="member"><span class="function">{@link fputcsv()} - 将行格式化为 CSV 并写入文件指针</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return array|null|false an indexed array containing the fields read.*/
function fgetcsv ($handle, $length = 0, $delimiter = ',', $enclosure = '"', $escape = '\\') {}

/**
*<div id="function.fputcsv" class="refentry">  <div class="refnamediv">   <h1 class="refname">fputcsv</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">fputcsv</span> &mdash; <span class="dc-title">将行格式化为 CSV 并写入文件指针</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fputcsv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>fputcsv</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$fields</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$delimiter</span><span class="initializer"> = &#039;,&#039;</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$enclosure</span><span class="initializer"> = &#039;&quot;&#039;</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">fputcsv()</strong></span> 将一行（用    <span class="parameter" style="color:#2EACF9">fields</span> 数组传递）格式化为 CSV    格式并写入由 <span class="parameter" style="color:#2EACF9">handle</span>    指定的文件。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fputcsv-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">fields</span></dt>       <dd>        <p class="para">        值的一个数组。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">delimiter</span></dt>       <dd>        <p class="para">        可选的 <span class="parameter" style="color:#2EACF9">delimiter</span>    参数设定字段分界符（只允许一个字符）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">enclosure</span></dt>       <dd>        <p class="para">        可选的 <span class="parameter" style="color:#2EACF9">enclosure</span>    参数设定字段字段环绕符（只允许一个字符）。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fputcsv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回写入字符串的长度， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fputcsv-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2796">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">fputcsv()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$list&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'aaa'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bbb'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'ccc'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'dddd'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'123'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'456'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'789'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'"aaa"'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'"bbb"'</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.csv'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$list&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$fields</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fputcsv</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$fields</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例子会写入以下的<em>file.csv</em>：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> aaa,bbb,ccc,dddd 123,456,789 &quot;&quot;&quot;aaa&quot;&quot;&quot;,&quot;&quot;&quot;bbb&quot;&quot;&quot;  </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fputcsv-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP 不能正确的识别行结束符，启用运行时配置可选项 <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a> 也许可以解决此问题。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fputcsv-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fgetcsv()} - 从文件指针中读入一行并解析 CSV 字段</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return int|bool the length of the written string or false on failure.*/
function fputcsv ($handle, array $fields, $delimiter = ",", $enclosure = '"', $escape_char = "\\") {}

/**
*<div id="function.flock" class="refentry">  <div class="refnamediv">   <h1 class="refname">flock</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">flock</span> &mdash; <span class="dc-title">轻便的咨询文件锁定</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.flock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>flock</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$operation</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$wouldblock</span></span>   ] )</div>      <p class="para rdfs-comment">      <span class="function"><strong style="color:#CC7832">flock()</strong></span> 允许执行一个简单的可以在任何平台中使用的读取/写入模型（包括大部分的    Unix 派生版和甚至是 Windows）。   </p>     <p class="para">      在 PHP 5.3.2版本之前，锁也会被 <span class="function">{@link fclose()}</span> 释放（在脚本结束后会自动调用）。   </p>   <p class="para">    PHP 支持以咨询方式（也就是说所有访问程序必须使用同一方式锁定, 否则它不会工作）锁定全部文件的一种轻便方法。     默认情况下，这个函数会阻塞到获取锁；这可以通过下面文档中 <strong><span>LOCK_NB</span></strong> 选项来控制（在非 Windows 平台上）。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.flock-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件系统指针，是典型地由 <span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>(资源)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">operation</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">operation</span>    可以是以下值之一：        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">          <strong><span>LOCK_SH</span></strong>取得共享锁定（读取的程序）。          </span>         </li>         <li class="listitem">          <span class="simpara">          <strong><span>LOCK_EX</span></strong> 取得独占锁定（写入的程序。          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><span>LOCK_UN</span></strong> 释放锁定（无论共享或独占）。          </span>         </li>        </ul>       </p>       <p class="para">        如果不希望 <span class="function"><strong style="color:#CC7832">flock()</strong></span> 在锁定时堵塞，则是        <strong><span>LOCK_NB</span></strong>（Windows 上还不支持）。        </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">wouldblock</span></dt>       <dd>        <p class="para">        如果锁定会堵塞的话（EWOULDBLOCK    错误码情况下），可选的第三个参数会被设置为 <strong><span>TRUE</span></strong>。（Windows 上不支持）       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.flock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.flock-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.2</td>        <td>         在文件资源句柄关闭时不再自动解锁。现在要解锁必须手动进行。        </td>       </tr>        <tr>        <td>4.0.1</td>        <td>         增加了常量 <em>LOCK_XXX</em>。         之前你必须使用 1 代表 <strong><span>LOCK_SH</span></strong>，2 代表         <strong><span>LOCK_EX</span></strong>，3 代表<strong><span>LOCK_UN</span></strong>，4 代表          <strong><span>LOCK_NB</span></strong>。        </td>       </tr>       </tbody>         </table>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.flock-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2791">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">flock()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/lock.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r+"</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">LOCK_EX</span><span style="color: #007700">))&nbsp;{&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;进行排它型锁定<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;truncate&nbsp;file<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Write&nbsp;something&nbsp;here\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fflush</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;flush&nbsp;output&nbsp;before&nbsp;releasing&nbsp;the&nbsp;lock<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">LOCK_UN</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;释放锁定<br /></span><span style="color: #007700">}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Couldn't&nbsp;get&nbsp;the&nbsp;lock!"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    <div class="example" id="example-2792">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">flock()</strong></span> 使用 <strong><span>LOCK_NB</span></strong> 选项</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'/tmp/lock.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Activate&nbsp;the&nbsp;LOCK_NB&nbsp;option&nbsp;on&nbsp;an&nbsp;LOCK_EX&nbsp;operation&nbsp;<br /></span><span style="color: #007700">if(!</span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">LOCK_EX&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">LOCK_NB</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Unable&nbsp;to&nbsp;obtain&nbsp;lock'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;exit(-</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;...&nbsp;<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.flock-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">flock()</strong></span> uses mandatory locking instead of advisory     locking on Windows. Mandatory locking is also supported on Linux and     System V based operating systems via the usual mechanism supported by the     fcntl() system call: that is, if the file in question has the setgid     permission bit set and the group execution bit cleared. On Linux, the file     system will also need to be mounted with the mand option for this to work.    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     由于 <span class="function"><strong style="color:#CC7832">flock()</strong></span>     需要一个文件指针， 因此可能不得不用一个特殊的锁定文件来保护打算通过写模式打开的文件的访问（在     <span class="function">{@link fopen()}</span> 函数中加入 &quot;w&quot; 或 &quot;w+&quot;）。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     May only be used on file pointers returned by <span class="function">{@link fopen()}</span>     for local files, or file pointers pointing to userspace streams that     implement the <span class="function">{@link streamWrapper::stream_lock()}</span> method.    </p>   </p></blockquote>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     Assigning another value to <span class="parameter" style="color:#2EACF9">handle</span> argument in     subsequent code will release the lock.    </p>   </div>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     在部分操作系统中 <span class="function"><strong style="color:#CC7832">flock()</strong></span> 以进程级实现。当用一个多线程服务器     API（比如 ISAPI）时，可能不可以依靠     <span class="function"><strong style="color:#CC7832">flock()</strong></span> 来保护文件，因为运行于同一服务器实例中其它并行线程的     PHP 脚本可以对该文件进行处理。    </p>    <p class="para">     <span class="function"><strong style="color:#CC7832">flock()</strong></span> 不支持旧的文件系统，如 <em>FAT</em>     以及它的派生系统。因此，此环境下总是返回 <strong><span>FALSE</span></strong>（尤其是对 Windows 98 用户来说）。    </p>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function flock ($handle, $operation, &$wouldblock = null) {}

/**
*<div id="function.get-meta-tags" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_meta_tags</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_meta_tags</span> &mdash; <span class="dc-title">    从一个文件中提取所有的 meta 标签 content 属性，返回一个数组   </span></p>   </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-meta-tags-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>get_meta_tags</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$use_include_path</span><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    打开 <span class="parameter" style="color:#2EACF9">filename</span> 逐行解析文件中的     &lt;meta&gt; 标签。解析工作将在    <em>&lt;/head&gt;</em> 处停止。   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-meta-tags-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        HTML 文件的路径字符串。        此参数可以是本地文件也可以是一个    <acronym title="Uniform Resource Locator">URL</acronym>。       </p>       <p class="para">        <div class="example" id="example-4880">         <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">get_meta_tags()</strong></span> 解析了什么</strong></p>         <div class="example-contents"> <div class="htmlcode"><span>&lt;meta name=&quot;author&quot; content=&quot;name&quot;&gt; &lt;meta name=&quot;keywords&quot; content=&quot;php documentation&quot;&gt; &lt;meta name=&quot;DESCRIPTION&quot; content=&quot;a php manual&quot;&gt; &lt;meta name=&quot;geo.position&quot; content=&quot;49.33;-86.59&quot;&gt; &lt;/head&gt; &lt;!-- 解析工作在此处停止 --&gt;</span> </div>         </div>         </div>           （注意回车换行 － PHP 使用一个本地函数来解析输入，所以 Mac 上的文件将不能在 Unix 上正常工作）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">use_include_path</span></dt>       <dd>        <p class="para">        将 <span class="parameter" style="color:#2EACF9">use_include_path</span> 设置为 <strong><span>TRUE</span></strong> 将使     PHP 尝试按照 <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>    标准包含路径中的每个指向去打开文件。这只用于本地文件，不适用于 URL。       </p>      </dd>          </dl>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-meta-tags-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数组，包含所有解析过的 meta 标签。   </p>   <p class="para">    返回的关联数组以属性 name 的值作为键，属性 content     的值作为值，所以你可以很容易地使用标准数组函数遍历此关联数组或访问某个值。    属性    name 中的特殊字符将使用‘_’替换，而其它字符则转换成小写。如果有两个    meta 标签拥有相同的 name，则只返回最后出现的那一个。   </p>  </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.get-meta-tags-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.0.5</td>        <td>         开始支持没有使用引号括起来的 HTML 属性。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.get-meta-tags-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4881">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">get_meta_tags()</strong></span> 返回什么些</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;假设上边的标签是在&nbsp;www.example.com&nbsp;中<br /></span><span style="color: #9876AA">$tags&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">get_meta_tags</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;注意所有的键（key）均为小写，而键中的‘.’则转换成了‘_’。<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'author'</span><span style="color: #007700">];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;name<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'keywords'</span><span style="color: #007700">];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;php&nbsp;documentation<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'description'</span><span style="color: #007700">];&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;a&nbsp;php&nbsp;manual<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'geo_position'</span><span style="color: #007700">];&nbsp;</span><span style="color: #FF8000">//&nbsp;49.33;-86.59<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.get-meta-tags-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     只有包含 name 属性的 meta 标签才会被解析。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-meta-tags-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>     <li class="member"><span class="function">{@link urlencode()} - 编码 URL 字符串</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.url.php">URL 函数</a></div></div>
 * @return array an array with all the parsed meta tags.*/
function get_meta_tags ($filename, $use_include_path = null) {}

/**
*<div id="function.stream-set-write-buffer" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_set_write_buffer</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_set_write_buffer</span> &mdash; <span class="dc-title">Sets write file buffering on the given stream</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-set-write-buffer-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>stream_set_write_buffer</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$buffer</span></span>    )</div>    <p class="para rdfs-comment">    Sets the buffering for write operations on the given <span class="parameter" style="color:#2EACF9">stream</span>    to <span class="parameter" style="color:#2EACF9">buffer</span> bytes.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-set-write-buffer-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        The file pointer.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">buffer</span></dt>       <dd>        <p class="para">        The number of bytes to buffer. If <span class="parameter" style="color:#2EACF9">buffer</span>        is 0 then write operations are unbuffered.  This ensures that all writes        with <span class="function">{@link fwrite()}</span> are completed before other processes are        allowed to write to that output stream.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-set-write-buffer-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns 0 on success, or another value if the request cannot be honored.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-set-write-buffer-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4830">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_set_write_buffer()</strong></span> example</strong></p>     <div class="example-contents"><p>      The following example demonstrates how to use      <span class="function"><strong style="color:#CC7832">stream_set_write_buffer()</strong></span> to create an unbuffered stream.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">stream_set_write_buffer</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;!==&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;changing&nbsp;the&nbsp;buffering&nbsp;failed<br />&nbsp;&nbsp;</span><span style="color: #007700">}<br />&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$output</span><span style="color: #007700">);<br />&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-set-write-buffer-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return int 0 on success, or EOF if the request cannot be honored.*/
function stream_set_write_buffer ($stream, $buffer) {}

/**
*<div id="function.stream-set-read-buffer" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_set_read_buffer</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.3, PHP 7)</p><p class="refpurpose"><span class="refname">stream_set_read_buffer</span> &mdash; <span class="dc-title">Set read file buffering on the given stream</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-set-read-buffer-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>stream_set_read_buffer</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$buffer</span></span>    )</div>    <p class="para rdfs-comment">    Sets the read buffer. It&#039;s the equivalent of <span class="function">{@link stream_set_write_buffer()}</span>,    but for read operations.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-set-read-buffer-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>      <dd>       <span>       The file pointer.      </span>     </dd>              <dt> <span class="parameter" style="color:#2EACF9">buffer</span></dt>      <dd>       <p class="para">       The number of bytes to buffer. If <span class="parameter" style="color:#2EACF9">buffer</span>       is 0 then read operations are unbuffered.  This ensures that all reads       with <span class="function">{@link fread()}</span> are completed before other processes are       allowed to read from that input stream.      </p>     </dd>        </dl>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-set-read-buffer-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns 0 on success, or another value if the request    cannot be honored.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-set-read-buffer-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_set_write_buffer()} - Sets write file buffering on the given stream</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return int 0 on success, or EOF if the request cannot be honored.*/
function stream_set_read_buffer ($stream, $buffer) {}

/**
*<div id="function.set-file-buffer" class="refentry">  <div class="refnamediv">   <h1 class="refname">set_file_buffer</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">set_file_buffer</span> &mdash; <span class="dc-title"><span class="function">{@link stream_set_write_buffer()}</span> 的别名</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.set-file-buffer-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：<span class="function">{@link stream_set_write_buffer()}</span>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return int*/
function set_file_buffer ($fp, $buffer) {}

/**
*<div id="function.set-socket-blocking" class="refentry">  <div class="refnamediv">   <h1 class="refname">set_socket_blocking</h1>   <p class="verinfo">(PHP 4, PHP 5)</p><p class="refpurpose"><span class="refname">set_socket_blocking</span> &mdash; <span class="dc-title">别名 <span class="function">{@link stream_set_blocking()}</span></span></p>   </div>   <div id="function.set-socket-blocking-refsynopsisdiv">   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">This alias was <em class="emphasis">DEPRECATED</em> in PHP 5.3.0, and <em class="emphasis">REMOVED</em> as of PHP 7.0.0.</p></div>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.set-socket-blocking-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link stream_set_blocking()}</span>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool Returns TRUE on success or FALSE on failure.*/
function set_socket_blocking ($socket, $mode) {}

/**
*<div id="function.stream-set-blocking" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_set_blocking</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_set_blocking</span> &mdash; <span class="dc-title">为资源流设置阻塞或者阻塞模式</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-set-blocking-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_set_blocking</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div>    <p class="para rdfs-comment">    为 <span class="parameter" style="color:#2EACF9">stream</span> 设置阻塞或者阻塞模。   </p>   <p class="para">    此函数适用于支持非阻塞模式的任何资源流（常规文件，套接字资源流等）。    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-set-blocking-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        资源流。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">mode</span></dt>       <dd>        <p class="para">        如果 <span class="parameter" style="color:#2EACF9">mode</span> 为0，资源流将会被转换为非阻塞模式；如果是1，资源流将会被转换为阻塞模式。        该参数的设置将会影响到像 <span class="function">{@link fgets()}</span> 和 <span class="function">{@link fread()}</span> 这样的函数从资源流里读取数据。        在非阻塞模式下，调用 <span class="function">{@link fgets()}</span> 总是会立即返回；而在阻塞模式下，将会一直等到从资源流里面获取到数据才能返回。        </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-set-blocking-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-set-blocking-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.0</td>        <td>         在PHP 4.3.0之前，该函数只支持套接字资源流。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-set-blocking-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     该函数之前叫作 <span class="function">{@link set_socket_blocking()}</span> 后来又叫做 <span class="function">{@link socket_set_blocking()}</span> ，但是这种用法都已经被废弃。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-set-blocking-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_select()} - Runs the equivalent of the select() system call on the given    arrays of streams with a timeout specified by tv_sec and tv_usec</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_set_blocking ($stream, $mode) {}

/**
*<div id="function.socket-set-blocking" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_set_blocking</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_set_blocking</span> &mdash; <span class="dc-title">别名 <span class="function">{@link stream_set_blocking()}</span></span></p>    </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-set-blocking-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：     <span class="function">{@link stream_set_blocking()}</span>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function socket_set_blocking ($socket, $mode) {}

/**
*<div id="function.stream-get-meta-data" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_get_meta_data</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_get_meta_data</span> &mdash; <span class="dc-title">从封装协议文件指针中取得报头／元数据</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.stream-get-meta-data-unknown-seealsp">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>stream_get_meta_data</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$fp</span></span>    )</div>    <p class="simpara">    返回现有 <span class="parameter" style="color:#2EACF9">stream</span> 的信息。可以是任何通过    <span class="function">{@link fopen()}</span>，<span class="function">{@link fsockopen()}</span>    和 <span class="function">{@link pfsockopen()}</span> 建立的流。返回的数组包含以下项目：   </p>   <ul class="itemizedlist">    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">timed_out</span> (bool) - 如果在上次调用      <span class="function">{@link fread()}</span> 或者 <span class="function">{@link fgets()}</span>      中等待数据时流超时了则为 <strong><span>TRUE</span></strong>。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">blocked</span> (bool) - 如果流处于阻塞      IO 模式时为 <strong><span>TRUE</span></strong>。参见 <span class="function">{@link stream_set_blocking()}</span>。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">eof</span> (bool) - 如果流到达文件末尾时为      <strong><span>TRUE</span></strong>。注意对于 socket 流甚至当 <span class="parameter" style="color:#2EACF9">unread_bytes</span>      为非零值时也可以为 <strong><span>TRUE</span></strong>。要测定是否有更多数据可读，用      <span class="function">{@link feof()}</span> 替代读取本项目的值。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">unread_bytes</span> (int) - 当前在 PHP 自己的内部缓冲区中的字节数。     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:       <span class="simpara">       不要在脚本中使用此值。      </span>     </p></blockquote>    </li>   </ul>   <p class="simpara">    以下项目是 PHP 4.3 新加的：   </p>   <ul class="itemizedlist">    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">stream_type</span> (string) - 一个描述流底层实现的标注。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">wrapper_type</span> (string) -      一个描述流的分层协议封装实现的标注。更多关于封装协议的信息见      <a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">wrapper_data</span> (mixed) -      当前流附加的封装协议数据。更多封装协议及其数据的信息见      <a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">filters</span> (array) -       包含有被叠加在当前流的任何过滤器名的数组。过滤器的文档见附录中的<a href="http://php.net/manual/zh/filters.php" class="link">可用过滤器列表</a>。     </p>    </li>   </ul>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     本函数是 PHP 4.3 引进的，在此版本之前，可以用 <span class="function">{@link socket_get_status()}</span>     来取得前四个项目并且<em class="emphasis">仅能用于基于 socket 的流</em>。    </p>    <p class="para">     在 PHP 4.3 及以后版本中，<span class="function">{@link socket_get_status()}</span>     是本函数的别名。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     本函数不能作用于通过 <a href="http://php.net/manual/zh/ref.sockets.php" class="link">Socket 扩展库</a>创建的流。    </span>   </p></blockquote>   <p class="simpara">    以下项目为 PHP 5.0 新加：   </p>   <ul class="itemizedlist">    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">mode</span> (string) - 对当前流所要求的访问类型（见      {@link fopen()} 中的表格 1）。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">seekable</span> (bool) - 是否可以在当前流中定位。     </p>    </li>    <li class="listitem">     <p class="para">      <span class="parameter" style="color:#2EACF9">uri</span> (string) - 与当前流关联的 URI 或文件名。     </p>    </li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return array The result array contains the following items:*/
function stream_get_meta_data ($stream) {}

/**
*<div id="function.stream-get-line" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_get_line</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_get_line</span> &mdash; <span class="dc-title">从资源流里读取一行直到给定的定界符</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-get-line-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>stream_get_line</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$ending</span></span>   ] )</div>    <p class="para rdfs-comment">       从给定的资源流里读取一行。   </p>   <p class="para">    当读取到 <span class="parameter" style="color:#2EACF9">length</span> 个字节数就结束，或者当在读取的字符串中发现  <span class="parameter" style="color:#2EACF9">ending</span> （<em class="emphasis">不</em>包含到返回值里）也结束，又或者遇到了 <acronym title="End Of File">EOF</acronym> 也结束（总之以上条件中哪个先出现就以哪个为准）。   </p>   <p class="para">    这个函数与 <span class="function">{@link fgets()}</span> 几乎是相同的，唯一的区别是在这个函数里面允许指定行尾的定界符，而不是使用标准的 \n， \r 还有 \r\n ，并且返回值中<em class="emphasis">不</em>包含定界符。（翻译注：也可以把 \n 等作为定界符传入 <span class="parameter" style="color:#2EACF9">ending</span> ）   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-get-line-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        一个有效的文件句柄。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        需要从句柄里读取的字节数。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">ending</span></dt>       <dd>        <p class="para">        可选参数，字符串定界符。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-get-line-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个字符串，该字符串的内容根据 <span class="parameter" style="color:#2EACF9">length</span> 字节数从 <span class="parameter" style="color:#2EACF9">handle</span> 里读取。   </p>   <p class="para">    如果发生错误，则返回 <strong><span>FALSE</span></strong>.   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-get-line-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li class="member"><span class="function">{@link fgetc()} - 从文件指针中读取字符</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return string a string of up to length bytes read from the file*/
function stream_get_line ($handle, $length, $ending = null) {}

/**
*<div id="function.stream-wrapper-register" class="refentry">    <div class="refnamediv">     <h1 class="refname">stream_wrapper_register</h1>     <p class="verinfo">(PHP 4 &gt;= 4.3.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_wrapper_register</span> &mdash; <span class="dc-title">注册一个用 PHP 类实现的 URL 封装协议</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-wrapper-register-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">      <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_wrapper_register</strong></span>       ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$protocol</span></span>      , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$classname</span></span>      [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span> <span class="initializer"> = 0</span></span>     ] )</div>      <p class="para rdfs-comment">      允许用户实现自定义的协议处理器和流，用于所有其它的文件系统函数中（例如      <span class="function">{@link fopen()}</span>，<span class="function">{@link fread()}</span> 等）。     </p>     </div>         <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-wrapper-register-parameters">   <h3 class="title">参数</h3>     <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">protocol</span></dt>       <dd>        <p class="para">        待注册的封装的名字。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">classname</span></dt>       <dd>        <p class="para">        实现了<span class="parameter" style="color:#2EACF9">protocol</span>的类名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        Should be set to <strong><span>STREAM_IS_URL</span></strong> if        <span class="parameter" style="color:#2EACF9">protocol</span> is a URL protocol. Default is 0, local        stream.       </p>      </dd>          </dl>    </span>  </div>           <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-wrapper-register-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>   <p class="para">     当 <span class="parameter" style="color:#2EACF9">protocol</span> 已经有处理者时，<span class="function"><strong style="color:#CC7832">stream_wrapper_register()</strong></span> 将返回<strong><span>FALSE</span></strong>    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-wrapper-register-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.2.4</td>        <td>         添加 <span class="parameter" style="color:#2EACF9">flags</span> 参数.        </td>       </tr>       </tbody>         </table>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-wrapper-register-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4840">     <p><strong>Example #1 如何注册一个 stream wrapper</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$existed&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">stream_get_wrappers</span><span style="color: #007700">());<br />if&nbsp;(</span><span style="color: #9876AA">$existed</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">stream_wrapper_unregister</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">stream_wrapper_register</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"VariableStream"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$myvar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">""</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"var://myvar"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r+"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"line1\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"line2\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"line3\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />while&nbsp;(!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$myvar</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$existed</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">stream_wrapper_restore</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> line1 line2 line3 string(18) &quot;line1 line2 line3 &quot; </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-wrapper-register-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member">The <a href="http://php.net/manual/zh/class.streamwrapper.php" class="xref">streamWrapper</a> prototype class</li>     <li class="member"><a href="http://php.net/manual/zh/stream.streamwrapper.example-1.php" class="xref">Example class registered as stream wrapper</a></li>     <li class="member"><span class="function">{@link stream_wrapper_unregister()} - Unregister a URL wrapper</span></li>     <li class="member"><span class="function">{@link stream_wrapper_restore()} - Restores a previously unregistered built-in wrapper</span></li>     <li class="member"><span class="function">{@link stream_get_wrappers()} - 获取已注册的流类型</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_wrapper_register ($protocol, $classname, $flags = null) {}

/**
*<div id="function.stream-register-wrapper" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_register_wrapper</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_register_wrapper</span> &mdash; <span class="dc-title">别名 <span class="function">{@link stream_wrapper_register()}</span></span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-register-wrapper-description">   <h3 class="title">说明</h3>   <p class="para">    此函数是该函数的别名： <span class="function">{@link stream_wrapper_register()}</span>.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_register_wrapper ($protocol, $classname, $flags) {}

/**
*<div id="function.stream-resolve-include-path" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_resolve_include_path</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7)</p><p class="refpurpose"><span class="refname">stream_resolve_include_path</span> &mdash; <span class="dc-title">    Resolve filename against the include path   </span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-resolve-include-path-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>stream_resolve_include_path</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>        )</div>    <p class="para rdfs-comment">    Resolve <span class="parameter" style="color:#2EACF9">filename</span> against the include path according to the same rules as <span class="function">{@link fopen()}</span>/<span class="function">{@link include}</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-resolve-include-path-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        The filename to resolve.       </p>      </dd>               </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-resolve-include-path-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> containing the resolved absolute filename,  或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-resolve-include-path-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4827">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_resolve_include_path()</strong></span> example</strong></p>     <div class="example-contents"><p>      Basic usage example.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_resolve_include_path</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.php"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(22) &quot;/var/www/html/test.php&quot; </span></div>     </div>    </div>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return string|bool containing the resolved absolute filename, or FALSE on failure.*/
function stream_resolve_include_path ($filename) {}

/**
*<div id="function.stream-wrapper-unregister" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_wrapper_unregister</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_wrapper_unregister</span> &mdash; <span class="dc-title">Unregister a URL wrapper</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-wrapper-unregister-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_wrapper_unregister</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$protocol</span></span>    )</div>    <p class="para rdfs-comment">    Allows you to disable an already defined stream wrapper. Once the wrapper    has been disabled you may override it with a user-defined wrapper using    <span class="function">{@link stream_wrapper_register()}</span> or reenable it later on with    <span class="function">{@link stream_wrapper_restore()}</span>.   </p>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-wrapper-unregister-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">protocol</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-wrapper-unregister-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_wrapper_unregister ($protocol) {}

/**
*<div id="function.stream-wrapper-restore" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_wrapper_restore</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">stream_wrapper_restore</span> &mdash; <span class="dc-title">Restores a previously unregistered built-in wrapper</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-wrapper-restore-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_wrapper_restore</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$protocol</span></span>    )</div>    <p class="para rdfs-comment">    Restores a built-in wrapper previously unregistered with    <span class="function">{@link stream_wrapper_unregister()}</span>.   </p>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-wrapper-restore-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">protocol</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-wrapper-restore-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_wrapper_restore ($protocol) {}

/**
*<div id="function.stream-get-wrappers" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_get_wrappers</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_get_wrappers</span> &mdash; <span class="dc-title">获取已注册的流类型</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-get-wrappers-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>stream_get_wrappers</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    获取在当前运行系统中已经注册并可使用的流类型列表。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-get-wrappers-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个索引数组，该数组里包含了当前运行系统中可使用的流类型的名称。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-get-wrappers-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4821">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_get_wrappers()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_get_wrappers</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [0] =&gt; php     [1] =&gt; file     [2] =&gt; http     [3] =&gt; ftp     [4] =&gt; compress.bzip2     [5] =&gt; compress.zlib ) </span></div>     </div>    </div>   </span>   <p class="para">    <div class="example" id="stream-context-get-default.example.basic">     <p><strong>Example #2 检查一个流类型是否存在</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;check&nbsp;for&nbsp;the&nbsp;existence&nbsp;of&nbsp;the&nbsp;bzip2&nbsp;stream&nbsp;wrapper<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'compress.bzip2'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">stream_get_wrappers</span><span style="color: #007700">()))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'compress.bzip2://&nbsp;support&nbsp;enabled.'</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'compress.bzip2://&nbsp;support&nbsp;not&nbsp;enabled.'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-get-wrappers-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_wrapper_register()} - 注册一个用 PHP 类实现的 URL 封装协议</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return array an indexed array containing the name of all stream wrappers*/
function stream_get_wrappers () {}

/**
*<div id="function.stream-get-transports" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_get_transports</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_get_transports</span> &mdash; <span class="dc-title">获取已注册的套接字传输协议列表</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-get-transports-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>stream_get_transports</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    返回一个包含当前运行系统中所有套接字传输协议名称的索引数组。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-get-transports-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个套接字传输协议名称的索引数组。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-get-transports-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4820">     <p><strong>Example #1 使用 <span class="function"><strong style="color:#CC7832">stream_get_transports()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$xportlist&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_get_transports</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$xportlist</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (   [0] =&gt; tcp   [1] =&gt; udp   [2] =&gt; unix   [3] =&gt; udg ) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-get-transports-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_get_filters()} - 获取已注册的数据流过滤器列表</span></li>    <li class="member"><span class="function">{@link stream_get_wrappers()} - 获取已注册的流类型</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return array an indexed array of socket transports names.*/
function stream_get_transports () {}

/**
*<div id="function.stream-is-local" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_is_local</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.4, PHP 7)</p><p class="refpurpose"><span class="refname">stream_is_local</span> &mdash; <span class="dc-title">Checks if a stream is a local stream</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-is-local-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_is_local</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$stream_or_url</span></span>    )</div>    <p class="para rdfs-comment">    Checks if a stream, or a URL, is a local one or not.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-is-local-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream_or_url</span></dt>       <dd>        <p class="para">        The stream <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> or URL to check.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-is-local-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-is-local-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="stream-context-get-options.example.basic">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_is_local()</strong></span> example</strong></p>     <div class="example-contents"><p>      Basic usage example.     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_is_local</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://example.com"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_is_local</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> bool(false) bool(true) </span></div>     </div>    </div>   </span>  </div>     <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_is_local ($stream_or_url) {}

/**
*<div id="function.get-headers" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_headers</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_headers</span> &mdash; <span class="dc-title">取得服务器响应一个 HTTP 请求所发送的所有标头</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-headers-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>get_headers</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$url</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$format</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">get_headers()</strong></span> 返回一个数组，包含有服务器响应一个    HTTP 请求所发送的标头。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-headers-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">url</span></dt>       <dd>        <p class="para">        目标 URL。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">format</span></dt>       <dd>        <p class="para">         如果将可选的 <span class="parameter" style="color:#2EACF9">format</span> 参数设为 1，则    <span class="function"><strong style="color:#CC7832">get_headers()</strong></span> 会解析相应的信息并设定数组的键名。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-headers-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回包含有服务器响应一个    HTTP 请求所发送标头的索引或关联数组，如果失败则返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.get-headers-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.3</td>        <td>         自 PHP 5.1.3 起本函数使用默认的流上下文，其可以用 <span class="function">{@link stream_context_get_default()}</span>     函数设定和修改。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.get-headers-examples">  <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4878">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">get_headers()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$url&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">get_headers</span><span style="color: #007700">(</span><span style="color: #9876AA">$url</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">get_headers</span><span style="color: #007700">(</span><span style="color: #9876AA">$url</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [0] =&gt; HTTP/1.1 200 OK     [1] =&gt; Date: Sat, 29 May 2004 12:28:13 GMT     [2] =&gt; Server: Apache/1.3.27 (Unix)  (Red-Hat/Linux)     [3] =&gt; Last-Modified: Wed, 08 Jan 2003 23:11:55 GMT     [4] =&gt; ETag: &quot;3f80f-1b6-3e1cb03b&quot;     [5] =&gt; Accept-Ranges: bytes     [6] =&gt; Content-Length: 438     [7] =&gt; Connection: close     [8] =&gt; Content-Type: text/html )  Array (     [0] =&gt; HTTP/1.1 200 OK     [Date] =&gt; Sat, 29 May 2004 12:28:14 GMT     [Server] =&gt; Apache/1.3.27 (Unix)  (Red-Hat/Linux)     [Last-Modified] =&gt; Wed, 08 Jan 2003 23:11:55 GMT     [ETag] =&gt; &quot;3f80f-1b6-3e1cb03b&quot;     [Accept-Ranges] =&gt; bytes     [Content-Length] =&gt; 438     [Connection] =&gt; close     [Content-Type] =&gt; text/html ) </span></div>     </div>    </div>    <div class="example" id="example-4879">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">get_headers()</strong></span> using HEAD example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;By&nbsp;default&nbsp;get_headers&nbsp;uses&nbsp;a&nbsp;GET&nbsp;request&nbsp;to&nbsp;fetch&nbsp;the&nbsp;headers.&nbsp;If&nbsp;you<br />//&nbsp;want&nbsp;to&nbsp;send&nbsp;a&nbsp;HEAD&nbsp;request&nbsp;instead,&nbsp;you&nbsp;can&nbsp;do&nbsp;so&nbsp;using&nbsp;a&nbsp;stream&nbsp;context:<br /></span><span style="color: #9876AA">stream_context_set_default</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'http'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'method'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'HEAD'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;)<br />);<br /></span><span style="color: #9876AA">$headers&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">get_headers</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-headers-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link apache_request_headers()} - 获取全部 HTTP 请求头信息</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.url.php">URL 函数</a></div></div>
 * @return array an indexed or associative array with the headers, or false on*/
function get_headers ($url, $format = null, $context) {}

/**
*<div id="function.stream-set-timeout" class="refentry">  <div class="refnamediv">   <h1 class="refname">stream_set_timeout</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">stream_set_timeout</span> &mdash; <span class="dc-title">Set timeout period on a stream</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stream-set-timeout-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>stream_set_timeout</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$seconds</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$microseconds</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    Sets the timeout value on <span class="parameter" style="color:#2EACF9">stream</span>,    expressed in the sum of <span class="parameter" style="color:#2EACF9">seconds</span> and    <span class="parameter" style="color:#2EACF9">microseconds</span>.    </p>   <p class="para">    When the stream times out, the &#039;timed_out&#039; key of the array returned by    <span class="function">{@link stream_get_meta_data()}</span> is set to <strong><span>TRUE</span></strong>, although no    error/warning is generated.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stream-set-timeout-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        The target stream.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">seconds</span></dt>       <dd>        <p class="para">        The seconds part of the timeout to be set.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">microseconds</span></dt>       <dd>        <p class="para">        The microseconds part of the timeout to be set.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stream-set-timeout-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stream-set-timeout-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.0</td>        <td>         As of PHP 4.3, this function can (potentially) work on any kind of         stream.  In PHP 4.3, socket based streams are still the only kind         supported in the PHP core, although streams from other extensions         may support this function.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stream-set-timeout-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-4829">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">stream_set_timeout()</strong></span> example</strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fsockopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"www.example.com"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">80</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Unable&nbsp;to&nbsp;open\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"GET&nbsp;/&nbsp;HTTP/1.0\r\n\r\n"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">stream_set_timeout</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$res&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2000</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_get_meta_data</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'timed_out'</span><span style="color: #007700">])&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Connection&nbsp;timed&nbsp;out!'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$res</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stream-set-timeout-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     This function doesn&#039;t work with advanced operations like     <span class="function">{@link stream_socket_recvfrom()}</span>, use     <span class="function">{@link stream_select()}</span> with timeout parameter instead.    </p>   </p></blockquote>   <p class="para">    This function was previously called as    <span class="function"><strong style="color:#CC7832">set_socket_timeout()</strong></span> and later    <span class="function">{@link socket_set_timeout()}</span> but this usage is deprecated.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stream-set-timeout-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.stream.php">Stream 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function stream_set_timeout ($stream, $seconds, $microseconds = null) {}

/**
*<div id="function.socket-set-timeout" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_set_timeout</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_set_timeout</span> &mdash; <span class="dc-title">别名 <span class="function">{@link stream_set_timeout()}</span></span></p>    </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-set-timeout-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link stream_set_timeout()}</span>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function socket_set_timeout ($stream, $seconds, $microseconds = 0) {}

/**
*<div id="function.socket-get-status" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_get_status</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_get_status</span> &mdash; <span class="dc-title">别名 <span class="function">{@link stream_get_meta_data()}</span></span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-get-status-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link stream_get_meta_data()}</span>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return array The result array contains the following items:*/
function socket_get_status ($stream) {}

/**
*<div id="function.realpath" class="refentry">  <div class="refnamediv">   <h1 class="refname">realpath</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">realpath</span> &mdash; <span class="dc-title">返回规范化的绝对路径名</span></p>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.realpath-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>realpath</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$path</span></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">realpath()</strong></span> 扩展所有的符号连接并且处理输入的    <span class="parameter" style="color:#2EACF9">path</span> 中的 &#039;/./&#039;, &#039;/../&#039; 以及多余的 &#039;/&#039;    并返回规范化后的绝对路径名。返回的路径中没有符号连接，&#039;/./&#039;    或 &#039;/../&#039; 成分。   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.realpath-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">path</span></dt>       <dd>        <p class="para">        要检查的路径。        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:          <p class="para">          Whilst a path must be supplied, the value can be blank or <strong><span>NULL</span></strong>          In these cases, the value is interpreted as the current directory.         </p>        </p></blockquote>       </p>      </dd>          </dl>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.realpath-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the canonicalized absolute pathname on success. The resulting path     will have no symbolic link, &#039;/./&#039; or &#039;/../&#039; components.   </p>   <p class="para">    <span class="function"><strong style="color:#CC7832">realpath()</strong></span> 失败时返回 <strong><span>FALSE</span></strong>，比如说文件不存在的话。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     The running script must have executable permissions on all directories in     the hierarchy, otherwise <span class="function"><strong style="color:#CC7832">realpath()</strong></span> will return     <strong><span>FALSE</span></strong>.    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara"> 因为 PHP 的整数类型是有符号整型而且很多平台使用 32 位整型，对 2GB 以上的文件，一些文件系统函数可能返回无法预期的结果 。</span></p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.realpath-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         在之前的版本中，在 *BSD    系统上，如果仅仅是 <span class="parameter" style="color:#2EACF9">path</span> 不存在的话，<span class="function"><strong style="color:#CC7832">realpath()</strong></span>    并不会像其它系统那样返回 <strong><span>FALSE</span></strong>。        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         在此之前的版本中，如果 <span class="parameter" style="color:#2EACF9">path</span> 传入了空或者   <strong><span>NULL</span></strong>，将导致 <span class="function"><strong style="color:#CC7832">realpath()</strong></span> 返回脚本当前的目录。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.realpath-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2835">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">realpath()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />chdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'/var/www/'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">'./../../etc/passwd'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> /etc/passwd </span></div>     </div>    </div>    <div class="example" id="example-2836">     <p><strong>Example #2 Windows 上的 <span class="function"><strong style="color:#CC7832">realpath()</strong></span></strong></p>     <div class="example-contents"><p>      在 Windows 上，<span class="function"><strong style="color:#CC7832">realpath()</strong></span> 会将 unix 风格的路径改成 Windows 风格的。     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">'/windows/system32'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> C:\WINDOWS\System32 </span></div>     </div>    </div>   </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.realpath-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link basename()} - 返回路径中的文件名部分</span></li>     <li class="member"><span class="function">{@link dirname()} - 返回路径中的目录部分</span></li>     <li class="member"><span class="function">{@link pathinfo()} - 返回文件路径的信息</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return string|bool the canonicalized absolute pathname on success. The resulting path */
function realpath ($path) {}

/**
*<div id="function.fnmatch" class="refentry">  <div class="refnamediv">   <h1 class="refname">fnmatch</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fnmatch</span> &mdash; <span class="dc-title">用模式匹配文件名</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fnmatch-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>fnmatch</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$pattern</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$string</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">fnmatch()</strong></span>    检查传入的    <span class="parameter" style="color:#2EACF9">string</span>    是否匹配给出的 shell 统配符    <span class="parameter" style="color:#2EACF9">pattern</span>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fnmatch-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">pattern</span></dt>       <dd>        <p class="para">        shell 统配符。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">string</span></dt>       <dd>        <p class="para">        要检查的字符串。        此函数对于文件名尤其有用，但也可以用于普通的字符串。       </p>       <p class="para">        普通用户可能习惯于    shell 模式或者至少其中最简单的形式    <em>&#039;?&#039;</em> 和 <em>&#039;*&#039;</em>    通配符，因此使用    <span class="function"><strong style="color:#CC7832">fnmatch()</strong></span>    来代替     <span class="function">{@link preg_match()}</span>    来进行前端搜索表达式输入对于非程序员用户更加方便。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The value of <span class="parameter" style="color:#2EACF9">flags</span> can be any combination of         the following flags, joined with the        <a href="http://php.net/manual/zh/language.operators.bitwise.php" class="link">binary OR (|) operator</a>.        <table class="doctable table">         <caption><strong>          A list of possible flags for <span class="function"><strong style="color:#CC7832">fnmatch()</strong></span>         </strong></caption>                   <thead>           <tr>            <th><span class="parameter" style="color:#2EACF9">Flag</span></th>            <th>Description</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><strong><span>FNM_NOESCAPE</span></strong></td>            <td>             Disable backslash escaping.            </td>           </tr>            <tr>            <td><strong><span>FNM_PATHNAME</span></strong></td>            <td>             Slash in string only matches slash in the given pattern.            </td>           </tr>            <tr>            <td><strong><span>FNM_PERIOD</span></strong></td>            <td>             Leading period in string must be exactly matched by period in the given pattern.            </td>           </tr>            <tr>            <td><strong><span>FNM_CASEFOLD</span></strong></td>            <td>             Caseless match. Part of the GNU extension.            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fnmatch-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    匹配则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fnmatch-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         此函数开始在 Windows 平台上生效。        </td>       </tr>       </tbody>         </table>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fnmatch-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2793">     <p><strong>Example #1 用 shell 中的通配符模式匹配来检查颜色名称</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">fnmatch</span><span style="color: #007700">(</span><span style="color: #DD0000">"*gr[ae]y"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$color</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"some&nbsp;form&nbsp;of&nbsp;gray&nbsp;..."</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fnmatch-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     目前该函数无法在 Windows 或其它非 POSIX 兼容的系统上使用。    </p>   </div>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fnmatch-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link glob()} - 寻找与模式匹配的文件路径</span></li>     <li class="member"><span class="function">{@link preg_match()} - 执行匹配正则表达式</span></li>     <li class="member"><span class="function">{@link sscanf()} - 根据指定格式解析输入的字符</span></li>     <li class="member"><span class="function">{@link printf()} - 输出格式化字符串</span></li>     <li class="member"><span class="function">{@link sprintf()} - Return a formatted string</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true if there is a match, false otherwise.*/
function fnmatch ($pattern, $string, $flags = null) {}
?>
