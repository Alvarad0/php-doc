<?php

/**
*<div id="function.getlastmod" class="refentry">  <div class="refnamediv">   <h1 class="refname">getlastmod</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">getlastmod</span> &mdash; <span class="dc-title">获取页面最后修改的时间</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.getlastmod-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>getlastmod</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    获取执行的主脚本的最后修改时间。   </p>   <p class="para">    如果你对其他文件的最后修改时间的感兴趣，可考虑使用 <span class="function">{@link filemtime()}</span>。   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.getlastmod-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回当前页面最后修改的时间。这个值是一个 Unix 时间戳，可以传入 <span class="function">{@link date()}</span>。    错误时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.getlastmod-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-505">     <p><strong>Example #1 <span class="function"><strong>getlastmod()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;输出类似&nbsp;'Last&nbsp;modified:&nbsp;March&nbsp;04&nbsp;1998&nbsp;20:43:59.'<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Last&nbsp;modified:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">date&nbsp;</span><span style="color: #007700">(</span><span style="color: #DD0000">"F&nbsp;d&nbsp;Y&nbsp;H:i:s."</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">getlastmod</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.getlastmod-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link date()} - 格式化一个本地时间／日期</span></li>     <li class="member"><span class="function">{@link getmyuid()} - 获取 PHP 脚本所有者的 UID</span></li>     <li class="member"><span class="function">{@link getmygid()} - 获取当前 PHP 脚本拥有者的 GID</span></li>     <li class="member"><span class="function">{@link get_current_user()} - 获取当前 PHP 脚本所有者名称</span></li>     <li class="member"><span class="function">{@link getmyinode()} - 获取当前脚本的索引节点（inode）</span></li>     <li class="member"><span class="function">{@link getmypid()} - 获取 PHP 进程的 ID</span></li>     <li class="member"><span class="function">{@link filemtime()} - 取得文件修改时间</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return int the time of the last modification of the current*/
function getlastmod () {}

/**
*<div id="function.base64-decode" class="refentry">  <div class="refnamediv">   <h1 class="refname">base64_decode</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">base64_decode</span> &mdash; <span class="dc-title">对使用 MIME base64 编码的数据进行解码</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.base64-decode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>base64_decode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strict</code><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    对 base64 编码的 <code class="parameter">data</code> 进行解码。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.base64-decode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">data</code></dt>       <dd>        <p class="para">        编码过的数据。       </p>      </dd>                 <dt> <code class="parameter">strict</code></dt>       <dd>        <p class="para">        当设置 <code class="parameter">strict</code> 为 <strong><code>TRUE</code></strong> 时，一旦输入的数据超出了 base64 字母表，将返回 <strong><code>FALSE</code></strong>。        否则会静默丢弃无效的字符。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.base64-decode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回原始数据， 或者在失败时返回 <strong><code>FALSE</code></strong>。返回的数据可能是二进制的。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.base64-decode-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.2.0</td>        <td>增加了 <code class="parameter">strict</code> 。</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.base64-decode-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4876">     <p><strong>Example #1 <span class="function"><strong>base64_decode()</strong></span> 示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw=='</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">base64_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> This is an encoded string </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.base64-decode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link base64_encode()} - 使用 MIME base64 对数据进行编码</span></li>     <li class="member">      <a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC 2045</a> 的 6.8 章节。      </li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.url.php">URL 函数</a></div></div>
 * @return string|bool the original data or false on failure. The returned data may be*/
function base64_decode ($data, $strict = null) {}

/**
*<div id="function.base64-encode" class="refentry">  <div class="refnamediv">   <h1 class="refname">base64_encode</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">base64_encode</span> &mdash; <span class="dc-title">使用 MIME base64 对数据进行编码</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.base64-encode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>base64_encode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    )</div>    <p class="para rdfs-comment">    使用 base64 对 <code class="parameter">data</code> 进行编码。   </p>   <p class="para">    设计此种编码是为了使二进制数据可以通过非纯    8-bit 的传输层传输，例如电子邮件的主体。   </p>   <p class="para">    Base64-encoded 数据要比原始数据多占用 33% 左右的空间。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.base64-encode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">data</code></dt>       <dd>        <p class="para">        要编码的数据。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.base64-encode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    编码后的字符串数据， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.base64-encode-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4877">     <p><strong>Example #1 <span class="function"><strong>base64_encode()</strong></span> 示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'This&nbsp;is&nbsp;an&nbsp;encoded&nbsp;string'</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">base64_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw== </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.base64-encode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link base64_decode()} - 对使用 MIME base64 编码的数据进行解码</span></li>     <li class="member"><span class="function">{@link chunk_split()} - 将字符串分割成小块</span></li>     <li class="member"><span class="function">{@link convert_uuencode()} - 使用 uuencode 编码一个字符串</span></li>     <li class="member"><a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC 2045</a> 6.8 章节</li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.url.php">URL 函数</a></div></div>
 * @return string The encoded data, as a string.*/
function base64_encode ($data) {}

/**
*<div id="function.convert-uuencode" class="refentry">  <div class="refnamediv">   <h1 class="refname">convert_uuencode</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">convert_uuencode</span> &mdash; <span class="dc-title">使用 uuencode 编码一个字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.convert-uuencode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>convert_uuencode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>convert_uuencode()</strong></span> 使用 uuencode 算法对一个字符串进行编码。   </p>   <p class="para">    uuencode 算法会将所有（含二进制数据）字符串转化为可输出的字符，    并且可以被安全的应用于网络传输。使用 uuencode 编码后的数据    将会比源数据大35%左右   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.convert-uuencode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">data</code></dt>       <dd>        <p class="para">        需要被编码的数据。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.convert-uuencode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 uuencode 编码后的数据  或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.convert-uuencode-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5891">     <p><strong>Example #1 <span class="function"><strong>convert_uuencode()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$some_string&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"test\ntext&nbsp;text\r\n"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #9876AA">convert_uuencode</span><span style="color: #007700">(</span><span style="color: #9876AA">$some_string</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.convert-uuencode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link convert_uudecode()} - 解码一个 uuencode 编码的字符串</span></li>     <li class="member"><span class="function">{@link base64_encode()} - 使用 MIME base64 对数据进行编码</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the uuencoded data.*/
function convert_uuencode ($data) {}

/**
*<div id="function.convert-uudecode" class="refentry">  <div class="refnamediv">   <h1 class="refname">convert_uudecode</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">convert_uudecode</span> &mdash; <span class="dc-title">解码一个 uuencode 编码的字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.convert-uudecode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>convert_uudecode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>convert_uudecode()</strong></span> 解码一个 uuencode 编码的字符串。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.convert-uudecode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">data</code></dt>       <dd>        <p class="para">        uuencode 编码后的数据       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.convert-uudecode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回解码后的字符串数据， 或者在失败时返回 <strong><code>FALSE</code></strong>.。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.convert-uudecode-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5890">     <p><strong>Example #1 <span class="function"><strong>convert_uudecode()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;你猜会输出啥？:)&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">convert_uudecode</span><span style="color: #007700">(</span><span style="color: #DD0000">"+22!L;W9E(%!(4\"$`\n`"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.convert-uudecode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link convert_uuencode()} - 使用 uuencode 编码一个字符串</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the decoded data as a string.*/
function convert_uudecode ($data) {}

/**
*<div id="function.abs" class="refentry">    <div class="refnamediv">     <h1 class="refname">abs</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">abs</span> &mdash; <span class="dc-title">绝对值</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.abs-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.number" class="type number">number</a></span> <span class="methodname"><strong>abs</strong></span>      ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$number</code></span>     )</div>      <p class="para rdfs-comment">      返回参数 <code class="parameter">number</code> 的绝对值。     </p>    </div>         <div class="refsect1 parameters" id="refsect1-function.abs-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        要处理的数字值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.abs-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">number</code> 的绝对值。 如果参数 <code class="parameter">number</code>      是 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>，则返回的类型也是 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>，否则返回      <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span>（因为 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> 通常比 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 有更大的取值范围）。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.abs-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4111">     <p><strong>Example #1 <span class="function"><strong>abs()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$abs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">abs</span><span style="color: #007700">(-</span><span style="color: #9876AA">4.2</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$abs&nbsp;=&nbsp;4.2;&nbsp;(double/float)<br /></span><span style="color: #9876AA">$abs2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">abs</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$abs2&nbsp;=&nbsp;5;&nbsp;(integer)<br /></span><span style="color: #9876AA">$abs3&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">abs</span><span style="color: #007700">(-</span><span style="color: #9876AA">5</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$abs3&nbsp;=&nbsp;5;&nbsp;(integer)<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.abs-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link gmp_abs()} - Absolute value</span></li>     <li class="member"><span class="function">{@link gmp_sign()} - Sign of number</span></li>    </ul>   </p>  </div>     <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float|int The absolute value of number. If the*/
function abs ($number) {}

/**
*<div id="function.ceil" class="refentry">    <div class="refnamediv">     <h1 class="refname">ceil</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ceil</span> &mdash; <span class="dc-title">进一法取整</span></p>     </div>    <div class="refsect1 description" id="refsect1-function.ceil-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>ceil</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span>     )</div>      <p class="simpara">      返回不小于      <code class="parameter">value</code> 的下一个整数，<code class="parameter">value</code>      如果有小数部分则进一位。     </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.ceil-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">value</code></dt>       <dd>        <p class="para">        要进一法取整的值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.ceil-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回不小于      <code class="parameter">value</code> 的下一个整数。   <span class="function"><strong>ceil()</strong></span> 返回的类型仍然是      <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>，因为 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> 值的范围通常比 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 要大。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.ceil-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4115">     <p><strong>Example #1 <span class="function"><strong>ceil()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">ceil</span><span style="color: #007700">(</span><span style="color: #9876AA">4.3</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;5<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">ceil</span><span style="color: #007700">(</span><span style="color: #9876AA">9.999</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;10<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">ceil</span><span style="color: #007700">(-</span><span style="color: #9876AA">3.14</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;-3<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.ceil-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link floor()} - 舍去法取整</span></li>     <li class="member"><span class="function">{@link round()} - 对浮点数进行四舍五入</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float value rounded up to the next highest*/
function ceil ($value) {}

/**
*<div id="function.floor" class="refentry">  <div class="refnamediv">   <h1 class="refname">floor</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">floor</span> &mdash; <span class="dc-title">舍去法取整</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.floor-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">float</span> <span class="methodname"><strong>floor</strong></span>     ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span>    )</div>    <p class="simpara">    返回不大于      <code class="parameter">value</code> 的最接近的整数，舍去小数部分取整。   </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.floor-parameters">     <h3 class="title">参数</h3>     <p class="para">      <dl>                <dt> <code class="parameter">value</code></dt>         <dd>          <p class="para">          要取整的数字         </p>        </dd>              </dl>      </p>    </div>     <div class="refsect1 returnvalues" id="refsect1-function.floor-returnvalues">     <h3 class="title">返回值</h3>     <p class="para">      返回不大于      <code class="parameter">value</code> 的最接近的整数，将    <code class="parameter">value</code>    的小数部分舍去取整。<span class="function"><strong>floor()</strong></span> 返回的类型仍然是    <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>，因为 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> 值的范围通常比 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 要大。   </p>    </div>     <div class="refsect1 examples" id="refsect1-function.floor-examples">     <h3 class="title">范例</h3>     <p class="para">      <div class="example" id="example-4123">       <p><strong>Example #1 <span class="function"><strong>floor()</strong></span> 例子</strong></p>       <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">floor</span><span style="color: #007700">(</span><span style="color: #9876AA">4.3</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;4<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">floor</span><span style="color: #007700">(</span><span style="color: #9876AA">9.999</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;9<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">floor</span><span style="color: #007700">(-</span><span style="color: #9876AA">3.14</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;-4<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>    </div>     <div class="refsect1 seealso" id="refsect1-function.floor-seealso">     <h3 class="title">参见</h3>     <p class="para">      <ul class="simplelist">       <li class="member"><span class="function">{@link ceil()} - 进一法取整</span></li>       <li class="member"><span class="function">{@link round()} - 对浮点数进行四舍五入</span></li>      </ul>     </p>    </div>  <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float value rounded to the next lowest integer.*/
function floor ($value) {}

/**
*<div id="function.round" class="refentry">    <div class="refnamediv">     <h1 class="refname">round</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">round</span> &mdash; <span class="dc-title">对浮点数进行四舍五入</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.round-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>round</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span>     [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$precision</code><span class="initializer"> = 0</span></span>     [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = PHP_ROUND_HALF_UP</span></span>    ]] )</div>      <p class="para rdfs-comment">      返回将 <code class="parameter">val</code> 根据指定精度      <code class="parameter">precision</code>（十进制小数点后数字的数目）进行四舍五入的结果。<code class="parameter">precision</code>      也可以是负数或零（默认值）。     </p>          <p class="para">      <blockquote class="note"><p><strong class="note">Note</strong>:        <span class="simpara">        PHP 默认不能正确处理类似 <em>&quot;12,300.2&quot;</em>        的字符串。见<a href="http://php.net/manual/zh/language.types.string.php#language.types.string.conversion" class="link">字符串转换为数值</a>。       </span>      </p></blockquote>     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.round-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">val</code></dt>       <dd>        <p class="para">        要处理的值       </p>      </dd>                 <dt> <code class="parameter">precision</code></dt>       <dd>        <p class="para">        可选的十进制小数点后数字的数目。       </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        以下之一： <strong><code>PHP_ROUND_HALF_UP</code></strong>、        <strong><code>PHP_ROUND_HALF_DOWN</code></strong>        <strong><code>PHP_ROUND_HALF_EVEN</code></strong> 或        <strong><code>PHP_ROUND_HALF_ODD</code></strong>       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.round-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    四舍五入后的值   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.round-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4138">     <p><strong>Example #1 <span class="function"><strong>round()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.4</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;3<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.5</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;4<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.6</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;4<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.6</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;4<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">1.95583</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;1.96<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">1241757</span><span style="color: #007700">,&nbsp;-</span><span style="color: #9876AA">3</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;1242000<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">5.045</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;5.05<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">5.055</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;5.06<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-4139">     <p><strong>Example #2 <code class="parameter">mode</code> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_UP</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;10<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_DOWN</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;9<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_EVEN</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;10<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_ODD</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;9<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_UP</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;9<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_DOWN</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;8<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_EVEN</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;8<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_ROUND_HALF_ODD</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;9<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.round-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         引入了 <code class="parameter">mode</code> 参数        </td>       </tr>        <tr>        <td>5.2.7</td>        <td>          <span class="function"><strong>round()</strong></span> 的内部运作修改符合 C99 的标准。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.round-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link ceil()} - 进一法取整</span></li>     <li class="member"><span class="function">{@link floor()} - 舍去法取整</span></li>     <li class="member"><span class="function">{@link number_format()} - 以千位分隔符方式格式化一个数字</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The rounded value*/
function round ($val, $precision = 0, $mode = PHP_ROUND_HALF_UP) {}

/**
*<div id="function.sin" class="refentry">    <div class="refnamediv">     <h1 class="refname">sin</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">sin</span> &mdash; <span class="dc-title">正弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.sin-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>sin</strong></span>        ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>       )</div>      <p class="para rdfs-comment">      <span class="function"><strong>sin()</strong></span> 返回参数 <code class="parameter">arg</code> 的正弦值。参数 <code class="parameter">arg</code> 的单位为弧度。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.sin-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        单位是弧度的值。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.sin-returnvalues">   <h3 class="title">返回值</h3>   <p class="para"><code class="parameter">arg</code> 的正弦值   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.sin-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4140">     <p><strong>Example #1 <span class="function"><strong>sin()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;返回值的精度由配置中的&nbsp;precision&nbsp;指示确定<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">deg2rad</span><span style="color: #007700">(</span><span style="color: #9876AA">60</span><span style="color: #007700">));&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;&nbsp;0.866025403&nbsp;...<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">60</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;-0.304810621&nbsp;...<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.sin-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>     <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>     <li class="member"><span class="function">{@link cos()} - 余弦</span></li>     <li class="member"><span class="function">{@link tan()} - 正切</span></li>     <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The sine of arg*/
function sin ($arg) {}

/**
*<div id="function.cos" class="refentry">    <div class="refnamediv">     <h1 class="refname">cos</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">cos</span> &mdash; <span class="dc-title">余弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.cos-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>cos</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      <span class="function"><strong>cos()</strong></span> 返回参数 <code class="parameter">arg</code>      的余弦值。参数 <code class="parameter">arg</code> 的单位为弧度。     </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.cos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        以弧度表示的角度       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.cos-returnvalues">   <h3 class="title">返回值</h3>   <p class="para"> <code class="parameter">arg</code>的余弦值   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.cos-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4116">     <p><strong>Example #1 <span class="function"><strong>cos()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">cos</span><span style="color: #007700">(</span><span style="color: #9876AA">M_PI</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;-1<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.cos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>     <li class="member"><span class="function">{@link sin()} - 正弦</span></li>     <li class="member"><span class="function">{@link tan()} - 正切</span></li>     <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The cosine of arg*/
function cos ($arg) {}

/**
*<div id="function.tan" class="refentry">    <div class="refnamediv">     <h1 class="refname">tan</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">tan</span> &mdash; <span class="dc-title">正切</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.tan-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>tan</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      <span class="function"><strong>tan()</strong></span> 返回参数 <code class="parameter">arg</code> 的正切值。参数      <code class="parameter">arg</code> 的单位为弧度。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.tan-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的以弧度为单位的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.tan-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 的正切值   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.tan-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4143">     <p><strong>Example #1 <span class="function"><strong>tan()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">tan</span><span style="color: #007700">(</span><span style="color: #9876AA">M_PI_4</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;1<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.tan-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link atan()} - 反正切</span></li>     <li class="member"><span class="function">{@link atan2()} - 两个参数的反正切</span></li>     <li class="member"><span class="function">{@link sin()} - 正弦</span></li>     <li class="member"><span class="function">{@link cos()} - 余弦</span></li>     <li class="member"><span class="function">{@link tanh()} - 双曲正切</span></li>     <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The tangent of arg*/
function tan ($arg) {}

/**
*<div id="function.asin" class="refentry">    <div class="refnamediv">     <h1 class="refname">asin</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">asin</span> &mdash; <span class="dc-title">反正弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.asin-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>asin</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的反正弦值，单位是弧度。<span class="function"><strong>asin()</strong></span>      是 <span class="function">{@link sin()}</span> 的反函数，它的意思是在      <span class="function"><strong>asin()</strong></span> 范围里的每个值都是      <em>a==sin(asin(a))</em> 。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.asin-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        待处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.asin-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 的反正弦弧度。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.asin-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sin()} - 正弦</span></li>     <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>     <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>     <li class="member"><span class="function">{@link atan()} - 反正切</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The arc sine of arg in radians*/
function asin ($arg) {}

/**
*<div id="function.acos" class="refentry">    <div class="refnamediv">     <h1 class="refname">acos</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">acos</span> &mdash; <span class="dc-title">反余弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.acos-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>acos</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的反余弦值，单位是弧度。<span class="function"><strong>acos()</strong></span>      是 <span class="function">{@link cos()}</span> 的反函数，它的意思是在      <span class="function"><strong>acos()</strong></span> 范围里的每个值都是      <em>a==cos(acos(a))</em> 。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.acos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.acos-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 的反余弦弧度。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.acos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link cos()} - 余弦</span></li>     <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>     <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>     <li class="member"><span class="function">{@link atan()} - 反正切</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The arc cosine of arg in radians.*/
function acos ($arg) {}

/**
*<div id="function.atan" class="refentry">    <div class="refnamediv">     <h1 class="refname">atan</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">atan</span> &mdash; <span class="dc-title">反正切</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.atan-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>atan</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的反正切值，单位是弧度。<span class="function"><strong>atan()</strong></span> 是      <span class="function">{@link tan()}</span> 的反函数，它的意思是在      <span class="function"><strong>atan()</strong></span> 范围里的每个值都是      <em>a==tan(atan(a))</em>。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.atan-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.atan-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 的反正切弧度。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.atan-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link tan()} - 正切</span></li>     <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>     <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>     <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The arc tangent of arg in radians.*/
function atan ($arg) {}

/**
*<div id="function.atanh" class="refentry">    <div class="refnamediv">     <h1 class="refname">atanh</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">atanh</span> &mdash; <span class="dc-title">反双曲正切</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.atanh-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>atanh</strong></span>        ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>       )</div>      <p class="para rdfs-comment">      返回      <code class="parameter">arg</code> 的反双曲正切值，即，其双曲正切为      <code class="parameter">arg</code> 的那个值。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.atanh-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.atanh-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Inverse hyperbolic tangent of <code class="parameter">arg</code>    </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.atanh-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          此函数在所有平台上都可以用了        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.atanh-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link tanh()} - 双曲正切</span></li>     <li class="member"><span class="function">{@link atan()} - 反正切</span></li>     <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>     <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float Inverse hyperbolic tangent of arg*/
function atanh ($arg) {}

/**
*<div id="function.atan2" class="refentry">    <div class="refnamediv">     <h1 class="refname">atan2</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">atan2</span> &mdash; <span class="dc-title">两个参数的反正切</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.atan2-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>atan2</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span>     , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span>     )</div>      <p class="simpara">      本函数计算两个变量      <code class="parameter">x</code> 和 <code class="parameter">y</code>      的反正切值。和计算      <code class="parameter">y</code> / <code class="parameter">x</code>      的反正切相似，只除了两个参数的符号是用来确定结果的象限之外。     </p>     <p class="simpara">      本函数的结果为弧度，其值在 -PI      和 PI 之间（包括 -PI 和 PI）。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.atan2-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">y</code></dt>       <dd>        <p class="para">        Dividend parameter       </p>      </dd>                 <dt> <code class="parameter">x</code></dt>       <dd>        <p class="para">        Divisor parameter       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.atan2-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">x</code> 和 <code class="parameter">y</code>      的反正切弧度值。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.atan2-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link atan()} - 反正切</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The arc tangent of y/x */
function atan2 ($y, $x) {}

/**
*<div id="function.sinh" class="refentry">    <div class="refnamediv">     <h1 class="refname">sinh</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">sinh</span> &mdash; <span class="dc-title">双曲正弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.sinh-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>sinh</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的双曲正弦值，定义为      <em>(exp(arg) - exp(-arg))/2</em>。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.sinh-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.sinh-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 的双曲正弦值   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.sinh-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sin()} - 正弦</span></li>     <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>     <li class="member"><span class="function">{@link cosh()} - 双曲余弦</span></li>     <li class="member"><span class="function">{@link tanh()} - 双曲正切</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The hyperbolic sine of arg*/
function sinh ($arg) {}

/**
*<div id="function.cosh" class="refentry">    <div class="refnamediv">     <h1 class="refname">cosh</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">cosh</span> &mdash; <span class="dc-title">双曲余弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.cosh-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>cosh</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的双曲余弦值，定义为      <em>(exp(arg) + exp(-arg))/2</em>。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.cosh-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.cosh-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 的双曲余弦值。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.cosh-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link cos()} - 余弦</span></li>     <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>     <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>     <li class="member"><span class="function"><strong>cosh()</strong></span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The hyperbolic cosine of arg*/
function cosh ($arg) {}

/**
*<div id="function.tanh" class="refentry">    <div class="refnamediv">     <h1 class="refname">tanh</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">tanh</span> &mdash; <span class="dc-title">双曲正切</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.tanh-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>tanh</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的双曲正切值，定义为      <em>sinh(arg)/cosh(arg)</em>。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.tanh-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.tanh-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 的双曲正切值   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.tanh-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link tan()} - 正切</span></li>     <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>     <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>     <li class="member"><span class="function">{@link cosh()} - 双曲余弦</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The hyperbolic tangent of arg*/
function tanh ($arg) {}

/**
*<div id="function.asinh" class="refentry">    <div class="refnamediv">     <h1 class="refname">asinh</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">asinh</span> &mdash; <span class="dc-title">反双曲正弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.asinh-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>asinh</strong></span>        ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>       )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的反双曲正弦值，即，其双曲正弦为      <code class="parameter">arg</code> 的那个值。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.asinh-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.asinh-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">arg</code> 的反双曲正弦值   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.asinh-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         此函数在所有平台上均可用        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.asinh-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>     <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>     <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>     <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The inverse hyperbolic sine of arg*/
function asinh ($arg) {}

/**
*<div id="function.acosh" class="refentry">    <div class="refnamediv">     <h1 class="refname">acosh</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">acosh</span> &mdash; <span class="dc-title">反双曲余弦</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.acosh-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>acosh</strong></span>        ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>       )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的反双曲余弦值，即，其双曲余弦为      <code class="parameter">arg</code> 的那个值。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.acosh-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.acosh-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The inverse hyperbolic cosine of <code class="parameter">arg</code>   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.acosh-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          This function is now available on all platforms        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.acosh-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link cosh()} - 双曲余弦</span></li>     <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>     <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>     <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The inverse hyperbolic cosine of arg*/
function acosh ($arg) {}

/**
 * Returns exp(number) - 1, computed in a way that is accurate even
 * @since 4.1.0
 * @since 5.0
   when the value of number is close to zero
/**
*<div id="function.expm1" class="refentry">    <div class="refnamediv">     <h1 class="refname">expm1</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">expm1</span> &mdash; <span class="dc-title">      返回 exp(number) - 1，甚至当 number 的值接近零也能计算出准确结果     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.expm1-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>expm1</strong></span>     ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>       )</div>      <p class="para rdfs-comment">      <span class="function"><strong>expm1()</strong></span> 返回 &#039;exp(<code class="parameter">number</code>) - 1&#039;，甚至当      <code class="parameter">number</code> 的值接近零也能计算出准确结果。但是当两个数值趋近于相等的时候，      &#039;exp (<code class="parameter">number</code>) - 1&#039; 就会变得不太准确。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.expm1-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.expm1-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    &#039;e&#039; to the power of <code class="parameter">arg</code> minus one   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.expm1-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          此函数在所有平台上均可用        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.expm1-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link log1p()} - 返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果</span></li>     <li class="member"><span class="function">{@link exp()} - 计算 e 的指数</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float 'e' to the power of arg minus one*/
function expm1 ($arg) {}

/**
 * Returns log(1 + number), computed in a way that is accurate even when
 * @since 4.1.0
 * @since 5.0
   the value of number is close to zero
/**
*<div id="function.log1p" class="refentry">    <div class="refnamediv">     <h1 class="refname">log1p</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">log1p</span> &mdash; <span class="dc-title">      返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.log1p-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>log1p</strong></span>        ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span>       )</div>      <p class="para rdfs-comment">      <span class="function"><strong>log1p()</strong></span> 返回 log(1 + <code class="parameter">number</code>)，甚至当      <code class="parameter">number</code> 的值接近零也能计算出准确结果。      <span class="function">{@link log()}</span> might only return log(1) in this case    due to lack of precision.     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.log1p-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.log1p-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    log(1 + <code class="parameter">number</code>)   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.log1p-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          此函数在所有平台上均可用        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.log1p-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link expm1()} - 返回 exp(number) - 1，甚至当 number 的值接近零也能计算出准确结果</span></li>     <li class="member"><span class="function">{@link log()} - 自然对数</span></li>     <li class="member"><span class="function">{@link log10()} - 以 10 为底的对数</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float log(1 + number)*/
function log1p ($number) {}

/**
*<div id="function.pi" class="refentry">    <div class="refnamediv">     <h1 class="refname">pi</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">pi</span> &mdash; <span class="dc-title">得到圆周率值</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.pi-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>pi</strong></span>        ( <span class="methodparam">void</span>       )</div>      <p class="simpara">      返回圆周率的近似值。返回值的 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>      精度是由 <var class="filename">php.ini</var> 中的 <a href="http://php.net/manual/zh/ini.core.php#ini.precision" class="link">precision</a>      指令确定。默认值是 <em>14</em>。你也可以使用      <strong><code>M_PI</code></strong> 常量，该常量产生与 <span class="function"><strong>pi()</strong></span> 完全相同的结果。     </p>    </div>   <div class="refsect1 returnvalues" id="refsect1-function.pi-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    圆周率（pi）的浮点近似值。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.pi-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4134">     <p><strong>Example #1 <span class="function"><strong>pi()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">pi</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;3.1415926535898<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">M_PI</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;3.1415926535898<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The value of pi as float.*/
function pi () {}

/**
*<div id="function.is-finite" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_finite</h1>     <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_finite</span> &mdash; <span class="dc-title">判断是否为有限值</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.is-finite-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">bool</span> <span class="methodname"><strong>is_finite</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span>     )</div>    <p class="para rdfs-comment">    检查 <code class="parameter">val</code> 是否是是本机平台上浮点数所允许范围中的一个合法的有限值。   </p> </div>     <div class="refsect1 parameters" id="refsect1-function.is-finite-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">val</code></dt>       <dd>        <p class="para">        要检查的值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.is-finite-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     如果 <code class="parameter">val</code> 是本机平台上 PHP  浮点数所允许范围中的一个合法的有限值，则返回 <strong><code>TRUE</code></strong>。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.is-finite-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link is_infinite()} - 判断是否为无限值</span></li>     <li class="member"><span class="function">{@link is_nan()} - 判断是否为合法数值</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return bool true if val is a legal finite*/
function is_finite ($val) {}

/**
*<div id="function.is-nan" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_nan</h1>     <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_nan</span> &mdash; <span class="dc-title">判断是否为合法数值</span></p>     </div>      <div class="refsect1 description" id="refsect1-function.is-nan-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>is_nan</strong></span>     ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span>    )</div>      <p class="para rdfs-comment">      如果 <code class="parameter">val</code> 为“非数值”，例如      <em>acos(1.01)</em> 的结果，则返回 <strong><code>TRUE</code></strong>。     </p>    </div>       <div class="refsect1 parameters" id="refsect1-function.is-nan-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">val</code></dt>       <dd>        <p class="para">        要检查的值       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.is-nan-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果 <code class="parameter">val</code> 不是一个数字（not a number）返回 <strong><code>TRUE</code></strong>，否则返回  <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.is-nan-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4127">     <p><strong>Example #1 <span class="function"><strong>is_nan()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Invalid&nbsp;calculation,&nbsp;will&nbsp;return&nbsp;a&nbsp;<br />//&nbsp;NaN&nbsp;value<br /></span><span style="color: #9876AA">$nan&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">acos</span><span style="color: #007700">(</span><span style="color: #9876AA">8</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$nan</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">is_nan</span><span style="color: #007700">(</span><span style="color: #9876AA">$nan</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> float(NAN) bool(true) </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.is-nan-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link is_finite()} - 判断是否为有限值</span></li>     <li class="member"><span class="function">{@link is_infinite()} - 判断是否为无限值</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return bool true if val is 'not a number',*/
function is_nan ($val) {}

/**
*<div id="function.intdiv" class="refentry">  <div class="refnamediv">   <h1 class="refname">intdiv</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">intdiv</span> &mdash; <span class="dc-title">对除法结果取整</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.intdiv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">     <span class="type">int</span> <span class="methodname"><strong>intdiv</strong></span>      ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dividend</code></span>     , <span class="methodparam"><span class="type">int</span> <code class="parameter">$divisor</code></span>     )</div>    <p class="para rdfs-comment">    返回 <code class="parameter">dividend</code> 除以 <code class="parameter">divisor</code> 商数的整数部分。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.intdiv-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">dividend</code></dt>      <dd>       <p class="para">       被除数。      </p>     </dd>              <dt> <code class="parameter">divisor</code></dt>      <dd>       <p class="para">       除数。      </p>     </dd>        </dl>   </div>   <div class="refsect1 returnvalues" id="refsect1-function.intdiv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">dividend</code> 除以 <code class="parameter">divisor</code> 的商，对该商取整。   </p>  </div>   <div class="refsect1 errors" id="refsect1-function.intdiv-errors">   <h3 class="title">错误／异常</h3>   <p class="para">     如果 <code class="parameter">divisor</code> 是 <em>0</em>，将抛出 <strong class="classname">DivisionByZeroError</strong> 异常。     如果 <code class="parameter">dividend</code> 是 <strong><code>PHP_INT_MIN</code></strong>     并且 <code class="parameter">divisor</code> 是 <em>-1</em>，将抛出 <strong class="classname">ArithmeticError</strong> 异常.   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.intdiv-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4126">     <p><strong>Example #1 <span class="function"><strong>intdiv()</strong></span> 的一些例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(-</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;-</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(-</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;-</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MIN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_INT_MIN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MIN</span><span style="color: #007700">,&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents screen"> <div class="cdata"><pre> int(1) int(-1) int(-1) int(1) int(1) int(1)  Fatal error: Uncaught ArithmeticError: Division of PHP_INT_MIN by -1 is not an integer in %s on line 8 Fatal error: Uncaught DivisionByZeroError: Division by zero in %s on line 9 </pre></div>     </div>    </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return int <p>*/
function intdiv ($dividend,  $divisor) {}

/**
*<div id="function.is-infinite" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_infinite</h1>     <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_infinite</span> &mdash; <span class="dc-title">判断是否为无限值</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.is-infinite-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">bool</span> <span class="methodname"><strong>is_infinite</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span>     )</div>      <p class="para rdfs-comment">      如果 <code class="parameter">val</code>      为无穷大（正的或负的），例如 <em>log(0)</em>      的结果或者任何超出本平台的浮点数范围的值，则返回 <strong><code>TRUE</code></strong>。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.is-infinite-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">val</code></dt>       <dd>        <p class="para">        要检查的值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.is-infinite-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果 <code class="parameter">val</code>      为无穷大返回 <strong><code>TRUE</code></strong>，否则返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.is-infinite-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link is_finite()} - 判断是否为有限值</span></li>     <li class="member"><span class="function">{@link is_nan()} - 判断是否为合法数值</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return bool true if val is infinite, else false.*/
function is_infinite ($val) {}

/**
*<div id="function.pow" class="refentry">    <div class="refnamediv">     <h1 class="refname">pow</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">pow</span> &mdash; <span class="dc-title">指数表达式</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.pow-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.number" class="type number">number</a></span> <span class="methodname"><strong>pow</strong></span>      ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.number" class="type number">number</a></span> <code class="parameter">$base</code></span>     , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.number" class="type number">number</a></span> <code class="parameter">$exp</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">base</code> 的      <code class="parameter">exp</code> 次方的幂。如果可能，本函数会返回      <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span>。     </p>    </div>          <div class="refsect1 parameters" id="refsect1-function.pow-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">base</code></dt>       <dd>        <p class="para">        The base to use       </p>      </dd>                 <dt> <code class="parameter">exp</code></dt>       <dd>        <p class="para">        指数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.pow-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">      <code class="parameter">base</code> 的      <code class="parameter">exp</code> 次方的幂。    If both arguments are non-negative integers and the result can be represented    as an integer, the result will be returned with <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> type,    otherwise it will be returned as a <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>.   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.pow-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.2.0</td>        <td>         如果不能计算幂，将发出一条警告，<span class="function"><strong>pow()</strong></span> 将返回 <strong><code>FALSE</code></strong>。<span class="function"><strong>pow()</strong></span> 开始不产生任何的警告。        </td>       </tr>        <tr>        <td>4.0.6</td>        <td>        如果可能函数现在会返回 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 的结果，之前   总是返回 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>，For older         versions, you may receive a bogus result for complex numbers.        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 examples" id="refsect1-function.pow-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4135">     <p><strong>Example #1 <span class="function"><strong>pow()</strong></span> 的一些例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;int(256)<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">pow</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">20</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;1<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;1<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">pow</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">5.5</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;PHP&nbsp;&gt;4.0.6&nbsp;&nbsp;NAN<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">pow</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">5.5</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;PHP&nbsp;&lt;=4.0.6&nbsp;1.#IND<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.pow-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     本函数会转换所有输入为数字，即使是非标量值，会导致怪异的（<em>weird</em>）结果。    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.pow-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link exp()} - 计算 e 的指数</span></li>     <li class="member"><span class="function">{@link sqrt()} - 平方根</span></li>     <li class="member"><span class="function">{@link bcpow()} - 任意精度数字的乘方</span></li>     <li class="member"><span class="function">{@link gmp_pow()} - Raise number into power</span></li>    </ul>   </p>  </div>        <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return int|float base raised to the power of exp.*/
function pow ($base, $exp) {}

/**
*<div id="function.exp" class="refentry">    <div class="refnamediv">     <h1 class="refname">exp</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">exp</span> &mdash; <span class="dc-title">计算 <strong><code>e</code></strong> 的指数</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.exp-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">float</span> <span class="methodname"><strong>exp</strong></span>        ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>       )</div>      <p class="para rdfs-comment">      返回 <strong><code>e</code></strong> 的 <code class="parameter">arg</code> 次方值。     </p>     <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">       用 &#039;<strong><code>e</code></strong>&#039; 作为自然对数的底       2.718282.      </p>     </p></blockquote>    </div>   <div class="refsect1 parameters" id="refsect1-function.exp-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.exp-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    &#039;e&#039; raised to the power of <code class="parameter">arg</code>   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.exp-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4122">     <p><strong>Example #1 <span class="function"><strong>exp()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">exp</span><span style="color: #007700">(</span><span style="color: #9876AA">12</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">exp</span><span style="color: #007700">(</span><span style="color: #9876AA">5.7</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 1.6275E+005 298.87 </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.exp-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link log()} - 自然对数</span></li>     <li class="member"><span class="function">{@link pow()} - 指数表达式</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float 'e' raised to the power of arg*/
function exp ($arg) {}

/**
*<div id="function.log" class="refentry">  <div class="refnamediv">   <h1 class="refname">log</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">log</span> &mdash; <span class="dc-title">自然对数</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.log-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>log</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$base</code><span class="initializer"> = M_E</span></span>    ] )</div>     <p class="para rdfs-comment">     如果指定了可选的参数 <code class="parameter">base</code>，<span class="function"><strong>log()</strong></span>     返回 log<sub class="subscript">base</sub>     <code class="parameter">arg</code>，否则 <span class="function"><strong>log()</strong></span>      返回参数 <code class="parameter">arg</code> 的自然对数。    </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.log-parameters">    <h3 class="title">参数</h3>    <p class="para">     <dl>              <dt> <code class="parameter">arg</code></dt>        <dd>         <p class="para">         要计算对数的值        </p>       </dd>                    <dt> <code class="parameter">base</code></dt>        <dd>         <p class="para">         The optional logarithmic base to use          (defaults to &#039;e&#039; and so to the natural logarithm).        </p>       </dd>            </dl>     </p>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.log-returnvalues">    <h3 class="title">返回值</h3>    <p class="para">     返回 log<sub class="subscript">base</sub>     <code class="parameter">arg</code>，或者它的自然对数。    </p>   </div>    <div class="refsect1 changelog" id="refsect1-function.log-changelog">    <h3 class="title">更新日志</h3>    <p class="para">     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>4.3.0</td>         <td>          可选参数  <code class="parameter">base</code>可用。          你可以计算任意以 <em>b</em> 为底 <em>n</em>       的对数，但其实使用的是数学等式：log<sub class="subscript">b</sub>(n) =       log(n)/log(b)，其中 log 是自然对数。         </td>        </tr>        </tbody>           </table>     </p>   </div>    <div class="refsect1 seealso" id="refsect1-function.log-seealso">    <h3 class="title">参见</h3>    <p class="para">     <ul class="simplelist">      <li class="member"><span class="function">{@link log10()} - 以 10 为底的对数</span></li>      <li class="member"><span class="function">{@link exp()} - 计算 e 的指数</span></li>      <li class="member"><span class="function">{@link pow()} - 指数表达式</span></li>     </ul>    </p>   </div>     <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The logarithm of arg to */
function log ($arg, $base = null) {}

/**
*<div id="function.log10" class="refentry">    <div class="refnamediv">     <h1 class="refname">log10</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">log10</span> &mdash; <span class="dc-title">以 10 为底的对数</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.log10-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>log10</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回参数 <code class="parameter">arg</code> 以 10 为底的对数。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.log10-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.log10-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">arg</code> 以 10 为底的对数。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.log10-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link log()} - 自然对数</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The base-10 logarithm of arg*/
function log10 ($arg) {}

/**
*<div id="function.sqrt" class="refentry">    <div class="refnamediv">     <h1 class="refname">sqrt</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">sqrt</span> &mdash; <span class="dc-title">平方根</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.sqrt-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>sqrt</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">arg</code> 的平方根。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.sqrt-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">arg</code></dt>       <dd>        <p class="para">        要处理的参数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.sqrt-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">arg</code> 的平方根，负数时返回 <em>NAN</em>。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.sqrt-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4141">     <p><strong>Example #1 <span class="function"><strong>sqrt()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Precision&nbsp;depends&nbsp;on&nbsp;your&nbsp;precision&nbsp;directive<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">sqrt</span><span style="color: #007700">(</span><span style="color: #9876AA">9</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;3<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">sqrt</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;3.16227766&nbsp;...<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.sqrt-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link pow()} - 指数表达式</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The square root of arg*/
function sqrt ($arg) {}

/**
*<div id="function.hypot" class="refentry">    <div class="refnamediv">     <h1 class="refname">hypot</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">hypot</span> &mdash; <span class="dc-title">      计算一直角三角形的斜边长度     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.hypot-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">float</span> <span class="methodname"><strong>hypot</strong></span>     ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span>    , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span>    )</div>      <p class="para rdfs-comment">      <span class="function"><strong>hypot()</strong></span> 函数将会跟据直角三角形的两直解边长度      <code class="parameter">x</code> 和 <code class="parameter">y</code> 计算其斜边的长度。或者是从标点      (<code class="parameter">x</code>, <code class="parameter">y</code>) 到原点的距离。该函数的算法等同于    <em>sqrt(x*x + y*y)</em>。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.hypot-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">x</code></dt>       <dd>        <p class="para">        第一条边的长度       </p>      </dd>                 <dt> <code class="parameter">y</code></dt>       <dd>        <p class="para">        第二条边的长度       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.hypot-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    计算斜边的长度   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float Calculated length of the hypotenuse*/
function hypot ($x, $y) {}

/**
*<div id="function.deg2rad" class="refentry">    <div class="refnamediv">     <h1 class="refname">deg2rad</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">deg2rad</span> &mdash; <span class="dc-title">      将角度转换为弧度     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.deg2rad-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>deg2rad</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span>     )</div>      <p class="para rdfs-comment">      本函数把 <code class="parameter">number</code> 从角度转换成弧度。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.deg2rad-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        以角度为单位的值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.deg2rad-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     <code class="parameter">number</code> 等量的弧度值   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.deg2rad-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4121">     <p><strong>Example #1 <span class="function"><strong>deg2rad()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">deg2rad</span><span style="color: #007700">(</span><span style="color: #9876AA">45</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;0.785398163397<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">deg2rad</span><span style="color: #007700">(</span><span style="color: #9876AA">45</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">M_PI_4</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;bool(true)<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.deg2rad-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link rad2deg()} - 将弧度数转换为相应的角度数</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The radian equivalent of number*/
function deg2rad ($number) {}

/**
*<div id="function.rad2deg" class="refentry">    <div class="refnamediv">     <h1 class="refname">rad2deg</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">rad2deg</span> &mdash; <span class="dc-title">      将弧度数转换为相应的角度数     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.rad2deg-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>rad2deg</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span>     )</div>      <p class="para rdfs-comment">      本函数将 <code class="parameter">number</code> 从弧度转换为角度。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.rad2deg-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        一个弧度值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.rad2deg-returnvalues">   <h3 class="title">返回值</h3>   <p class="para"> <code class="parameter">number</code> 相应的角度数   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.rad2deg-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4136">     <p><strong>Example #1 <span class="function"><strong>rad2deg()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">rad2deg</span><span style="color: #007700">(</span><span style="color: #9876AA">M_PI_4</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;45<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.rad2deg-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The equivalent of number in degrees*/
function rad2deg ($number) {}

/**
*<div id="function.bindec" class="refentry">  <div class="refnamediv">   <h1 class="refname">bindec</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">bindec</span> &mdash; <span class="dc-title">二进制转换为十进制</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.bindec-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.number" class="type number">number</a></span> <span class="methodname"><strong>bindec</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$binary_string</code></span>    )</div>    <p class="para rdfs-comment">    返回    <code class="parameter">binary_string</code> 参数所表示的二进制数的十进制等价值。   </p>   <p class="para">    <span class="function"><strong>bindec()</strong></span> 将一个二进制数转换成    <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span>，或者出于大小的需要，转换为 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> 类型。   </p>   <p class="para">    <span class="function"><strong>bindec()</strong></span> 将所有的    <code class="parameter">binary_string</code> 值解释为无符号整数。这是由于    <span class="function"><strong>bindec()</strong></span> 函数将其最高有效位视为数量级而非符号位。   </p> </div>   <div class="refsect1 parameters" id="refsect1-function.bindec-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">binary_string</code></dt>       <dd>        <p class="para">        要转换的二进制字符串       </p>      </dd>          </dl>    </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     参数必须为字符串。使用其他数据类型会导致不可预知的结果。    </p>   </div>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.bindec-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">binary_string</code> 的十进制数值   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.bindec-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.1.0</td>        <td>         本函数如今可以转换超过程序运行平台中         <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 类型最大值的数，此时其值会返回为         <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> 类型。        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 examples" id="refsect1-function.bindec-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4113">     <p><strong>Example #1 <span class="function"><strong>bindec()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #DD0000">'110011'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #DD0000">'000110011'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #DD0000">'111'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 51 51 7 </pre></div>     </div>    </div>   </p>   <p class="para">    <div class="example" id="example-4114">     <p><strong>Example #2 <span class="function"><strong>bindec()</strong></span> 将输入解读为无符号整数</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//<br />&nbsp;*&nbsp;The&nbsp;lesson&nbsp;from&nbsp;this&nbsp;example&nbsp;is&nbsp;in&nbsp;the&nbsp;output<br />&nbsp;*&nbsp;rather&nbsp;than&nbsp;the&nbsp;PHP&nbsp;code&nbsp;itself.<br />&nbsp;<br /><br /></span><span style="color: #9876AA">$magnitude_lower&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;(</span><span style="color: #9876AA">PHP_INT_SIZE&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">)&nbsp;-&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">$magnitude_lower&nbsp;</span><span style="color: #007700">-&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">$magnitude_lower</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'See&nbsp;the&nbsp;rollover?&nbsp;&nbsp;Watch&nbsp;it&nbsp;next&nbsp;time&nbsp;around...'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'PHP_INT_MAX'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(~</span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'interpreted&nbsp;to&nbsp;be&nbsp;one&nbsp;more&nbsp;than&nbsp;PHP_INT_MAX'</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">PHP_INT_SIZE&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$note&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'interpreted&nbsp;to&nbsp;be&nbsp;the&nbsp;largest&nbsp;unsigned&nbsp;integer'</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$note&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'interpreted&nbsp;to&nbsp;be&nbsp;the&nbsp;largest&nbsp;unsigned&nbsp;integer<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(18446744073709551615)&nbsp;but&nbsp;skewed&nbsp;by&nbsp;float&nbsp;precision'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$note</span><span style="color: #007700">);<br /><br /><br />function&nbsp;</span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">$input</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$note&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"input:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$input</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$format&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'%0'&nbsp;</span><span style="color: #007700">.&nbsp;(</span><span style="color: #9876AA">PHP_INT_SIZE&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">'b'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$bin&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$input</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"binary:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$bin</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'precision'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">20</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;For&nbsp;readability&nbsp;on&nbsp;64&nbsp;bit&nbsp;boxes.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$dec&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #9876AA">$bin</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'bindec():&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$dec&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$note</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"NOTE:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$note</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程在 32 位机器上的输出:</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> input:        1073741823 binary:       00111111111111111111111111111111 bindec():     1073741823  input:        1073741824 binary:       01000000000000000000000000000000 bindec():     1073741824 NOTE:         See the rollover?  Watch it next time around...  input:        2147483647 binary:       01111111111111111111111111111111 bindec():     2147483647 NOTE:         PHP_INT_MAX  input:        -2147483648 binary:       10000000000000000000000000000000 bindec():     2147483648 NOTE:         interpreted to be one more than PHP_INT_MAX  input:        -1 binary:       11111111111111111111111111111111 bindec():     4294967295 NOTE:         interpreted to be the largest unsigned integer </pre></div>     </div>     <div class="example-contents"><p>以上例程在 64 位机器上的输出:</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> input:        4611686018427387903 binary:       0011111111111111111111111111111111111111111111111111111111111111 bindec():     4611686018427387903  input:        4611686018427387904 binary:       0100000000000000000000000000000000000000000000000000000000000000 bindec():     4611686018427387904 NOTE:         See the rollover?  Watch it next time around...  input:        9223372036854775807 binary:       0111111111111111111111111111111111111111111111111111111111111111 bindec():     9223372036854775807 NOTE:         PHP_INT_MAX  input:        -9223372036854775808 binary:       1000000000000000000000000000000000000000000000000000000000000000 bindec():     9223372036854775808 NOTE:         interpreted to be one more than PHP_INT_MAX  input:        -1 binary:       1111111111111111111111111111111111111111111111111111111111111111 bindec():     18446744073709551616 NOTE:         interpreted to be the largest unsigned integer               (18446744073709551615) but skewed by float precision </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.bindec-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link decbin()} - 十进制转换为二进制</span></li>     <li class="member"><span class="function">{@link octdec()} - 八进制转换为十进制</span></li>     <li class="member"><span class="function">{@link hexdec()} - 十六进制转换为十进制</span></li>     <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return int|float The decimal value of binary_string*/
function bindec ($binary_string) {}

/**
*<div id="function.hexdec" class="refentry">  <div class="refnamediv">   <h1 class="refname">hexdec</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">hexdec</span> &mdash; <span class="dc-title">十六进制转换为十进制</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.hexdec-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.number" class="type number">number</a></span> <span class="methodname"><strong>hexdec</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hex_string</code></span>    )</div>    <p class="para rdfs-comment">    返回与 <code class="parameter">hex_string</code>    参数所表示的十六进制数等值的的十进制数。<span class="function"><strong>hexdec()</strong></span>    将一个十六进制字符串转换为十进制数。   </p>   <p class="para">    <span class="function"><strong>hexdec()</strong></span> 会忽略它遇到的任意非十六进制的字符。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.hexdec-parameters">     <h3 class="title">参数</h3>     <p class="para">      <dl>                <dt> <code class="parameter">hex_string</code></dt>         <dd>          <p class="para">          要转换的十六进制的字符串         </p>        </dd>              </dl>      </p>    </div>     <div class="refsect1 returnvalues" id="refsect1-function.hexdec-returnvalues">     <h3 class="title">返回值</h3>     <p class="para"> <code class="parameter">hex_string</code> 十进制的表示     </p>    </div>     <div class="refsect1 changelog" id="refsect1-function.hexdec-changelog">     <h3 class="title">更新日志</h3>     <p class="para">      <table class="doctable informaltable">               <thead>         <tr>          <th>版本</th>          <th>说明</th>         </tr>         </thead>         <tbody class="tbody">         <tr>          <td>4.1.0</td>          <td>           PHP 4.1.0           开始，该函数可以处理 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 大数字，这种情况下，它会返回 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> 类型。          </td>         </tr>         </tbody>             </table>      </p>    </div>     <div class="refsect1 examples" id="refsect1-function.hexdec-examples">     <h3 class="title">范例</h3>     <p class="para">      <div class="example" id="example-4125">       <p><strong>Example #1 <span class="function"><strong>hexdec()</strong></span> 例子</strong></p>       <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"See"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"ee"</span><span style="color: #007700">));<br /></span><span style="color: #FF8000">//&nbsp;both&nbsp;print&nbsp;"int(238)"<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"that"</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;print&nbsp;"int(10)"<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"a0"</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;print&nbsp;"int(160)"<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>    </div>     <div class="refsect1 seealso" id="refsect1-function.hexdec-seealso">     <h3 class="title">参见</h3>     <p class="para">      <ul class="simplelist">       <li class="member"><span class="function">{@link dechex()} - 十进制转换为十六进制</span></li>       <li class="member"><span class="function">{@link bindec()} - 二进制转换为十进制</span></li>       <li class="member"><span class="function">{@link octdec()} - 八进制转换为十进制</span></li>       <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>      </ul>     </p>    </div>  <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return int|float The decimal representation of hex_string*/
function hexdec ($hex_string) {}

/**
*<div id="function.octdec" class="refentry">    <div class="refnamediv">     <h1 class="refname">octdec</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">octdec</span> &mdash; <span class="dc-title">八进制转换为十进制</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.octdec-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.number" class="type number">number</a></span> <span class="methodname"><strong>octdec</strong></span>      ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$octal_string</code></span>     )</div>      <p class="para rdfs-comment">      返回 <code class="parameter">octal_string</code>      参数所表示的八进制数的十进制等值。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.octdec-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">octal_string</code></dt>       <dd>        <p class="para">        要转换的八进制的字符串       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.octdec-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">octal_string</code> 的十进制的表示   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.octdec-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.1.0</td>        <td>         该函数可以处理 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 大数字，这种情况下，它会返回 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> 类型。        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 examples" id="refsect1-function.octdec-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4133">     <p><strong>Example #1 <span class="function"><strong>octdec()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">octdec</span><span style="color: #007700">(</span><span style="color: #DD0000">'77'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">octdec</span><span style="color: #007700">(</span><span style="color: #9876AA">decoct</span><span style="color: #007700">(</span><span style="color: #9876AA">45</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 63 45 </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.octdec-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link decoct()} - 十进制转换为八进制</span></li>     <li class="member"><span class="function">{@link bindec()} - 二进制转换为十进制</span></li>     <li class="member"><span class="function">{@link hexdec()} - 十六进制转换为十进制</span></li>     <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return int|float The decimal representation of octal_string*/
function octdec ($octal_string) {}

/**
*<div id="function.decbin" class="refentry">    <div class="refnamediv">     <h1 class="refname">decbin</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">decbin</span> &mdash; <span class="dc-title">十进制转换为二进制</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.decbin-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">string</span> <span class="methodname"><strong>decbin</strong></span>        ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span>       )</div>      <p class="para rdfs-comment">      返回一字符串，包含有给定      <code class="parameter">number</code> 参数的二进制表示。所能转换的最大数值为十进制的      4294967295，其结果为 32 个 1 的字符串。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.decbin-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        Decimal value to convert       </p>        <table class="doctable table">        <caption><strong>Range of inputs on 32-bit machines</strong></caption>                 <col />         <col />         <col />         <thead>          <tr>           <th>positive <code class="parameter">number</code></th>           <th>negative <code class="parameter">number</code></th>           <th>return value</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td>0</td>           <td class="empty">&nbsp;</td>           <td>0</td>          </tr>           <tr>           <td>1</td>           <td class="empty">&nbsp;</td>           <td>1</td>          </tr>           <tr>           <td>2</td>           <td class="empty">&nbsp;</td>           <td>10</td>          </tr>           <tr>           <td colspan="3">... normal progression ...</td>          </tr>           <tr>           <td>2147483646</td>           <td class="empty">&nbsp;</td>           <td>1111111111111111111111111111110</td>          </tr>           <tr>           <td>2147483647 (largest signed integer)</td>           <td class="empty">&nbsp;</td>           <td>1111111111111111111111111111111 (31 1&#039;s)</td>          </tr>           <tr>           <td>2147483648</td>           <td>-2147483648</td>           <td>10000000000000000000000000000000</td>          </tr>           <tr>           <td colspan="3">... normal progression ...</td>          </tr>           <tr>           <td>4294967294</td>           <td>-2</td>           <td>11111111111111111111111111111110</td>          </tr>           <tr>           <td>4294967295 (largest unsigned integer)</td>           <td>-1</td>           <td>11111111111111111111111111111111 (32 1&#039;s)</td>          </tr>          </tbody>               </table>         <table class="doctable table">        <caption><strong>Range of inputs on 64-bit machines</strong></caption>                 <col />         <col />         <col />         <thead>          <tr>           <th>positive <code class="parameter">number</code></th>           <th>negative <code class="parameter">number</code></th>           <th>return value</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td>0</td>           <td class="empty">&nbsp;</td>           <td>0</td>          </tr>           <tr>           <td>1</td>           <td class="empty">&nbsp;</td>           <td>1</td>          </tr>           <tr>           <td>2</td>           <td class="empty">&nbsp;</td>           <td>10</td>          </tr>           <tr>           <td colspan="3">... normal progression ...</td>          </tr>           <tr>           <td>9223372036854775806</td>           <td class="empty">&nbsp;</td>           <td>111111111111111111111111111111111111111111111111111111111111110</td>          </tr>           <tr>           <td>9223372036854775807 (largest signed integer)</td>           <td class="empty">&nbsp;</td>           <td>111111111111111111111111111111111111111111111111111111111111111 (63 1&#039;s)</td>          </tr>           <tr>           <td class="empty">&nbsp;</td>           <td>-9223372036854775808</td>           <td>1000000000000000000000000000000000000000000000000000000000000000</td>          </tr>           <tr>           <td colspan="3">... normal progression ...</td>          </tr>           <tr>           <td class="empty">&nbsp;</td>           <td>-2</td>           <td>1111111111111111111111111111111111111111111111111111111111111110</td>          </tr>           <tr>           <td class="empty">&nbsp;</td>           <td>-1</td>           <td>1111111111111111111111111111111111111111111111111111111111111111 (64 1&#039;s)</td>          </tr>          </tbody>               </table>        </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.decbin-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Binary string representation of <code class="parameter">number</code>   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.decbin-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4117">     <p><strong>Example #1 <span class="function"><strong>decbin()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">decbin</span><span style="color: #007700">(</span><span style="color: #9876AA">12</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">decbin</span><span style="color: #007700">(</span><span style="color: #9876AA">26</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 1100 11010 </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.decbin-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link bindec()} - 二进制转换为十进制</span></li>     <li class="member"><span class="function">{@link decoct()} - 十进制转换为八进制</span></li>     <li class="member"><span class="function">{@link dechex()} - 十进制转换为十六进制</span></li>     <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>     <li class="member">      <span class="function">{@link printf()} - 输出格式化字符串</span>, using <em>%b</em>,      <em>%032b</em> or <em>%064b</em> as the format     </li>     <li class="member">      <span class="function">{@link sprintf()}</span>, using <em>%b</em>,      <em>%032b</em> or <em>%064b</em> as the format     </li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return string Binary string representation of number*/
function decbin ($number) {}

/**
*<div id="function.decoct" class="refentry">    <div class="refnamediv">     <h1 class="refname">decoct</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">decoct</span> &mdash; <span class="dc-title">十进制转换为八进制</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.decoct-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">string</span> <span class="methodname"><strong>decoct</strong></span>        ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span>       )</div>      <p class="para rdfs-comment">      返回一字符串，包含有给定 <code class="parameter">number</code>      参数的八进制表示。所能转换的最大数值为十进制的      4294967295，其结果为 &quot;37777777777&quot;。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.decoct-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        待转换的十进制值       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.decoct-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">number</code>      参数八进制表示的字符串。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.decoct-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4120">     <p><strong>Example #1 <span class="function"><strong>decoct()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">decoct</span><span style="color: #007700">(</span><span style="color: #9876AA">15</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">decoct</span><span style="color: #007700">(</span><span style="color: #9876AA">264</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 17 410 </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.decoct-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link octdec()} - 八进制转换为十进制</span></li>     <li class="member"><span class="function">{@link decbin()} - 十进制转换为二进制</span></li>     <li class="member"><span class="function">{@link dechex()} - 十进制转换为十六进制</span></li>     <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return string Octal string representation of number*/
function decoct ($number) {}

/**
*<div id="function.dechex" class="refentry">    <div class="refnamediv">     <h1 class="refname">dechex</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dechex</span> &mdash; <span class="dc-title">十进制转换为十六进制</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.dechex-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type">string</span> <span class="methodname"><strong>dechex</strong></span>        ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span>       )</div>      <p class="para rdfs-comment">      返回一字符串，包含有给定      <code class="parameter">number</code>      参数的十六进制表示。     </p>   <p class="para">    所能转换的最大数值为十进制的      <strong><code>PHP_INT_MAX</code></strong><em> * 2 + 1</em> (或    <em>-1</em>)：在 32 位平台上是十进制的 <em>4294967295</em>，其 <span class="function"><strong>dechex()</strong></span> 的结果为 <em>ffffffff</em>。   </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.dechex-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        要转换的十进制值       </p>       <p class="para">        PHP 的 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 类型是有符号的，但 <span class="function"><strong>dechex()</strong></span> 处理无符号整数，负正数会以无符号处理。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dechex-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">number</code> 的16进制表示   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.dechex-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4118">     <p><strong>Example #1 <span class="function"><strong>dechex()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">47</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> a 2f </pre></div>     </div>    </div>   </p>    <p class="para">    <div class="example" id="example-4119">     <p><strong>Example #2 大整数的 <span class="function"><strong>dechex()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;The&nbsp;output&nbsp;below&nbsp;assumes&nbsp;a&nbsp;32-bit&nbsp;platform.<br />//&nbsp;Note&nbsp;that&nbsp;the&nbsp;output&nbsp;is&nbsp;the&nbsp;same&nbsp;for&nbsp;all&nbsp;values.<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">dechex</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MAX&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">2&nbsp;</span><span style="color: #007700">+&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">32</span><span style="color: #007700">)&nbsp;-&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> ffffffff ffffffff ffffffff </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dechex-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link hexdec()} - 十六进制转换为十进制</span></li>     <li class="member"><span class="function">{@link decbin()} - 十进制转换为二进制</span></li>     <li class="member"><span class="function">{@link decoct()} - 十进制转换为八进制</span></li>     <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return string Hexadecimal string representation of number*/
function dechex ($number) {}

/**
*<div id="function.base-convert" class="refentry">  <div class="refnamediv">   <h1 class="refname">base_convert</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">base_convert</span> &mdash; <span class="dc-title">在任意进制之间转换数字</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.base-convert-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">string</span> <span class="methodname"><strong>base_convert</strong></span>      ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$number</code></span>     , <span class="methodparam"><span class="type">int</span> <code class="parameter">$frombase</code></span>     , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tobase</code></span>     )</div>    <p class="para rdfs-comment">    返回一字符串，包含 <code class="parameter">number</code>    以 <code class="parameter">tobase</code> 进制的表示。<code class="parameter">number</code>    本身的进制由    <code class="parameter">frombase</code> 指定。<code class="parameter">frombase</code>    和 <code class="parameter">tobase</code> 都只能在    2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如    a 表示 10，b 表示 11 以及 z 表示 35。   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">     由于使用内部的 &quot;double&quot; 或 &quot;float&quot; 类型，<span class="function"><strong>base_convert()</strong></span>     的操作可能会导致大数值中的精度丢失。请参见本手册的     <a href="http://php.net/manual/zh/language.types.float.php" class="link">浮点数</a> 章节以便获得更多详细信息。    </p>   </div>  </div>    <div class="refsect1 parameters" id="refsect1-function.base-convert-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        要转换的数字       </p>      </dd>                 <dt> <code class="parameter">frombase</code></dt>       <dd>        <p class="para">        The base <code class="parameter">number</code> is in       </p>      </dd>                 <dt> <code class="parameter">tobase</code></dt>       <dd>        <p class="para">        The base to convert <code class="parameter">number</code> to       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.base-convert-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">number</code> converted to base <code class="parameter">tobase</code>   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.base-convert-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4112">     <p><strong>Example #1 <span class="function"><strong>base_convert()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$hexadecimal&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'A37334'</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">base_convert</span><span style="color: #007700">(</span><span style="color: #9876AA">$hexadecimal</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">16</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 101000110111001100110100 </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.base-convert-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link intval()} - 获取变量的整数值</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return string number converted to base tobase*/
function base_convert ($number, $frombase, $tobase) {}

/**
*<div id="function.number-format" class="refentry">  <div class="refnamediv">   <h1 class="refname">number_format</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">number_format</span> &mdash; <span class="dc-title">以千位分隔符方式格式化一个数字</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.number-format-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>number_format</strong></span>     ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$decimals</code><span class="initializer"> = 0</span></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>number_format</strong></span>     ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$decimals</code><span class="initializer"> = 0</span></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dec_point</code><span class="initializer"> = &quot;.&quot;</span></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$thousands_sep</code><span class="initializer"> = &quot;,&quot;</span></span>    )</div>    <p class="para rdfs-comment">    本函数可以接受1个、2个或者4个参数（注意：不能是3个）:   </p>   <p class="para">    如果只提供第一个参数，<code class="parameter">number</code>的小数部分会被去掉    并且每个千位分隔符都是英文小写逗号&quot;,&quot;   </p>   <p class="para">    如果提供两个参数，<code class="parameter">number</code>将保留小数点后的位数到你设定的值，其余同楼上   </p>   <p class="para">    如果提供了四个参数，<code class="parameter">number</code>    将保留<code class="parameter">decimals</code>个长度的小数部分,    小数点被替换为<code class="parameter">dec_point</code>，千位分隔符替换为<code class="parameter">thousands_sep</code>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.number-format-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">number</code></dt>       <dd>        <p class="para">        你要格式化的数字       </p>      </dd>                 <dt> <code class="parameter">decimals</code></dt>       <dd>        <p class="para">        要保留的小数位数       </p>      </dd>                 <dt> <code class="parameter">dec_point</code></dt>       <dd>        <p class="para">        指定小数点显示的字符       </p>      </dd>                 <dt> <code class="parameter">thousands_sep</code></dt>       <dd>        <p class="para">        指定千位分隔符显示的字符       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.number-format-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    格式化以后的 <code class="parameter">number</code>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.number-format-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.0</td>        <td>         This function now supports multiple bytes in         <code class="parameter">dec_point</code> and         <code class="parameter">thousands_sep</code>. Only the first byte of each         separator was used in older versions.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.number-format-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5923">     <p><strong>Example #1 <span class="function"><strong>number_format()</strong></span> Example</strong></p>     <div class="example-contents"><p>      For instance, French notation usually use two decimals,      comma (&#039;,&#039;) as decimal separator, and space (&#039; &#039;) as      thousand separator.  The following example demonstrates various way to format a number:     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$number&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">1234.56</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;english&nbsp;notation&nbsp;(default)<br /></span><span style="color: #9876AA">$english_format_number&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">number_format</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;1,235<br /><br />//&nbsp;French&nbsp;notation<br /></span><span style="color: #9876AA">$nombre_format_francais&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">number_format</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">','</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'&nbsp;'</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;1&nbsp;234,56<br /><br /></span><span style="color: #9876AA">$number&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">1234.5678</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;english&nbsp;notation&nbsp;without&nbsp;thousands&nbsp;separator<br /></span><span style="color: #9876AA">$english_format_number&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">number_format</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'.'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;1234.57<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.number-format-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.2.0</td>        <td>         <span class="function"><strong>number_format()</strong></span> 现在无法返回 <em>-0</em>，之前可能返回 <em>-0</em>，因为 <code class="parameter">number</code> 可能会是 <em>-0.01</em>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.number-format-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link money_format()} - 将数字格式化成货币字符串</span></li>     <li class="member"><span class="function">{@link sprintf()} - Return a formatted string</span></li>     <li class="member"><span class="function">{@link printf()} - 输出格式化字符串</span></li>     <li class="member"><span class="function">{@link sscanf()} - 根据指定格式解析输入的字符</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string A formatted version of number.*/
function number_format ($number , $decimals = 0 , $dec_point = '.' , $thousands_sep = ',' ) {}

/**
 * Returns the floating point remainder (modulo) of the division
 * @since 4.2.0
 * @since 5.0
  of the arguments
/**
*<div id="function.fmod" class="refentry">    <div class="refnamediv">     <h1 class="refname">fmod</h1>     <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fmod</span> &mdash; <span class="dc-title">返回除法的浮点数余数</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.fmod-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">float</span> <span class="methodname"><strong>fmod</strong></span>      ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span>     , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span>     )</div>      <p class="para rdfs-comment">      返回被除数（<code class="parameter">x</code>）除以除数（<code class="parameter">y</code>）所得的浮点数余数。余数（<var class="varname"><var class="varname">r</var></var>）的定义是：x      = i * y + r，其中 <var class="varname"><var class="varname">i</var></var> 是整数。如果 <code class="parameter">y</code>      是非零值，则 <var class="varname"><var class="varname">r</var></var> 和      <code class="parameter">x</code> 的符号相同并且其数量值小于      <code class="parameter">y</code>。     </p>    </div>     <div class="refsect1 parameters" id="refsect1-function.fmod-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">x</code></dt>       <dd>        <p class="para">        被除数       </p>      </dd>                 <dt> <code class="parameter">y</code></dt>       <dd>        <p class="para">        除数       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.fmod-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">x</code>/<code class="parameter">y</code>的浮点数余数。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.fmod-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4124">     <p><strong>Example #1 <span class="function"><strong>fmod()</strong></span> 的使用</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$x&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">5.7</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$y&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">1.3</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$r&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fmod</span><span style="color: #007700">(</span><span style="color: #9876AA">$x</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$y</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;$r&nbsp;equals&nbsp;0.5,&nbsp;because&nbsp;4&nbsp;*&nbsp;1.3&nbsp;+&nbsp;0.5&nbsp;=&nbsp;5.7<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.math.php">Math 函数</a></div></div>
 * @return float The floating point remainder of */
function fmod ($x, $y) {}

/**
*<div id="function.inet-ntop" class="refentry">  <div class="refnamediv">   <h1 class="refname">inet_ntop</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">inet_ntop</span> &mdash; <span class="dc-title">Converts a packed internet address to a human readable representation</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.inet-ntop-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>inet_ntop</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$in_addr</code></span>    )</div>    <p class="simpara">    This function converts a 32bit IPv4, or 128bit IPv6 address (if PHP    was built with IPv6 support enabled) into an address family appropriate    string representation.     </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.inet-ntop-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">in_addr</code></dt>       <dd>        <p class="para">        A 32bit IPv4, or 128bit IPv6 address.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.inet-ntop-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a string representation of the address 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.inet-ntop-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5494">     <p><strong>Example #1 <span class="function"><strong>inet_ntop()</strong></span> Example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$packed&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">127</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$expanded&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">inet_ntop</span><span style="color: #007700">(</span><span style="color: #9876AA">$packed</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Outputs:&nbsp;127.0.0.1&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$expanded</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$packed&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">15</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$expanded&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">inet_ntop</span><span style="color: #007700">(</span><span style="color: #9876AA">$packed</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Outputs:&nbsp;::1&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$expanded</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.inet-ntop-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          This function is now available on Windows platforms.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.inet-ntop-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link long2ip()} - 将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></li>     <li class="member"><span class="function">{@link ip2long()} - 将 IPV4 的字符串互联网协议转换成长整型数字</span></li>     <li class="member"><span class="function">{@link inet_pton()} - Converts a human readable IP address to its packed in_addr representation</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return string|bool a string representation of the address or false on failure.*/
function inet_ntop ($in_addr) {}

/**
*<div id="function.inet-pton" class="refentry">  <div class="refnamediv">   <h1 class="refname">inet_pton</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">inet_pton</span> &mdash; <span class="dc-title">Converts a human readable IP address to its packed in_addr representation</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.inet-pton-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>inet_pton</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$address</code></span>    )</div>    <p class="para rdfs-comment">    This function converts a human readable IPv4 or IPv6 address (if PHP    was built with IPv6 support enabled) into an address family appropriate    32bit or 128bit binary structure.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.inet-pton-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">address</code></dt>       <dd>        <p class="para">        A human readable IPv4 or IPv6 address.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.inet-pton-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the <em>in_addr</em> representation of the given    <code class="parameter">address</code>, or <strong><code>FALSE</code></strong> if a syntactically invalid    <code class="parameter">address</code> is given (for example, an IPv4 address    without dots or an IPv6 address without colons).   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.inet-pton-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5495">     <p><strong>Example #1 <span class="function"><strong>inet_pton()</strong></span> Example</strong></p>     <div class="example-contents">  <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$in_addr&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">inet_pton</span><span style="color: #007700">(</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">);<br />&nbsp;<br /></span><span style="color: #9876AA">$in6_addr&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">inet_pton</span><span style="color: #007700">(</span><span style="color: #DD0000">'::1'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>      </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.inet-pton-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>          This function is now available on Windows platforms.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.inet-pton-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link ip2long()} - 将 IPV4 的字符串互联网协议转换成长整型数字</span></li>     <li class="member"><span class="function">{@link long2ip()} - 将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></li>     <li class="member"><span class="function">{@link inet_ntop()} - Converts a packed internet address to a human readable representation</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return string the in_addr representation of the given*/
function inet_pton ($address) {}

/**
*<div id="function.ip2long" class="refentry">  <div class="refnamediv">   <h1 class="refname">ip2long</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ip2long</span> &mdash; <span class="dc-title">将 IPV4 的字符串互联网协议转换成长整型数字</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.ip2long-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>ip2long</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$ip_address</code></span>    )</div>    <p class="para rdfs-comment">    函数 <span class="function"><strong>ip2long()</strong></span> 返回 IPV4 网络地址的长整型格式，从标准网络地址格式(点字符串)转化得到。   </p>   <p class="para">    <span class="function"><strong>ip2long()</strong></span> 还可以与非完整IP进行工作。    阅读 <a href="http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm" class="link external">&raquo;&nbsp;http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm</a>    获得更多信息。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.ip2long-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">ip_address</code></dt>       <dd>        <p class="para">       一个标准格式的地址。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.ip2long-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回IP地址转换后的数字 或 <strong><code>FALSE</code></strong> 如果 <code class="parameter">ip_address</code>    是无效的。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.ip2long-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.5.0</td>        <td>         Prior to this version, on Windows <span class="function"><strong>ip2long()</strong></span> would sometimes return         a valid number even if passed a value which was not an (IPv4) Internet Protocol         dotted address.        </td>       </tr>        <tr>        <td>5.2.10</td>        <td>         再此之前的版本, <span class="function"><strong>ip2long()</strong></span> 有时会返回即使这不是一个IPV4的标准地址的数字地址。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.ip2long-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5496">     <p><strong>Example #1 <span class="function"><strong>ip2long()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$ip&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">gethostbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$out&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"The&nbsp;following&nbsp;URLs&nbsp;are&nbsp;equivalent:&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$out&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">'http://www.example.com/,&nbsp;http://'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$ip&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">'/,&nbsp;and&nbsp;http://'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%u"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ip2long</span><span style="color: #007700">(</span><span style="color: #9876AA">$ip</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"/&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">$out</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-5497">     <p><strong>Example #2 显示IP地址</strong></p>     <div class="example-contents"><p>      第二个例子说明打印一个转换后的地址使用      <span class="function">{@link printf()}</span> 在PHP4和PHP5的功能:     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$ip&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">gethostbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$long&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">ip2long</span><span style="color: #007700">(</span><span style="color: #9876AA">$ip</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$long&nbsp;</span><span style="color: #007700">==&nbsp;-</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">||&nbsp;</span><span style="color: #9876AA">$long&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Invalid&nbsp;IP,&nbsp;please&nbsp;try&nbsp;again'</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$ip&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;192.0.34.166<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$long&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;-1073732954<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%u\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ip2long</span><span style="color: #007700">(</span><span style="color: #9876AA">$ip</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;3221234342<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.ip2long-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     因为PHP的 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 类型是有符号，并且有许多的IP地址讲导致在32位系统的情况下为负数， 你需要使用 &quot;%u&quot; 进行转换通过 <span class="function">{@link sprintf()}</span> 或     <span class="function">{@link printf()}</span> 得到的字符串来表示无符号的IP地址。    </p>   </p></blockquote>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     <span class="function"><strong>ip2long()</strong></span> 将返回 <strong><code>FALSE</code></strong> 在IP是     <em>255.255.255.255</em> 的情况，版本为 PHP 5 &lt;= 5.0.2. 在修复后     PHP 5.0.3 会返回 <em>-1</em> (与PHP4相同).    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.ip2long-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link long2ip()} - 将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></li>     <li class="member"><span class="function">{@link sprintf()} - Return a formatted string</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return int the IPv4 address or false if ip_address*/
function ip2long ($ip_address) {}

/**
*<div id="function.long2ip" class="refentry">  <div class="refnamediv">   <h1 class="refname">long2ip</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">long2ip</span> &mdash; <span class="dc-title">将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.long2ip-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>long2ip</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$proper_address</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>long2ip()</strong></span> 函数通过长整型的表达形式转化生成带点格式的互联网地址（例如：aaa.bbb.ccc.ddd ）。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.long2ip-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">proper_address</code></dt>       <dd>        <p class="para">        合格的地址，长整型的表达形式。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.long2ip-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回字符串的互联网 IP 地址。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.long2ip-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        参数 <code class="parameter">proper_address</code> 的类型从 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 改成 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span>。       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 notes" id="refsect1-function.long2ip-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     在 32 位架构中，从 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 转换 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 整型形式的 ip 地址将有可能导致错误的结果，因为结果数字超出了 <strong><code>PHP_INT_MAX</code></strong> 限制。    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.long2ip-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link ip2long()} - 将 IPV4 的字符串互联网协议转换成长整型数字</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.network.php">网络 函数</a></div></div>
 * @return string the Internet IP address as a string.*/
function long2ip ($proper_address) {}

/**
*<div id="function.getenv" class="refentry">  <div class="refnamediv">   <h1 class="refname">getenv</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">getenv</span> &mdash; <span class="dc-title">获取一个环境变量的值</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.getenv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>getenv</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$varname</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$local_only</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>getenv</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    获取一个环境变量的值。   </p>   <p class="para">    使用 <span class="function">{@link phpinfo()}</span> 你可以看到所有环境变量的列表。    这些变量很多都在 <a href="http://www.faqs.org/rfcs/rfc3875" class="link external">&raquo;&nbsp;RFC 3875</a> 的范围之内，    尤其是章节4.1，&quot;Request Meta-Variables&quot;。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.getenv-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">varname</code></dt>       <dd>        <p class="para">        变量名。       </p>      </dd>                 <dt> <code class="parameter">local_only</code></dt>       <dd>        <p class="para">        设置为 true 以仅返回本地环境变量（由操作系统或 <span class="function">{@link putenv()}</span> 设置）。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.getenv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回环境变量 <code class="parameter">varname</code> 的值，    如果环境变量 <code class="parameter">varname</code> 不存在则返回 <strong><code>FALSE</code></strong>。    如果省略 <code class="parameter">varname</code>，则所有环境变量都将作为关联数组 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 返回。   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.getenv-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        现在可以省略 <code class="parameter">varname</code> 来检索所有环境变量的关联数组 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>。       </td>      </tr>       <tr>       <td>5.5.38, 5.6.24, 7.0.9</td>       <td>        添加 <code class="parameter">local_only</code> 参数。       </td>      </tr>      </tbody>       </table>   </div>     <div class="refsect1 notes" id="refsect1-function.getenv-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     如果 PHP 在诸如 Fast CGI 之类的 SAPI 中运行，则此函数将始终返回由 SAPI 设置的环境变量的值，即使已使用 <span class="function">{@link putenv()}</span> 来设置同名的本地环境变量。使用 <code class="parameter">local_only</code> 参数返回本地设置的环境变量的值。    </p>   </div>  </div>    <div class="refsect1 examples" id="refsect1-function.getenv-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-504">     <p><strong>Example #1 <span class="function"><strong>getenv()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;getenv()&nbsp;使用示例<br /></span><span style="color: #9876AA">$ip&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getenv</span><span style="color: #007700">(</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;或简单仅使用全局变量（$_SERVER&nbsp;或&nbsp;$_ENV）<br /></span><span style="color: #9876AA">$ip&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">];<br /><br /></span><span style="color: #FF8000">//&nbsp;安全地获取环境变量，忽略通过&nbsp;SAPI&nbsp;或&nbsp;putenv&nbsp;修改的值<br /></span><span style="color: #9876AA">$ip&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getenv</span><span style="color: #007700">(</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)&nbsp;?:&nbsp;</span><span style="color: #9876AA">getenv</span><span style="color: #007700">(</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">)<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.getenv-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link putenv()} - 设置环境变量的值</span></li>     <li class="member"><span class="function">{@link apache_getenv()} - 获取 Apache subprocess_env 变量</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string|array|false the value of the environment variable*/
function getenv ($varname = null, $local_only = false) {}

/**
*<div id="function.putenv" class="refentry">  <div class="refnamediv">   <h1 class="refname">putenv</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">putenv</span> &mdash; <span class="dc-title">设置环境变量的值</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.putenv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>putenv</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$setting</code></span>    )</div>    <p class="para rdfs-comment">    添加 <code class="parameter">setting</code> 到服务器环境变量。    环境变量仅存活于当前请求期间。    在请求结束时环境会恢复到初始状态。   </p>   <p class="para">    设置特定的环境变量也有可能是一个潜在的安全漏洞。    <em>safe_mode_allowed_env_vars</em> 包含了一个以逗号分隔的前缀列表。    在安全模式下，用户可以仅能修改用该指令设定的前缀名称的指令。    默认情况下，用户仅能够修改以 <em>PHP_</em> 开头的环境变量（例如 <em>PHP_FOO=BAR</em>）。    注意：如果此指令是空的，PHP允许用户设定任意环境变量！   </p>   <p class="para">    <em>safe_mode_protected_env_vars</em> 指令包含了逗号分隔的环境变量列表，使用户最终无法通过 <span class="function"><strong>putenv()</strong></span> 修改。    即使 <em>safe_mode_allowed_env_vars</em> 设置允许修改，这些变量也会被保护。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.putenv-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">setting</code></dt>       <dd>        <p class="para">        设置，例如 <em>&quot;FOO=BAR&quot;</em>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.putenv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.putenv-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-529">     <p><strong>Example #1 设置一个环境变量</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />putenv</span><span style="color: #007700">(</span><span style="color: #DD0000">"UNIQID=</span><span style="color: #9876AA">$uniqid</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.putenv-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     The <em>safe_mode_allowed_env_vars</em> 和     <em>safe_mode_protected_env_vars</em> 指令仅仅在启用<a href="http://php.net/manual/zh/features.safe-mode.php" class="link">安全模式</a>时有效。    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.putenv-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link getenv()} - 获取一个环境变量的值</span></li>     <li class="member"><span class="function">{@link apache_setenv()} - 设置 Apache 子进程环境变量</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function putenv ($setting) {}

/**
*<div id="function.getopt" class="refentry">  <div class="refnamediv">   <h1 class="refname">getopt</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">getopt</span> &mdash; <span class="dc-title">从命令行参数列表中获取选项</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.getopt-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>getopt</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$options</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$longopts</code></span>       [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$optind</code></span>   ]] )</div>    <p class="para rdfs-comment">    解析传入脚本的选项。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.getopt-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">options</code></dt>       <dd>        <span class="simpara">        该字符串中的每个字符会被当做选项字符，匹配传入脚本的选项以单个连字符(-)开头。       </span>       <span class="simpara">        比如，一个选项字符串 <em>&quot;x&quot;</em> 识别了一个选项 <em>-x</em>。       </span>       <span class="simpara">        只允许 a-z、A-Z 和 0-9。       </span>      </dd>                 <dt> <code class="parameter">longopts</code></dt>       <dd>        <span class="simpara">        选项数组。此数组中的每个元素会被作为选项字符串，匹配了以两个连字符(<em>--</em>)传入到脚本的选项。       </span>       <span class="simpara">        例如，长选项元素 <em>&quot;opt&quot;</em> 识别了一个选项 <em>--opt</em>。       </span>      </dd>                 <dt> <code class="parameter">optind</code></dt>       <dd>        <span class="simpara">        If the <code class="parameter">optind</code> parameter is present, then the        index where argument parsing stopped will be written to this variable.       </span>      </dd>          </dl>    </p>   <p class="para">    <code class="parameter">options</code> 可能包含了以下元素：    <ul class="simplelist">     <li class="member">单独的字符（不接受值）</li>     <li class="member">后面跟随冒号的字符（此选项需要值）</li>     <li class="member">后面跟随两个冒号的字符（此选项的值可选）</li>    </ul>    选项的值是字符串后的第一个参数。如果需要一个值，它不介意值之前是否有前置的空格，参见以下内容。    <blockquote class="note"><p><strong class="note">Note</strong>:      <span class="simpara">      选项的值不接受空格（<em>&quot; &quot;</em>）作为分隔符。     </span>    </p></blockquote>   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     <code class="parameter">options</code> 和 <code class="parameter">longopts</code> 的格式几乎是一样的，唯一的不同之处是 <code class="parameter">longopts</code> 需要是选项的数组（每个元素为一个选项），而 <code class="parameter">options</code> 需要一个字符串（每个字符是个选项）。    </p>   </p></blockquote>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.getopt-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    此函数会返回选项/参数对， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     选项的解析会终止于找到的第一个非选项，之后的任何东西都会被丢弃。    </p>   </p></blockquote>  </div>    <div class="refsect1 changelog" id="refsect1-function.getopt-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.1.0</td>        <td>         添加 <code class="parameter">optind</code> 参数。        </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         支持 &quot;=&quot; 作为 参数和值的分隔符。        </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         增加了可选值的支持（用&quot;::&quot;指定）。        </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         参数 <code class="parameter">longopts</code> 在所有系统平台上均可用。        </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         此函数不再依赖于操作系统，现在也能够在 Windows 上运行。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.getopt-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-506">     <p><strong>Example #1 <span class="function"><strong>getopt()</strong></span> 例子：基本用法</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Script&nbsp;example.php<br /></span><span style="color: #9876AA">$options&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #DD0000">"f:hp:"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"> <div class="shellcode"><pre class="shellcode">shell&gt; php example.php -fvalue -h</pre> </div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;f&quot;]=&gt;   string(5) &quot;value&quot;   [&quot;h&quot;]=&gt;   bool(false) } </pre></div>     </div>    </div>   </p>   <p class="para">    <div class="example" id="example-507">     <p><strong>Example #2 <span class="function"><strong>getopt()</strong></span> 例子：引入长选项</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Script&nbsp;example.php<br /></span><span style="color: #9876AA">$shortopts&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">""</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$shortopts&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"f:"</span><span style="color: #007700">;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Required&nbsp;value<br /></span><span style="color: #9876AA">$shortopts&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"v::"</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;Optional&nbsp;value<br /></span><span style="color: #9876AA">$shortopts&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"abc"</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;These&nbsp;options&nbsp;do&nbsp;not&nbsp;accept&nbsp;values<br /><br /></span><span style="color: #9876AA">$longopts&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"required:"</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Required&nbsp;value<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"optional::"</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Optional&nbsp;value<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"option"</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;No&nbsp;value<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"opt"</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;No&nbsp;value<br /></span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$options&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$shortopts</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$longopts</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"> <div class="shellcode"><pre class="shellcode">shell&gt; php example.php -f &quot;value for f&quot; -v -a --required value --optional=&quot;optional value&quot; --option</pre> </div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> array(6) {   [&quot;f&quot;]=&gt;   string(11) &quot;value for f&quot;   [&quot;v&quot;]=&gt;   bool(false)   [&quot;a&quot;]=&gt;   bool(false)   [&quot;required&quot;]=&gt;   string(5) &quot;value&quot;   [&quot;optional&quot;]=&gt;   string(14) &quot;optional value&quot;   [&quot;option&quot;]=&gt;   bool(false) } </pre></div>     </div>    </div>   </p>   <p class="para">    <div class="example" id="example-508">     <p><strong>Example #3 <span class="function"><strong>getopt()</strong></span> 例子：传递同一多个选项</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Script&nbsp;example.php<br /></span><span style="color: #9876AA">$options&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #DD0000">"abc"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"> <div class="shellcode"><pre class="shellcode">shell&gt; php example.php -aaac</pre> </div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;a&quot;]=&gt;   array(3) {     [0]=&gt;     bool(false)     [1]=&gt;     bool(false)     [2]=&gt;     bool(false)   }   [&quot;c&quot;]=&gt;   bool(false) } </pre></div>     </div>    </div>   </p>   <p class="para">    <div class="example" id="example-509">     <p><strong>Example #4 <span class="function"><strong>getopt()</strong></span> 例子：使用 <code class="parameter">optind</code></strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Script&nbsp;example.php<br /></span><span style="color: #9876AA">$optind&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$opts&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #DD0000">'a:b:'</span><span style="color: #007700">,&nbsp;[],&nbsp;</span><span style="color: #9876AA">$optind</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$pos_args&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">$argv</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$optind</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$pos_args</span><span style="color: #007700">);</span> </span> </code></div>     </div>      <div class="example-contents"> <div class="shellcode"><pre class="shellcode">shell&gt; php example.php -a 1 -b 2 -- test</pre> </div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> array(1) {   [0]=&gt;   string(4) &quot;test&quot; } </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.getopt-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/reserved.variables.argv.php" class="link"><var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.argv.php" class="classname">$argv</a></var></var></a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return array This function will return an array of option / argument pairs or false on*/
function getopt ($options, array $longopts = null, &$optind = null) {}

/**
*<div id="function.sys-getloadavg" class="refentry">  <div class="refnamediv">   <h1 class="refname">sys_getloadavg</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.3, PHP 7)</p><p class="refpurpose"><span class="refname">sys_getloadavg</span> &mdash; <span class="dc-title">获取系统的负载（load average）</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.sys-getloadavg-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sys_getloadavg</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回三个系统负载（系统运行队列中的进程数）的样本数据，分别是1分钟、5分钟和15分钟之前。   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sys-getloadavg-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个包含1分钟、5分钟和15分钟之前采样数据的<span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sys-getloadavg-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4544">     <p><strong>Example #1 <span class="function"><strong>sys_getloadavg()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$load&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sys_getloadavg</span><span style="color: #007700">();<br />if&nbsp;(</span><span style="color: #9876AA">$load</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]&nbsp;&gt;&nbsp;</span><span style="color: #9876AA">80</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'HTTP/1.1&nbsp;503&nbsp;Too&nbsp;busy,&nbsp;try&nbsp;again&nbsp;later'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">'Server&nbsp;too&nbsp;busy.&nbsp;Please&nbsp;try&nbsp;again&nbsp;later.'</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.sys-getloadavg-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">此函数未在 Windows 平台下实现。</span></p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return array an array with three samples (last 1, 5 and 15*/
function sys_getloadavg () {}

/**
*<div id="function.microtime" class="refentry">  <div class="refnamediv">   <h1 class="refname">microtime</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">microtime</span> &mdash; <span class="dc-title">返回当前 Unix 时间戳和微秒数</span></p>   </div>  <div class="refsect1 unknown-seealsp" id="refsect1-function.microtime-unknown-seealsp">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>microtime</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$get_as_float</code></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>microtime()</strong></span> 当前 Unix    时间戳以及微秒数。本函数仅在支持 gettimeofday()    系统调用的操作系统下可用。   </p>   <p class="para">    如果调用时不带可选参数，本函数以 &quot;msec sec&quot;    的格式返回一个字符串，其中 sec 是自 Unix 纪元（0:00:00 January 1,    1970 GMT）起到现在的秒数，msec 是微秒部分。字符串的两部分都是以秒为单位返回的。   </p>   <p class="para">    如果给出了 <code class="parameter">get_as_float</code> 参数并且其值等价于    <strong><code>TRUE</code></strong>，<span class="function"><strong>microtime()</strong></span> 将返回一个浮点数。   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     <code class="parameter">get_as_float</code> 参数是 PHP 5.0.0 新加的。    </span>   </p></blockquote>   <p class="para">    <div class="example" id="example-2722">     <p><strong>Example #1 用 <span class="function"><strong>microtime()</strong></span> 对脚本的运行计时</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//*<br />&nbsp;*&nbsp;Simple&nbsp;function&nbsp;to&nbsp;replicate&nbsp;PHP&nbsp;5&nbsp;behaviour<br />&nbsp;<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">microtime_float</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;list(</span><span style="color: #9876AA">$usec</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sec</span><span style="color: #007700">)&nbsp;=&nbsp;</span><span style="color: #9876AA">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">microtime</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;((float)</span><span style="color: #9876AA">$usec&nbsp;</span><span style="color: #007700">+&nbsp;(float)</span><span style="color: #9876AA">$sec</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$time_start&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">microtime_float</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Sleep&nbsp;for&nbsp;a&nbsp;while<br /></span><span style="color: #9876AA">usleep</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$time_end&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">microtime_float</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$time&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$time_end&nbsp;</span><span style="color: #007700">-&nbsp;</span><span style="color: #9876AA">$time_start</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Did&nbsp;nothing&nbsp;in&nbsp;</span><span style="color: #9876AA">$time</span><span style="color: #DD0000">&nbsp;seconds\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    参见 <span class="function">{@link time()}</span>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.datetime.php">Date/Time 函数</a></div></div>
 * @return mixed */
function microtime ($get_as_float = null) {}

/**
*<div id="function.gettimeofday" class="refentry">  <div class="refnamediv">   <h1 class="refname">gettimeofday</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">gettimeofday</span> &mdash; <span class="dc-title">取得当前时间</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.gettimeofday-description">   <h3 class="title">说明</h3> <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>gettimeofday</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$return_float</code><span class="initializer"> = false</span></span>   ] )</div>    <p class="para rdfs-comment">    本函数是 gettimeofday(2) 的接口。返回一个关联数组，包含有系统调用返回的数据。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.gettimeofday-parameters">   <h3 class="title">参数</h3>    <p class="para">     <dl>              <dt> <code class="parameter">return_float</code></dt>        <dd>         <p class="para">         当其设为         <strong><code>TRUE</code></strong> 时，会返回一个浮点数而不是一个数组。        </p>       </dd>            </dl>     </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.gettimeofday-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">      默认返回一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>。如果  <code class="parameter">return_float</code>      设置了则会返回一个 <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>。     </p>     <p class="para">      数组中的键为：      <ul class="itemizedlist">       <li class="listitem">        <span class="simpara">         &quot;sec&quot; - 自 Unix 纪元起的秒数        </span>       </li>       <li class="listitem">        <span class="simpara">         &quot;usec&quot; - 微秒数        </span>       </li>       <li class="listitem">        <span class="simpara">         &quot;minuteswest&quot; - 格林威治向西的分钟数                 </span>       </li>       <li class="listitem">        <span class="simpara">         &quot;dsttime&quot; - 夏令时修正的类型        </span>       </li>      </ul>     </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.gettimeofday-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         增加了参数  <code class="parameter">return_float</code>。        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.gettimeofday-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2717">     <p><strong>Example #1 <span class="function"><strong>gettimeofday()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">gettimeofday</span><span style="color: #007700">());<br /><br />echo&nbsp;</span><span style="color: #9876AA">gettimeofday</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Array (     [sec] =&gt; 1073504408     [usec] =&gt; 238215     [minuteswest] =&gt; 0     [dsttime] =&gt; 1 )  1073504408.23910 </pre></div>     </div>    </div>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.datetime.php">Date/Time 函数</a></div></div>
 * @return mixed By default an array is returned. If return_float*/
function gettimeofday ($return_float = null) {}

/**
*<div id="function.getrusage" class="refentry">  <div class="refnamediv">   <h1 class="refname">getrusage</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">getrusage</span> &mdash; <span class="dc-title">获取当前资源使用状况</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.getrusage-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>getrusage</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$who</code><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    这是 <strong class="command">getrusage(2)</strong> 的接口。它返回了调用自系统的数据。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.getrusage-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">who</code></dt>       <dd>        <p class="para">        如果 <code class="parameter">who</code> 是 1，getrusage 会使用        <strong><code>RUSAGE_CHILDREN</code></strong> 来调用。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.getrusage-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回了一个包含系统返回数据的关联数组。所以条目均可通过文档中字段的名称来访问。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.getrusage-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-510">     <p><strong>Example #1 <span class="function"><strong>getrusage()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dat&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getrusage</span><span style="color: #007700">();<br />echo&nbsp;</span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_nswap"</span><span style="color: #007700">];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;number&nbsp;of&nbsp;swaps<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_majflt"</span><span style="color: #007700">];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;number&nbsp;of&nbsp;page&nbsp;faults<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_utime.tv_sec"</span><span style="color: #007700">];&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;user&nbsp;time&nbsp;used&nbsp;(seconds)<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_utime.tv_usec"</span><span style="color: #007700">];&nbsp;</span><span style="color: #FF8000">//&nbsp;user&nbsp;time&nbsp;used&nbsp;(microseconds)<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.getrusage-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.0.0</td>        <td>         此函数现在开始支持 Windows。        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 notes" id="refsect1-function.getrusage-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     在 Windows 上 <span class="function"><strong>getrusage()</strong></span> 仅会返回以下类型：    </p>    <p class="para">     <ul class="simplelist">      <li class="member"><em>&quot;ru_stime.tv_sec&quot;</em></li>      <li class="member"><em>&quot;ru_stime.tv_usec&quot;</em></li>      <li class="member"><em>&quot;ru_utime.tv_sec&quot;</em></li>      <li class="member"><em>&quot;ru_utime.tv_usec&quot;</em></li>      <li class="member">       <em>&quot;ru_majflt&quot;</em> (only if <code class="parameter">who</code> is        <strong><code>RUSAGE_SELF</code></strong>)      </li>      <li class="member">       <em>&quot;ru_maxrss&quot;</em> (only if <code class="parameter">who</code> is        <strong><code>RUSAGE_SELF</code></strong>)      </li>     </ul>    </p>    <p class="para">     If <span class="function"><strong>getrusage()</strong></span> is called with <code class="parameter">who</code>      set to <em>1</em> (<strong><code>RUSAGE_CHILDREN</code></strong>), then      resource usage for threads are collected (meaning that internally the function      is called with <strong><code>RUSAGE_THREAD</code></strong>).    </p>   </p></blockquote>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     在 BeOS 2000，仅会返回以下类型：    </p>    <p class="para">     <ul class="simplelist">      <li class="member"><em>&quot;ru_stime.tv_sec&quot;</em></li>      <li class="member"><em>&quot;ru_stime.tv_usec&quot;</em></li>      <li class="member"><em>&quot;ru_utime.tv_sec&quot;</em></li>      <li class="member"><em>&quot;ru_utime.tv_usec&quot;</em></li>     </ul>    </p>   </p></blockquote>  </div>     <div class="refsect1 seealso" id="refsect1-function.getrusage-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member">你系统上 <strong class="command">getrusage(2)</strong> 的 man page</li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return array an associative array containing the data returned from the system*/
function getrusage ($who = null) {}

/**
*<div id="function.uniqid" class="refentry">  <div class="refnamediv">   <h1 class="refname">uniqid</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">uniqid</span> &mdash; <span class="dc-title">生成一个唯一ID</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.uniqid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>uniqid</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code><span class="initializer"> = &quot;&quot;</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$more_entropy</code><span class="initializer"> = false</span></span>   ]] )</div>    <p class="para rdfs-comment">    获取一个带前缀、基于当前时间微秒数的唯一ID。   </p>   <div class="caution"><strong class="caution">Caution</strong><p class="para">本函数并不会生成安全加密的值，不应用于加密用途。若需要安全加密的值，考虑使用<span class="function">{@link openssl_random_pseudo_bytes()}</span>。</p></div>   <div class="warning"><strong class="warning">Warning</strong>     <p class="para">      此函数不保证返回值的唯一性。      由于绝大多数系统使用 NTP 或者类似服务调整系统的时间，所以系统时间经常发生变化。      此外，进程/线程可能不会返回唯一的 ID。      用 <code class="parameter">more_entropy</code> 来增加唯一性的概率。     </p>   </div>  </div>    <div class="refsect1 parameters" id="refsect1-function.uniqid-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">prefix</code></dt>       <dd>        <p class="para">        有用的参数。例如：如果在多台主机上可能在同一微秒生成唯一ID。       </p>       <p class="para">        <code class="parameter">prefix</code>为空，则返回的字符串长度为13。<code class="parameter">more_entropy</code> 为        <strong><code>TRUE</code></strong>，则返回的字符串长度为23。       </p>      </dd>                 <dt> <code class="parameter">more_entropy</code></dt>       <dd>        <p class="para">        如果设置为 <strong><code>TRUE</code></strong>，<span class="function"><strong>uniqid()</strong></span> 会在返回的字符串结尾增加额外的熵（使用combined linear congruential generator）。        使得唯一ID更具唯一性。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.uniqid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回字符串形式的唯一ID。   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     此函数努力创建唯一识别符，但它不保证返回值得唯一性。    </p>   </div>  </div>    <div class="refsect1 examples" id="refsect1-function.uniqid-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4547">     <p><strong>Example #1 <span class="function"><strong>uniqid()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;A&nbsp;uniqid,&nbsp;like:&nbsp;4b3403665fea6&nbsp;<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"uniqid():&nbsp;%s\r\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">uniqid</span><span style="color: #007700">());<br /><br /></span><span style="color: #FF8000">//&nbsp;We&nbsp;can&nbsp;also&nbsp;prefix&nbsp;the&nbsp;uniqid,&nbsp;this&nbsp;the&nbsp;same&nbsp;as&nbsp;<br />&nbsp;*&nbsp;doing:<br />&nbsp;*<br />&nbsp;*&nbsp;$uniqid&nbsp;=&nbsp;$prefix&nbsp;.&nbsp;uniqid();<br />&nbsp;*&nbsp;$uniqid&nbsp;=&nbsp;uniqid($prefix);<br />&nbsp;<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"uniqid('php_'):&nbsp;%s\r\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">uniqid</span><span style="color: #007700">(</span><span style="color: #DD0000">'php_'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;We&nbsp;can&nbsp;also&nbsp;activate&nbsp;the&nbsp;more_entropy&nbsp;parameter,&nbsp;which&nbsp;is&nbsp;<br />&nbsp;*&nbsp;required&nbsp;on&nbsp;some&nbsp;systems,&nbsp;like&nbsp;Cygwin.&nbsp;This&nbsp;makes&nbsp;uniqid()<br />&nbsp;*&nbsp;produce&nbsp;a&nbsp;value&nbsp;like:&nbsp;4b340550242239.64159797<br />&nbsp;<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"uniqid('',&nbsp;true):&nbsp;%s\r\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">uniqid</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.uniqid-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     在Cygwin环境下，为了使此函数能够工作，<code class="parameter">more_entropy</code> 必须设置为 <strong><code>TRUE</code></strong>。    </p>   </p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return string the unique identifier, as a string.*/
function uniqid ($prefix = "", $more_entropy = false) {}

/**
*<div id="function.quoted-printable-decode" class="refentry">  <div class="refnamediv">   <h1 class="refname">quoted_printable_decode</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">quoted_printable_decode</span> &mdash; <span class="dc-title">将 quoted-printable 字符串转换为 8-bit 字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.quoted-printable-decode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>quoted_printable_decode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    )</div>    <p class="para rdfs-comment">    该函数返回 quoted-printable 解码之后的 8-bit 字符串 (参考 <a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC2045</a> 的6.7章节，而不是 <a href="http://www.faqs.org/rfcs/rfc2821" class="link external">&raquo;&nbsp;RFC2821</a> 的4.5.2章节，so additional periods are not stripped from the beginning of line)   </p>   <p class="para">    该函数与 <span class="function">{@link imap_qprint()}</span> 函数十分相似，但是该函数不需要依赖 IMAP 模块。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.quoted-printable-decode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        输入的字符串。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.quoted-printable-decode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回的 8-bit 二进制字符串。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.quoted-printable-decode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link quoted_printable_encode()} - 将 8-bit 字符串转换成 quoted-printable 字符串</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the 8-bit binary string.*/
function quoted_printable_decode ($str) {}

/**
*<div id="function.quoted-printable-encode" class="refentry">  <div class="refnamediv">   <h1 class="refname">quoted_printable_encode</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">quoted_printable_encode</span> &mdash; <span class="dc-title">将 8-bit 字符串转换成 quoted-printable 字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.quoted-printable-encode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>quoted_printable_encode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    )</div>    <p class="para rdfs-comment">    返回 quoted-printable 格式的字符，该格式由 <a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC2045</a> 6.7.章节里制定。   </p>   <p class="para">    该函数与 <span class="function">{@link imap_8bit()}</span> 函数十分相似，不同的是该函数不需要 IMAP 模块就能运行。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.quoted-printable-encode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        输入的字符串。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.quoted-printable-encode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回编码之后的字符串。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.quoted-printable-encode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link quoted_printable_decode()} - 将 quoted-printable 字符串转换为 8-bit 字符串</span></li>     <li class="member"><span class="function">{@link iconv_mime_encode()} - Composes a MIME header field</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the encoded string.*/
function quoted_printable_encode ($str) {}

/**
*<div id="function.convert-cyr-string" class="refentry">  <div class="refnamediv">   <h1 class="refname">convert_cyr_string</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">convert_cyr_string</span> &mdash; <span class="dc-title">将字符由一种 Cyrillic 字符转换成另一种</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.convert-cyr-string-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>convert_cyr_string</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$from</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span>    )</div>    <p class="para rdfs-comment">    此函数将给定的字符串从一种    Cyrillic 字符转换成另一种，返回转换之后的字符串。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.convert-cyr-string-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要转换的字符。       </p>      </dd>                 <dt> <code class="parameter">from</code></dt>       <dd>        <p class="para">        单个字符，代表源 Cyrillic 字符集。       </p>      </dd>                 <dt> <code class="parameter">to</code></dt>       <dd>        <p class="para">        单个字符，代表了目标 Cyrillic 字符集。       </p>      </dd>          </dl>    </p>   <p class="para">    支持的类型有：    <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       k - koi8-r      </span>     </li>     <li class="listitem">      <span class="simpara">       w - windows-1251      </span>     </li>     <li class="listitem">      <span class="simpara">       i - iso8859-5      </span>     </li>     <li class="listitem">      <span class="simpara">       a - x-cp866      </span>     </li>     <li class="listitem">      <span class="simpara">       d - x-cp866      </span>     </li>     <li class="listitem">      <span class="simpara">       m - x-mac-cyrillic      </span>     </li>    </ul>   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.convert-cyr-string-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回转换后的字符串。   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.convert-cyr-string-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the converted string.*/
function convert_cyr_string ($str, $from, $to) {}

/**
*<div id="function.get-current-user" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_current_user</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_current_user</span> &mdash; <span class="dc-title">获取当前 PHP 脚本所有者名称</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.get-current-user-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>get_current_user</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    返回当前 PHP 脚本所有者名称。   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.get-current-user-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    以字符串返回用户名。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.get-current-user-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-494">     <p><strong>Example #1 <span class="function"><strong>get_current_user()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'Current&nbsp;script&nbsp;owner:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">get_current_user</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Current script owner: SYSTEM </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.get-current-user-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link getmyuid()} - 获取 PHP 脚本所有者的 UID</span></li>     <li class="member"><span class="function">{@link getmygid()} - 获取当前 PHP 脚本拥有者的 GID</span></li>     <li class="member"><span class="function">{@link getmypid()} - 获取 PHP 进程的 ID</span></li>     <li class="member"><span class="function">{@link getmyinode()} - 获取当前脚本的索引节点（inode）</span></li>     <li class="member"><span class="function">{@link getlastmod()} - 获取页面最后修改的时间</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string the username as a string.*/
function get_current_user () {}

/**
*<div id="function.set-time-limit" class="refentry">  <div class="refnamediv">   <h1 class="refname">set_time_limit</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">set_time_limit</span> &mdash; <span class="dc-title">设置脚本最大执行时间</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.set-time-limit-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>set_time_limit</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span>    )</div>    <p class="para rdfs-comment">   设置允许脚本运行的时间，单位为秒。如果超过了此设置，脚本返回一个致命的错误。默认值为30秒，或者是在<var class="filename">php.ini</var>的<em>max_execution_time</em>被定义的值，如果此值存在。   </p>   <p class="para">   当此函数被调用时，<span class="function"><strong>set_time_limit()</strong></span>会从零开始重新启动超时计数器。换句话说，如果超时默认是30秒，在脚本运行了了25秒时调用 <em>set_time_limit(20)</em>，那么，脚本在超时之前可运行总时间为45秒。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.set-time-limit-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">seconds</code></dt>       <dd>        <p class="para">        最大的执行时间，单位为秒。如果设置为0（零），没有时间方面的限制。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.set-time-limit-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">      成功时返回 <strong><code>TRUE</code></strong>，失败时返回  <strong><code>FALSE</code></strong> 。   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.set-time-limit-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">    当php运行于<a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode" class="link">安全模式</a>时，此功能不能生效。除了关闭安全模式或改变<var class="filename">php.ini</var>中的时间限制，没有别的办法。     </p>   </div>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     <span class="function"><strong>set_time_limit()</strong></span>函数和配置指令<a href="http://php.net/manual/zh/info.configuration.php#ini.max-execution-time" class="link">max_execution_time</a>只影响脚本本身执行的时间。任何发生在诸如使用<span class="function">{@link system()}</span>的系统调用，流操作，数据库操作等的脚本执行的最大时间不包括其中，当该脚本已运行。在测量时间是实值的Windows中，情况就不是如此了。       </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.set-time-limit-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/info.configuration.php#ini.max-execution-time" class="link">max_execution_time</a></li>     <li class="member"><a href="http://php.net/manual/zh/info.configuration.php#ini.max-input-time" class="link">max_input_time</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return bool Returns TRUE on success, or FALSE on failure. */
function set_time_limit ($seconds) {}

/**
*<div id="function.get-cfg-var" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_cfg_var</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_cfg_var</span> &mdash; <span class="dc-title">获取 PHP 配置选项的值</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.get-cfg-var-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>get_cfg_var</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code></span>    )</div>    <p class="para rdfs-comment">    获取 PHP 配置选项 <code class="parameter">option</code> 的值。   </p>   <p class="para">    此函数不会返回 PHP 编译的配置信息，或从 Apache 配置文件读取。   </p>   <p class="para">    检查系统是否使用了一个<a href="http://php.net/manual/zh/configuration.file.php" class="link">配置文件</a>，并尝试获取 cfg_file_path 的配置设置的值。    如果有效，将会使用一个配置文件。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.get-cfg-var-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        配置选项的名称。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.get-cfg-var-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">option</code> 指定的当前 PHP 配置变量的值，错误发生时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.get-cfg-var-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         <span class="function"><strong>get_cfg_var()</strong></span> 被修复，能够返回 &quot;array&quot; 的 ini 选项。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.get-cfg-var-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string the current value of the PHP configuration variable specified by*/
function get_cfg_var ($option) {}

/**
*<div id="function.magic-quotes-runtime" class="refentry">  <div class="refnamediv">   <h1 class="refname">magic_quotes_runtime</h1>   <p class="verinfo">(PHP 4, PHP 5)</p><p class="refpurpose"><span class="refname">magic_quotes_runtime</span> &mdash; <span class="dc-title">别名 <span class="function">{@link set_magic_quotes_runtime()}</span></span></p>   </div>   <div id="function.magic-quotes-runtime-refsynopsisdiv">   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">This alias was <em class="emphasis">DEPRECATED</em> in PHP 5.3.0, and <em class="emphasis">REMOVED</em> as of PHP 7.0.0.</p></div>  </div>    <div class="refsect1 description" id="refsect1-function.magic-quotes-runtime-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link set_magic_quotes_runtime()}</span>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
*/
function magic_quotes_runtime ($new_setting) {}

/**
*<div id="function.set-magic-quotes-runtime" class="refentry">  <div class="refnamediv">   <h1 class="refname">set_magic_quotes_runtime</h1>   <p class="verinfo">(PHP 4, PHP 5)</p><p class="refpurpose"><span class="refname">set_magic_quotes_runtime</span> &mdash; <span class="dc-title">设置当前 magic_quotes_runtime 配置选项的激活状态</span></p>   </div>    <div id="function.set-magic-quotes-runtime-refsynopsisdiv">   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">This function was <em class="emphasis">DEPRECATED</em> in PHP 5.3.0, and <em class="emphasis">REMOVED</em> as of PHP 7.0.0.</p></div>  </div>    <div class="refsect1 description" id="refsect1-function.set-magic-quotes-runtime-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>set_magic_quotes_runtime</strong></span>     ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new_setting</code></span>    )</div>    <p class="para rdfs-comment">    设置当前 <a href="http://php.net/manual/zh/info.configuration.php#ini.magic-quotes-runtime" class="link">magic_quotes_runtime</a> 配置选项的激活状态。   </p>  </div>      <div class="refsect1 errors" id="refsect1-function.set-magic-quotes-runtime-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   自 PHP 5.3 起，该函数已经被弃用，执行它的时候会抛出 E_DEPRECATED 异常。   自 PHP 5.4 起，尝试开启  magic quotes 时该函数会产生一个 E_CORE_ERROR 错误。  </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.set-magic-quotes-runtime-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">new_setting</code></dt>       <dd>        <p class="para">        关闭是 <strong><code>FALSE</code></strong>，开启是 <strong><code>TRUE</code></strong>。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.set-magic-quotes-runtime-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.set-magic-quotes-runtime-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-533">     <p><strong>Example #1 <span class="function"><strong>set_magic_quotes_runtime()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建临时文件指针<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">tmpfile</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;写入一些数据<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'\'PHP\'&nbsp;is&nbsp;a&nbsp;Recursive&nbsp;acronym'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;没有&nbsp;magic_quotes_runtime<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">set_magic_quotes_runtime</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">'Without&nbsp;magic_quotes_runtime:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">64</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;有&nbsp;magic_quotes_runtime<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">set_magic_quotes_runtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">'With&nbsp;magic_quotes_runtime:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">64</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;清理<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Without magic_quotes_runtime: &#039;PHP&#039; is a Recursive acronym With magic_quotes_runtime: \&#039;PHP\&#039; is a Recursive acronym </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.set-magic-quotes-runtime-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link get_magic_quotes_gpc()} - 获取当前 magic_quotes_gpc 的配置选项设置</span></li>     <li class="member"><span class="function">{@link get_magic_quotes_runtime()} - 获取当前 magic_quotes_runtime 配置选项的激活状态</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function set_magic_quotes_runtime ($new_setting) {}

/**
*<div id="function.get-magic-quotes-gpc" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_magic_quotes_gpc</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_magic_quotes_gpc</span> &mdash; <span class="dc-title">获取当前 magic_quotes_gpc 的配置选项设置</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.get-magic-quotes-gpc-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>get_magic_quotes_gpc</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回当前 <a href="http://php.net/manual/zh/info.configuration.php#ini.magic-quotes-gpc" class="link">magic_quotes_gpc</a> 配置选项的设置   </p>   <p class="para">    记住，尝试在运行时设置 <a href="http://php.net/manual/zh/info.configuration.php#ini.magic-quotes-gpc" class="link">    magic_quotes_gpc</a> 将不会生效。   </p>   <p class="para">    更多关于 magic_quotes 的信息参见<a href="http://php.net/manual/zh/security.magicquotes.php" class="link">安全</a>一章。   </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.get-magic-quotes-gpc-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果 magic_quotes_gpc 为关闭时返回 0，否则返回 1。在 PHP 5.4.O 起将始终返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.get-magic-quotes-gpc-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.0</td>        <td>         始终返回 <strong><code>FALSE</code></strong>，因为这个魔术引号功能已经从 PHP 中移除了。        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.get-magic-quotes-gpc-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-500">     <p><strong>Example #1 <span class="function"><strong>get_magic_quotes_gpc()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;如果启用了魔术引号<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'lastname'</span><span style="color: #007700">];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;O\'reilly<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">addslashes</span><span style="color: #007700">(</span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'lastname'</span><span style="color: #007700">]);&nbsp;</span><span style="color: #FF8000">//&nbsp;O\\\'reilly<br /><br />//&nbsp;适用各个&nbsp;PHP&nbsp;版本的用法<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">get_magic_quotes_gpc</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$lastname&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stripslashes</span><span style="color: #007700">(</span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'lastname'</span><span style="color: #007700">]);<br />}<br />else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$lastname&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'lastname'</span><span style="color: #007700">];<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;如果使用&nbsp;MySQL<br /></span><span style="color: #9876AA">$lastname&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mysql_real_escape_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$lastname</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$lastname</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;O\'reilly<br /></span><span style="color: #9876AA">$sql&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"INSERT&nbsp;INTO&nbsp;lastnames&nbsp;(lastname)&nbsp;VALUES&nbsp;('</span><span style="color: #9876AA">$lastname</span><span style="color: #DD0000">')"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 notes" id="refsect1-function.get-magic-quotes-gpc-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     如果指令 <a href="http://php.net/manual/zh/sybase.configuration.php#ini.magic-quotes-sybase" class="link">     magic_quotes_sybase</a> 为 ON，它会完全覆盖 <a href="http://php.net/manual/zh/info.configuration.php#ini.magic-quotes-gpc" class="link">magic_quotes_gpc</a>。     所以即使 <span class="function"><strong>get_magic_quotes_gpc()</strong></span> 返回 <strong><code>TRUE</code></strong>，双引号、反斜杠或 NUL 都不会被转义。     只有单引号会被转义。     这种情况下它们看上去像：<em class="emphasis">&#039;&#039;</em>    </p>   </p></blockquote>  </div>     <div class="refsect1 seealso" id="refsect1-function.get-magic-quotes-gpc-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link addslashes()} - 使用反斜线引用字符串</span></li>     <li class="member"><span class="function">{@link stripslashes()} - 反引用一个引用字符串</span></li>     <li class="member"><span class="function">{@link get_magic_quotes_runtime()} - 获取当前 magic_quotes_runtime 配置选项的激活状态</span></li>     <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return int 0 if magic quotes gpc are off, 1 otherwise.*/
function get_magic_quotes_gpc () {}

/**
*<div id="function.get-magic-quotes-runtime" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_magic_quotes_runtime</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_magic_quotes_runtime</span> &mdash; <span class="dc-title">获取当前 magic_quotes_runtime 配置选项的激活状态</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.get-magic-quotes-runtime-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>get_magic_quotes_runtime</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    返回当前 <a href="http://php.net/manual/zh/info.configuration.php#ini.magic-quotes-runtime" class="link">magic_quotes_runtime</a> 配置选项的激活状态。   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.get-magic-quotes-runtime-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    magic_quotes_runtime 在关闭时返回 0，否则返回 1。    自 PHP 5.4.0 起始终返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.get-magic-quotes-runtime-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.0</td>        <td>         总是返回 <strong><code>FALSE</code></strong>，因为魔术引号（magic quotes）功能已经从 PHP 中移除。        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.get-magic-quotes-runtime-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-501">     <p><strong>Example #1 <span class="function"><strong>get_magic_quotes_runtime()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;检测&nbsp;magic_quotes_runtime&nbsp;是否已经激活<br /></span><span style="color: #007700">if(</span><span style="color: #9876AA">get_magic_quotes_runtime</span><span style="color: #007700">())<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;关闭功能<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">set_magic_quotes_runtime</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.get-magic-quotes-runtime-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link get_magic_quotes_gpc()} - 获取当前 magic_quotes_gpc 的配置选项设置</span></li>     <li class="member"><span class="function">{@link set_magic_quotes_runtime()} - 设置当前 magic_quotes_runtime 配置选项的激活状态</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return int 0 if magic quotes runtime is off, 1 otherwise.*/
function get_magic_quotes_runtime () {}

/**
*<div id="function.import-request-variables" class="refentry">    <div class="refnamediv">     <h1 class="refname">import_request_variables</h1>     <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5 &lt; 5.4.0)</p><p class="refpurpose"><span class="refname">import_request_variables</span> &mdash; <span class="dc-title">将 GET／POST／Cookie 变量导入到全局作用域中</span></p>     </div>    <div class="refsect1 unknown-unknown-unknown-unknown-unknown-seealst" id="refsect1-function.import-request-variables-unknown-unknown-unknown-unknown-unknown-seealst">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description">       <span class="type">bool</span> <span class="methodname"><strong>import_request_variables</strong></span>        ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span>       [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span>      ] )</div>      <p class="simpara">      将 GET／POST／Cookie 变量导入到全局作用域中。如果你禁止了      <a href="http://php.net/manual/zh/ini.core.php#ini.register-globals" class="link">register_globals</a>，但又想用到一些全局变量，那么此函数就很有用。     </p>     <p class="simpara">      你可以使用 <code class="parameter">types</code>      参数指定需要导入的变量。可以用字母‘G’、‘P’和‘C’分别表示      GET、POST 和 Cookie。这些字母不区分大小写，所以你可以使用‘g’、‘p’和‘c’的任何组合。POST      包含了通过 POST 方法上传的文件信息。注意这些字母的顺序，当使用“gp”时，POST      变量将使用相同的名字覆盖 GET 变量。任何 GPC      以外的字母都将被忽略。     </p>     <p class="simpara">      <code class="parameter">prefix</code> 参数作为变量名的前缀，置于所有被导入到全局作用域的变量之前。所以如果你有个名为“userid”的      GET 变量，同时提供了“pref_”作为前缀，那么你将获得一个名为 $pref_userid      的全局变量。     </p>     <p class="simpara">      如果你对导入其它全局变量（例如 SERVER 变量）感兴趣，请考虑使用      <span class="function">{@link extract()}</span>。     </p>     <blockquote class="note"><p><strong class="note">Note</strong>:       <p class="para">       虽然 <code class="parameter">prefix</code> 参数是可选的，但如果不指定前缀，或者指定一个空字符串作为前缀，你将获得一个       <a href="http://php.net/manual/zh/" class="link">E_NOTICE</a>        级别的错误。使用默认<a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">错误报告</a>级别是不显示注意（Notice）级别的错误的。      </p>     </p></blockquote>     <div class="informalexample">      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;此处将导入&nbsp;GET&nbsp;和&nbsp;POST&nbsp;变量<br />//&nbsp;使用“rvar_”作为前缀<br /></span><span style="color: #9876AA">import_request_variables</span><span style="color: #007700">(</span><span style="color: #DD0000">"gP"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rvar_"</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$rvar_foo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>     <p class="simpara">      参见      <a href="http://php.net/manual/zh/reserved.variables.request.php" class="link">$_REQUEST</a>、<a href="http://php.net/manual/zh/ini.core.php#ini.register-globals" class="link">register_globals</a>、<a href="http://php.net/manual/zh/language.variables.predefined.php" class="link">预定义变量</a>      和 <span class="function">{@link extract()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function import_request_variables ($types, $prefix = null) {}

/**
*<div id="function.error-log" class="refentry">  <div class="refnamediv">   <h1 class="refname">error_log</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">error_log</span> &mdash; <span class="dc-title">发送错误信息到某个地方</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.error-log-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>error_log</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$message_type</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$destination</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$extra_headers</code></span>   ]]] )</div>    <p class="para rdfs-comment">    把错误信息发送到 web 服务器的错误日志，或者到一个文件里。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.error-log-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">message</code></dt>       <dd>        <p class="para">        应该被记录的错误信息。       </p>      </dd>                 <dt> <code class="parameter">message_type</code></dt>       <dd>        <p class="para">        设置错误应该发送到何处。可能的信息类型有以下几个：       </p>       <p class="para">        <table class="doctable table">         <caption><strong><span class="function"><strong>error_log()</strong></span> 日志类型</strong></caption>                   <tbody class="tbody">           <tr>            <td>0</td>            <td>             <code class="parameter">message</code> 发送到 PHP 的系统日志，使用             操作系统的日志机制或者一个文件，取决于             <a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.error-log" class="link">error_log</a> 指令设置了什么。             这是个默认的选项。            </td>           </tr>            <tr>            <td>1</td>            <td>             <code class="parameter">message</code> 发送到参数 <code class="parameter">destination</code>              设置的邮件地址。             第四个参数 <code class="parameter">extra_headers</code> 只有在这个类型里才会被用到。            </td>           </tr>            <tr>            <td>2</td>            <td>             不再是一个选项。            </td>           </tr>            <tr>            <td>3</td>            <td>             <code class="parameter">message</code> 被发送到位置为 <code class="parameter">destination</code> 的文件里。             字符 <code class="parameter">message</code> 不会默认被当做新的一行。            </td>           </tr>            <tr>            <td>4</td>            <td>            <code class="parameter">message</code> 直接发送到 SAPI 的日志处理程序中。            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <code class="parameter">destination</code></dt>       <dd>        <p class="para">        目标。它的含义描述于以上，由        <code class="parameter">message_type</code> 参数所决定。       </p>      </dd>                 <dt> <code class="parameter">extra_headers</code></dt>       <dd>        <p class="para">        额外的头。当 <code class="parameter">message_type</code>        设置为 <em>1</em> 的时候使用。        该信息类型使用了 <span class="function">{@link mail()}</span> 的同一个内置函数。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.error-log-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.error-log-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">     <span class="function"><strong>error_log()</strong></span> 并非二进制安全的。null 字符可能截断 <code class="parameter">message</code>。    </p>   </div>   <div class="tip"><strong class="tip">Tip</strong>    <p class="simpara">     <code class="parameter">message</code> 不能包含 null 字符。     注意，<code class="parameter">message</code> 可能会发送到文件、邮件、syslog 等。     所以在调用 <span class="function"><strong>error_log()</strong></span> 前需要使用适合的转换/转义函数： <span class="function">{@link base64_encode()}</span>、 <span class="function">{@link rawurlencode()}</span> 或 <span class="function">{@link addslashes()}</span>。    </p>   </div>  </div>     <div class="refsect1 examples" id="refsect1-function.error-log-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-460">     <p><strong>Example #1 <span class="function"><strong>error_log()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;如果无法连接到数据库，发送通知到服务器日志<br /></span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">Ora_Logon</span><span style="color: #007700">(</span><span style="color: #9876AA">$username</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$password</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">error_log</span><span style="color: #007700">(</span><span style="color: #DD0000">"Oracle&nbsp;database&nbsp;not&nbsp;available!"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;如果用尽了&nbsp;FOO，通过邮件通知管理员<br /></span><span style="color: #007700">if&nbsp;(!(</span><span style="color: #9876AA">$foo&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">allocate_new_foo</span><span style="color: #007700">()))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">error_log</span><span style="color: #007700">(</span><span style="color: #DD0000">"Big&nbsp;trouble,&nbsp;we're&nbsp;all&nbsp;out&nbsp;of&nbsp;FOOs!"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"operator@example.com"</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;调用&nbsp;error_log()&nbsp;的另一种方式:<br /></span><span style="color: #9876AA">error_log</span><span style="color: #007700">(</span><span style="color: #DD0000">"You&nbsp;messed&nbsp;up!"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"/var/tmp/my-errors.log"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.error-log-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">      <tr>        <td>5.2.7</td>        <td>         可能的值：4添加到了 <code class="parameter">message_type</code>。        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.errorfunc.php">错误处理 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function error_log ($message, $message_type = null, $destination = null, $extra_headers = null) {}
