<?php

/**
*<div id="function.boolval" class="refentry">  <div class="refnamediv">   <h1 class="refname">boolval</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">boolval</span> &mdash; <span class="dc-title">获取变量的布尔值</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.boolval-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">boolean</span> <span class="methodname" style="color:#CC7832"><strong>boolval</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>    )</div>    <p class="para rdfs-comment">    返回<span class="parameter" style="color:#2EACF9">var</span>变量的布尔值 .   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.boolval-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <span class="parameter" style="color:#2EACF9">var</span></dt>      <dd>       <span>      标量类型会被转化成<span class="type" style="color:#EAB766"><span class="type 布尔" style="color:#EAB766">布尔</span></span>类型.      </span>     </dd>        </dl>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.boolval-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="parameter" style="color:#2EACF9">var</span>变量的布尔值.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.boolval-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6347">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">boolval()</strong></span> examples</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'0:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'42:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">42</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'0.0:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">0.0</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'4.2:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">4.2</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'"":&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">""</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'"string":&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">"string"</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'"0":&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">"0"</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'"1":&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'[1,&nbsp;2]:&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">([</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">])&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'[]:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">([])&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'stdClass:&nbsp;'</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(new&nbsp;</span><span style="color: #9876AA">stdClass</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> 0:        false 42:       true 0.0:      false 4.2:      true &quot;&quot;:       false &quot;string&quot;: true &quot;0&quot;:      false &quot;1&quot;:      true [1, 2]:   true []:       false stdClass: true </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.boolval-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link floatval()} - 获取变量的浮点值</span></li>     <li class="member"><span class="function">{@link intval()} - 获取变量的整数值</span></li>     <li class="member"><span class="function">{@link strval()} - 获取变量的字符串值</span></li>     <li class="member"><span class="function">{@link settype()} - 设置变量的类型</span></li>     <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔型</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.types.type-juggling.php" class="link">Type juggling</a></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return boolean The boolean value of var.*/
function boolval($var) {}

/**
*<div id="function.intval" class="refentry">    <div class="refnamediv">     <h1 class="refname">intval</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">intval</span> &mdash; <span class="dc-title">获取变量的整数值</span></p>     </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.intval-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>intval</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$base</span><span class="initializer"> = 10</span></span>   ] )</div>      <p class="para rdfs-comment">      通过使用指定的进制 <span class="parameter" style="color:#2EACF9">base</span> 转换（默认是十进制），返回变量 <span class="parameter" style="color:#2EACF9">var</span>      的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span> 数值。       <span class="function"><strong style="color:#CC7832">intval()</strong></span> 不能用于 object，否则会产生  <strong><span>E_NOTICE</span></strong> 错误并返回 1。     </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.intval-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">var</span></dt>       <dd>        <p class="para">        要转换成 integer 的数量值       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">base</span></dt>       <dd>        <p class="para">        转化所使用的进制       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         如果 <span class="parameter" style="color:#2EACF9">base</span> 是 0，通过检测 <span class="parameter" style="color:#2EACF9">var</span> 的格式来决定使用的进制：         <ul class="itemizedlist">          <li class="listitem">           <span class="simpara">            如果字符串包括了 &quot;0x&quot; (或 &quot;0X&quot;) 的前缀，使用 16 进制 (hex)；否则，           </span>          </li>          <li class="listitem">           <span class="simpara">            如果字符串以 &quot;0&quot; 开始，使用 8  进制(octal)；否则，           </span>          </li>          <li class="listitem">           <span class="simpara">            将使用 10 进制 (decimal)。           </span>          </li>         </ul>        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.intval-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <span class="parameter" style="color:#2EACF9">var</span> 的 integer 值，失败时返回 0。    空的 array 返回 0，非空的 array 返回 1。   </p>   <p class="para">    最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。举例，在这样的系统上， <em>intval(&#039;1000000000000&#039;)</em> 会返回     2147483647。64 位系统上，最大带符号的 integer 值是     9223372036854775807。   </p>   <p class="para">    字符串有可能返回 0，虽然取决于字符串最左侧的字符。       使用    <a href="http://php.net/manual/zh/language.types.integer.php#language.types.integer.casting" class="link">整型转换</a>     的共同规则。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.intval-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6353">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">intval()</strong></span> 例子</strong></p>     <div class="example-contents"><p>      下面的例子运行于 32 位系统上。     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">42</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;42<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">4.2</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;4<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'42'</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;42<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'+42'</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;42<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'-42'</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;-42<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">042</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;34<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'042'</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;42<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">1e10</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;1410065408<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'1e10'</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;1<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">0x1A</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;26<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">42000000</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;42000000<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">420000000000000000000</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;0<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'420000000000000000000'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;2147483647<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">42</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;42<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'42'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;34<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(array());&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;0<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">intval</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bar'</span><span style="color: #007700">));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;1<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.intval-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     除非 <span class="parameter" style="color:#2EACF9">var</span> 是一个字符串，否则 <span class="parameter" style="color:#2EACF9">base</span> 不会起作用。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.intval-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         当传入的 <span class="parameter" style="color:#2EACF9">var</span> 是 object，将会抛出 <strong><span>E_NOTICE</span></strong> 并返回 1。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.intval-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link boolval()} - 获取变量的布尔值</span></li>     <li class="member"><span class="function">{@link floatval()} - 获取变量的浮点值</span></li>     <li class="member"><span class="function">{@link strval()} - 获取变量的字符串值</span></li>     <li class="member"><span class="function">{@link settype()} - 设置变量的类型</span></li>     <li class="member"><span class="function">{@link is_numeric()} - 检测变量是否为数字或数字字符串</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.types.type-juggling.php" class="link">类型转换的判别</a></li>     <li class="member"><a href="http://php.net/manual/zh/ref.bc.php" class="link">BCMath 任意精度数学函数</a></li>    </ul>   </span>  </div>            <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return int The integer value of var on success, or 0 on*/
function intval ($var, $base = null) {}

/**
*<div id="function.floatval" class="refentry">    <div class="refnamediv">     <h1 class="refname">floatval</h1>     <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">floatval</span> &mdash; <span class="dc-title">获取变量的浮点值</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.floatval-unknown-seealsp">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">float</span> <span class="methodname" style="color:#CC7832"><strong>floatval</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="simpara">      返回变量 <span class="parameter" style="color:#2EACF9">var</span>      的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> 数值。     </p>     <p class="para">      <span class="parameter" style="color:#2EACF9">var</span> 可以是任何标量类型。你不能将      <span class="function"><strong style="color:#CC7832">floatval()</strong></span> 用于数组或对象。     <div class="informalexample">       <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$var&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'122.34343The'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$float_value_of_var&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">floatval&nbsp;</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">);<br />print&nbsp;</span><span style="color: #9876AA">$float_value_of_var</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;打印出&nbsp;122.34343<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>       </div>       </div>     </p>     <p class="simpara">      参见 <span class="function">{@link intval()}</span>、<span class="function">{@link strval()}</span>、<span class="function">{@link settype()}</span> 和      <a href="http://php.net/manual/zh/language.types.type-juggling.php" class="link">类型戏法</a>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return float value of the given variable. Empty arrays return 0, non-empty arrays return 1.*/
function floatval ($var) {}

/**
*<div id="function.doubleval" class="refentry">    <div class="refnamediv">     <h1 class="refname">doubleval</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">doubleval</span> &mdash; <span class="dc-title"><span class="function">{@link floatval()}</span> 的别名</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.doubleval-unknown-seealsp">     <h3 class="title">描述</h3>     <p class="para">      此函数是 <span class="function">{@link floatval()}</span> 的别名。     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:       <p class="para">       此别名是函数改名之后的遗留问题。在 PHP       旧的版本中由于还没有 <span class="function">{@link floatval()}</span>       函数，所以你可能需要用到这个 <span class="function">{@link floatval()}</span>       的别名函数。      </p>     </p></blockquote>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return float value of the given variable. Empty arrays return 0, non-empty arrays return 1.*/
function doubleval ($var) {}

/**
*<div id="function.strval" class="refentry">    <div class="refnamediv">     <h1 class="refname">strval</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">strval</span> &mdash; <span class="dc-title">获取变量的字符串值</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.strval-unknown-seealsp">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>strval</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="simpara">      返回 <span class="parameter" style="color:#2EACF9">var</span> 的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 值。      参见 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 文档获取更多关于字符串转换的信息。     </p>     <p class="simpara">      <span class="parameter" style="color:#2EACF9">var</span> 可以是任何标量类型。不能将      <span class="function"><strong style="color:#CC7832">strval()</strong></span> 用于数组或对象。     </p>     <p class="simpara">      参见 <span class="function">{@link floatval()}</span>、<span class="function">{@link intval()}</span>、<span class="function">{@link settype()}</span> 和<a href="http://php.net/manual/zh/language.types.type-juggling.php" class="link">类型戏法</a>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return string The string value of var.*/
function strval ($var) {}

/**
*<div id="function.gettype" class="refentry">    <div class="refnamediv">     <h1 class="refname">gettype</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">gettype</span> &mdash; <span class="dc-title">获取变量的类型</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-unknown-seealss" id="refsect1-function.gettype-unknown-unknown-unknown-unknown-seealss">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>gettype</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      返回 PHP 变量的类型      <span class="parameter" style="color:#2EACF9">var</span>.     </p>     <div class="warning"><strong class="warning">Warning</strong>      <p class="simpara">       不要使用 <span class="function"><strong style="color:#CC7832">gettype()</strong></span>       来测试某种类型，因为其返回的字符串在未来的版本中可能需要改变。此外，由于包含了字符串的比较，它的运行也是较慢的。             </p>      <p class="simpara">       使用 <em>is_*</em> 函数代替。      </p>     </div>     <p class="para">      返回的字符串的可能值为：      <ul class="itemizedlist">       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean" style="color:#EAB766">boolean</a></span>”（从 PHP 4 起）</span>       </li>       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>”</span>       </li>       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.float.php" class="type double" style="color:#EAB766">double</a></span>”（由于历史原因，如果是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> 则返回“double”，而不是“float”）</span>       </li>       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>”</span>       </li>       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>”</span>       </li>       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>”</span>       </li>       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>”（从 PHP 4 起）</span>       </li>       <li class="listitem">        <span class="simpara">“<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.null.php" class="type NULL" style="color:#EAB766">NULL</a></span>”（从 PHP 4 起）</span>       </li>       <li class="listitem">        <span class="simpara">“user function”（只用于 PHP 3，现已停用）</span>       </li>       <li class="listitem">        <span class="simpara">“unknown type”</span>       </li>      </ul>     </p>     <p class="para">      对于 PHP 4，你应该使用 <span class="function">{@link function_exists()}</span>      和 <span class="function">{@link method_exists()}</span>      取代先前将 <span class="function"><strong style="color:#CC7832">gettype()</strong></span>      作用于函数的用法。     </p>     <p class="para">      参见      <span class="function">{@link settype()}</span>、<span class="function">{@link is_array()}</span>、<span class="function">{@link is_bool()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_integer()}</span>、<span class="function">{@link is_null()}</span>、<span class="function">{@link is_numeric()}</span>、<span class="function">{@link is_object()}</span>、<span class="function">{@link is_resource()}</span>、<span class="function">{@link is_scalar()}</span>      和 <span class="function">{@link is_string()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return string Possibles values for the returned string are:*/
function gettype ($var) {}

/**
*<div id="function.settype" class="refentry">    <div class="refnamediv">     <h1 class="refname">settype</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">settype</span> &mdash; <span class="dc-title">设置变量的类型</span></p>     </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.settype-description">   <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>settype</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">&$var</span></span>       , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$type</span></span>       )</div>      <p class="para rdfs-comment">      将变量 <span class="parameter" style="color:#2EACF9">var</span> 的类型设置成      <span class="parameter" style="color:#2EACF9">type</span>。     </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.settype-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">var</span></dt>       <dd>        <p class="para">        要转换的变量。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">type</span> 的可能值为：        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">         “boolean” （或为“bool”，从 PHP 4.2.0 起）          </span>         </li>         <li class="listitem">          <span class="simpara">         “integer” （或为“int”，从 PHP 4.2.0 起）          </span>         </li>         <li class="listitem">          <span class="simpara">         “float” （只在 PHP 4.2.0 之后可以使用，对于旧版本中使用的“double”现已停用）          </span>         </li>         <li class="listitem">          <span class="simpara">           &quot;string&quot;          </span>         </li>         <li class="listitem">          <span class="simpara">           &quot;array&quot;          </span>         </li>         <li class="listitem">          <span class="simpara">           &quot;object&quot;          </span>         </li>         <li class="listitem">          <span class="simpara">         “null” （从 PHP 4.2.0 起）          </span>         </li>        </ul>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.settype-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.settype-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6363">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">settype()</strong></span> 示例</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$foo&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"5bar"</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;string<br /></span><span style="color: #9876AA">$bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;boolean<br /><br /></span><span style="color: #9876AA">settype</span><span style="color: #007700">(</span><span style="color: #9876AA">$foo</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"integer"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$foo&nbsp;现在是&nbsp;5&nbsp;&nbsp;&nbsp;(integer)<br /></span><span style="color: #9876AA">settype</span><span style="color: #007700">(</span><span style="color: #9876AA">$bar</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"string"</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$bar&nbsp;现在是&nbsp;"1"&nbsp;(string)<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.settype-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Maximum value for &quot;int&quot; is <strong><span>PHP_INT_MAX</span></strong>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.settype-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link gettype()} - 获取变量的类型</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.types.type-juggling.php#language.types.typecasting" class="link">类型转换</a></li>     <li class="member"><a href="http://php.net/manual/zh/language.types.type-juggling.php" class="link">类型戏法</a></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function settype (&$var, $type) {}

/**
*<div id="function.is-null" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_null</h1>     <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_null</span> &mdash; <span class="dc-title">      检测变量是否为 <strong><span>NULL</span></strong>     </span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-seealsq" id="refsect1-function.is-null-unknown-unknown-seealsq">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_null</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      如果 <span class="parameter" style="color:#2EACF9">var</span> 是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span> 则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <p class="para">      查看 <a href="http://php.net/manual/zh/language.types.null.php#language.types.null.syntax" class="link"><strong><span>NULL</span></strong></a> 类型获知变量什么时候被认为是 <strong><span>NULL</span></strong>，而什么时候不是。     </p>     <p class="para">      参见      <a href="http://php.net/manual/zh/language.types.null.php#language.types.null.syntax" class="link"><strong><span>NULL</span></strong></a>、<span class="function">{@link is_bool()}</span>、<span class="function">{@link is_numeric()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_string()}</span>、<span class="function">{@link is_object()}</span>、<span class="function">{@link is_array()}</span>、<span class="function">{@link is_integer()}</span>      和 <span class="function">{@link is_real()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is null, false*/
function is_null ($var) {}

/**
*<div id="function.is-resource" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_resource</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_resource</span> &mdash; <span class="dc-title">      检测变量是否为资源类型     </span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-unknown-unknown-unknown-seealsu" id="refsect1-function.is-resource-unknown-unknown-unknown-unknown-unknown-unknown-seealsu">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_resource</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      如果给出的参数 <span class="parameter" style="color:#2EACF9">var</span> 是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 类型，<span class="function"><strong style="color:#CC7832">is_resource()</strong></span>      返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <p class="para">      查看 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 类型文档获取更多的信息。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is a resource,*/
function is_resource ($var) {}

/**
*<div id="function.is-bool" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_bool</h1>      <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_bool</span> &mdash; <span class="dc-title">       检测变量是否是布尔型      </span></p>      </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-seealsq" id="refsect1-function.is-bool-unknown-unknown-seealsq">      <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">        <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_bool</strong></span>         ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>       <p class="para rdfs-comment">       如果 <span class="parameter" style="color:#2EACF9">var</span>       是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean" style="color:#EAB766">boolean</a></span> 则返回 <strong><span>TRUE</span></strong>。      </p>      <p class="para">       <div class="example" id="example-6354">       <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">is_bool()</strong></span> 示例</strong></p>       <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$a&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$b&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;因为&nbsp;$a&nbsp;是布尔型，所以结果为真<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">is_bool</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;</span><span style="color: #DD0000">"Yes,&nbsp;this&nbsp;is&nbsp;a&nbsp;boolean"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;因为&nbsp;$b&nbsp;不是布尔型，所以结果为非真<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">is_bool</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;</span><span style="color: #DD0000">"Yes,&nbsp;this&nbsp;is&nbsp;a&nbsp;boolean"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>        </div>        </div>      </p>      <p class="para">      参见       <span class="function">{@link is_array()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_integer()}</span>、<span class="function">{@link is_string()}</span>      和 <span class="function">{@link is_object()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is a boolean,*/
function is_bool ($var) {}

/**
*<div id="function.is-long" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_long</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_long</span> &mdash; <span class="dc-title"><span class="function">{@link is_int()}</span> 的别名</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.is-long-unknown-seealsp">     <h3 class="title">描述</h3>     <p class="para">      此函数是 <span class="function">{@link is_int()}</span> 的别名函数。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is an integer,*/
function is_long ($var) {}

/**
*<div id="function.is-float" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_float</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_float</span> &mdash; <span class="dc-title">检测变量是否是浮点型</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-seealsq" id="refsect1-function.is-float-unknown-unknown-seealsq">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_float</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="simpara">      如果 <span class="parameter" style="color:#2EACF9">var</span> 是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> 则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:       <p class="para">       若想测试一个变量是否是数字或数字字符串（如表单输入，它们通常为字符串），必须使用       <span class="function">{@link is_numeric()}</span>。      </p>     </p></blockquote>     <p class="simpara">      参见       <span class="function">{@link is_bool()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_integer()}</span>、<span class="function">{@link is_numeric()}</span>、<span class="function">{@link is_string()}</span>、<span class="function">{@link is_array()}</span>       和 <span class="function">{@link is_object()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is a float, */
function is_float ($var) {}

/**
*<div id="function.is-int" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_int</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_int</span> &mdash; <span class="dc-title">检测变量是否是整数</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-seealsr" id="refsect1-function.is-int-unknown-unknown-unknown-seealsr">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_int</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="simpara">      如果 <span class="parameter" style="color:#2EACF9">var</span> 是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span> 则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:       <p class="para">       若想测试一个变量是否是数字或数字字符串（如表单输入，它们通常为字符串），必须使用       <span class="function">{@link is_numeric()}</span>。      </p>     </p></blockquote>     <p class="simpara">      参见      <span class="function">{@link is_bool()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_integer()}</span>、<span class="function">{@link is_numeric()}</span>、<span class="function">{@link is_string()}</span>、<span class="function">{@link is_array()}</span>      和 <span class="function">{@link is_object()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is an integer, */
function is_int ($var) {}

/**
*<div id="function.is-integer" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_integer</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_integer</span> &mdash; <span class="dc-title"><span class="function">{@link is_int()}</span> 的别名</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-unknown-seealss" id="refsect1-function.is-integer-unknown-unknown-unknown-unknown-seealss">     <h3 class="title">描述</h3>     <p class="para">      此函数是 <span class="function">{@link is_int()}</span> 的别名函数。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is an integer,*/
function is_integer ($var) {}

/**
*<div id="function.is-double" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_double</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_double</span> &mdash; <span class="dc-title"><span class="function">{@link is_float()}</span> 的别名</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.is-double-unknown-seealsp">     <h3 class="title">描述</h3>     <p class="para">      此函数是 <span class="function">{@link is_float()}</span> 的别名函数。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is a float,*/
function is_double ($var) {}

/**
*<div id="function.is-real" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_real</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_real</span> &mdash; <span class="dc-title"><span class="function">{@link is_float()}</span> 的别名</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-unknown-unknown-seealst" id="refsect1-function.is-real-unknown-unknown-unknown-unknown-unknown-seealst">     <h3 class="title">描述</h3>     <p class="para">      此函数是 <span class="function">{@link is_float()}</span> 的别名函数。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is a float,*/
function is_real ($var) {}

/**
*<div id="function.is-numeric" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_numeric</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_numeric</span> &mdash; <span class="dc-title">      检测变量是否为数字或数字字符串     </span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-seealsr" id="refsect1-function.is-numeric-unknown-unknown-unknown-seealsr">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_numeric</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      如果 <span class="parameter" style="color:#2EACF9">var</span> 是数字和数字字符串则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <p class="para">      参见      <span class="function">{@link is_bool()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_string()}</span>、<span class="function">{@link is_object()}</span>、<span class="function">{@link is_array()}</span>      和 <span class="function">{@link is_integer()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is a number or a numeric*/
function is_numeric ($var) {}

/**
*<div id="function.is-string" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_string</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_string</span> &mdash; <span class="dc-title">检测变量是否是字符串</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-unknown-unknown-unknown-unknown-unknown-seealsw" id="refsect1-function.is-string-unknown-unknown-unknown-unknown-unknown-unknown-unknown-unknown-seealsw">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_string</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      如果 <span class="parameter" style="color:#2EACF9">var</span> 是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <p class="para">      参见      <span class="function">{@link is_bool()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_integer()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_real()}</span>、<span class="function">{@link is_object()}</span>      和 <span class="function">{@link is_array()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is of type string,*/
function is_string ($var) {}

/**
*<div id="function.is-array" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_array</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_array</span> &mdash; <span class="dc-title">检测变量是否是数组</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-seealsp" id="refsect1-function.is-array-unknown-seealsp">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_array</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      如果 <span class="parameter" style="color:#2EACF9">var</span>      是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <p class="para">      参见       <span class="function">{@link is_float()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_integer()}</span>、<span class="function">{@link is_string()}</span>      和 <span class="function">{@link is_object()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is an array, */
function is_array ($var) {}

/**
*<div id="function.is-object" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_object</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_object</span> &mdash; <span class="dc-title">检测变量是否是一个对象</span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-unknown-seealss" id="refsect1-function.is-object-unknown-unknown-unknown-unknown-seealss">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_object</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      如果 <span class="parameter" style="color:#2EACF9">var</span> 是一个 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <p class="para">      参见      <span class="function">{@link is_bool()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_integer()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_string()}</span>      和 <span class="function">{@link is_array()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is an object, */
function is_object ($var) {}

/**
*<div id="function.is-scalar" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_scalar</h1>     <p class="verinfo">(PHP 4 &gt;= 4.0.5, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_scalar</span> &mdash; <span class="dc-title">      检测变量是否是一个标量     </span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 unknown-unknown-unknown-unknown-unknown-unknown-unknown-seealsv" id="refsect1-function.is-scalar-unknown-unknown-unknown-unknown-unknown-unknown-unknown-seealsv">     <h3 class="title">描述</h3>      <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">       <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_scalar</strong></span>        ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$var</span></span>       )</div>      <p class="para rdfs-comment">      如果给出的变量参数 <span class="parameter" style="color:#2EACF9">var</span> 是一个标量，<span class="function"><strong style="color:#CC7832">is_scalar()</strong></span>      返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。     </p>     <p class="para">      标量变量是指那些包含了      <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span>、<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>、<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>       或 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean" style="color:#EAB766">boolean</a></span>的变量，而       <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>、<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 和 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 则不是标量。      <div class="informalexample">       <div class="example-contents">  <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">show_var</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">is_scalar</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$var</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">$pi&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">3.1416</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proteins&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"hemoglobin"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"cytochrome&nbsp;c&nbsp;oxidase"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"ferredoxin"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">show_var</span><span style="color: #007700">(</span><span style="color: #9876AA">$pi</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;打印：3.1416<br /><br /></span><span style="color: #9876AA">show_var</span><span style="color: #007700">(</span><span style="color: #9876AA">$proteins</span><span style="color: #007700">)<br /></span><span style="color: #FF8000">//&nbsp;打印：<br />//&nbsp;array(3)&nbsp;{<br />//&nbsp;&nbsp;&nbsp;[0]=&gt;<br />//&nbsp;&nbsp;&nbsp;string(10)&nbsp;"hemoglobin"<br />//&nbsp;&nbsp;&nbsp;[1]=&gt;<br />//&nbsp;&nbsp;&nbsp;string(20)&nbsp;"cytochrome&nbsp;c&nbsp;oxidase"<br />//&nbsp;&nbsp;&nbsp;[2]=&gt;<br />//&nbsp;&nbsp;&nbsp;string(10)&nbsp;"ferredoxin"<br />//&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>       </div>       </div>     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:       <p class="para">       尽管当前的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 类型是居于整数的，但        <span class="function"><strong style="color:#CC7832">is_scalar()</strong></span> 不会把它们当作是标量，因为资源是抽象数据类型。不能依赖于执行细节，因为它可能会改变。      </p>     </p></blockquote>     <p class="para">      参见 <span class="function">{@link is_bool()}</span>、<span class="function">{@link is_numeric()}</span>、<span class="function">{@link is_float()}</span>、<span class="function">{@link is_int()}</span>、<span class="function">{@link is_real()}</span>、<span class="function">{@link is_string()}</span>、<span class="function">{@link is_object()}</span>、<span class="function">{@link is_array()}</span>      和 <span class="function">{@link is_integer()}</span>。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool true if var is a scalar false*/
function is_scalar ($var) {}

/**
*<div id="function.is-callable" class="refentry">    <div class="refnamediv">     <h1 class="refname">is_callable</h1>     <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">is_callable</span> &mdash; <span class="dc-title">      检测参数是否为合法的可调用结构     </span></p>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-callable-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>is_callable</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#2EACF9">$name</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$syntax_only</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$callable_name</span></span>   ]] )</div>    <p class="para rdfs-comment">    验证变量的内容能否作为函数调用。    这可以检查包含有效函数名的变量，或者一个数组，包含了正确编码的对象以及函数名。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-callable-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">name</span></dt>       <dd>        <p class="para">        要检查的回调函数。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">syntax_only</span></dt>       <dd>        <p class="para">        如果设置为 <strong><span>TRUE</span></strong>，这个函数仅仅验证 <span class="parameter" style="color:#2EACF9">name</span> 可能是函数或方法。        它仅仅拒绝非字符，或者未包含能用于回调函数的有效结构。有效的应该包含两个元素，第一个是一个对象或者字符，第二个元素是个字符。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">callable_name</span></dt>       <dd>        <p class="para">        接受“可调用的名称”。下面的例子是“someClass::someMethod”。        注意，尽管 someClass::SomeMethod() 的含义是可调用的静态方法，但例子的情况并不是这样的。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-callable-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果 <span class="parameter" style="color:#2EACF9">name</span> 可调用则返回 <strong><span>TRUE</span></strong>，否则返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-callable-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-6355">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">is_callable()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;&nbsp;How&nbsp;to&nbsp;check&nbsp;a&nbsp;variable&nbsp;to&nbsp;see&nbsp;if&nbsp;it&nbsp;can&nbsp;be&nbsp;called<br />//&nbsp;&nbsp;as&nbsp;a&nbsp;function.<br /><br />//<br />//&nbsp;&nbsp;Simple&nbsp;variable&nbsp;containing&nbsp;a&nbsp;function<br />//<br /><br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">someFunction</span><span style="color: #007700">()&nbsp;<br />{<br />}<br /><br /></span><span style="color: #9876AA">$functionVariable&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'someFunction'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_callable</span><span style="color: #007700">(</span><span style="color: #9876AA">$functionVariable</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">));&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;bool(true)<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;someFunction<br /><br />//<br />//&nbsp;&nbsp;Array&nbsp;containing&nbsp;a&nbsp;method<br />//<br /><br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">someClass&nbsp;</span><span style="color: #007700">{<br /><br />&nbsp;&nbsp;function&nbsp;</span><span style="color: #9876AA">someMethod</span><span style="color: #007700">()&nbsp;<br />&nbsp;&nbsp;{<br />&nbsp;&nbsp;}<br /><br />}<br /><br /></span><span style="color: #9876AA">$anObject&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">someClass</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$methodVariable&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">$anObject</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'someMethod'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_callable</span><span style="color: #007700">(</span><span style="color: #9876AA">$methodVariable</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">));&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;&nbsp;bool(true)<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;&nbsp;someClass::someMethod<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>      </span>     </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-callable-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link function_exists()} - 如果给定的函数已经被定义就返回 TRUE</span></li>     <li class="member"><span class="function">{@link method_exists()} - 检查类的方法是否存在</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.var.php">Variable handling 函数</a></div></div>
 * @return bool <b>TRUE</b> if $var is callable, <b>FALSE</b>*/
function is_callable ($var, $syntax_only = null, &$callable_name = null) {}

/**
*<div id="function.pclose" class="refentry">  <div class="refnamediv">   <h1 class="refname">pclose</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">pclose</span> &mdash; <span class="dc-title">关闭进程文件指针</span></p>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.pclose-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>pclose</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    关闭用    <span class="function">{@link popen()}</span> 打开的指向管道的文件指针。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.pclose-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        文件指针必须有效，且必须是成功调用    <span class="function">{@link popen()}</span> 所返回的。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.pclose-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回运行的进程的终止状态。发生错误时会返回 <em>-1</em>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.pclose-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2828">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">pclose()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">popen</span><span style="color: #007700">(</span><span style="color: #DD0000">'/bin/ls'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">pclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.pclose-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <strong>Unix Only:</strong><br />    <p class="para">     <span class="function">{@link proc_close()}</span> is internally implemented using the      <em>waitpid(3)</em> system call. To obtain the real exit      status code the <span class="function">{@link pcntl_wexitstatus()}</span> function      should be used.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.pclose-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return int the termination status of the process that was run. In case of an error then -1 is returned.*/
function pclose ($handle) {}

/**
*<div id="function.popen" class="refentry">  <div class="refnamediv">   <h1 class="refname">popen</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">popen</span> &mdash; <span class="dc-title">打开进程文件指针</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.popen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>popen</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$command</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    )</div>    <p class="para rdfs-comment">    打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.popen-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">command</span></dt>       <dd>        <p class="para">        命令。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">mode</span></dt>       <dd>        <p class="para">        模式。       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.popen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个和 <span class="function">{@link fopen()}</span>    所返回的相同的文件指针，只不过它是单向的（只能用于读或写）并且必须用    <span class="function">{@link pclose()}</span> 来关闭。此指针可以用于    <span class="function">{@link fgets()}</span>，<span class="function">{@link fgetss()}</span> 和    <span class="function">{@link fwrite()}</span>。    当模式为 &#039;r&#039;，返回的文件指针等于命令的 STDOUT，当模式为 &#039;w&#039;，返回的文件指针等于命令的 STDIN。   </p>   <p class="para">    如果出错返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.popen-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2829">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">popen()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">popen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/bin/ls"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">   如果未找到要执行的命令，会返回一个合法的资源。这看上去很怪，但有道理。它允许访问     shell 返回的任何错误信息：    <div class="example" id="example-2830">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">popen()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;加入重定向以得到标准错误输出&nbsp;stderr。&nbsp;<br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">popen</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/executable&nbsp;2&gt;&amp;1'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"'</span><span style="color: #9876AA">$handle</span><span style="color: #DD0000">';&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">gettype</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$read&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2096</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$read</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">pclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.popen-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果需要双向支持，使用 <span class="function">{@link proc_open()}</span>。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara"><a href="http://php.net/manual/zh/features.safe-mode.php" class="link">安全模式</a> 启用时，可仅可用 <a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode-exec-dir" class="link">safe_mode_exec_dir</a> 执行文件。实际上，现在不允许在到可执行的路径中存在 <em>..</em> 组件。</span></p></blockquote>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara"><a href="http://php.net/manual/zh/features.safe-mode.php" class="link">安全模式</a> 启用时，命令字符串会被 <span class="function">{@link escapeshellcmd()}</span> 转换。因此，<em>echo y | echo x</em> 会变成 <em>echo y \| echo x</em>。</p></div>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.popen-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link pclose()} - 关闭进程文件指针</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link proc_open()} - 执行一个命令，并且打开用来输入/输出的文件指针。</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|resource a file pointer identical to that returned by*/
function popen ($command, $mode) {}

/**
*<div id="function.readfile" class="refentry">  <div class="refnamediv">   <h1 class="refname">readfile</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">readfile</span> &mdash; <span class="dc-title">输出文件</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.readfile-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>readfile</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$use_include_path</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ]] )</div>    <p class="para rdfs-comment">    读取文件并写入到输出缓冲。   </p> </div>       <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.readfile-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        要读取的文件名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">use_include_path</span></dt>       <dd>        <p class="para">        想要在    <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>    中搜索文件，可使用这个可选的第二个参数，设为 <strong><span>TRUE</span></strong>。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <p class="para">        Stream 上下文（context） <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.readfile-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回从文件中读入的字节数。如果出错返回    <strong><span>FALSE</span></strong> 并且除非是以    @<span class="function"><strong style="color:#CC7832">readfile()</strong></span> 形式调用，否则会显示错误信息。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.readfile-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2831">     <p><strong>Example #1 使用 <span class="function"><strong style="color:#CC7832">readfile()</strong></span> 强制下载</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'monkey.gif'</span><span style="color: #007700">;<br /><br />if&nbsp;(</span><span style="color: #9876AA">file_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Description:&nbsp;File&nbsp;Transfer'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Type:&nbsp;application/octet-stream'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Disposition:&nbsp;attachment;&nbsp;filename="'</span><span style="color: #007700">.</span><span style="color: #9876AA">basename</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">).</span><span style="color: #DD0000">'"'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Expires:&nbsp;0'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Cache-Control:&nbsp;must-revalidate'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pragma:&nbsp;public'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Length:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="mediaobject">            <div class="imageobject">       <img src="images/e88cefb5c3fca5060e2490b9763c4433-readfile.png" alt="打开 / 保存对话框" width="319" height="245" />      </div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.readfile-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">readfile()</strong></span> 自身不会导致任何内存问题。     如果出现内存不足的错误，使用 <span class="function">{@link ob_get_level()}</span> 确保输出缓存已经关闭。    </p>   </p></blockquote>      <div class="tip"><strong class="tip">Tip</strong><p class="simpara">如已启用<a href="http://php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种 wapper 的不同功能请参见 <a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在 PHP 5.0.0 中增加了对上下文（Context）的支持。有关<em>上下文（Context）</em>的说明参见 <a href="http://php.net/manual/zh/book.stream.php" class="xref">Streams</a>。</span></p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.readfile-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fpassthru()} - 输出文件指针处的所有剩余数据</span></li>     <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link include} - include</span></li>     <li class="member"><span class="function">{@link require} - require</span></li>     <li class="member"><span class="function">{@link virtual()} - 执行 Apache 子请求</span></li>     <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>     <li class="member"><a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return false|int the number of bytes read from the file. If an error*/
function readfile ($filename, $use_include_path = null, $context = null) {}

/**
*<div id="function.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">rewind</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">rewind</span> &mdash; <span class="dc-title">倒回文件指针的位置</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>rewind</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    将 <span class="parameter" style="color:#2EACF9">handle</span> 的文件位置指针设为文件流的开头。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果将文件以附加（&quot;a&quot; 或者 &quot;a+&quot;）模式打开，写入文件的任何数据总是会被附加在后面，不管文件指针的位置。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rewind-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        文件指针必须合法，并且指向由 <span class="function">{@link fopen()}</span>    成功打开的文件。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.rewind-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2838">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">rewind()</strong></span> overwriting example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Really&nbsp;long&nbsp;sentence.'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Foolly long sentence. </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.rewind-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>     <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function rewind ($handle) {}

/**
*<div id="function.rmdir" class="refentry">  <div class="refnamediv">   <h1 class="refname">rmdir</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">rmdir</span> &mdash; <span class="dc-title">删除目录</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rmdir-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>rmdir</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$dirname</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ] )</div>    <p class="para rdfs-comment">    尝试删除 <span class="parameter" style="color:#2EACF9">dirname</span> 所指定的目录。    该目录必须是空的，而且要有相应的权限。    失败时会产生一个 <strong><span>E_WARNING</span></strong> 级别的错误。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rmdir-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">dirname</span></dt>       <dd>        <p class="para">        目录的路径。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在 PHP 5.0.0 中增加了对上下文（Context）的支持。有关<em>上下文（Context）</em>的说明参见 <a href="http://php.net/manual/zh/book.stream.php" class="xref">Streams</a>。</span></p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rmdir-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.rmdir-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.0.0</td>        <td>         自 PHP 5.0.0 起 <span class="function"><strong style="color:#CC7832">rmdir()</strong></span> 也可用于<em class="emphasis">某些</em>     URL 封装协议。参见<a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>     的列表看看 <span class="function"><strong style="color:#CC7832">rmdir()</strong></span> 支持哪些 URL 封装协议。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.rmdir-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2839">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">rmdir()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">mkdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">rmdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.rmdir-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">当启用 <a href="http://php.net/manual/zh/features.safe-mode.php" class="link">安全模式</a>时， PHP 会在执行脚本时检查被脚本操作的目录是否与被执行的脚本有相同的 UID（所有者）。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.rmdir-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>     <li class="member"><span class="function">{@link mkdir()} - 新建目录</span></li>     <li class="member"><span class="function">{@link unlink()} - 删除文件</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function rmdir ($dirname, $context = null) {}

/**
*<div id="function.umask" class="refentry">  <div class="refnamediv">   <h1 class="refname">umask</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">umask</span> &mdash; <span class="dc-title">改变当前的 umask</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.umask-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>umask</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mask</span></span>   ] )</div>    <p class="para rdfs-comment">  <span class="function"><strong style="color:#CC7832">umask()</strong></span> 将 PHP 的 umask 设定为    <span class="parameter" style="color:#2EACF9">mask</span> &amp; 0777 并返回原来的    umask。当 PHP 被作为服务器模块使用时，在每个请求结束后 umask    会被恢复。   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.umask-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">mask</span></dt>       <dd>        <p class="para">        The new umask.       </p>      </dd>          </dl>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.umask-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    无参数调用 <span class="function"><strong style="color:#CC7832">umask()</strong></span> 会返回当前的 umask，有参数则返回原来的 umask。   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.umask-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2847">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">umask()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$old&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">umask</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/some_dir/some_file.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0755</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">umask</span><span style="color: #007700">(</span><span style="color: #9876AA">$old</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Checking<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">$old&nbsp;</span><span style="color: #007700">!=&nbsp;</span><span style="color: #9876AA">umask</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">'An&nbsp;error&nbsp;occured&nbsp;while&nbsp;changing&nbsp;back&nbsp;the&nbsp;umask'</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.umask-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     在多线程的服务器上尽量避免使用这个函数。创建文件后要改变其权限最好还是使用     <span class="function">{@link chmod()}</span>。使用 <span class="function"><strong style="color:#CC7832">umask()</strong></span>     会导致并发程序和服务器发生不可预知的情况，因为它们是使用相同的 umask 的。    </p>   </p></blockquote>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return int umask without arguments simply returns the*/
function umask ($mask = null) {}

/**
*<div id="function.fclose" class="refentry">  <div class="refnamediv">   <h1 class="refname">fclose</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fclose</span> &mdash; <span class="dc-title">关闭一个已打开的文件指针</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fclose-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>fclose</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    将 <span class="parameter" style="color:#2EACF9">handle</span> 指向的文件关闭。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fclose-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">       文件指针必须有效，并且是通过    <span class="function">{@link fopen()}</span> 或    <span class="function">{@link fsockopen()}</span> 成功打开的。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fclose-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fclose-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2765">     <p><strong>Example #1 一个简单 <span class="function"><strong style="color:#CC7832">fclose()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fclose-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function fclose ($handle) {}

/**
*<div id="function.feof" class="refentry">  <div class="refnamediv">   <h1 class="refname">feof</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">feof</span> &mdash; <span class="dc-title">测试文件指针是否到了文件结束的位置</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.feof-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>feof</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    测试文件指针是否到了文件结束的位。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.feof-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.feof-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果文件指针到了 EOF 或者出错时则返回 <strong><span>TRUE</span></strong>，否则返回一个错误（包括 socket    超时），其它情况则返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.feof-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">         如果服务器没有关闭由 <span class="function">{@link fsockopen()}</span> 所打开的连接，<span class="function"><strong style="color:#CC7832">feof()</strong></span>     会一直等待直到超时。要解决这个问题可参见以下范例：     <div class="example" id="example-2766">      <p><strong>Example #1 处理 <span class="function"><strong style="color:#CC7832">feof()</strong></span> 的超时</strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">safe_feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;&amp;</span><span style="color: #9876AA">$start&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">)&nbsp;{<br />&nbsp;</span><span style="color: #9876AA">$start&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />&nbsp;return&nbsp;</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;$fp&nbsp;的赋值是由之前&nbsp;fsockopen()&nbsp;打开&nbsp;&nbsp;<br /><br /></span><span style="color: #9876AA">$start&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$timeout&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'default_socket_timeout'</span><span style="color: #007700">);<br /><br />while(!</span><span style="color: #9876AA">safe_feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$start</span><span style="color: #007700">)&nbsp;&amp;&amp;&nbsp;(</span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">)&nbsp;-&nbsp;</span><span style="color: #9876AA">$start</span><span style="color: #007700">)&nbsp;&lt;&nbsp;</span><span style="color: #9876AA">$timeout</span><span style="color: #007700">)<br />{<br />&nbsp;</span><span style="color: #FF8000">//&nbsp;Handle&nbsp;<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>      </div>    </p>   </div>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     如果传递的文件指针无效可能会陷入无限循环中，因为 <span class="function"><strong style="color:#CC7832">feof()</strong></span> 不会返回 <strong><span>TRUE</span></strong>。     <div class="example" id="example-2767">      <p><strong>Example #2 使用无效文件指针的 <span class="function"><strong style="color:#CC7832">feof()</strong></span> 例子 </strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;如果文件不可读取或者不存在，fopen&nbsp;函数返回&nbsp;FALSE<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;@</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"no_such_file"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;来自&nbsp;fopen&nbsp;的&nbsp;FALSE&nbsp;会发出一条警告信息并在这里陷入无限循环<br /></span><span style="color: #007700">while&nbsp;(!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">))&nbsp;{<br />}<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>      </div>    </p>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true if the file pointer is at EOF or an error occurs*/
function feof ($handle) {}

/**
*<div id="function.fgetc" class="refentry">  <div class="refnamediv">   <h1 class="refname">fgetc</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fgetc</span> &mdash; <span class="dc-title">从文件指针中读取字符</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgetc-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>fgetc</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    从文件句柄中获取一个字符。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgetc-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgetc-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     返回一个包含有一个字符的字符串，该字符从 <span class="parameter" style="color:#2EACF9">handle</span> 指向的文件中得到。    碰到 EOF 则返回 <strong><span>FALSE</span></strong>。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><span>FALSE</span></strong>，但也可能返回等同于 <strong><span>FALSE</span></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgetc-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2769">     <p><strong>Example #1 一个 <span class="function"><strong style="color:#CC7832">fgetc()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Could&nbsp;not&nbsp;open&nbsp;file&nbsp;somefile.txt'</span><span style="color: #007700">;<br />}<br />while&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">!==&nbsp;(</span><span style="color: #9876AA">$char&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgetc</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$char</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgetc-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgetc-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|string a string containing a single character read from the file pointed*/
function fgetc ($handle) {}

/**
*<div id="function.fgets" class="refentry">  <div class="refnamediv">   <h1 class="refname">fgets</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fgets</span> &mdash; <span class="dc-title">从文件指针中读取一行</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgets-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>fgets</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>   ] )</div>    <p class="para rdfs-comment">    从文件指针中读取一行。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgets-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        从 <span class="parameter" style="color:#2EACF9">handle</span>    指向的文件中读取一行并返回长度最多为 <span class="parameter" style="color:#2EACF9">length</span> - 1    字节的字符串。碰到换行符（包括在返回值中）、EOF 或者已经读取了 length - 1    字节后停止（看先碰到那一种情况）。如果没有指定    <span class="parameter" style="color:#2EACF9">length</span>，则默认为 1K，或者说 1024 字节。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">        从 PHP 4.3 开始，忽略掉     length 则行的长度被假定为 1024，将继续从流中读取数据直到行结束。如果文件中的大多数行都大于     8KB，则在脚本中指定最大行的长度在利用资源上更为有效。        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgets-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    从指针 <span class="parameter" style="color:#2EACF9">handle</span> 指向的文件中读取了 <span class="parameter" style="color:#2EACF9">length</span> - 1 字节后返回字符串。     如果文件指针中没有更多的数据了则返回 <strong><span>FALSE</span></strong>。   </p>   <p class="para">    错误发生时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fgets-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.0</td>        <td>         <span class="function"><strong style="color:#CC7832">fgets()</strong></span> 开始二进制安全        </td>       </tr>        <tr>        <td>4.2.0</td>        <td>         <span class="parameter" style="color:#2EACF9">length</span> 参数成为可选。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgets-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2771">     <p><strong>Example #1 逐行读取文件</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;@</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/inputfile.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;((</span><span style="color: #9876AA">$buffer&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">4096</span><span style="color: #007700">))&nbsp;!==&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$buffer</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Error:&nbsp;unexpected&nbsp;fgets()&nbsp;fail\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgets-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP 不能正确的识别行结束符，启用运行时配置可选项 <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a> 也许可以解决此问题。</span></p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     习惯了 C 语言中 <span class="function"><strong style="color:#CC7832">fgets()</strong></span> 语法的人应该注意到 <em>EOF</em>    是怎样被返回的。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgets-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fgetc()} - 从文件指针中读取字符</span></li>     <li class="member"><span class="function">{@link stream_get_line()} - 从资源流里读取一行直到给定的定界符</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>     <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|string a string of up to length - 1 bytes read from*/
function fgets ($handle, $length = null) {}

/**
*<div id="function.fgetss" class="refentry">  <div class="refnamediv">   <h1 class="refname">fgetss</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fgetss</span> &mdash; <span class="dc-title">从文件指针中读取一行并过滤掉 HTML 标记</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgetss-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>fgetss</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$allowable_tags</span></span>   ]] )</div>    <p class="para rdfs-comment">    和 <span class="function">{@link fgets()}</span> 相同，只除了 <span class="function"><strong style="color:#CC7832">fgetss()</strong></span> 尝试从读取的文本中去掉任何 HTML 和 PHP 标记。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgetss-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        取回该长度的数据。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">allowable_tags</span></dt>       <dd>        <p class="para">        可以用可选的第三个参数指定哪些标记不被去掉。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgetss-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    从 <span class="parameter" style="color:#2EACF9">handle</span> 指向的文件中大读取 <span class="parameter" style="color:#2EACF9">length</span> - 1 个字节的字符，并过滤了所有的 HTML 和 PHP 代码。   </p>   <p class="para">    错误发生时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fgetss-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.0.0</td>        <td>          参数 <span class="parameter" style="color:#2EACF9">length</span> 从 此开始可选。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgetss-examples">   <span>    <div class="example" id="example-2772">     <p><strong>Example #1 一行行读取一个 PHP 文件</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;&lt;&lt;&lt;EOD<br /></span><span style="color: #DD0000">&lt;html&gt;&lt;body&gt;<br />&nbsp;&lt;p&gt;Welcome!&nbsp;Today&nbsp;is&nbsp;the&nbsp;&lt;?php&nbsp;echo(date('jS'));&nbsp;?&gt;&nbsp;of&nbsp;&lt;?=&nbsp;date('F');&nbsp;?&gt;.&lt;/p&gt;<br />&lt;/body&gt;&lt;/html&gt;<br />Text&nbsp;outside&nbsp;of&nbsp;the&nbsp;HTML&nbsp;block.<br /></span><span style="color: #007700">EOD;<br /></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'sample.php'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;@</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.php"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$buffer&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgetss</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">4096</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$buffer</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span>  Welcome! Today is the  of .  Text outside of the HTML block. </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgetss-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP 不能正确的识别行结束符，启用运行时配置可选项 <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a> 也许可以解决此问题。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgetss-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>     <li class="member"><span class="function">{@link strip_tags()} - 从字符串中去除 HTML 和 PHP 标记</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|string a string of up to length - 1 bytes read from*/
function fgetss ($handle, $length = null, $allowable_tags = null) {}

/**
*<div id="function.fread" class="refentry">  <div class="refnamediv">   <h1 class="refname">fread</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fread</span> &mdash; <span class="dc-title">读取文件（可安全用于二进制文件）</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fread-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>fread</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">fread()</strong></span> 从文件指针    <span class="parameter" style="color:#2EACF9">handle</span> 读取最多    <span class="parameter" style="color:#2EACF9">length</span> 个字节。        该函数在遇上以下几种情况时停止读取文件：    <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       读取了 <span class="parameter" style="color:#2EACF9">length</span> 个字节      </span>     </li>     <li class="listitem">      <span class="simpara">       到达了文件末尾（EOF）      </span>     </li>     <li class="listitem">      <span class="simpara">       a packet becomes available or the {@link        socket timeout} occurs (for network streams)      </span>     </li>     <li class="listitem">      <span class="simpara">       if the stream is read buffered and it does not represent a plain file, at       most one read of up to a number of bytes equal to the chunk size (usually       8192) is made; depending on the previously buffered data, the size of the       returned data may be larger than the chunk size.      </span>     </li>    </ul>   </p>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fread-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件系统指针，是典型地由 <span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>(资源)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        最多读取 <span class="parameter" style="color:#2EACF9">length</span> 个字节。       </p>      </dd>          </dl>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fread-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回所读取的字符串， 或者在失败时返回 <strong><span>FALSE</span></strong>。    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fread-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2797">     <p><strong>Example #1 一个简单的 <span class="function"><strong style="color:#CC7832">fread()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;get&nbsp;contents&nbsp;of&nbsp;a&nbsp;file&nbsp;into&nbsp;a&nbsp;string<br /></span><span style="color: #9876AA">$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"/usr/local/something.txt"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    <div class="example" id="example-2798">     <p><strong>Example #2 Binary <span class="function"><strong style="color:#CC7832">fread()</strong></span> example</strong></p>     <div class="warning"><strong class="warning">Warning</strong>      <p class="para">      在区分二进制文件和文本文件的系统上（如     Windows）打开文件时，<span class="function">{@link fopen()}</span> 函数的 mode 参数要加上 &#039;b&#039;。      </p>     </div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"c:\\files\\somepic.gif"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2799">     <p><strong>Example #3 Remote <span class="function"><strong style="color:#CC7832">fread()</strong></span> examples</strong></p>     <div class="warning"><strong class="warning">Warning</strong>      <p class="para">       当从任何不是普通本地文件读取时，例如在读取从<a href="http://php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>或     <span class="function">{@link popen()}</span> 以及 <span class="function">{@link fsockopen()}</span>     返回的流时，读取会在一个包可用之后停止。这意味着应该如下例所示将数据收集起来合并成大块。      </p>     </div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;对&nbsp;PHP&nbsp;5&nbsp;及更高版本<br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />while&nbsp;(!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$contents&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8192</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fread-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果只是想将一个文件的内容读入到一个字符串中，用     <span class="function">{@link file_get_contents()}</span>，它的性能比上面的代码好得多。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Note that <span class="function"><strong style="color:#CC7832">fread()</strong></span> reads from the current position of      the file pointer. Use <span class="function">{@link ftell()}</span> to find the current      position of the pointer and <span class="function">{@link rewind()}</span> to rewind the      pointer position.    </p>   </p></blockquote>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fread-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>     <li class="member"><span class="function">{@link fscanf()} - 从文件中格式化输入</span></li>     <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>     <li class="member"><span class="function">{@link fpassthru()} - 输出文件指针处的所有剩余数据</span></li>     <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>     <li class="member"><span class="function">{@link rewind()} - 倒回文件指针的位置</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return string|bool the read string or false on failure.*/
function fread ($handle, $length) {}

/**
*<div id="function.fopen" class="refentry">  <div class="refnamediv">   <h1 class="refname">fopen</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fopen</span> &mdash; <span class="dc-title">打开文件或者 URL</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fopen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>fopen</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$mode</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$use_include_path</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 将    <span class="parameter" style="color:#2EACF9">filename</span>    指定的名字资源绑定到一个流上。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fopen-parameters">   <h3 class="title">参数</h3>    <span>     <dl>              <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>        <dd>         <p class="para">         如果         <span class="parameter" style="color:#2EACF9">filename</span>         是 &quot;scheme://...&quot; 的格式，则被当成一个         URL，PHP 将搜索协议处理器（也被称为封装协议）来处理此模式。如果该协议尚未注册封装协议，PHP         将发出一条消息来帮助检查脚本中潜在的问题并将         <span class="parameter" style="color:#2EACF9">filename</span>         当成一个普通的文件名继续执行下去。        </p>        <p class="para">         如果 PHP 认为         <span class="parameter" style="color:#2EACF9">filename</span>         指定的是一个本地文件，将尝试在该文件上打开一个流。该文件必须是         PHP 可以访问的，因此需要确认文件访问权限允许该访问。如果激活了<a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode" class="link">安全模式</a>或者         <a href="http://php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a>         则会应用进一步的限制。        </p>        <p class="para">         如果 PHP 认为         <span class="parameter" style="color:#2EACF9">filename</span>         指定的是一个已注册的协议，而该协议被注册为一个网络         URL，PHP 将检查并确认         <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">allow_url_fopen</a>         已被激活。如果关闭了，PHP 将发出一个警告，而 fopen 的调用则失败。        </p>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:          <p class="para">          所支持的协议列表见<a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>。某些协议（也被称为          <em>wrappers</em>）支持          <em>context</em> 和／或 <var class="filename">php.ini</var>          选项。参见相应的页面哪些选项可以被设定（例如 <var class="filename">php.ini</var> 中用于          <em>http</em> wrapper 的 <em>user_agent</em> 值）。         </p>        </p></blockquote>        <p class="para">         On the Windows platform, be careful to escape any backslashes         used in the path to the file, or use forward slashes.         <div class="informalexample">          <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"c:\\folder\\resource.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>         </div>         </div>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">mode</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">mode</span>        参数指定了所要求到该流的访问类型。可以是以下：        <table class="doctable table">         <caption><strong>          <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 中 <span class="parameter" style="color:#2EACF9">mode</span> 的可能值列表         </strong></caption>                   <thead>           <tr>            <th><span class="parameter" style="color:#2EACF9">mode</span></th>            <th>说明</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><em>&#039;r&#039;</em></td>            <td>             只读方式打开，将文件指针指向文件头。            </td>           </tr>            <tr>            <td><em>&#039;r+&#039;</em></td>            <td>             读写方式打开，将文件指针指向文件头。            </td>           </tr>            <tr>            <td><em>&#039;w&#039;</em></td>            <td>             写入方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。            </td>           </tr>            <tr>            <td><em>&#039;w+&#039;</em></td>            <td>             读写方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。            </td>           </tr>            <tr>            <td><em>&#039;a&#039;</em></td>            <td>             写入方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。            </td>           </tr>            <tr>            <td><em>&#039;a+&#039;</em></td>            <td>             读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。            </td>           </tr>            <tr>            <td><em>&#039;x&#039;</em></td>            <td>             创建并以写入方式打开，将文件指针指向文件头。如果文件已存在，则             <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 调用失败并返回 <strong><span>FALSE</span></strong>，并生成一条             <strong><span>E_WARNING</span></strong> 级别的错误信息。如果文件不存在则尝试创建之。这和给             底层的 <em>open(2)</em> 系统调用指定             <em>O_EXCL|O_CREAT</em> 标记是等价的。            </td>           </tr>            <tr>            <td><em>&#039;x+&#039;</em></td>            <td>             创建并以读写方式打开，其他的行为和 <em>&#039;x&#039;</em> 一样。            </td>           </tr>            <tr>            <td><em>&#039;c&#039;</em></td>            <td>             Open the file for writing only. If the file does not exist, it is             created. If it exists, it is neither truncated (as opposed to             <em>&#039;w&#039;</em>), nor the call to this function fails (as is             the case with <em>&#039;x&#039;</em>). The file pointer is             positioned on the beginning of the file. This may be useful if it&#039;s             desired to get an advisory lock (see <span class="function">{@link flock()}</span>)             before attempting to modify the file, as using             <em>&#039;w&#039;</em> could truncate the file before the lock             was obtained (if truncation is desired,             <span class="function">{@link ftruncate()}</span> can be used after the lock is             requested).            </td>           </tr>            <tr>            <td><em>&#039;c+&#039;</em></td>            <td>             Open the file for reading and writing; otherwise it has the same             behavior as <em>&#039;c&#039;</em>.            </td>           </tr>           </tbody>                 </table>        </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         不同的操作系统家族具有不同的行结束习惯。当写入一个文本文件并想插入一个新行时，需要使用符合操作系统的行结束符号。基于         Unix 的系统使用 <em>\n</em>         作为行结束字符，基于 Windows 的系统使用 <em>\r\n</em>         作为行结束字符，基于 Macintosh 的系统使用 <em>\r</em>         作为行结束字符。        </p>        <p class="para">         如果写入文件时使用了错误的行结束符号，则其它应用程序打开这些文件时可能会表现得很怪异。                 </p>        <p class="para">         Windows 下提供了一个文本转换标记（<em>&#039;t&#039;</em>）可以透明地将         <em>\n</em> 转换为 <em>\r\n</em>。与此对应还可以使用         <em>&#039;b&#039;</em> 来强制使用二进制模式，这样就不会转换数据。要使用这些标记，要么用         <em>&#039;b&#039;</em> 或者用 <em>&#039;t&#039;</em> 作为         <span class="parameter" style="color:#2EACF9">mode</span> 参数的最后一个字符。        </p>        <p class="para">         默认的转换模式依赖于 SAPI 和所使用的 PHP         版本，因此为了便于移植鼓励总是指定恰当的标记。如果是操作纯文本文件并在脚本中使用了         <em>\n</em> 作为行结束符，但还要期望这些文件可以被其它应用程序例如         Notepad 读取，则在 mode 中使用         <em>&#039;t&#039;</em>。在所有其它情况下使用 <em>&#039;b&#039;</em>。        </p>        <p class="para">         在操作二进制文件时如果没有指定 <em>&#039;b&#039;</em>         标记，可能会碰到一些奇怪的问题，包括坏掉的图片文件以及关于         <em>\r\n</em> 字符的奇怪问题。        </p>       </p></blockquote>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         为移植性考虑，强烈建议在用 <span class="function"><strong style="color:#CC7832">fopen()</strong></span>         打开文件时总是使用 <em>&#039;b&#039;</em> 标记。        </p>       </p></blockquote>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         再一次，为移植性考虑，强烈建议你重写那些依赖于         <em>&#039;t&#039;</em> 模式的代码使其使用正确的行结束符并改成         <em>&#039;b&#039;</em> 模式。        </p>       </p></blockquote>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">use_include_path</span></dt>       <dd>        <p class="para">        如果也需要在        <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>        中搜寻文件的话，可以将可选的第三个参数        <span class="parameter" style="color:#2EACF9">use_include_path</span>        设为 &#039;1&#039; 或 <strong><span>TRUE</span></strong>。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在 PHP 5.0.0 中增加了对上下文（Context）的支持。有关<em>上下文（Context）</em>的说明参见 <a href="http://php.net/manual/zh/book.stream.php" class="xref">Streams</a>。</span></p></blockquote>      </dd>          </dl>     </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fopen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回文件指针资源，如果打开失败，本函数返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fopen-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果打开失败，会产生一个 <strong><span>E_WARNING</span></strong> 错误。可以通过 <a href="http://php.net/manual/zh/language.operators.errorcontrol.php" class="link">@</a> 来屏蔽错误。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fopen-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.2</td>        <td>         自 PHP 4.3.2         起，对所有区别二进制和文本模式的平台默认模式都被设为二进制模式。如果在升级后脚本碰到问题，尝试暂时使用         <em>&#039;t&#039;</em> 标记，直到所有的脚本都照以下所说的改为更具移植性以后。        </td>       </tr>        <tr>        <td>4.3.2</td>        <td>         增加了选项 <em>&#039;x&#039;</em> 和 <em>&#039;x+&#039;</em>        </td>       </tr>        <tr>        <td>5.2.6</td>        <td>         增加了选项 <em>&#039;c&#039;</em> 和 <em>&#039;c+&#039;</em>        </td>       </tr>       </tbody>         </table>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fopen-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2794">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/home/rasmus/file.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/home/rasmus/file.gif"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"wb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"ftp://user:password@example.com/somefile.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fopen-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong><p class="para">使用 SSL 时，Microsoft IIS 会违反协议不发送<em>close_notify</em>标记就关闭连接。PHP 会在到达数据尾端时报告“SSL: Fatal Protocol Error”。 要解决此问题，<a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">error_reporting</a> 应设定为降低级别至不包含警告。 PHP 4.3.7 及更高版本可以在使用 <em>https://</em> 包装器打开流时检测出有问题的 IIS 服务器软件 并抑制警告。在使用 <span class="function">{@link fsockopen()}</span> 创建 <em>ssl://</em> 套接字时, 开发者需检测并抑制此警告。</p></div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">当启用 <a href="http://php.net/manual/zh/features.safe-mode.php" class="link">安全模式</a>时， PHP 会在执行脚本时检查被脚本操作的目录是否与被执行的脚本有相同的 UID（所有者）。</span></p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果在用服务器模块版本的 PHP     时在打开和写入文件上遇到问题，记住要确保所使用的文件和目录是服务器进程所能够访问的。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     This function may also succeed when <span class="parameter" style="color:#2EACF9">filename</span> is a     directory. If you are unsure whether <span class="parameter" style="color:#2EACF9">filename</span> is a     file or a directory, you may need to use the <span class="function">{@link is_dir()}</span>     function before calling <span class="function"><strong style="color:#CC7832">fopen()</strong></span>.      </p>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fopen-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a></li>     <li class="member"><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>     <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>     <li class="member"><span class="function">{@link file_exists()} - 检查文件或目录是否存在</span></li>     <li class="member"><span class="function">{@link is_readable()} - 判断给定文件名是否可读</span></li>     <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>     <li class="member"><span class="function">{@link umask()} - 改变当前的 umask</span></li>     <li class="member"><a href="http://php.net/manual/zh/class.splfileobject.php" class="classname">SplFileObject</a></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|resource a file pointer resource on success, or false on error.*/
function fopen ($filename, $mode, $use_include_path = null, $context = null) {}

/**
*<div id="function.fpassthru" class="refentry">  <div class="refnamediv">   <h1 class="refname">fpassthru</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fpassthru</span> &mdash; <span class="dc-title">输出文件指针处的所有剩余数据</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fpassthru-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>fpassthru</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>       <p class="para rdfs-comment">    将给定的文件指针从当前的位置读取到 EOF 并把结果写到输出缓冲区。   </p>      <p class="para">    如果已经向文件写入数据，就必须调用 <span class="function">{@link rewind()}</span>    来将文件指针指向文件头。   </p>   <p class="para">    如果既不修改文件也不在特定位置检索，只想将文件的内容下载到输出缓冲区，应该使用    <span class="function">{@link readfile()}</span>，这样可以省去    <span class="function">{@link fopen()}</span> 调用。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fpassthru-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fpassthru-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果发生错误， <span class="function"><strong style="color:#CC7832">fpassthru()</strong></span> 返回 <strong><span>FALSE</span></strong>。否则    <span class="function"><strong style="color:#CC7832">fpassthru()</strong></span> 返回从 <span class="parameter" style="color:#2EACF9">handle</span>    读取并传递到输出的字符数目。   </p>  </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fpassthru-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2795">     <p><strong>Example #1 对二进制文件使用 <span class="function"><strong style="color:#CC7832">fpassthru()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;以二进制格式打开文件<br /></span><span style="color: #9876AA">$name&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'./img/ok.png'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'rb'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;发送合适的报头<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type:&nbsp;image/png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Length:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;发送图片并终止脚本<br /></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />exit;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fpassthru-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     当在 Windows     系统中将 <span class="function"><strong style="color:#CC7832">fpassthru()</strong></span>     用于二进制文件，要确保在用     <span class="function">{@link fopen()}</span>     打开文件时在 mode 中附加了     <em>b</em> 来将文件以二进制方式打开。    </p>    <p class="para">     鼓励在处理二进制文件时使用     <em>b</em>     标志，即使系统并不需要，这样可以使脚本的移植性更好。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fpassthru-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link readfile()} - 输出文件</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|int If an error occurs, fpassthru returns*/
function fpassthru ($handle) {}

/**
*<div id="function.ftruncate" class="refentry">  <div class="refnamediv">   <h1 class="refname">ftruncate</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ftruncate</span> &mdash; <span class="dc-title">将文件截断到给定的长度</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ftruncate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>ftruncate</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$size</span></span>    )</div>    <p class="para rdfs-comment">    接受文件指针 <span class="parameter" style="color:#2EACF9">handle</span> 作为参数，并将文件大小截取为    <span class="parameter" style="color:#2EACF9">size</span>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ftruncate-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        文件指针。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         The <span class="parameter" style="color:#2EACF9">handle</span> must be open for writing.        </p>       </p></blockquote>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">size</span></dt>       <dd>        <p class="para">        The size to truncate to.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         If <span class="parameter" style="color:#2EACF9">size</span> is larger than the file then the file         is extended with null bytes.        </p>        <p class="para">         If <span class="parameter" style="color:#2EACF9">size</span> is smaller than the file then the file         is truncated to that size.        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ftruncate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.ftruncate-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.3</td>        <td>         在 PHP 4.3.3 之前，<span class="function"><strong style="color:#CC7832">ftruncate()</strong></span> 在成功时返回一个     <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer" style="color:#EAB766">integer</a></span> 值 1，而不是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean" style="color:#EAB766">boolean</a></span> 的 <strong><span>TRUE</span></strong>。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ftruncate-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2805">     <p><strong>Example #1 File truncation example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'lorem_ipsum.txt'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">rand</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.ftruncate-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     The file pointer is <em class="emphasis">not</em> changed.    </p>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ftruncate-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function ftruncate ($handle, $size) {}

/**
*<div id="function.fstat" class="refentry">  <div class="refnamediv">   <h1 class="refname">fstat</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fstat</span> &mdash; <span class="dc-title">通过已打开的文件指针取得文件信息</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fstat-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>fstat</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    获取由文件指针 <span class="parameter" style="color:#2EACF9">handle</span>    所打开文件的统计信息。本函数和 <span class="function">{@link stat()}</span>    函数相似，除了它是作用于已打开的文件指针而不是文件名。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fstat-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件系统指针，是典型地由 <span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>(资源)。</p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fstat-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数组具有该文件的统计信息，该数组的格式详细说明于手册中    <span class="function">{@link stat()}</span> 页面里。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fstat-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2803">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">fstat()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;打开文件<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc/passwd"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;取得统计信息<br /></span><span style="color: #9876AA">$fstat&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fstat</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;关闭文件<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;只显示关联数组部分<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">$fstat</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">13</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> Array (     [dev] =&gt; 771     [ino] =&gt; 488704     [mode] =&gt; 33188     [nlink] =&gt; 1     [uid] =&gt; 0     [gid] =&gt; 0     [rdev] =&gt; 0     [size] =&gt; 1114     [atime] =&gt; 1061067181     [mtime] =&gt; 1056136526     [ctime] =&gt; 1056136526     [blksize] =&gt; 4096     [blocks] =&gt; 8 ) </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fstat-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">此函数不能作用于<a href="http://php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return array an array with the statistics of the file; the format of the array*/
function fstat ($handle) {}

/**
*<div id="function.fseek" class="refentry">  <div class="refnamediv">   <h1 class="refname">fseek</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fseek</span> &mdash; <span class="dc-title">在文件指针中定位</span></p>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fseek-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>fseek</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$offset</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$whence</span><span class="initializer"> = SEEK_SET</span></span>   ] )</div>    <p class="para rdfs-comment">    在与    <span class="parameter" style="color:#2EACF9">handle</span>    关联的文件中设定文件指针位置。    新位置从文件头开始以字节数度量，是以    <span class="parameter" style="color:#2EACF9">whence</span>    指定的位置加上    <span class="parameter" style="color:#2EACF9">offset</span>。   </p>   <p class="para">    In general, it is allowed to seek past the end-of-file; if data is then    written, reads in any unwritten region between the end-of-file and the    sought position will yield bytes with value 0. However, certain streams    may not support this behavior, especially when they have an underlying    fixed size storage.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fseek-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件系统指针，是典型地由 <span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>(资源)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">offset</span></dt>       <dd>        <p class="para">        偏移量。       </p>       <p class="para">        要移动到文件尾之前的位置，需要给     <span class="parameter" style="color:#2EACF9">offset</span> 传递一个负值，并设置 <span class="parameter" style="color:#2EACF9">whence</span>        为 <strong><span>SEEK_END</span></strong>。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">whence</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">whence</span> values are:        <ul class="simplelist">         <li class="member"><strong><span>SEEK_SET</span></strong> - 设定位置等于 <span class="parameter" style="color:#2EACF9">offset</span> 字节。</li>         <li class="member"><strong><span>SEEK_CUR</span></strong> - 设定位置为当前位置加上 <span class="parameter" style="color:#2EACF9">offset</span>。</li>         <li class="member"><strong><span>SEEK_END</span></strong> - 设定位置为文件尾加上     <span class="parameter" style="color:#2EACF9">offset</span>。</li>        </ul>       </p>      </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fseek-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     成功则返回 0；否则返回 -1。注意移动到 EOF 之后的位置不算错误。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fseek-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2802">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">fseek()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;read&nbsp;some&nbsp;data<br /></span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">4096</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;move&nbsp;back&nbsp;to&nbsp;the&nbsp;beginning&nbsp;of&nbsp;the&nbsp;file<br />//&nbsp;same&nbsp;as&nbsp;rewind($fp);<br /></span><span style="color: #9876AA">fseek</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fseek-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果使用附加模试（<em>a</em> 或 <em>a+</em>），任何写入文件数据都会被附加上去，而文件的位置将会被忽略，调用 <span class="function"><strong style="color:#CC7832">fseek()</strong></span> 的结果尚未定义。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Not all streams support seeking. For those that do not support seeking,     forward seeking from the current position is accomplished by reading     and discarding data; other forms of seeking will fail.    </p>   </p></blockquote>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fseek-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>     <li class="member"><span class="function">{@link rewind()} - 倒回文件指针的位置</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return int Upon success, returns 0; otherwise, returns -1. Note that seeking*/
function fseek ($handle, $offset, $whence = SEEK_SET) {}

/**
*<div id="function.ftell" class="refentry">  <div class="refnamediv">   <h1 class="refname">ftell</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ftell</span> &mdash; <span class="dc-title">返回文件指针读/写的位置</span></p>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ftell-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>ftell</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    返回由 <span class="parameter" style="color:#2EACF9">handle</span> 指定的文件指针的位置，也就是文件流中的偏移量。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ftell-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">        文件指针必须是有效的，且必须指向一个通过 <span class="function">{@link fopen()}</span>    或 <span class="function">{@link popen()}</span> 成功打开的文件。在附加模式（加参数 &quot;a&quot; 打开文件）中 <span class="function"><strong style="color:#CC7832">ftell()</strong></span>    会返回未定义错误。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ftell-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the position of the file pointer referenced by    <span class="parameter" style="color:#2EACF9">handle</span> as an integer; i.e., its offset into the file stream.   </p>   <p class="para">    如果出错，返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ftell-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2804">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">ftell()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;opens&nbsp;a&nbsp;file&nbsp;and&nbsp;read&nbsp;some&nbsp;data<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc/passwd"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">12</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;where&nbsp;are&nbsp;we&nbsp;?<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">ftell</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;11<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ftell-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>     <li class="member"><span class="function">{@link rewind()} - 倒回文件指针的位置</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|int the position of the file pointer referenced by*/
function ftell ($handle) {}

/**
*<div id="function.fflush" class="refentry">  <div class="refnamediv">   <h1 class="refname">fflush</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.1, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fflush</span> &mdash; <span class="dc-title">将缓冲内容输出到文件</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fflush-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>fflush</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    )</div>    <p class="para rdfs-comment">    本函数强制将所有缓冲的输出写入    <span class="parameter" style="color:#2EACF9">handle</span> 文件句柄所指向的资源。    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>   <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fflush-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件指针必须是有效的，必须指向由 <span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fflush-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fflush-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2768">     <p><strong>Example #1 File write example using <span class="function"><strong style="color:#CC7832">fflush()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'bar.txt'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fflush</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ftell</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fflush-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link clearstatcache()} - 清除文件状态缓存</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function fflush ($handle) {}

/**
*<div id="function.fwrite" class="refentry">  <div class="refnamediv">   <h1 class="refname">fwrite</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fwrite</span> &mdash; <span class="dc-title">写入文件（可安全用于二进制文件）</span></p>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fwrite-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>fwrite</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$handle</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$string</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>   ] )</div>    <p class="simpara">    <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 把 <span class="parameter" style="color:#2EACF9">string</span> 的内容写入    文件指针 <span class="parameter" style="color:#2EACF9">handle</span> 处。    </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fwrite-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">handle</span></dt>       <dd>        <p class="para">文件系统指针，是典型地由 <span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>(资源)。</p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">string</span></dt>       <dd>        <p class="para">        The string that is to be written.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        如果指定了    <span class="parameter" style="color:#2EACF9">length</span>，当写入了    <span class="parameter" style="color:#2EACF9">length</span> 个字节或者写完了 <span class="parameter" style="color:#2EACF9">string</span>    以后，写入就会停止，视乎先碰到哪种情况。       </p>       <p class="para">         注意如果给出了    <span class="parameter" style="color:#2EACF9">length</span>    参数，则 <a href="http://php.net/manual/zh/info.configuration.php#ini.magic-quotes-runtime" class="link">magic_quotes_runtime</a>    配置选项将被忽略，而    <span class="parameter" style="color:#2EACF9">string</span> 中的斜线将不会被抽去。       </p>      </dd>          </dl>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fwrite-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 返回写入的字符数，出现错误时则返回 <strong><span>FALSE</span></strong> 。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fwrite-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Writing to a network stream may end before the whole string is written.     Return value of <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> may be checked:     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">fwrite_stream</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$string</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(</span><span style="color: #9876AA">$written&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$written&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">);&nbsp;</span><span style="color: #9876AA">$written&nbsp;</span><span style="color: #007700">+=&nbsp;</span><span style="color: #9876AA">$fwrite</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$fwrite&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$written</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$fwrite&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$written</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$written</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </p>   </p></blockquote>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     在区分二进制文件和文本文件的系统上（如 Windows）     打开文件时，<span class="function">{@link fopen()}</span> 函数的 mode 参数要加上 &#039;b&#039;。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     If <span class="parameter" style="color:#2EACF9">handle</span> was <span class="function">{@link fopen()}</span>ed in     append mode, <span class="function"><strong style="color:#CC7832">fwrite()</strong></span>s are atomic (unless the size of     <span class="parameter" style="color:#2EACF9">string</span> exceeds the filesystem&#039;s block size, on some     platforms, and as long as the file is on a local filesystem). That is,     there is no need to <span class="function">{@link flock()}</span> a resource before calling     <span class="function"><strong style="color:#CC7832">fwrite()</strong></span>; all of the data will be written without     interruption.    </p>   </p></blockquote>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     If writing twice to the file pointer, then the data will be appended to      the end of the file content:         <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'data.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'1'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'23'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;the&nbsp;content&nbsp;of&nbsp;'data.txt'&nbsp;is&nbsp;now&nbsp;123&nbsp;and&nbsp;not&nbsp;23!<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>         </div>     </p>   </p></blockquote>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fwrite-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2806">     <p><strong>Example #1 一个简单的 <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$somecontent&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"添加这些文字到文件\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;首先我们要确定文件存在并且可写。<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">is_writable</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">))&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;在这个例子里，我们将使用添加模式打开$filename，<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;因此，文件指针将会在文件的末尾，<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;那就是当我们使用fwrite()的时候，$somecontent将要写入的地方。<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'a'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"不能打开文件&nbsp;</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;将$somecontent写入到我们打开的文件中。<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$somecontent</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"不能写入到文件&nbsp;</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"成功地将&nbsp;</span><span style="color: #9876AA">$somecontent</span><span style="color: #DD0000">&nbsp;写入到文件</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"文件&nbsp;</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">&nbsp;不可写"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fwrite-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|int the number of bytes written, or <b>FALSE</b> on error.*/
function fwrite ($handle, $string, $length = null) {}

/**
*<div id="function.fputs" class="refentry">  <div class="refnamediv">   <h1 class="refname">fputs</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fputs</span> &mdash; <span class="dc-title"><span class="function">{@link fwrite()}</span> 的别名</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fputs-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：<span class="function">{@link fwrite()}</span>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|int the number of bytes written, or <b>FALSE</b> on error.*/
function fputs ($handle, $string, $length) {}

/**
*<div id="function.mkdir" class="refentry">  <div class="refnamediv">   <h1 class="refname">mkdir</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mkdir</span> &mdash; <span class="dc-title">新建目录</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mkdir-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>mkdir</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$pathname</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$mode</span><span class="initializer"> = 0777</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$recursive</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ]]] )</div>    <p class="para rdfs-comment">    尝试新建一个由 pathname 指定的目录。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mkdir-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">pathname</span></dt>       <dd>        <p class="para">        目录的路径。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">mode</span></dt>       <dd>        <p class="para">        默认的 mode 是 0777，意味着最大可能的访问权。有关 mode 的更多信息请阅读    <span class="function">{@link chmod()}</span> 页面。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         <span class="parameter" style="color:#2EACF9">mode</span> 在 Windows 下被忽略。        </p>       </p></blockquote>       <p class="para">        注意也许想用八进制数指定模式，也就是说该数应以零打头。模式也会被当前的 umask 修改，可以用 <span class="function">{@link umask()}</span> 来改变。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">recursive</span></dt>       <dd>        <p class="para">        Allows the creation of nested directories specified in the         <span class="parameter" style="color:#2EACF9">pathname</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在 PHP 5.0.0 中增加了对上下文（Context）的支持。有关<em>上下文（Context）</em>的说明参见 <a href="http://php.net/manual/zh/book.stream.php" class="xref">Streams</a>。</span></p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mkdir-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mkdir-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.0.0</td>        <td>         添加 <span class="parameter" style="color:#2EACF9">recursive</span> 参数。        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         <span class="function"><strong style="color:#CC7832">mkdir()</strong></span> 也可用于<em class="emphasis">某些</em>     URL 封装协议。参见<a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>     的列表看看 <span class="function"><strong style="color:#CC7832">mkdir()</strong></span> 支持哪些 URL 封装协议。        </td>       </tr>        <tr>        <td>4.2.0</td>        <td>         <span class="parameter" style="color:#2EACF9">mode</span> 成为可选项。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mkdir-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2820">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">mkdir()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />mkdir</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/to/my/dir"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0700</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    <div class="example" id="example-2821">     <p><strong>Example #2 通过 <span class="parameter" style="color:#2EACF9">recursive</span> 参数使用 <span class="function"><strong style="color:#CC7832">mkdir()</strong></span></strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Desired&nbsp;folder&nbsp;structure<br /></span><span style="color: #9876AA">$structure&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'./depth1/depth2/depth3/'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;To&nbsp;create&nbsp;the&nbsp;nested&nbsp;structure,&nbsp;the&nbsp;$recursive&nbsp;parameter&nbsp;<br />//&nbsp;to&nbsp;mkdir()&nbsp;must&nbsp;be&nbsp;specified.<br /><br /></span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">mkdir</span><span style="color: #007700">(</span><span style="color: #9876AA">$structure</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">'Failed&nbsp;to&nbsp;create&nbsp;folders...'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;...<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mkdir-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">当启用 <a href="http://php.net/manual/zh/features.safe-mode.php" class="link">安全模式</a>时， PHP 会在执行脚本时检查被脚本操作的目录是否与被执行的脚本有相同的 UID（所有者）。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mkdir-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>         <li class="member"><span class="function">{@link rmdir()} - 删除目录</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function mkdir ($pathname, $mode = 0777, $recursive = false, $context = null) {}

/**
*<div id="function.rename" class="refentry">  <div class="refnamediv">   <h1 class="refname">rename</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">rename</span> &mdash; <span class="dc-title">重命名一个文件或目录</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>rename</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$oldname</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$newname</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ] )</div>    <p class="para rdfs-comment">    尝试把 <span class="parameter" style="color:#2EACF9">oldname</span> 重命名为    <span class="parameter" style="color:#2EACF9">newname</span>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rename-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">oldname</span></dt>       <dd>        <p class="para">       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         用于 <span class="parameter" style="color:#2EACF9">oldname</span> 中的封装协议<em class="emphasis">必须</em>和用于     <span class="parameter" style="color:#2EACF9">newname</span> 中的相匹配。        </p>       </p></blockquote>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">newname</span></dt>       <dd>        <p class="para">        新的名字。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在 PHP 5.0.0 中增加了对上下文（Context）的支持。有关<em>上下文（Context）</em>的说明参见 <a href="http://php.net/manual/zh/book.stream.php" class="xref">Streams</a>。</span></p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.rename-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.1</td>        <td>         可以在 Windows 上跨驱动器 <span class="function"><strong style="color:#CC7832">rename()</strong></span> 文件。        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         <span class="function"><strong style="color:#CC7832">rename()</strong></span>     也可用于<em class="emphasis">某些</em>     URL 封装协议。参见<a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>     的列表看看 <span class="function"><strong style="color:#CC7832">rename()</strong></span> 支持哪些 URL 封装协议。        </td>       </tr>        <tr>        <td>4.3.3</td>        <td>         在有适当权限的时候 <span class="function"><strong style="color:#CC7832">rename()</strong></span> 已经能够在基于     *nix 的系统中跨磁盘分区重命名文件。Warnings may be generated if the destination filesystem         doesn&#039;t permit <em>chown()</em> or         <em>chmod()</em> system calls to be made on files —         for example, if the destination filesystem is a FAT filesystem.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.rename-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2837">     <p><strong>Example #1  <span class="function"><strong style="color:#CC7832">rename()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />rename</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/tmp_file.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"/home/user/login/docs/my_file.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.rename-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link copy()} - 拷贝文件</span></li>     <li class="member"><span class="function">{@link unlink()} - 删除文件</span></li>     <li class="member"><span class="function">{@link move_uploaded_file()} - 将上传的文件移动到新位置</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function rename ($oldname, $newname, $context = null) {}

/**
*<div id="function.copy" class="refentry">  <div class="refnamediv">   <h1 class="refname">copy</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">copy</span> &mdash; <span class="dc-title">拷贝文件</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.copy-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>copy</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$source</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$dest</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ] )</div>    <p class="para rdfs-comment">    将文件从 <span class="parameter" style="color:#2EACF9">source</span> 拷贝到 <span class="parameter" style="color:#2EACF9">dest</span>。   </p>   <p class="para">    如果要移动文件的话，请使用 <span class="function">{@link rename()}</span> 函数。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.copy-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">source</span></dt>       <dd>        <p class="para">        源文件路径。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">dest</span></dt>       <dd>        <p class="para">        目标路径。如果 <span class="parameter" style="color:#2EACF9">dest</span> 是一个 URL，则如果封装协议不支持覆盖已有的文件时拷贝操作会失败。       </p>       <div class="warning"><strong class="warning">Warning</strong>        <p class="para">        如果目标文件已存在，将会被覆盖。        </p>       </div>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <p class="para">        A valid context resource created with         <span class="function">{@link stream_context_create()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.copy-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.copy-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         增加了对 context 的支持。        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         如果启用了“fopen wrappers”的话，<span class="parameter" style="color:#2EACF9">source</span> 和     <span class="parameter" style="color:#2EACF9">dest</span> 都可以是 URL。更多细节见 <span class="function">{@link fopen()}</span>。        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.copy-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2761">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">copy()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'example.txt'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newfile&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'example.txt.bak'</span><span style="color: #007700">;<br /><br />if&nbsp;(!</span><span style="color: #9876AA">copy</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$newfile</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"failed&nbsp;to&nbsp;copy&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #DD0000">...\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.copy-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link move_uploaded_file()} - 将上传的文件移动到新位置</span></li>     <li class="member"><span class="function">{@link rename()} - 重命名一个文件或目录</span></li>     <li class="member">The section of the manual about <a href="http://php.net/manual/zh/features.file-upload.php" class="link">handling file uploads</a></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool true on success or false on failure.*/
function copy ($source, $dest, $context = null) {}

/**
*<div id="function.tempnam" class="refentry">  <div class="refnamediv">   <h1 class="refname">tempnam</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">tempnam</span> &mdash; <span class="dc-title">建立一个具有唯一文件名的文件</span></p>   </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.tempnam-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>tempnam</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$dir</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$prefix</span></span>    )</div>    <p class="para rdfs-comment">    在指定目录中建立一个具有唯一文件名的文件。如果该目录不存在，<span class="function"><strong style="color:#CC7832">tempnam()</strong></span>    会在系统临时目录中生成一个文件，并返回其文件名。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.tempnam-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">dir</span></dt>       <dd>        <p class="para">        The directory where the temporary filename will be created.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">prefix</span></dt>       <dd>        <p class="para">        产生临时文件的前缀。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <span class="simpara">         Windows uses only the first three characters of prefix.        </span>       </p></blockquote>      </dd>          </dl>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.tempnam-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回新的临时文件名，出错返回 <strong><span>FALSE</span></strong>。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.tempnam-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.0.6</td>        <td>         在 PHP 4.0.6 之前，<span class="function"><strong style="color:#CC7832">tempnam()</strong></span>         函数的行为取决于系统。在 Windows 下 <var class="varname"><var class="varname">TMP</var></var>    环境变量会越过 <span class="parameter" style="color:#2EACF9">dir</span>         参数，在 Linux 下 <var class="varname"><var class="varname">TMPDIR</var></var>    环境变量优先，而在 SVR4 下总是使用 <span class="parameter" style="color:#2EACF9">dir</span>    参数，如果其指向的目录存在的话。如果有疑问请参考系统文档中的    tempnam(3) 函数。        </td>       </tr>        <tr>        <td>4.0.3</td>        <td>         本函数的行为在 4.0.3 版中改变了。也会建立一个临时文件以避免竞争情形，即有可能会在产生出作为文件名的字符串与脚本真正建立该文件之间会在文件系统中存在同名文件。注意，如果不再需要该文件则要删除此文件，不会自动删除的。        </td>       </tr>       </tbody>         </table>    </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.tempnam-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2843">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">tempnam()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$tmpfname&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">tempnam</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"FOO"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmpfname</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"writing&nbsp;to&nbsp;tempfile"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;do&nbsp;here&nbsp;something<br /><br /></span><span style="color: #9876AA">unlink</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmpfname</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>      <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.tempnam-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     如果 PHP 不能在指定的 <span class="parameter" style="color:#2EACF9">dir</span>     参数中创建文件，则退回到系统默认值。     在 NTFS 文件系统中，同样的情况也发生在 <span class="parameter" style="color:#2EACF9">dir</span> 中文件数超过 65534 个的时候。    </span>   </p></blockquote>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.tempnam-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link tmpfile()} - 建立一个临时文件</span></li>     <li class="member"><span class="function">{@link sys_get_temp_dir()} - 返回用于临时文件的目录</span></li>     <li class="member"><span class="function">{@link unlink()} - 删除文件</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return bool|string the new temporary filename, or false on*/
function tempnam ($dir, $prefix) {}

/**
*<div id="function.tmpfile" class="refentry">  <div class="refnamediv">   <h1 class="refname">tmpfile</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">tmpfile</span> &mdash; <span class="dc-title">建立一个临时文件</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.tmpfile-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>tmpfile</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    以读写（w+）模式建立一个具有唯一文件名的临时文件，返回一个文件句柄。</p>   <p class="para">    文件会在关闭后（用    <span class="function">{@link fclose()}</span>）自动被删除，或当脚本结束后。   </p>   <p class="para">    详细信息请参考系统手册中的    <em>tmpfile(3)</em> 函数，以及    <var class="filename">stdio.h</var> 头文件。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.tmpfile-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个与 <span class="function">{@link fopen()}</span> 所打开返回类似的新文件句柄， 或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.tmpfile-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2844">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">tmpfile()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$temp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">tmpfile</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"writing&nbsp;to&nbsp;tempfile"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fseek</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;this&nbsp;removes&nbsp;the&nbsp;file<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> writing to tempfile </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.tmpfile-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link tempnam()} - 建立一个具有唯一文件名的文件</span></li>     <li class="member"><span class="function">{@link sys_get_temp_dir()} - 返回用于临时文件的目录</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return resource|bool a file handle, similar to the one returned by*/
function tmpfile () {}

/**
*<div id="function.file" class="refentry">  <div class="refnamediv">   <h1 class="refname">file</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">file</span> &mdash; <span class="dc-title">把整个文件读入一个数组中</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">array</span> <span class="methodname" style="color:#CC7832"><strong>file</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ]] )</div>    <p class="para rdfs-comment">    把整个文件读入一个数组中。   </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     你可以通过  <span class="function">{@link file_get_contents()}</span>  以字符串形式获取文件的内容。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.file-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        文件的路径。       </p>       <div class="tip"><strong class="tip">Tip</strong><p class="simpara">如已启用<a href="http://php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种 wapper 的不同功能请参见 <a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        可选参数 <span class="parameter" style="color:#2EACF9">flags</span> 可以是以下一个或多个常量：        <dl>                    <dt>            <strong><span>FILE_USE_INCLUDE_PATH</span></strong>          </dt>           <dd>            <span class="simpara">            在 <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 中查找文件。           </span>          </dd>                             <dt>            <strong><span>FILE_IGNORE_NEW_LINES</span></strong>          </dt>           <dd>            <span class="simpara">            在数组每个元素的末尾不要添加换行符           </span>          </dd>                             <dt>            <strong><span>FILE_SKIP_EMPTY_LINES</span></strong>          </dt>           <dd>            <span class="simpara">            跳过空行           </span>          </dd>                           </dl>        </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <p class="para">        A context resource created with the         <span class="function">{@link stream_context_create()}</span> function.       </p>       <p class="para">        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在 PHP 5.0.0 中增加了对上下文（Context）的支持。有关<em>上下文（Context）</em>的说明参见 <a href="http://php.net/manual/zh/book.stream.php" class="xref">Streams</a>。</span></p></blockquote>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the file in an array. Each element of the array corresponds to a    line in the file, with the newline still attached. Upon failure,    <span class="function"><strong style="color:#CC7832">file()</strong></span> returns <strong><span>FALSE</span></strong>.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Each line in the resulting array will include the line ending, unless     <strong><span>FILE_IGNORE_NEW_LINES</span></strong> is used, so you still need to     use <span class="function">{@link rtrim()}</span> if you do not want the line ending     present.    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP 不能正确的识别行结束符，启用运行时配置可选项 <a href="http://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a> 也许可以解决此问题。</span></p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.file-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">              <tr>        <td>5.0.0</td>        <td>         增加了参数  <span class="parameter" style="color:#2EACF9">context</span>        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         Prior to PHP 5.0.0 the <span class="parameter" style="color:#2EACF9">flags</span> parameter only         covered <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> and was         enabled with 1        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         <span class="function"><strong style="color:#CC7832">file()</strong></span> 开始是二进制安全的        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.file-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2780">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">file()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;将一个文件读入数组。本例中通过&nbsp;HTTP&nbsp;从&nbsp;URL&nbsp;中取得&nbsp;HTML&nbsp;源文件。<br /><br /></span><span style="color: #9876AA">$lines&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;在数组中循环，显示&nbsp;HTML&nbsp;的源文件并加上行号。<br /><br /></span><span style="color: #007700">foreach&nbsp;(</span><span style="color: #9876AA">$lines&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$line_num&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$line</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Line&nbsp;#&lt;b&gt;</span><span style="color: #007700">{</span><span style="color: #9876AA">$line_num</span><span style="color: #007700">}</span><span style="color: #DD0000">&lt;/b&gt;&nbsp;:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">$line</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;另一个例子将&nbsp;web&nbsp;页面读入字符串。参见&nbsp;file_get_contents()。<br /><br /></span><span style="color: #9876AA">$html&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">file</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;从&nbsp;PHP&nbsp;5&nbsp;开始可以使用可选标记参数<br /></span><span style="color: #9876AA">$trimmed&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">FILE_IGNORE_NEW_LINES&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">FILE_SKIP_EMPTY_LINES</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.file-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong><p class="para">使用 SSL 时，Microsoft IIS 会违反协议不发送<em>close_notify</em>标记就关闭连接。PHP 会在到达数据尾端时报告“SSL: Fatal Protocol Error”。 要解决此问题，<a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">error_reporting</a> 应设定为降低级别至不包含警告。 PHP 4.3.7 及更高版本可以在使用 <em>https://</em> 包装器打开流时检测出有问题的 IIS 服务器软件 并抑制警告。在使用 <span class="function">{@link fsockopen()}</span> 创建 <em>ssl://</em> 套接字时, 开发者需检测并抑制此警告。</p></div>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.file-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link readfile()} - 输出文件</span></li>     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link fsockopen()} - 打开一个网络连接或者一个Unix套接字连接</span></li>     <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>     <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>     <li class="member"><span class="function">{@link include} - include</span></li>     <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return array|bool the file in an array. Each element of the array corresponds to a*/
function file ($filename, $flags = null, $context = null) {}

/**
*<div id="function.file-get-contents" class="refentry">  <div class="refnamediv">   <h1 class="refname">file_get_contents</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">file_get_contents</span> &mdash; <span class="dc-title">将整个文件读入一个字符串</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.file-get-contents-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>file_get_contents</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#2EACF9">$use_include_path</span><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$offset</span><span class="initializer"> = -1</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$maxlen</span></span>   ]]]] )</div>    <p class="para rdfs-comment">    和 <span class="function">{@link file()}</span> 一样，只除了    <span class="function"><strong style="color:#CC7832">file_get_contents()</strong></span> 把文件读入一个字符串。将在参数    <span class="parameter" style="color:#2EACF9">offset</span> 所指定的位置开始读取长度为    <span class="parameter" style="color:#2EACF9">maxlen</span> 的内容。如果失败，<span class="function"><strong style="color:#CC7832">file_get_contents()</strong></span>    将返回 <strong><span>FALSE</span></strong>。   </p>   <p class="para">    <span class="function"><strong style="color:#CC7832">file_get_contents()</strong></span>    函数是用来将文件的内容读入到一个字符串中的首选方法。如果操作系统支持还会使用内存映射技术来增强性能。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     如果要打开有特殊字符的 URL （比如说有空格），就需要使用     <span class="function">{@link urlencode()}</span> 进行 URL 编码。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.file-get-contents-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        要读取的文件的名称。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">use_include_path</span></dt>       <dd>        <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         As of PHP 5 the <strong><span>FILE_USE_INCLUDE_PATH</span></strong> can be used         to trigger <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include path</a>         search.        </p>       </p></blockquote>             </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <p class="para">        A valid context resource created with         <span class="function">{@link stream_context_create()}</span>.        如果你不需要自定义 context，可以用 <strong><span>NULL</span></strong> 来忽略。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">offset</span></dt>       <dd>        <p class="para">        The offset where the reading starts on the original stream.       </p>       <p class="para">        Seeking (<span class="parameter" style="color:#2EACF9">offset</span>) is not supported with remote files.        Attempting to seek on non-local files may work with small offsets, but this        is unpredictable because it works on the buffered stream.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">maxlen</span></dt>       <dd>        <p class="para">        Maximum length of data read. The default is to read until end        of file is reached. Note that this parameter is applied to the         stream processed by the filters.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.file-get-contents-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The function returns the read data 或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.file-get-contents-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    An <strong><span>E_WARNING</span></strong> level error is generated if either <span class="parameter" style="color:#2EACF9">maxlength</span>    is less than zero, or if seeking to the specified <span class="parameter" style="color:#2EACF9">offset</span> in the stream fails.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.file-get-contents-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2774">     <p><strong>Example #1 Get and output the source of the homepage of a website</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$homepage&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$homepage</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>    <div class="example" id="example-2775">     <p><strong>Example #2 Searching within the include_path</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;&lt;=&nbsp;PHP&nbsp;5<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'./people.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;&gt;&nbsp;PHP&nbsp;5<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'./people.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">FILE_USE_INCLUDE_PATH</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>    <div class="example" id="example-2776">     <p><strong>Example #3 Reading a section of a file</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Read&nbsp;14&nbsp;characters&nbsp;starting&nbsp;from&nbsp;the&nbsp;21st&nbsp;character<br /></span><span style="color: #9876AA">$section&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'./people.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">20</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">14</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$section</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> string(14) &quot;lle Bjori Ro&quot;  </span></div>     </div>    </div>    <div class="example" id="example-2777">     <p><strong>Example #4 Using stream contexts</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;a&nbsp;stream<br /></span><span style="color: #9876AA">$opts&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;</span><span style="color: #DD0000">'http'</span><span style="color: #007700">=&gt;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'method'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'header'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"Accept-language:&nbsp;en\r\n"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"Cookie:&nbsp;foo=bar\r\n"<br />&nbsp;&nbsp;</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$context&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(</span><span style="color: #9876AA">$opts</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Open&nbsp;the&nbsp;file&nbsp;using&nbsp;the&nbsp;HTTP&nbsp;headers&nbsp;set&nbsp;above<br /></span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.file-get-contents-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">              <tr>        <td>5.1.0</td>        <td>         Added the <span class="parameter" style="color:#2EACF9">offset</span> and         <span class="parameter" style="color:#2EACF9">maxlen</span> parameters.        </td>       </tr>        <tr>        <td>5.0.0</td>        <td>         Added context support.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.file-get-contents-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>   <div class="tip"><strong class="tip">Tip</strong><p class="simpara">如已启用<a href="http://php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种 wapper 的不同功能请参见 <a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div>   <div class="warning"><strong class="warning">Warning</strong><p class="para">使用 SSL 时，Microsoft IIS 会违反协议不发送<em>close_notify</em>标记就关闭连接。PHP 会在到达数据尾端时报告“SSL: Fatal Protocol Error”。 要解决此问题，<a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">error_reporting</a> 应设定为降低级别至不包含警告。 PHP 4.3.7 及更高版本可以在使用 <em>https://</em> 包装器打开流时检测出有问题的 IIS 服务器软件 并抑制警告。在使用 <span class="function">{@link fsockopen()}</span> 创建 <em>ssl://</em> 套接字时, 开发者需检测并抑制此警告。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.file-get-contents-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>     <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link readfile()} - 输出文件</span></li>     <li class="member"><span class="function">{@link file_put_contents()} - 将一个字符串写入文件</span></li>     <li class="member"><span class="function">{@link stream_get_contents()} - 读取资源流到一个字符串</span></li>     <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>     <li class="member"><a href="http://php.net/manual/zh/reserved.variables.httpresponseheader.php" class="link">$http_response_header</a></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return string|bool The function returns the read data or false on failure.*/
function file_get_contents ($filename, $use_include_path = false, $context = null, $offset = 0, $maxlen = null) {}

/**
*<div id="function.file-put-contents" class="refentry">  <div class="refnamediv">   <h1 class="refname">file_put_contents</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">file_put_contents</span> &mdash; <span class="dc-title">将一个字符串写入文件</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.file-put-contents-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>file_put_contents</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$filename</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$data</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$context</span></span>   ]] )</div>    <p class="para rdfs-comment">     和依次调用 <span class="function">{@link fopen()}</span>，<span class="function">{@link fwrite()}</span>    以及 <span class="function">{@link fclose()}</span> 功能一样。   </p>   <p class="para">    If <span class="parameter" style="color:#2EACF9">filename</span> does not exist, the file is created.    Otherwise, the existing file is overwritten, unless the     <strong><span>FILE_APPEND</span></strong> flag is set.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.file-put-contents-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">filename</span></dt>       <dd>        <p class="para">        要被写入数据的文件名。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">data</span></dt>       <dd>        <p class="para">        要写入的数据。类型可以是 <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>，<span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>        或者是 <span class="type" style="color:#EAB766"><span class="type stream" style="color:#EAB766">stream</span></span> 资源（如上面所说的那样）。       </p>       <p class="para">        如果 <span class="parameter" style="color:#2EACF9">data</span>    指定为 stream 资源，这里 stream    中所保存的缓存数据将被写入到指定文件中，这种用法就相似于使用    <span class="function">{@link stream_copy_to_stream()}</span> 函数。       </p>       <p class="para">        参数 <span class="parameter" style="color:#2EACF9">data</span> 可以是数组（但不能为多维数组），这就相当于    <em>file_put_contents($filename, join(&#039;&#039;, $array))</em>。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">flags</span> 的值可以是        以下 flag 使用 OR (<em>|</em>) 运算符进行的组合。       </p>        <p class="para">        <table class="doctable table">         <caption><strong>Available flags</strong></caption>                   <thead>           <tr>            <th>Flag</th>            <th>描述</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td>             <strong><span>FILE_USE_INCLUDE_PATH</span></strong>            </td>            <td>             在 include 目录里搜索  <span class="parameter" style="color:#2EACF9">filename</span>。             更多信息可参见 <a href="http://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>。            </td>           </tr>            <tr>            <td>             <strong><span>FILE_APPEND</span></strong>            </td>            <td>             如果文件 <span class="parameter" style="color:#2EACF9">filename</span>  已经存在，追加数据而不是覆盖。            </td>           </tr>            <tr>            <td>             <strong><span>LOCK_EX</span></strong>            </td>            <td>             在写入时获得一个独占锁。            </td>           </tr>                      </tbody>                 </table>        </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">context</span></dt>       <dd>        <p class="para">        一个 context 资源。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.file-put-contents-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    该函数将返回写入到文件内数据的字节数，失败时返回<strong><span>FALSE</span></strong>   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><span>FALSE</span></strong>，但也可能返回等同于 <strong><span>FALSE</span></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.file-put-contents-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-2778">     <p><strong>Example #1 Simple usage example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'people.txt'</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;Open&nbsp;the&nbsp;file&nbsp;to&nbsp;get&nbsp;existing&nbsp;content<br /></span><span style="color: #9876AA">$current&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;Append&nbsp;a&nbsp;new&nbsp;person&nbsp;to&nbsp;the&nbsp;file<br /></span><span style="color: #9876AA">$current&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"John&nbsp;Smith\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;Write&nbsp;the&nbsp;contents&nbsp;back&nbsp;to&nbsp;the&nbsp;file<br /></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$current</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>    <div class="example" id="example-2779">     <p><strong>Example #2 Using flags</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'people.txt'</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;The&nbsp;new&nbsp;person&nbsp;to&nbsp;add&nbsp;to&nbsp;the&nbsp;file<br /></span><span style="color: #9876AA">$person&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"John&nbsp;Smith\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;Write&nbsp;the&nbsp;contents&nbsp;to&nbsp;the&nbsp;file,&nbsp;<br />//&nbsp;using&nbsp;the&nbsp;FILE_APPEND&nbsp;flag&nbsp;to&nbsp;append&nbsp;the&nbsp;content&nbsp;to&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;file<br />//&nbsp;and&nbsp;the&nbsp;LOCK_EX&nbsp;flag&nbsp;to&nbsp;prevent&nbsp;anyone&nbsp;else&nbsp;writing&nbsp;to&nbsp;the&nbsp;file&nbsp;at&nbsp;the&nbsp;same&nbsp;time<br /></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">FILE_APPEND&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">LOCK_EX</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.file-put-contents-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.0.0</td>        <td>         Added context support        </td>       </tr>        <tr>        <td>5.1.0</td>        <td>         添加了对 <strong><span>LOCK_EX</span></strong> 的支持和 <span class="parameter" style="color:#2EACF9">data</span>         参数处理 stream 资源的功能。        </td>       </tr>              </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.file-put-contents-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>   <div class="tip"><strong class="tip">Tip</strong><p class="simpara">如已启用<a href="http://php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种 wapper 的不同功能请参见 <a href="http://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.file-put-contents-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>     <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
 * @return int|bool The function returns the number of bytes that were written to the file, or*/
function file_put_contents ($filename, $data, $flags = 0, $context = null) {}
