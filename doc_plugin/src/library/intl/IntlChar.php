<?php

/**
*<div id="class.intlchar" class="reference">   <h1 class="title">IntlChar</h1>     <div class="partintro"><p class="verinfo">(PHP 7)</p>     <div class="section" id="intlchar.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">IntlChar</strong> provides access to a number of utility     methods that can be used to access information about Unicode characters.    </p>    <p class="para">     The methods and constants adhere closely to the names and behavior used by the underlying ICU library.    </p>   </div>     <div class="section" id="intlchar.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">IntlChar</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// Constants </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.unicode-version"><var class="varname">UNICODE_VERSION</var></a></var>      <span class="initializer"> = 6.3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.codepoint-min"><var class="varname">CODEPOINT_MIN</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.codepoint-max"><var class="varname">CODEPOINT_MAX</var></a></var>      <span class="initializer"> = 1114111</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">float</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.no-numeric-value"><var class="varname">NO_NUMERIC_VALUE</var></a></var>      <span class="initializer"> = -123456789</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-alphabetic"><var class="varname">PROPERTY_ALPHABETIC</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-binary-start"><var class="varname">PROPERTY_BINARY_START</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ascii-hex-digit"><var class="varname">PROPERTY_ASCII_HEX_DIGIT</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-control"><var class="varname">PROPERTY_BIDI_CONTROL</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-mirrored"><var class="varname">PROPERTY_BIDI_MIRRORED</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-dash"><var class="varname">PROPERTY_DASH</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-default-ignorable-code-point"><var class="varname">PROPERTY_DEFAULT_IGNORABLE_CODE_POINT</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-deprecated"><var class="varname">PROPERTY_DEPRECATED</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-diacritic"><var class="varname">PROPERTY_DIACRITIC</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-extender"><var class="varname">PROPERTY_EXTENDER</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-full-composition-exclusion"><var class="varname">PROPERTY_FULL_COMPOSITION_EXCLUSION</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-base"><var class="varname">PROPERTY_GRAPHEME_BASE</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-extend"><var class="varname">PROPERTY_GRAPHEME_EXTEND</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-link"><var class="varname">PROPERTY_GRAPHEME_LINK</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-hex-digit"><var class="varname">PROPERTY_HEX_DIGIT</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-hyphen"><var class="varname">PROPERTY_HYPHEN</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-id-continue"><var class="varname">PROPERTY_ID_CONTINUE</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-id-start"><var class="varname">PROPERTY_ID_START</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ideographic"><var class="varname">PROPERTY_IDEOGRAPHIC</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ids-binary-operator"><var class="varname">PROPERTY_IDS_BINARY_OPERATOR</var></a></var>      <span class="initializer"> = 18</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ids-trinary-operator"><var class="varname">PROPERTY_IDS_TRINARY_OPERATOR</var></a></var>      <span class="initializer"> = 19</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-join-control"><var class="varname">PROPERTY_JOIN_CONTROL</var></a></var>      <span class="initializer"> = 20</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-logical-order-exception"><var class="varname">PROPERTY_LOGICAL_ORDER_EXCEPTION</var></a></var>      <span class="initializer"> = 21</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-lowercase"><var class="varname">PROPERTY_LOWERCASE</var></a></var>      <span class="initializer"> = 22</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-math"><var class="varname">PROPERTY_MATH</var></a></var>      <span class="initializer"> = 23</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-noncharacter-code-point"><var class="varname">PROPERTY_NONCHARACTER_CODE_POINT</var></a></var>      <span class="initializer"> = 24</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-quotation-mark"><var class="varname">PROPERTY_QUOTATION_MARK</var></a></var>      <span class="initializer"> = 25</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-radical"><var class="varname">PROPERTY_RADICAL</var></a></var>      <span class="initializer"> = 26</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-soft-dotted"><var class="varname">PROPERTY_SOFT_DOTTED</var></a></var>      <span class="initializer"> = 27</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-terminal-punctuation"><var class="varname">PROPERTY_TERMINAL_PUNCTUATION</var></a></var>      <span class="initializer"> = 28</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-unified-ideograph"><var class="varname">PROPERTY_UNIFIED_IDEOGRAPH</var></a></var>      <span class="initializer"> = 29</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-uppercase"><var class="varname">PROPERTY_UPPERCASE</var></a></var>      <span class="initializer"> = 30</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-white-space"><var class="varname">PROPERTY_WHITE_SPACE</var></a></var>      <span class="initializer"> = 31</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-xid-continue"><var class="varname">PROPERTY_XID_CONTINUE</var></a></var>      <span class="initializer"> = 32</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-xid-start"><var class="varname">PROPERTY_XID_START</var></a></var>      <span class="initializer"> = 33</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-case-sensitive"><var class="varname">PROPERTY_CASE_SENSITIVE</var></a></var>      <span class="initializer"> = 34</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-s-term"><var class="varname">PROPERTY_S_TERM</var></a></var>      <span class="initializer"> = 35</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-variation-selector"><var class="varname">PROPERTY_VARIATION_SELECTOR</var></a></var>      <span class="initializer"> = 36</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfd-inert"><var class="varname">PROPERTY_NFD_INERT</var></a></var>      <span class="initializer"> = 37</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkd-inert"><var class="varname">PROPERTY_NFKD_INERT</var></a></var>      <span class="initializer"> = 38</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfc-inert"><var class="varname">PROPERTY_NFC_INERT</var></a></var>      <span class="initializer"> = 39</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkc-inert"><var class="varname">PROPERTY_NFKC_INERT</var></a></var>      <span class="initializer"> = 40</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-segment-starter"><var class="varname">PROPERTY_SEGMENT_STARTER</var></a></var>      <span class="initializer"> = 41</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-pattern-syntax"><var class="varname">PROPERTY_PATTERN_SYNTAX</var></a></var>      <span class="initializer"> = 42</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-pattern-white-space"><var class="varname">PROPERTY_PATTERN_WHITE_SPACE</var></a></var>      <span class="initializer"> = 43</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-alnum"><var class="varname">PROPERTY_POSIX_ALNUM</var></a></var>      <span class="initializer"> = 44</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-blank"><var class="varname">PROPERTY_POSIX_BLANK</var></a></var>      <span class="initializer"> = 45</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-graph"><var class="varname">PROPERTY_POSIX_GRAPH</var></a></var>      <span class="initializer"> = 46</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-print"><var class="varname">PROPERTY_POSIX_PRINT</var></a></var>      <span class="initializer"> = 47</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-xdigit"><var class="varname">PROPERTY_POSIX_XDIGIT</var></a></var>      <span class="initializer"> = 48</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-cased"><var class="varname">PROPERTY_CASED</var></a></var>      <span class="initializer"> = 49</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-case-ignorable"><var class="varname">PROPERTY_CASE_IGNORABLE</var></a></var>      <span class="initializer"> = 50</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-lowercased"><var class="varname">PROPERTY_CHANGES_WHEN_LOWERCASED</var></a></var>      <span class="initializer"> = 51</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-uppercased"><var class="varname">PROPERTY_CHANGES_WHEN_UPPERCASED</var></a></var>      <span class="initializer"> = 52</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-titlecased"><var class="varname">PROPERTY_CHANGES_WHEN_TITLECASED</var></a></var>      <span class="initializer"> = 53</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-casefolded"><var class="varname">PROPERTY_CHANGES_WHEN_CASEFOLDED</var></a></var>      <span class="initializer"> = 54</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-casemapped"><var class="varname">PROPERTY_CHANGES_WHEN_CASEMAPPED</var></a></var>      <span class="initializer"> = 55</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-nfkc-casefolded"><var class="varname">PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED</var></a></var>      <span class="initializer"> = 56</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-binary-limit"><var class="varname">PROPERTY_BINARY_LIMIT</var></a></var>      <span class="initializer"> = 57</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-class"><var class="varname">PROPERTY_BIDI_CLASS</var></a></var>      <span class="initializer"> = 4096</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-int-start"><var class="varname">PROPERTY_INT_START</var></a></var>      <span class="initializer"> = 4096</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-block"><var class="varname">PROPERTY_BLOCK</var></a></var>      <span class="initializer"> = 4097</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-canonical-combining-class"><var class="varname">PROPERTY_CANONICAL_COMBINING_CLASS</var></a></var>      <span class="initializer"> = 4098</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-decomposition-type"><var class="varname">PROPERTY_DECOMPOSITION_TYPE</var></a></var>      <span class="initializer"> = 4099</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-east-asian-width"><var class="varname">PROPERTY_EAST_ASIAN_WIDTH</var></a></var>      <span class="initializer"> = 4100</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-general-category"><var class="varname">PROPERTY_GENERAL_CATEGORY</var></a></var>      <span class="initializer"> = 4101</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-joining-group"><var class="varname">PROPERTY_JOINING_GROUP</var></a></var>      <span class="initializer"> = 4102</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-joining-type"><var class="varname">PROPERTY_JOINING_TYPE</var></a></var>      <span class="initializer"> = 4103</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-line-break"><var class="varname">PROPERTY_LINE_BREAK</var></a></var>      <span class="initializer"> = 4104</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-numeric-type"><var class="varname">PROPERTY_NUMERIC_TYPE</var></a></var>      <span class="initializer"> = 4105</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-script"><var class="varname">PROPERTY_SCRIPT</var></a></var>      <span class="initializer"> = 4106</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-hangul-syllable-type"><var class="varname">PROPERTY_HANGUL_SYLLABLE_TYPE</var></a></var>      <span class="initializer"> = 4107</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfd-quick-check"><var class="varname">PROPERTY_NFD_QUICK_CHECK</var></a></var>      <span class="initializer"> = 4108</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkd-quick-check"><var class="varname">PROPERTY_NFKD_QUICK_CHECK</var></a></var>      <span class="initializer"> = 4109</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfc-quick-check"><var class="varname">PROPERTY_NFC_QUICK_CHECK</var></a></var>      <span class="initializer"> = 4110</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkc-quick-check"><var class="varname">PROPERTY_NFKC_QUICK_CHECK</var></a></var>      <span class="initializer"> = 4111</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-lead-canonical-combining-class"><var class="varname">PROPERTY_LEAD_CANONICAL_COMBINING_CLASS</var></a></var>      <span class="initializer"> = 4112</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-trail-canonical-combining-class"><var class="varname">PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS</var></a></var>      <span class="initializer"> = 4113</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-cluster-break"><var class="varname">PROPERTY_GRAPHEME_CLUSTER_BREAK</var></a></var>      <span class="initializer"> = 4114</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-sentence-break"><var class="varname">PROPERTY_SENTENCE_BREAK</var></a></var>      <span class="initializer"> = 4115</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-word-break"><var class="varname">PROPERTY_WORD_BREAK</var></a></var>      <span class="initializer"> = 4116</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-paired-bracket-type"><var class="varname">PROPERTY_BIDI_PAIRED_BRACKET_TYPE</var></a></var>      <span class="initializer"> = 4117</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-int-limit"><var class="varname">PROPERTY_INT_LIMIT</var></a></var>      <span class="initializer"> = 4118</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-general-category-mask"><var class="varname">PROPERTY_GENERAL_CATEGORY_MASK</var></a></var>      <span class="initializer"> = 8192</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-mask-start"><var class="varname">PROPERTY_MASK_START</var></a></var>      <span class="initializer"> = 8192</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-mask-limit"><var class="varname">PROPERTY_MASK_LIMIT</var></a></var>      <span class="initializer"> = 8193</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-numeric-value"><var class="varname">PROPERTY_NUMERIC_VALUE</var></a></var>      <span class="initializer"> = 12288</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-double-start"><var class="varname">PROPERTY_DOUBLE_START</var></a></var>      <span class="initializer"> = 12288</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-double-limit"><var class="varname">PROPERTY_DOUBLE_LIMIT</var></a></var>      <span class="initializer"> = 12289</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-age"><var class="varname">PROPERTY_AGE</var></a></var>      <span class="initializer"> = 16384</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-string-start"><var class="varname">PROPERTY_STRING_START</var></a></var>      <span class="initializer"> = 16384</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-mirroring-glyph"><var class="varname">PROPERTY_BIDI_MIRRORING_GLYPH</var></a></var>      <span class="initializer"> = 16385</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-case-folding"><var class="varname">PROPERTY_CASE_FOLDING</var></a></var>      <span class="initializer"> = 16386</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-iso-comment"><var class="varname">PROPERTY_ISO_COMMENT</var></a></var>      <span class="initializer"> = 16387</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-lowercase-mapping"><var class="varname">PROPERTY_LOWERCASE_MAPPING</var></a></var>      <span class="initializer"> = 16388</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-name"><var class="varname">PROPERTY_NAME</var></a></var>      <span class="initializer"> = 16389</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-case-folding"><var class="varname">PROPERTY_SIMPLE_CASE_FOLDING</var></a></var>      <span class="initializer"> = 16390</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-lowercase-mapping"><var class="varname">PROPERTY_SIMPLE_LOWERCASE_MAPPING</var></a></var>      <span class="initializer"> = 16391</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-titlecase-mapping"><var class="varname">PROPERTY_SIMPLE_TITLECASE_MAPPING</var></a></var>      <span class="initializer"> = 16392</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-uppercase-mapping"><var class="varname">PROPERTY_SIMPLE_UPPERCASE_MAPPING</var></a></var>      <span class="initializer"> = 16393</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-titlecase-mapping"><var class="varname">PROPERTY_TITLECASE_MAPPING</var></a></var>      <span class="initializer"> = 16394</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-unicode-1-name"><var class="varname">PROPERTY_UNICODE_1_NAME</var></a></var>      <span class="initializer"> = 16395</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-uppercase-mapping"><var class="varname">PROPERTY_UPPERCASE_MAPPING</var></a></var>      <span class="initializer"> = 16396</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-paired-bracket"><var class="varname">PROPERTY_BIDI_PAIRED_BRACKET</var></a></var>      <span class="initializer"> = 16397</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-string-limit"><var class="varname">PROPERTY_STRING_LIMIT</var></a></var>      <span class="initializer"> = 16398</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-script-extensions"><var class="varname">PROPERTY_SCRIPT_EXTENSIONS</var></a></var>      <span class="initializer"> = 28672</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-other-property-start"><var class="varname">PROPERTY_OTHER_PROPERTY_START</var></a></var>      <span class="initializer"> = 28672</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-other-property-limit"><var class="varname">PROPERTY_OTHER_PROPERTY_LIMIT</var></a></var>      <span class="initializer"> = 28673</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-invalid-code"><var class="varname">PROPERTY_INVALID_CODE</var></a></var>      <span class="initializer"> = -1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-unassigned"><var class="varname">CHAR_CATEGORY_UNASSIGNED</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-general-other-types"><var class="varname">CHAR_CATEGORY_GENERAL_OTHER_TYPES</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-uppercase-letter"><var class="varname">CHAR_CATEGORY_UPPERCASE_LETTER</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-lowercase-letter"><var class="varname">CHAR_CATEGORY_LOWERCASE_LETTER</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-titlecase-letter"><var class="varname">CHAR_CATEGORY_TITLECASE_LETTER</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-modifier-letter"><var class="varname">CHAR_CATEGORY_MODIFIER_LETTER</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-letter"><var class="varname">CHAR_CATEGORY_OTHER_LETTER</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-non-spacing-mark"><var class="varname">CHAR_CATEGORY_NON_SPACING_MARK</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-enclosing-mark"><var class="varname">CHAR_CATEGORY_ENCLOSING_MARK</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-combining-spacing-mark"><var class="varname">CHAR_CATEGORY_COMBINING_SPACING_MARK</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-decimal-digit-number"><var class="varname">CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-letter-number"><var class="varname">CHAR_CATEGORY_LETTER_NUMBER</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-number"><var class="varname">CHAR_CATEGORY_OTHER_NUMBER</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-space-separator"><var class="varname">CHAR_CATEGORY_SPACE_SEPARATOR</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-line-separator"><var class="varname">CHAR_CATEGORY_LINE_SEPARATOR</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-paragraph-separator"><var class="varname">CHAR_CATEGORY_PARAGRAPH_SEPARATOR</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-control-char"><var class="varname">CHAR_CATEGORY_CONTROL_CHAR</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-format-char"><var class="varname">CHAR_CATEGORY_FORMAT_CHAR</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-private-use-char"><var class="varname">CHAR_CATEGORY_PRIVATE_USE_CHAR</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-surrogate"><var class="varname">CHAR_CATEGORY_SURROGATE</var></a></var>      <span class="initializer"> = 18</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-dash-punctuation"><var class="varname">CHAR_CATEGORY_DASH_PUNCTUATION</var></a></var>      <span class="initializer"> = 19</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-start-punctuation"><var class="varname">CHAR_CATEGORY_START_PUNCTUATION</var></a></var>      <span class="initializer"> = 20</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-end-punctuation"><var class="varname">CHAR_CATEGORY_END_PUNCTUATION</var></a></var>      <span class="initializer"> = 21</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-connector-punctuation"><var class="varname">CHAR_CATEGORY_CONNECTOR_PUNCTUATION</var></a></var>      <span class="initializer"> = 22</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-punctuation"><var class="varname">CHAR_CATEGORY_OTHER_PUNCTUATION</var></a></var>      <span class="initializer"> = 23</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-math-symbol"><var class="varname">CHAR_CATEGORY_MATH_SYMBOL</var></a></var>      <span class="initializer"> = 24</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-currency-symbol"><var class="varname">CHAR_CATEGORY_CURRENCY_SYMBOL</var></a></var>      <span class="initializer"> = 25</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-modifier-symbol"><var class="varname">CHAR_CATEGORY_MODIFIER_SYMBOL</var></a></var>      <span class="initializer"> = 26</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-symbol"><var class="varname">CHAR_CATEGORY_OTHER_SYMBOL</var></a></var>      <span class="initializer"> = 27</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-initial-punctuation"><var class="varname">CHAR_CATEGORY_INITIAL_PUNCTUATION</var></a></var>      <span class="initializer"> = 28</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-final-punctuation"><var class="varname">CHAR_CATEGORY_FINAL_PUNCTUATION</var></a></var>      <span class="initializer"> = 29</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-char-category-count"><var class="varname">CHAR_CATEGORY_CHAR_CATEGORY_COUNT</var></a></var>      <span class="initializer"> = 30</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-european-number"><var class="varname">CHAR_DIRECTION_EUROPEAN_NUMBER</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-european-number-separator"><var class="varname">CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-european-number-terminator"><var class="varname">CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-arabic-number"><var class="varname">CHAR_DIRECTION_ARABIC_NUMBER</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-common-number-separator"><var class="varname">CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-block-separator"><var class="varname">CHAR_DIRECTION_BLOCK_SEPARATOR</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-segment-separator"><var class="varname">CHAR_DIRECTION_SEGMENT_SEPARATOR</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-white-space-neutral"><var class="varname">CHAR_DIRECTION_WHITE_SPACE_NEUTRAL</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-other-neutral"><var class="varname">CHAR_DIRECTION_OTHER_NEUTRAL</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right-embedding"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right-override"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-arabic"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-embedding"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-override"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-pop-directional-format"><var class="varname">CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-dir-non-spacing-mark"><var class="varname">CHAR_DIRECTION_DIR_NON_SPACING_MARK</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-boundary-neutral"><var class="varname">CHAR_DIRECTION_BOUNDARY_NEUTRAL</var></a></var>      <span class="initializer"> = 18</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-first-strong-isolate"><var class="varname">CHAR_DIRECTION_FIRST_STRONG_ISOLATE</var></a></var>      <span class="initializer"> = 19</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right-isolate"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE</var></a></var>      <span class="initializer"> = 20</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-isolate"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE</var></a></var>      <span class="initializer"> = 21</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-pop-directional-isolate"><var class="varname">CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE</var></a></var>      <span class="initializer"> = 22</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-char-direction-count"><var class="varname">CHAR_DIRECTION_CHAR_DIRECTION_COUNT</var></a></var>      <span class="initializer"> = 23</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-no-block"><var class="varname">BLOCK_CODE_NO_BLOCK</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-basic-latin"><var class="varname">BLOCK_CODE_BASIC_LATIN</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-1-supplement"><var class="varname">BLOCK_CODE_LATIN_1_SUPPLEMENT</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-a"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_A</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-b"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_B</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ipa-extensions"><var class="varname">BLOCK_CODE_IPA_EXTENSIONS</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-spacing-modifier-letters"><var class="varname">BLOCK_CODE_SPACING_MODIFIER_LETTERS</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-diacritical-marks"><var class="varname">BLOCK_CODE_COMBINING_DIACRITICAL_MARKS</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-greek"><var class="varname">BLOCK_CODE_GREEK</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic"><var class="varname">BLOCK_CODE_CYRILLIC</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-armenian"><var class="varname">BLOCK_CODE_ARMENIAN</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hebrew"><var class="varname">BLOCK_CODE_HEBREW</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic"><var class="varname">BLOCK_CODE_ARABIC</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-syriac"><var class="varname">BLOCK_CODE_SYRIAC</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-thaana"><var class="varname">BLOCK_CODE_THAANA</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-devanagari"><var class="varname">BLOCK_CODE_DEVANAGARI</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bengali"><var class="varname">BLOCK_CODE_BENGALI</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-gurmukhi"><var class="varname">BLOCK_CODE_GURMUKHI</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-gujarati"><var class="varname">BLOCK_CODE_GUJARATI</var></a></var>      <span class="initializer"> = 18</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-oriya"><var class="varname">BLOCK_CODE_ORIYA</var></a></var>      <span class="initializer"> = 19</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tamil"><var class="varname">BLOCK_CODE_TAMIL</var></a></var>      <span class="initializer"> = 20</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-telugu"><var class="varname">BLOCK_CODE_TELUGU</var></a></var>      <span class="initializer"> = 21</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kannada"><var class="varname">BLOCK_CODE_KANNADA</var></a></var>      <span class="initializer"> = 22</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-malayalam"><var class="varname">BLOCK_CODE_MALAYALAM</var></a></var>      <span class="initializer"> = 23</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sinhala"><var class="varname">BLOCK_CODE_SINHALA</var></a></var>      <span class="initializer"> = 24</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-thai"><var class="varname">BLOCK_CODE_THAI</var></a></var>      <span class="initializer"> = 25</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lao"><var class="varname">BLOCK_CODE_LAO</var></a></var>      <span class="initializer"> = 26</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tibetan"><var class="varname">BLOCK_CODE_TIBETAN</var></a></var>      <span class="initializer"> = 27</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-myanmar"><var class="varname">BLOCK_CODE_MYANMAR</var></a></var>      <span class="initializer"> = 28</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-georgian"><var class="varname">BLOCK_CODE_GEORGIAN</var></a></var>      <span class="initializer"> = 29</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-jamo"><var class="varname">BLOCK_CODE_HANGUL_JAMO</var></a></var>      <span class="initializer"> = 30</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic"><var class="varname">BLOCK_CODE_ETHIOPIC</var></a></var>      <span class="initializer"> = 31</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cherokee"><var class="varname">BLOCK_CODE_CHEROKEE</var></a></var>      <span class="initializer"> = 32</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-unified-canadian-aboriginal-syllabics"><var class="varname">BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS</var></a></var>      <span class="initializer"> = 33</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ogham"><var class="varname">BLOCK_CODE_OGHAM</var></a></var>      <span class="initializer"> = 34</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-runic"><var class="varname">BLOCK_CODE_RUNIC</var></a></var>      <span class="initializer"> = 35</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-khmer"><var class="varname">BLOCK_CODE_KHMER</var></a></var>      <span class="initializer"> = 36</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mongolian"><var class="varname">BLOCK_CODE_MONGOLIAN</var></a></var>      <span class="initializer"> = 37</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-additional"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL</var></a></var>      <span class="initializer"> = 38</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-greek-extended"><var class="varname">BLOCK_CODE_GREEK_EXTENDED</var></a></var>      <span class="initializer"> = 39</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-general-punctuation"><var class="varname">BLOCK_CODE_GENERAL_PUNCTUATION</var></a></var>      <span class="initializer"> = 40</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-superscripts-and-subscripts"><var class="varname">BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS</var></a></var>      <span class="initializer"> = 41</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-currency-symbols"><var class="varname">BLOCK_CODE_CURRENCY_SYMBOLS</var></a></var>      <span class="initializer"> = 42</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-marks-for-symbols"><var class="varname">BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS</var></a></var>      <span class="initializer"> = 43</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-letterlike-symbols"><var class="varname">BLOCK_CODE_LETTERLIKE_SYMBOLS</var></a></var>      <span class="initializer"> = 44</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-number-forms"><var class="varname">BLOCK_CODE_NUMBER_FORMS</var></a></var>      <span class="initializer"> = 45</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arrows"><var class="varname">BLOCK_CODE_ARROWS</var></a></var>      <span class="initializer"> = 46</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mathematical-operators"><var class="varname">BLOCK_CODE_MATHEMATICAL_OPERATORS</var></a></var>      <span class="initializer"> = 47</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-technical"><var class="varname">BLOCK_CODE_MISCELLANEOUS_TECHNICAL</var></a></var>      <span class="initializer"> = 48</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-control-pictures"><var class="varname">BLOCK_CODE_CONTROL_PICTURES</var></a></var>      <span class="initializer"> = 49</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-optical-character-recognition"><var class="varname">BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION</var></a></var>      <span class="initializer"> = 50</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-alphanumerics"><var class="varname">BLOCK_CODE_ENCLOSED_ALPHANUMERICS</var></a></var>      <span class="initializer"> = 51</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-box-drawing"><var class="varname">BLOCK_CODE_BOX_DRAWING</var></a></var>      <span class="initializer"> = 52</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-block-elements"><var class="varname">BLOCK_CODE_BLOCK_ELEMENTS</var></a></var>      <span class="initializer"> = 53</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-geometric-shapes"><var class="varname">BLOCK_CODE_GEOMETRIC_SHAPES</var></a></var>      <span class="initializer"> = 54</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-symbols"><var class="varname">BLOCK_CODE_MISCELLANEOUS_SYMBOLS</var></a></var>      <span class="initializer"> = 55</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-dingbats"><var class="varname">BLOCK_CODE_DINGBATS</var></a></var>      <span class="initializer"> = 56</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-braille-patterns"><var class="varname">BLOCK_CODE_BRAILLE_PATTERNS</var></a></var>      <span class="initializer"> = 57</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-radicals-supplement"><var class="varname">BLOCK_CODE_CJK_RADICALS_SUPPLEMENT</var></a></var>      <span class="initializer"> = 58</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kangxi-radicals"><var class="varname">BLOCK_CODE_KANGXI_RADICALS</var></a></var>      <span class="initializer"> = 59</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ideographic-description-characters"><var class="varname">BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS</var></a></var>      <span class="initializer"> = 60</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-symbols-and-punctuation"><var class="varname">BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION</var></a></var>      <span class="initializer"> = 61</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hiragana"><var class="varname">BLOCK_CODE_HIRAGANA</var></a></var>      <span class="initializer"> = 62</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-katakana"><var class="varname">BLOCK_CODE_KATAKANA</var></a></var>      <span class="initializer"> = 63</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bopomofo"><var class="varname">BLOCK_CODE_BOPOMOFO</var></a></var>      <span class="initializer"> = 64</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-compatibility-jamo"><var class="varname">BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO</var></a></var>      <span class="initializer"> = 65</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kanbun"><var class="varname">BLOCK_CODE_KANBUN</var></a></var>      <span class="initializer"> = 66</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bopomofo-extended"><var class="varname">BLOCK_CODE_BOPOMOFO_EXTENDED</var></a></var>      <span class="initializer"> = 67</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-cjk-letters-and-months"><var class="varname">BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS</var></a></var>      <span class="initializer"> = 68</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY</var></a></var>      <span class="initializer"> = 69</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-a"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</var></a></var>      <span class="initializer"> = 70</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS</var></a></var>      <span class="initializer"> = 71</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-yi-syllables"><var class="varname">BLOCK_CODE_YI_SYLLABLES</var></a></var>      <span class="initializer"> = 72</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-yi-radicals"><var class="varname">BLOCK_CODE_YI_RADICALS</var></a></var>      <span class="initializer"> = 73</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-syllables"><var class="varname">BLOCK_CODE_HANGUL_SYLLABLES</var></a></var>      <span class="initializer"> = 74</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-high-surrogates"><var class="varname">BLOCK_CODE_HIGH_SURROGATES</var></a></var>      <span class="initializer"> = 75</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-high-private-use-surrogates"><var class="varname">BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES</var></a></var>      <span class="initializer"> = 76</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-low-surrogates"><var class="varname">BLOCK_CODE_LOW_SURROGATES</var></a></var>      <span class="initializer"> = 77</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-private-use-area"><var class="varname">BLOCK_CODE_PRIVATE_USE_AREA</var></a></var>      <span class="initializer"> = 78</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-private-use"><var class="varname">BLOCK_CODE_PRIVATE_USE</var></a></var>      <span class="initializer"> = 78</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility-ideographs"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS</var></a></var>      <span class="initializer"> = 79</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-alphabetic-presentation-forms"><var class="varname">BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS</var></a></var>      <span class="initializer"> = 80</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-presentation-forms-a"><var class="varname">BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A</var></a></var>      <span class="initializer"> = 81</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-half-marks"><var class="varname">BLOCK_CODE_COMBINING_HALF_MARKS</var></a></var>      <span class="initializer"> = 82</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility-forms"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY_FORMS</var></a></var>      <span class="initializer"> = 83</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-small-form-variants"><var class="varname">BLOCK_CODE_SMALL_FORM_VARIANTS</var></a></var>      <span class="initializer"> = 84</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-presentation-forms-b"><var class="varname">BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B</var></a></var>      <span class="initializer"> = 85</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-specials"><var class="varname">BLOCK_CODE_SPECIALS</var></a></var>      <span class="initializer"> = 86</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-halfwidth-and-fullwidth-forms"><var class="varname">BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS</var></a></var>      <span class="initializer"> = 87</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-italic"><var class="varname">BLOCK_CODE_OLD_ITALIC</var></a></var>      <span class="initializer"> = 88</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-gothic"><var class="varname">BLOCK_CODE_GOTHIC</var></a></var>      <span class="initializer"> = 89</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-deseret"><var class="varname">BLOCK_CODE_DESERET</var></a></var>      <span class="initializer"> = 90</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-byzantine-musical-symbols"><var class="varname">BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS</var></a></var>      <span class="initializer"> = 91</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-musical-symbols"><var class="varname">BLOCK_CODE_MUSICAL_SYMBOLS</var></a></var>      <span class="initializer"> = 92</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mathematical-alphanumeric-symbols"><var class="varname">BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS</var></a></var>      <span class="initializer"> = 93</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-b"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</var></a></var>      <span class="initializer"> = 94</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility-ideographs-supplement"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</var></a></var>      <span class="initializer"> = 95</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tags"><var class="varname">BLOCK_CODE_TAGS</var></a></var>      <span class="initializer"> = 96</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-supplement"><var class="varname">BLOCK_CODE_CYRILLIC_SUPPLEMENT</var></a></var>      <span class="initializer"> = 97</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-supplementary"><var class="varname">BLOCK_CODE_CYRILLIC_SUPPLEMENTARY</var></a></var>      <span class="initializer"> = 97</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tagalog"><var class="varname">BLOCK_CODE_TAGALOG</var></a></var>      <span class="initializer"> = 98</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hanunoo"><var class="varname">BLOCK_CODE_HANUNOO</var></a></var>      <span class="initializer"> = 99</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-buhid"><var class="varname">BLOCK_CODE_BUHID</var></a></var>      <span class="initializer"> = 100</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tagbanwa"><var class="varname">BLOCK_CODE_TAGBANWA</var></a></var>      <span class="initializer"> = 101</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-mathematical-symbols-a"><var class="varname">BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A</var></a></var>      <span class="initializer"> = 102</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-arrows-a"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_ARROWS_A</var></a></var>      <span class="initializer"> = 103</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-arrows-b"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_ARROWS_B</var></a></var>      <span class="initializer"> = 104</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-mathematical-symbols-b"><var class="varname">BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B</var></a></var>      <span class="initializer"> = 105</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-mathematical-operators"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS</var></a></var>      <span class="initializer"> = 106</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-katakana-phonetic-extensions"><var class="varname">BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS</var></a></var>      <span class="initializer"> = 107</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-variation-selectors"><var class="varname">BLOCK_CODE_VARIATION_SELECTORS</var></a></var>      <span class="initializer"> = 108</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplementary-private-use-area-a"><var class="varname">BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A</var></a></var>      <span class="initializer"> = 109</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplementary-private-use-area-b"><var class="varname">BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B</var></a></var>      <span class="initializer"> = 110</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-limbu"><var class="varname">BLOCK_CODE_LIMBU</var></a></var>      <span class="initializer"> = 111</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-le"><var class="varname">BLOCK_CODE_TAI_LE</var></a></var>      <span class="initializer"> = 112</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-khmer-symbols"><var class="varname">BLOCK_CODE_KHMER_SYMBOLS</var></a></var>      <span class="initializer"> = 113</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phonetic-extensions"><var class="varname">BLOCK_CODE_PHONETIC_EXTENSIONS</var></a></var>      <span class="initializer"> = 114</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-symbols-and-arrows"><var class="varname">BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS</var></a></var>      <span class="initializer"> = 115</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-yijing-hexagram-symbols"><var class="varname">BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS</var></a></var>      <span class="initializer"> = 116</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-linear-b-syllabary"><var class="varname">BLOCK_CODE_LINEAR_B_SYLLABARY</var></a></var>      <span class="initializer"> = 117</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-linear-b-ideograms"><var class="varname">BLOCK_CODE_LINEAR_B_IDEOGRAMS</var></a></var>      <span class="initializer"> = 118</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-aegean-numbers"><var class="varname">BLOCK_CODE_AEGEAN_NUMBERS</var></a></var>      <span class="initializer"> = 119</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ugaritic"><var class="varname">BLOCK_CODE_UGARITIC</var></a></var>      <span class="initializer"> = 120</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-shavian"><var class="varname">BLOCK_CODE_SHAVIAN</var></a></var>      <span class="initializer"> = 121</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-osmanya"><var class="varname">BLOCK_CODE_OSMANYA</var></a></var>      <span class="initializer"> = 122</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cypriot-syllabary"><var class="varname">BLOCK_CODE_CYPRIOT_SYLLABARY</var></a></var>      <span class="initializer"> = 123</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-xuan-jing-symbols"><var class="varname">BLOCK_CODE_TAI_XUAN_JING_SYMBOLS</var></a></var>      <span class="initializer"> = 124</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-variation-selectors-supplement"><var class="varname">BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT</var></a></var>      <span class="initializer"> = 125</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ancient-greek-musical-notation"><var class="varname">BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION</var></a></var>      <span class="initializer"> = 126</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ancient-greek-numbers"><var class="varname">BLOCK_CODE_ANCIENT_GREEK_NUMBERS</var></a></var>      <span class="initializer"> = 127</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-supplement"><var class="varname">BLOCK_CODE_ARABIC_SUPPLEMENT</var></a></var>      <span class="initializer"> = 128</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-buginese"><var class="varname">BLOCK_CODE_BUGINESE</var></a></var>      <span class="initializer"> = 129</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-strokes"><var class="varname">BLOCK_CODE_CJK_STROKES</var></a></var>      <span class="initializer"> = 130</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-diacritical-marks-supplement"><var class="varname">BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT</var></a></var>      <span class="initializer"> = 131</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-coptic"><var class="varname">BLOCK_CODE_COPTIC</var></a></var>      <span class="initializer"> = 132</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic-extended"><var class="varname">BLOCK_CODE_ETHIOPIC_EXTENDED</var></a></var>      <span class="initializer"> = 133</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic-supplement"><var class="varname">BLOCK_CODE_ETHIOPIC_SUPPLEMENT</var></a></var>      <span class="initializer"> = 134</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-georgian-supplement"><var class="varname">BLOCK_CODE_GEORGIAN_SUPPLEMENT</var></a></var>      <span class="initializer"> = 135</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-glagolitic"><var class="varname">BLOCK_CODE_GLAGOLITIC</var></a></var>      <span class="initializer"> = 136</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kharoshthi"><var class="varname">BLOCK_CODE_KHAROSHTHI</var></a></var>      <span class="initializer"> = 137</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-modifier-tone-letters"><var class="varname">BLOCK_CODE_MODIFIER_TONE_LETTERS</var></a></var>      <span class="initializer"> = 138</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-new-tai-lue"><var class="varname">BLOCK_CODE_NEW_TAI_LUE</var></a></var>      <span class="initializer"> = 139</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-persian"><var class="varname">BLOCK_CODE_OLD_PERSIAN</var></a></var>      <span class="initializer"> = 140</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phonetic-extensions-supplement"><var class="varname">BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT</var></a></var>      <span class="initializer"> = 141</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-punctuation"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION</var></a></var>      <span class="initializer"> = 142</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-syloti-nagri"><var class="varname">BLOCK_CODE_SYLOTI_NAGRI</var></a></var>      <span class="initializer"> = 143</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tifinagh"><var class="varname">BLOCK_CODE_TIFINAGH</var></a></var>      <span class="initializer"> = 144</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-vertical-forms"><var class="varname">BLOCK_CODE_VERTICAL_FORMS</var></a></var>      <span class="initializer"> = 145</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-nko"><var class="varname">BLOCK_CODE_NKO</var></a></var>      <span class="initializer"> = 146</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-balinese"><var class="varname">BLOCK_CODE_BALINESE</var></a></var>      <span class="initializer"> = 147</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-c"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_C</var></a></var>      <span class="initializer"> = 148</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-d"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_D</var></a></var>      <span class="initializer"> = 149</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phags-pa"><var class="varname">BLOCK_CODE_PHAGS_PA</var></a></var>      <span class="initializer"> = 150</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phoenician"><var class="varname">BLOCK_CODE_PHOENICIAN</var></a></var>      <span class="initializer"> = 151</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cuneiform"><var class="varname">BLOCK_CODE_CUNEIFORM</var></a></var>      <span class="initializer"> = 152</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cuneiform-numbers-and-punctuation"><var class="varname">BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION</var></a></var>      <span class="initializer"> = 153</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-counting-rod-numerals"><var class="varname">BLOCK_CODE_COUNTING_ROD_NUMERALS</var></a></var>      <span class="initializer"> = 154</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sundanese"><var class="varname">BLOCK_CODE_SUNDANESE</var></a></var>      <span class="initializer"> = 155</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lepcha"><var class="varname">BLOCK_CODE_LEPCHA</var></a></var>      <span class="initializer"> = 156</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ol-chiki"><var class="varname">BLOCK_CODE_OL_CHIKI</var></a></var>      <span class="initializer"> = 157</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-extended-a"><var class="varname">BLOCK_CODE_CYRILLIC_EXTENDED_A</var></a></var>      <span class="initializer"> = 158</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-vai"><var class="varname">BLOCK_CODE_VAI</var></a></var>      <span class="initializer"> = 159</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-extended-b"><var class="varname">BLOCK_CODE_CYRILLIC_EXTENDED_B</var></a></var>      <span class="initializer"> = 160</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-saurashtra"><var class="varname">BLOCK_CODE_SAURASHTRA</var></a></var>      <span class="initializer"> = 161</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kayah-li"><var class="varname">BLOCK_CODE_KAYAH_LI</var></a></var>      <span class="initializer"> = 162</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-rejang"><var class="varname">BLOCK_CODE_REJANG</var></a></var>      <span class="initializer"> = 163</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cham"><var class="varname">BLOCK_CODE_CHAM</var></a></var>      <span class="initializer"> = 164</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ancient-symbols"><var class="varname">BLOCK_CODE_ANCIENT_SYMBOLS</var></a></var>      <span class="initializer"> = 165</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phaistos-disc"><var class="varname">BLOCK_CODE_PHAISTOS_DISC</var></a></var>      <span class="initializer"> = 166</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lycian"><var class="varname">BLOCK_CODE_LYCIAN</var></a></var>      <span class="initializer"> = 167</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-carian"><var class="varname">BLOCK_CODE_CARIAN</var></a></var>      <span class="initializer"> = 168</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lydian"><var class="varname">BLOCK_CODE_LYDIAN</var></a></var>      <span class="initializer"> = 169</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mahjong-tiles"><var class="varname">BLOCK_CODE_MAHJONG_TILES</var></a></var>      <span class="initializer"> = 170</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-domino-tiles"><var class="varname">BLOCK_CODE_DOMINO_TILES</var></a></var>      <span class="initializer"> = 171</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-samaritan"><var class="varname">BLOCK_CODE_SAMARITAN</var></a></var>      <span class="initializer"> = 172</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-unified-canadian-aboriginal-syllabics-extended"><var class="varname">BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED</var></a></var>      <span class="initializer"> = 173</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-tham"><var class="varname">BLOCK_CODE_TAI_THAM</var></a></var>      <span class="initializer"> = 174</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-vedic-extensions"><var class="varname">BLOCK_CODE_VEDIC_EXTENSIONS</var></a></var>      <span class="initializer"> = 175</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lisu"><var class="varname">BLOCK_CODE_LISU</var></a></var>      <span class="initializer"> = 176</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bamum"><var class="varname">BLOCK_CODE_BAMUM</var></a></var>      <span class="initializer"> = 177</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-common-indic-number-forms"><var class="varname">BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS</var></a></var>      <span class="initializer"> = 178</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-devanagari-extended"><var class="varname">BLOCK_CODE_DEVANAGARI_EXTENDED</var></a></var>      <span class="initializer"> = 179</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-jamo-extended-a"><var class="varname">BLOCK_CODE_HANGUL_JAMO_EXTENDED_A</var></a></var>      <span class="initializer"> = 180</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-javanese"><var class="varname">BLOCK_CODE_JAVANESE</var></a></var>      <span class="initializer"> = 181</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-myanmar-extended-a"><var class="varname">BLOCK_CODE_MYANMAR_EXTENDED_A</var></a></var>      <span class="initializer"> = 182</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-viet"><var class="varname">BLOCK_CODE_TAI_VIET</var></a></var>      <span class="initializer"> = 183</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meetei-mayek"><var class="varname">BLOCK_CODE_MEETEI_MAYEK</var></a></var>      <span class="initializer"> = 184</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-jamo-extended-b"><var class="varname">BLOCK_CODE_HANGUL_JAMO_EXTENDED_B</var></a></var>      <span class="initializer"> = 185</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-imperial-aramaic"><var class="varname">BLOCK_CODE_IMPERIAL_ARAMAIC</var></a></var>      <span class="initializer"> = 186</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-south-arabian"><var class="varname">BLOCK_CODE_OLD_SOUTH_ARABIAN</var></a></var>      <span class="initializer"> = 187</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-avestan"><var class="varname">BLOCK_CODE_AVESTAN</var></a></var>      <span class="initializer"> = 188</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-inscriptional-parthian"><var class="varname">BLOCK_CODE_INSCRIPTIONAL_PARTHIAN</var></a></var>      <span class="initializer"> = 189</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-inscriptional-pahlavi"><var class="varname">BLOCK_CODE_INSCRIPTIONAL_PAHLAVI</var></a></var>      <span class="initializer"> = 190</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-turkic"><var class="varname">BLOCK_CODE_OLD_TURKIC</var></a></var>      <span class="initializer"> = 191</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-rumi-numeral-symbols"><var class="varname">BLOCK_CODE_RUMI_NUMERAL_SYMBOLS</var></a></var>      <span class="initializer"> = 192</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kaithi"><var class="varname">BLOCK_CODE_KAITHI</var></a></var>      <span class="initializer"> = 193</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-egyptian-hieroglyphs"><var class="varname">BLOCK_CODE_EGYPTIAN_HIEROGLYPHS</var></a></var>      <span class="initializer"> = 194</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-alphanumeric-supplement"><var class="varname">BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT</var></a></var>      <span class="initializer"> = 195</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-ideographic-supplement"><var class="varname">BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</var></a></var>      <span class="initializer"> = 196</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-c"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C</var></a></var>      <span class="initializer"> = 197</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mandaic"><var class="varname">BLOCK_CODE_MANDAIC</var></a></var>      <span class="initializer"> = 198</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-batak"><var class="varname">BLOCK_CODE_BATAK</var></a></var>      <span class="initializer"> = 199</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic-extended-a"><var class="varname">BLOCK_CODE_ETHIOPIC_EXTENDED_A</var></a></var>      <span class="initializer"> = 200</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-brahmi"><var class="varname">BLOCK_CODE_BRAHMI</var></a></var>      <span class="initializer"> = 201</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bamum-supplement"><var class="varname">BLOCK_CODE_BAMUM_SUPPLEMENT</var></a></var>      <span class="initializer"> = 202</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kana-supplement"><var class="varname">BLOCK_CODE_KANA_SUPPLEMENT</var></a></var>      <span class="initializer"> = 203</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-playing-cards"><var class="varname">BLOCK_CODE_PLAYING_CARDS</var></a></var>      <span class="initializer"> = 204</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-symbols-and-pictographs"><var class="varname">BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS</var></a></var>      <span class="initializer"> = 205</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-emoticons"><var class="varname">BLOCK_CODE_EMOTICONS</var></a></var>      <span class="initializer"> = 206</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-transport-and-map-symbols"><var class="varname">BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS</var></a></var>      <span class="initializer"> = 207</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-alchemical-symbols"><var class="varname">BLOCK_CODE_ALCHEMICAL_SYMBOLS</var></a></var>      <span class="initializer"> = 208</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-d"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D</var></a></var>      <span class="initializer"> = 209</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-extended-a"><var class="varname">BLOCK_CODE_ARABIC_EXTENDED_A</var></a></var>      <span class="initializer"> = 210</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-mathematical-alphabetic-symbols"><var class="varname">BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</var></a></var>      <span class="initializer"> = 211</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-chakma"><var class="varname">BLOCK_CODE_CHAKMA</var></a></var>      <span class="initializer"> = 212</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meetei-mayek-extensions"><var class="varname">BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS</var></a></var>      <span class="initializer"> = 213</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meroitic-cursive"><var class="varname">BLOCK_CODE_MEROITIC_CURSIVE</var></a></var>      <span class="initializer"> = 214</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meroitic-hieroglyphs"><var class="varname">BLOCK_CODE_MEROITIC_HIEROGLYPHS</var></a></var>      <span class="initializer"> = 215</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miao"><var class="varname">BLOCK_CODE_MIAO</var></a></var>      <span class="initializer"> = 216</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sharada"><var class="varname">BLOCK_CODE_SHARADA</var></a></var>      <span class="initializer"> = 217</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sora-sompeng"><var class="varname">BLOCK_CODE_SORA_SOMPENG</var></a></var>      <span class="initializer"> = 218</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sundanese-supplement"><var class="varname">BLOCK_CODE_SUNDANESE_SUPPLEMENT</var></a></var>      <span class="initializer"> = 219</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-takri"><var class="varname">BLOCK_CODE_TAKRI</var></a></var>      <span class="initializer"> = 220</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-count"><var class="varname">BLOCK_CODE_COUNT</var></a></var>      <span class="initializer"> = 221</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-invalid-code"><var class="varname">BLOCK_CODE_INVALID_CODE</var></a></var>      <span class="initializer"> = -1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-none"><var class="varname">BPT_NONE</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-open"><var class="varname">BPT_OPEN</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-close"><var class="varname">BPT_CLOSE</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-count"><var class="varname">BPT_COUNT</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-neutral"><var class="varname">EA_NEUTRAL</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-ambiguous"><var class="varname">EA_AMBIGUOUS</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-halfwidth"><var class="varname">EA_HALFWIDTH</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-fullwidth"><var class="varname">EA_FULLWIDTH</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-narrow"><var class="varname">EA_NARROW</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-wide"><var class="varname">EA_WIDE</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-count"><var class="varname">EA_COUNT</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.unicode-char-name"><var class="varname">UNICODE_CHAR_NAME</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.unicode-10-char-name"><var class="varname">UNICODE_10_CHAR_NAME</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.extended-char-name"><var class="varname">EXTENDED_CHAR_NAME</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-name-alias"><var class="varname">CHAR_NAME_ALIAS</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-name-choice-count"><var class="varname">CHAR_NAME_CHOICE_COUNT</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.short-property-name"><var class="varname">SHORT_PROPERTY_NAME</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.long-property-name"><var class="varname">LONG_PROPERTY_NAME</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-name-choice-count"><var class="varname">PROPERTY_NAME_CHOICE_COUNT</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-none"><var class="varname">DT_NONE</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-canonical"><var class="varname">DT_CANONICAL</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-compat"><var class="varname">DT_COMPAT</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-circle"><var class="varname">DT_CIRCLE</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-final"><var class="varname">DT_FINAL</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-font"><var class="varname">DT_FONT</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-fraction"><var class="varname">DT_FRACTION</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-initial"><var class="varname">DT_INITIAL</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-isolated"><var class="varname">DT_ISOLATED</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-medial"><var class="varname">DT_MEDIAL</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-narrow"><var class="varname">DT_NARROW</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-nobreak"><var class="varname">DT_NOBREAK</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-small"><var class="varname">DT_SMALL</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-square"><var class="varname">DT_SQUARE</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-sub"><var class="varname">DT_SUB</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-super"><var class="varname">DT_SUPER</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-vertical"><var class="varname">DT_VERTICAL</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-wide"><var class="varname">DT_WIDE</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-count"><var class="varname">DT_COUNT</var></a></var>      <span class="initializer"> = 18</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-non-joining"><var class="varname">JT_NON_JOINING</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-join-causing"><var class="varname">JT_JOIN_CAUSING</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-dual-joining"><var class="varname">JT_DUAL_JOINING</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-left-joining"><var class="varname">JT_LEFT_JOINING</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-right-joining"><var class="varname">JT_RIGHT_JOINING</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-transparent"><var class="varname">JT_TRANSPARENT</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-count"><var class="varname">JT_COUNT</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-no-joining-group"><var class="varname">JG_NO_JOINING_GROUP</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-ain"><var class="varname">JG_AIN</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-alaph"><var class="varname">JG_ALAPH</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-alef"><var class="varname">JG_ALEF</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-beh"><var class="varname">JG_BEH</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-beth"><var class="varname">JG_BETH</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-dal"><var class="varname">JG_DAL</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-dalath-rish"><var class="varname">JG_DALATH_RISH</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-e"><var class="varname">JG_E</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-feh"><var class="varname">JG_FEH</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-final-semkath"><var class="varname">JG_FINAL_SEMKATH</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-gaf"><var class="varname">JG_GAF</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-gamal"><var class="varname">JG_GAMAL</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-hah"><var class="varname">JG_HAH</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-teh-marbuta-goal"><var class="varname">JG_TEH_MARBUTA_GOAL</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-hamza-on-heh-goal"><var class="varname">JG_HAMZA_ON_HEH_GOAL</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-he"><var class="varname">JG_HE</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-heh"><var class="varname">JG_HEH</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-heh-goal"><var class="varname">JG_HEH_GOAL</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-heth"><var class="varname">JG_HETH</var></a></var>      <span class="initializer"> = 18</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-kaf"><var class="varname">JG_KAF</var></a></var>      <span class="initializer"> = 19</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-kaph"><var class="varname">JG_KAPH</var></a></var>      <span class="initializer"> = 20</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-knotted-heh"><var class="varname">JG_KNOTTED_HEH</var></a></var>      <span class="initializer"> = 21</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-lam"><var class="varname">JG_LAM</var></a></var>      <span class="initializer"> = 22</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-lamadh"><var class="varname">JG_LAMADH</var></a></var>      <span class="initializer"> = 23</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-meem"><var class="varname">JG_MEEM</var></a></var>      <span class="initializer"> = 24</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-mim"><var class="varname">JG_MIM</var></a></var>      <span class="initializer"> = 25</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-noon"><var class="varname">JG_NOON</var></a></var>      <span class="initializer"> = 26</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-nun"><var class="varname">JG_NUN</var></a></var>      <span class="initializer"> = 27</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-pe"><var class="varname">JG_PE</var></a></var>      <span class="initializer"> = 28</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-qaf"><var class="varname">JG_QAF</var></a></var>      <span class="initializer"> = 29</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-qaph"><var class="varname">JG_QAPH</var></a></var>      <span class="initializer"> = 30</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-reh"><var class="varname">JG_REH</var></a></var>      <span class="initializer"> = 31</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-reversed-pe"><var class="varname">JG_REVERSED_PE</var></a></var>      <span class="initializer"> = 32</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-sad"><var class="varname">JG_SAD</var></a></var>      <span class="initializer"> = 33</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-sadhe"><var class="varname">JG_SADHE</var></a></var>      <span class="initializer"> = 34</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-seen"><var class="varname">JG_SEEN</var></a></var>      <span class="initializer"> = 35</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-semkath"><var class="varname">JG_SEMKATH</var></a></var>      <span class="initializer"> = 36</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-shin"><var class="varname">JG_SHIN</var></a></var>      <span class="initializer"> = 37</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-swash-kaf"><var class="varname">JG_SWASH_KAF</var></a></var>      <span class="initializer"> = 38</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-syriac-waw"><var class="varname">JG_SYRIAC_WAW</var></a></var>      <span class="initializer"> = 39</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-tah"><var class="varname">JG_TAH</var></a></var>      <span class="initializer"> = 40</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-taw"><var class="varname">JG_TAW</var></a></var>      <span class="initializer"> = 41</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-teh-marbuta"><var class="varname">JG_TEH_MARBUTA</var></a></var>      <span class="initializer"> = 42</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-teth"><var class="varname">JG_TETH</var></a></var>      <span class="initializer"> = 43</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-waw"><var class="varname">JG_WAW</var></a></var>      <span class="initializer"> = 44</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yeh"><var class="varname">JG_YEH</var></a></var>      <span class="initializer"> = 45</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yeh-barree"><var class="varname">JG_YEH_BARREE</var></a></var>      <span class="initializer"> = 46</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yeh-with-tail"><var class="varname">JG_YEH_WITH_TAIL</var></a></var>      <span class="initializer"> = 47</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yudh"><var class="varname">JG_YUDH</var></a></var>      <span class="initializer"> = 48</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yudh-he"><var class="varname">JG_YUDH_HE</var></a></var>      <span class="initializer"> = 49</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-zain"><var class="varname">JG_ZAIN</var></a></var>      <span class="initializer"> = 50</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-fe"><var class="varname">JG_FE</var></a></var>      <span class="initializer"> = 51</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-khaph"><var class="varname">JG_KHAPH</var></a></var>      <span class="initializer"> = 52</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-zhain"><var class="varname">JG_ZHAIN</var></a></var>      <span class="initializer"> = 53</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-burushaski-yeh-barree"><var class="varname">JG_BURUSHASKI_YEH_BARREE</var></a></var>      <span class="initializer"> = 54</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-farsi-yeh"><var class="varname">JG_FARSI_YEH</var></a></var>      <span class="initializer"> = 55</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-nya"><var class="varname">JG_NYA</var></a></var>      <span class="initializer"> = 56</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-rohingya-yeh"><var class="varname">JG_ROHINGYA_YEH</var></a></var>      <span class="initializer"> = 57</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-count"><var class="varname">JG_COUNT</var></a></var>      <span class="initializer"> = 58</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-other"><var class="varname">GCB_OTHER</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-control"><var class="varname">GCB_CONTROL</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-cr"><var class="varname">GCB_CR</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-extend"><var class="varname">GCB_EXTEND</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-l"><var class="varname">GCB_L</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-lf"><var class="varname">GCB_LF</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-lv"><var class="varname">GCB_LV</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-lvt"><var class="varname">GCB_LVT</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-t"><var class="varname">GCB_T</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-v"><var class="varname">GCB_V</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-spacing-mark"><var class="varname">GCB_SPACING_MARK</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-prepend"><var class="varname">GCB_PREPEND</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-regional-indicator"><var class="varname">GCB_REGIONAL_INDICATOR</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-count"><var class="varname">GCB_COUNT</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-other"><var class="varname">WB_OTHER</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-aletter"><var class="varname">WB_ALETTER</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-format"><var class="varname">WB_FORMAT</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-katakana"><var class="varname">WB_KATAKANA</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-midletter"><var class="varname">WB_MIDLETTER</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-midnum"><var class="varname">WB_MIDNUM</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-numeric"><var class="varname">WB_NUMERIC</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-extendnumlet"><var class="varname">WB_EXTENDNUMLET</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-cr"><var class="varname">WB_CR</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-extend"><var class="varname">WB_EXTEND</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-lf"><var class="varname">WB_LF</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-midnumlet"><var class="varname">WB_MIDNUMLET</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-newline"><var class="varname">WB_NEWLINE</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-regional-indicator"><var class="varname">WB_REGIONAL_INDICATOR</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-hebrew-letter"><var class="varname">WB_HEBREW_LETTER</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-single-quote"><var class="varname">WB_SINGLE_QUOTE</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-double-quote"><var class="varname">WB_DOUBLE_QUOTE</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-count"><var class="varname">WB_COUNT</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-other"><var class="varname">SB_OTHER</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-aterm"><var class="varname">SB_ATERM</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-close"><var class="varname">SB_CLOSE</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-format"><var class="varname">SB_FORMAT</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-lower"><var class="varname">SB_LOWER</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-numeric"><var class="varname">SB_NUMERIC</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-oletter"><var class="varname">SB_OLETTER</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-sep"><var class="varname">SB_SEP</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-sp"><var class="varname">SB_SP</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-sterm"><var class="varname">SB_STERM</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-upper"><var class="varname">SB_UPPER</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-cr"><var class="varname">SB_CR</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-extend"><var class="varname">SB_EXTEND</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-lf"><var class="varname">SB_LF</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-scontinue"><var class="varname">SB_SCONTINUE</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-count"><var class="varname">SB_COUNT</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-unknown"><var class="varname">LB_UNKNOWN</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-ambiguous"><var class="varname">LB_AMBIGUOUS</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-alphabetic"><var class="varname">LB_ALPHABETIC</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-both"><var class="varname">LB_BREAK_BOTH</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-after"><var class="varname">LB_BREAK_AFTER</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-before"><var class="varname">LB_BREAK_BEFORE</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-mandatory-break"><var class="varname">LB_MANDATORY_BREAK</var></a></var>      <span class="initializer"> = 6</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-contingent-break"><var class="varname">LB_CONTINGENT_BREAK</var></a></var>      <span class="initializer"> = 7</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-close-punctuation"><var class="varname">LB_CLOSE_PUNCTUATION</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-combining-mark"><var class="varname">LB_COMBINING_MARK</var></a></var>      <span class="initializer"> = 9</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-carriage-return"><var class="varname">LB_CARRIAGE_RETURN</var></a></var>      <span class="initializer"> = 10</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-exclamation"><var class="varname">LB_EXCLAMATION</var></a></var>      <span class="initializer"> = 11</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-glue"><var class="varname">LB_GLUE</var></a></var>      <span class="initializer"> = 12</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-hyphen"><var class="varname">LB_HYPHEN</var></a></var>      <span class="initializer"> = 13</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-ideographic"><var class="varname">LB_IDEOGRAPHIC</var></a></var>      <span class="initializer"> = 14</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-inseparable"><var class="varname">LB_INSEPARABLE</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-inseperable"><var class="varname">LB_INSEPERABLE</var></a></var>      <span class="initializer"> = 15</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-infix-numeric"><var class="varname">LB_INFIX_NUMERIC</var></a></var>      <span class="initializer"> = 16</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-line-feed"><var class="varname">LB_LINE_FEED</var></a></var>      <span class="initializer"> = 17</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-nonstarter"><var class="varname">LB_NONSTARTER</var></a></var>      <span class="initializer"> = 18</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-numeric"><var class="varname">LB_NUMERIC</var></a></var>      <span class="initializer"> = 19</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-open-punctuation"><var class="varname">LB_OPEN_PUNCTUATION</var></a></var>      <span class="initializer"> = 20</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-postfix-numeric"><var class="varname">LB_POSTFIX_NUMERIC</var></a></var>      <span class="initializer"> = 21</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-prefix-numeric"><var class="varname">LB_PREFIX_NUMERIC</var></a></var>      <span class="initializer"> = 22</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-quotation"><var class="varname">LB_QUOTATION</var></a></var>      <span class="initializer"> = 23</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-complex-context"><var class="varname">LB_COMPLEX_CONTEXT</var></a></var>      <span class="initializer"> = 24</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-surrogate"><var class="varname">LB_SURROGATE</var></a></var>      <span class="initializer"> = 25</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-space"><var class="varname">LB_SPACE</var></a></var>      <span class="initializer"> = 26</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-symbols"><var class="varname">LB_BREAK_SYMBOLS</var></a></var>      <span class="initializer"> = 27</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-zwspace"><var class="varname">LB_ZWSPACE</var></a></var>      <span class="initializer"> = 28</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-next-line"><var class="varname">LB_NEXT_LINE</var></a></var>      <span class="initializer"> = 29</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-word-joiner"><var class="varname">LB_WORD_JOINER</var></a></var>      <span class="initializer"> = 30</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-h2"><var class="varname">LB_H2</var></a></var>      <span class="initializer"> = 31</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-h3"><var class="varname">LB_H3</var></a></var>      <span class="initializer"> = 32</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-jl"><var class="varname">LB_JL</var></a></var>      <span class="initializer"> = 33</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-jt"><var class="varname">LB_JT</var></a></var>      <span class="initializer"> = 34</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-jv"><var class="varname">LB_JV</var></a></var>      <span class="initializer"> = 35</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-close-parenthesis"><var class="varname">LB_CLOSE_PARENTHESIS</var></a></var>      <span class="initializer"> = 36</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-conditional-japanese-starter"><var class="varname">LB_CONDITIONAL_JAPANESE_STARTER</var></a></var>      <span class="initializer"> = 37</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-hebrew-letter"><var class="varname">LB_HEBREW_LETTER</var></a></var>      <span class="initializer"> = 38</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-regional-indicator"><var class="varname">LB_REGIONAL_INDICATOR</var></a></var>      <span class="initializer"> = 39</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-count"><var class="varname">LB_COUNT</var></a></var>      <span class="initializer"> = 40</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-none"><var class="varname">NT_NONE</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-decimal"><var class="varname">NT_DECIMAL</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-digit"><var class="varname">NT_DIGIT</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-numeric"><var class="varname">NT_NUMERIC</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-count"><var class="varname">NT_COUNT</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-not-applicable"><var class="varname">HST_NOT_APPLICABLE</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-leading-jamo"><var class="varname">HST_LEADING_JAMO</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-vowel-jamo"><var class="varname">HST_VOWEL_JAMO</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-trailing-jamo"><var class="varname">HST_TRAILING_JAMO</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-lv-syllable"><var class="varname">HST_LV_SYLLABLE</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-lvt-syllable"><var class="varname">HST_LVT_SYLLABLE</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">integer</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-count"><var class="varname">HST_COUNT</var></a></var>      <span class="initializer"> = 6</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.charage.php" class="methodname">charAge</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.chardigitvalue.php" class="methodname">charDigitValue</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.chardirection.php" class="methodname">charDirection</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.charfromname.php" class="methodname">charFromName</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$characterName</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.charmirror.php" class="methodname">charMirror</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.charname.php" class="methodname">charName</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.chartype.php" class="methodname">charType</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.chr.php" class="methodname">chr</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.digit.php" class="methodname">digit</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$codepoint</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$radix</code><span class="initializer"> = 10</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.enumcharnames.php" class="methodname">enumCharNames</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$start</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$limit</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.enumchartypes.php" class="methodname">enumCharTypes</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.foldcase.php" class="methodname">foldCase</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer"> = <strong><code>IntlChar::FOLD_CASE_DEFAULT</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.fordigit.php" class="methodname">forDigit</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$digit</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$radix</code><span class="initializer"> = 10</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getbidipairedbracket.php" class="methodname">getBidiPairedBracket</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getblockcode.php" class="methodname">getBlockCode</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getcombiningclass.php" class="methodname">getCombiningClass</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getfc-nfkc-closure.php" class="methodname">getFC_NFKC_Closure</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getintpropertymaxvalue.php" class="methodname">getIntPropertyMaxValue</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getintpropertyminvalue.php" class="methodname">getIntPropertyMinValue</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getintpropertyvalue.php" class="methodname">getIntPropertyValue</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">float</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getnumericvalue.php" class="methodname">getNumericValue</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getpropertyenum.php" class="methodname">getPropertyEnum</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$alias</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getpropertyname.php" class="methodname">getPropertyName</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getpropertyvalueenum.php" class="methodname">getPropertyValueEnum</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getpropertyvaluename.php" class="methodname">getPropertyValueName</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$value</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.getunicodeversion.php" class="methodname">getUnicodeVersion</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.hasbinaryproperty.php" class="methodname">hasBinaryProperty</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isalnum.php" class="methodname">isalnum</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isalpha.php" class="methodname">isalpha</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isbase.php" class="methodname">isbase</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isblank.php" class="methodname">isblank</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.iscntrl.php" class="methodname">iscntrl</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isdefined.php" class="methodname">isdefined</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isdigit.php" class="methodname">isdigit</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isgraph.php" class="methodname">isgraph</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isidignorable.php" class="methodname">isIDIgnorable</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isidpart.php" class="methodname">isIDPart</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isidstart.php" class="methodname">isIDStart</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isisocontrol.php" class="methodname">isISOControl</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isjavaidpart.php" class="methodname">isJavaIDPart</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isjavaidstart.php" class="methodname">isJavaIDStart</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isjavaspacechar.php" class="methodname">isJavaSpaceChar</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.islower.php" class="methodname">islower</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.ismirrored.php" class="methodname">isMirrored</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isprint.php" class="methodname">isprint</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.ispunct.php" class="methodname">ispunct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isspace.php" class="methodname">isspace</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.istitle.php" class="methodname">istitle</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isualphabetic.php" class="methodname">isUAlphabetic</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isulowercase.php" class="methodname">isULowercase</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isupper.php" class="methodname">isupper</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isuuppercase.php" class="methodname">isUUppercase</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isuwhitespace.php" class="methodname">isUWhiteSpace</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.iswhitespace.php" class="methodname">isWhitespace</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.isxdigit.php" class="methodname">isxdigit</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.ord.php" class="methodname">ord</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$character</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.tolower.php" class="methodname">tolower</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.totitle.php" class="methodname">totitle</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/intlchar.toupper.php" class="methodname">toupper</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>     }</div>     </div>     <div class="section" id="intlchar.constants">    <h2 class="title">预定义常量</h2>    <dl>             <dt id="intlchar.constants.unicode-version"><strong><code>IntlChar::UNICODE_VERSION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.codepoint-min"><strong><code>IntlChar::CODEPOINT_MIN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.codepoint-max"><strong><code>IntlChar::CODEPOINT_MAX</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.no-numeric-value"><strong><code>IntlChar::NO_NUMERIC_VALUE</code></strong></dt>       <dd>        <p class="para">        Special value that is returned by        <span class="methodname">{@link IntlChar::getNumericValue()}</span> when no numeric value        is defined for a code point.       </p>      </dd>                  <dt id="intlchar.constants.property-alphabetic"><strong><code>IntlChar::PROPERTY_ALPHABETIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-binary-start"><strong><code>IntlChar::PROPERTY_BINARY_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-ascii-hex-digit"><strong><code>IntlChar::PROPERTY_ASCII_HEX_DIGIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-bidi-control"><strong><code>IntlChar::PROPERTY_BIDI_CONTROL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-bidi-mirrored"><strong><code>IntlChar::PROPERTY_BIDI_MIRRORED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-dash"><strong><code>IntlChar::PROPERTY_DASH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-default-ignorable-code-point"><strong><code>IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-deprecated"><strong><code>IntlChar::PROPERTY_DEPRECATED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-diacritic"><strong><code>IntlChar::PROPERTY_DIACRITIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-extender"><strong><code>IntlChar::PROPERTY_EXTENDER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-full-composition-exclusion"><strong><code>IntlChar::PROPERTY_FULL_COMPOSITION_EXCLUSION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-grapheme-base"><strong><code>IntlChar::PROPERTY_GRAPHEME_BASE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-grapheme-extend"><strong><code>IntlChar::PROPERTY_GRAPHEME_EXTEND</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-grapheme-link"><strong><code>IntlChar::PROPERTY_GRAPHEME_LINK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-hex-digit"><strong><code>IntlChar::PROPERTY_HEX_DIGIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-hyphen"><strong><code>IntlChar::PROPERTY_HYPHEN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-id-continue"><strong><code>IntlChar::PROPERTY_ID_CONTINUE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-id-start"><strong><code>IntlChar::PROPERTY_ID_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-ideographic"><strong><code>IntlChar::PROPERTY_IDEOGRAPHIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-ids-binary-operator"><strong><code>IntlChar::PROPERTY_IDS_BINARY_OPERATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-ids-trinary-operator"><strong><code>IntlChar::PROPERTY_IDS_TRINARY_OPERATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-join-control"><strong><code>IntlChar::PROPERTY_JOIN_CONTROL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-logical-order-exception"><strong><code>IntlChar::PROPERTY_LOGICAL_ORDER_EXCEPTION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-lowercase"><strong><code>IntlChar::PROPERTY_LOWERCASE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-math"><strong><code>IntlChar::PROPERTY_MATH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-noncharacter-code-point"><strong><code>IntlChar::PROPERTY_NONCHARACTER_CODE_POINT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-quotation-mark"><strong><code>IntlChar::PROPERTY_QUOTATION_MARK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-radical"><strong><code>IntlChar::PROPERTY_RADICAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-soft-dotted"><strong><code>IntlChar::PROPERTY_SOFT_DOTTED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-terminal-punctuation"><strong><code>IntlChar::PROPERTY_TERMINAL_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-unified-ideograph"><strong><code>IntlChar::PROPERTY_UNIFIED_IDEOGRAPH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-uppercase"><strong><code>IntlChar::PROPERTY_UPPERCASE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-white-space"><strong><code>IntlChar::PROPERTY_WHITE_SPACE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-xid-continue"><strong><code>IntlChar::PROPERTY_XID_CONTINUE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-xid-start"><strong><code>IntlChar::PROPERTY_XID_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-case-sensitive"><strong><code>IntlChar::PROPERTY_CASE_SENSITIVE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-s-term"><strong><code>IntlChar::PROPERTY_S_TERM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-variation-selector"><strong><code>IntlChar::PROPERTY_VARIATION_SELECTOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfd-inert"><strong><code>IntlChar::PROPERTY_NFD_INERT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfkd-inert"><strong><code>IntlChar::PROPERTY_NFKD_INERT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfc-inert"><strong><code>IntlChar::PROPERTY_NFC_INERT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfkc-inert"><strong><code>IntlChar::PROPERTY_NFKC_INERT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-segment-starter"><strong><code>IntlChar::PROPERTY_SEGMENT_STARTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-pattern-syntax"><strong><code>IntlChar::PROPERTY_PATTERN_SYNTAX</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-pattern-white-space"><strong><code>IntlChar::PROPERTY_PATTERN_WHITE_SPACE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-posix-alnum"><strong><code>IntlChar::PROPERTY_POSIX_ALNUM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-posix-blank"><strong><code>IntlChar::PROPERTY_POSIX_BLANK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-posix-graph"><strong><code>IntlChar::PROPERTY_POSIX_GRAPH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-posix-print"><strong><code>IntlChar::PROPERTY_POSIX_PRINT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-posix-xdigit"><strong><code>IntlChar::PROPERTY_POSIX_XDIGIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-cased"><strong><code>IntlChar::PROPERTY_CASED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-case-ignorable"><strong><code>IntlChar::PROPERTY_CASE_IGNORABLE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-changes-when-lowercased"><strong><code>IntlChar::PROPERTY_CHANGES_WHEN_LOWERCASED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-changes-when-uppercased"><strong><code>IntlChar::PROPERTY_CHANGES_WHEN_UPPERCASED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-changes-when-titlecased"><strong><code>IntlChar::PROPERTY_CHANGES_WHEN_TITLECASED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-changes-when-casefolded"><strong><code>IntlChar::PROPERTY_CHANGES_WHEN_CASEFOLDED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-changes-when-casemapped"><strong><code>IntlChar::PROPERTY_CHANGES_WHEN_CASEMAPPED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-changes-when-nfkc-casefolded"><strong><code>IntlChar::PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-binary-limit"><strong><code>IntlChar::PROPERTY_BINARY_LIMIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-bidi-class"><strong><code>IntlChar::PROPERTY_BIDI_CLASS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-int-start"><strong><code>IntlChar::PROPERTY_INT_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-block"><strong><code>IntlChar::PROPERTY_BLOCK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-canonical-combining-class"><strong><code>IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-decomposition-type"><strong><code>IntlChar::PROPERTY_DECOMPOSITION_TYPE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-east-asian-width"><strong><code>IntlChar::PROPERTY_EAST_ASIAN_WIDTH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-general-category"><strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-joining-group"><strong><code>IntlChar::PROPERTY_JOINING_GROUP</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-joining-type"><strong><code>IntlChar::PROPERTY_JOINING_TYPE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-line-break"><strong><code>IntlChar::PROPERTY_LINE_BREAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-numeric-type"><strong><code>IntlChar::PROPERTY_NUMERIC_TYPE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-script"><strong><code>IntlChar::PROPERTY_SCRIPT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-hangul-syllable-type"><strong><code>IntlChar::PROPERTY_HANGUL_SYLLABLE_TYPE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfd-quick-check"><strong><code>IntlChar::PROPERTY_NFD_QUICK_CHECK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfkd-quick-check"><strong><code>IntlChar::PROPERTY_NFKD_QUICK_CHECK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfc-quick-check"><strong><code>IntlChar::PROPERTY_NFC_QUICK_CHECK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-nfkc-quick-check"><strong><code>IntlChar::PROPERTY_NFKC_QUICK_CHECK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-lead-canonical-combining-class"><strong><code>IntlChar::PROPERTY_LEAD_CANONICAL_COMBINING_CLASS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-trail-canonical-combining-class"><strong><code>IntlChar::PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-grapheme-cluster-break"><strong><code>IntlChar::PROPERTY_GRAPHEME_CLUSTER_BREAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-sentence-break"><strong><code>IntlChar::PROPERTY_SENTENCE_BREAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-word-break"><strong><code>IntlChar::PROPERTY_WORD_BREAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-bidi-paired-bracket-type"><strong><code>IntlChar::PROPERTY_BIDI_PAIRED_BRACKET_TYPE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-int-limit"><strong><code>IntlChar::PROPERTY_INT_LIMIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-general-category-mask"><strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-mask-start"><strong><code>IntlChar::PROPERTY_MASK_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-mask-limit"><strong><code>IntlChar::PROPERTY_MASK_LIMIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-numeric-value"><strong><code>IntlChar::PROPERTY_NUMERIC_VALUE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-double-start"><strong><code>IntlChar::PROPERTY_DOUBLE_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-double-limit"><strong><code>IntlChar::PROPERTY_DOUBLE_LIMIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-age"><strong><code>IntlChar::PROPERTY_AGE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-string-start"><strong><code>IntlChar::PROPERTY_STRING_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-bidi-mirroring-glyph"><strong><code>IntlChar::PROPERTY_BIDI_MIRRORING_GLYPH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-case-folding"><strong><code>IntlChar::PROPERTY_CASE_FOLDING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-iso-comment"><strong><code>IntlChar::PROPERTY_ISO_COMMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-lowercase-mapping"><strong><code>IntlChar::PROPERTY_LOWERCASE_MAPPING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-name"><strong><code>IntlChar::PROPERTY_NAME</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-simple-case-folding"><strong><code>IntlChar::PROPERTY_SIMPLE_CASE_FOLDING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-simple-lowercase-mapping"><strong><code>IntlChar::PROPERTY_SIMPLE_LOWERCASE_MAPPING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-simple-titlecase-mapping"><strong><code>IntlChar::PROPERTY_SIMPLE_TITLECASE_MAPPING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-simple-uppercase-mapping"><strong><code>IntlChar::PROPERTY_SIMPLE_UPPERCASE_MAPPING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-titlecase-mapping"><strong><code>IntlChar::PROPERTY_TITLECASE_MAPPING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-unicode-1-name"><strong><code>IntlChar::PROPERTY_UNICODE_1_NAME</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-uppercase-mapping"><strong><code>IntlChar::PROPERTY_UPPERCASE_MAPPING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-bidi-paired-bracket"><strong><code>IntlChar::PROPERTY_BIDI_PAIRED_BRACKET</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-string-limit"><strong><code>IntlChar::PROPERTY_STRING_LIMIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-script-extensions"><strong><code>IntlChar::PROPERTY_SCRIPT_EXTENSIONS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-other-property-start"><strong><code>IntlChar::PROPERTY_OTHER_PROPERTY_START</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-other-property-limit"><strong><code>IntlChar::PROPERTY_OTHER_PROPERTY_LIMIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-invalid-code"><strong><code>IntlChar::PROPERTY_INVALID_CODE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-unassigned"><strong><code>IntlChar::CHAR_CATEGORY_UNASSIGNED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-general-other-types"><strong><code>IntlChar::CHAR_CATEGORY_GENERAL_OTHER_TYPES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-uppercase-letter"><strong><code>IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-lowercase-letter"><strong><code>IntlChar::CHAR_CATEGORY_LOWERCASE_LETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-titlecase-letter"><strong><code>IntlChar::CHAR_CATEGORY_TITLECASE_LETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-modifier-letter"><strong><code>IntlChar::CHAR_CATEGORY_MODIFIER_LETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-other-letter"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_LETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-non-spacing-mark"><strong><code>IntlChar::CHAR_CATEGORY_NON_SPACING_MARK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-enclosing-mark"><strong><code>IntlChar::CHAR_CATEGORY_ENCLOSING_MARK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-combining-spacing-mark"><strong><code>IntlChar::CHAR_CATEGORY_COMBINING_SPACING_MARK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-decimal-digit-number"><strong><code>IntlChar::CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-letter-number"><strong><code>IntlChar::CHAR_CATEGORY_LETTER_NUMBER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-other-number"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_NUMBER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-space-separator"><strong><code>IntlChar::CHAR_CATEGORY_SPACE_SEPARATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-line-separator"><strong><code>IntlChar::CHAR_CATEGORY_LINE_SEPARATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-paragraph-separator"><strong><code>IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-control-char"><strong><code>IntlChar::CHAR_CATEGORY_CONTROL_CHAR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-format-char"><strong><code>IntlChar::CHAR_CATEGORY_FORMAT_CHAR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-private-use-char"><strong><code>IntlChar::CHAR_CATEGORY_PRIVATE_USE_CHAR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-surrogate"><strong><code>IntlChar::CHAR_CATEGORY_SURROGATE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-dash-punctuation"><strong><code>IntlChar::CHAR_CATEGORY_DASH_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-start-punctuation"><strong><code>IntlChar::CHAR_CATEGORY_START_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-end-punctuation"><strong><code>IntlChar::CHAR_CATEGORY_END_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-connector-punctuation"><strong><code>IntlChar::CHAR_CATEGORY_CONNECTOR_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-other-punctuation"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-math-symbol"><strong><code>IntlChar::CHAR_CATEGORY_MATH_SYMBOL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-currency-symbol"><strong><code>IntlChar::CHAR_CATEGORY_CURRENCY_SYMBOL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-modifier-symbol"><strong><code>IntlChar::CHAR_CATEGORY_MODIFIER_SYMBOL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-other-symbol"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_SYMBOL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-initial-punctuation"><strong><code>IntlChar::CHAR_CATEGORY_INITIAL_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-final-punctuation"><strong><code>IntlChar::CHAR_CATEGORY_FINAL_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-category-char-category-count"><strong><code>IntlChar::CHAR_CATEGORY_CHAR_CATEGORY_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-left-to-right"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-right-to-left"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-european-number"><strong><code>IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-european-number-separator"><strong><code>IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-european-number-terminator"><strong><code>IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-arabic-number"><strong><code>IntlChar::CHAR_DIRECTION_ARABIC_NUMBER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-common-number-separator"><strong><code>IntlChar::CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-block-separator"><strong><code>IntlChar::CHAR_DIRECTION_BLOCK_SEPARATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-segment-separator"><strong><code>IntlChar::CHAR_DIRECTION_SEGMENT_SEPARATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-white-space-neutral"><strong><code>IntlChar::CHAR_DIRECTION_WHITE_SPACE_NEUTRAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-other-neutral"><strong><code>IntlChar::CHAR_DIRECTION_OTHER_NEUTRAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-left-to-right-embedding"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-left-to-right-override"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-right-to-left-arabic"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-right-to-left-embedding"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-right-to-left-override"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-pop-directional-format"><strong><code>IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-dir-non-spacing-mark"><strong><code>IntlChar::CHAR_DIRECTION_DIR_NON_SPACING_MARK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-boundary-neutral"><strong><code>IntlChar::CHAR_DIRECTION_BOUNDARY_NEUTRAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-first-strong-isolate"><strong><code>IntlChar::CHAR_DIRECTION_FIRST_STRONG_ISOLATE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-left-to-right-isolate"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-right-to-left-isolate"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-pop-directional-isolate"><strong><code>IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-direction-char-direction-count"><strong><code>IntlChar::CHAR_DIRECTION_CHAR_DIRECTION_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-no-block"><strong><code>IntlChar::BLOCK_CODE_NO_BLOCK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-basic-latin"><strong><code>IntlChar::BLOCK_CODE_BASIC_LATIN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-latin-1-supplement"><strong><code>IntlChar::BLOCK_CODE_LATIN_1_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-latin-extended-a"><strong><code>IntlChar::BLOCK_CODE_LATIN_EXTENDED_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-latin-extended-b"><strong><code>IntlChar::BLOCK_CODE_LATIN_EXTENDED_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ipa-extensions"><strong><code>IntlChar::BLOCK_CODE_IPA_EXTENSIONS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-spacing-modifier-letters"><strong><code>IntlChar::BLOCK_CODE_SPACING_MODIFIER_LETTERS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-combining-diacritical-marks"><strong><code>IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-greek"><strong><code>IntlChar::BLOCK_CODE_GREEK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cyrillic"><strong><code>IntlChar::BLOCK_CODE_CYRILLIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-armenian"><strong><code>IntlChar::BLOCK_CODE_ARMENIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hebrew"><strong><code>IntlChar::BLOCK_CODE_HEBREW</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-arabic"><strong><code>IntlChar::BLOCK_CODE_ARABIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-syriac"><strong><code>IntlChar::BLOCK_CODE_SYRIAC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-thaana"><strong><code>IntlChar::BLOCK_CODE_THAANA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-devanagari"><strong><code>IntlChar::BLOCK_CODE_DEVANAGARI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-bengali"><strong><code>IntlChar::BLOCK_CODE_BENGALI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-gurmukhi"><strong><code>IntlChar::BLOCK_CODE_GURMUKHI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-gujarati"><strong><code>IntlChar::BLOCK_CODE_GUJARATI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-oriya"><strong><code>IntlChar::BLOCK_CODE_ORIYA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tamil"><strong><code>IntlChar::BLOCK_CODE_TAMIL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-telugu"><strong><code>IntlChar::BLOCK_CODE_TELUGU</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-kannada"><strong><code>IntlChar::BLOCK_CODE_KANNADA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-malayalam"><strong><code>IntlChar::BLOCK_CODE_MALAYALAM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-sinhala"><strong><code>IntlChar::BLOCK_CODE_SINHALA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-thai"><strong><code>IntlChar::BLOCK_CODE_THAI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-lao"><strong><code>IntlChar::BLOCK_CODE_LAO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tibetan"><strong><code>IntlChar::BLOCK_CODE_TIBETAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-myanmar"><strong><code>IntlChar::BLOCK_CODE_MYANMAR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-georgian"><strong><code>IntlChar::BLOCK_CODE_GEORGIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hangul-jamo"><strong><code>IntlChar::BLOCK_CODE_HANGUL_JAMO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ethiopic"><strong><code>IntlChar::BLOCK_CODE_ETHIOPIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cherokee"><strong><code>IntlChar::BLOCK_CODE_CHEROKEE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-unified-canadian-aboriginal-syllabics"><strong><code>IntlChar::BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ogham"><strong><code>IntlChar::BLOCK_CODE_OGHAM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-runic"><strong><code>IntlChar::BLOCK_CODE_RUNIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-khmer"><strong><code>IntlChar::BLOCK_CODE_KHMER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-mongolian"><strong><code>IntlChar::BLOCK_CODE_MONGOLIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-latin-extended-additional"><strong><code>IntlChar::BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-greek-extended"><strong><code>IntlChar::BLOCK_CODE_GREEK_EXTENDED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-general-punctuation"><strong><code>IntlChar::BLOCK_CODE_GENERAL_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-superscripts-and-subscripts"><strong><code>IntlChar::BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-currency-symbols"><strong><code>IntlChar::BLOCK_CODE_CURRENCY_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-combining-marks-for-symbols"><strong><code>IntlChar::BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-letterlike-symbols"><strong><code>IntlChar::BLOCK_CODE_LETTERLIKE_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-number-forms"><strong><code>IntlChar::BLOCK_CODE_NUMBER_FORMS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-arrows"><strong><code>IntlChar::BLOCK_CODE_ARROWS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-mathematical-operators"><strong><code>IntlChar::BLOCK_CODE_MATHEMATICAL_OPERATORS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-miscellaneous-technical"><strong><code>IntlChar::BLOCK_CODE_MISCELLANEOUS_TECHNICAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-control-pictures"><strong><code>IntlChar::BLOCK_CODE_CONTROL_PICTURES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-optical-character-recognition"><strong><code>IntlChar::BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-enclosed-alphanumerics"><strong><code>IntlChar::BLOCK_CODE_ENCLOSED_ALPHANUMERICS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-box-drawing"><strong><code>IntlChar::BLOCK_CODE_BOX_DRAWING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-block-elements"><strong><code>IntlChar::BLOCK_CODE_BLOCK_ELEMENTS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-geometric-shapes"><strong><code>IntlChar::BLOCK_CODE_GEOMETRIC_SHAPES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-miscellaneous-symbols"><strong><code>IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-dingbats"><strong><code>IntlChar::BLOCK_CODE_DINGBATS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-braille-patterns"><strong><code>IntlChar::BLOCK_CODE_BRAILLE_PATTERNS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-radicals-supplement"><strong><code>IntlChar::BLOCK_CODE_CJK_RADICALS_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-kangxi-radicals"><strong><code>IntlChar::BLOCK_CODE_KANGXI_RADICALS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ideographic-description-characters"><strong><code>IntlChar::BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-symbols-and-punctuation"><strong><code>IntlChar::BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hiragana"><strong><code>IntlChar::BLOCK_CODE_HIRAGANA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-katakana"><strong><code>IntlChar::BLOCK_CODE_KATAKANA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-bopomofo"><strong><code>IntlChar::BLOCK_CODE_BOPOMOFO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hangul-compatibility-jamo"><strong><code>IntlChar::BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-kanbun"><strong><code>IntlChar::BLOCK_CODE_KANBUN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-bopomofo-extended"><strong><code>IntlChar::BLOCK_CODE_BOPOMOFO_EXTENDED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-enclosed-cjk-letters-and-months"><strong><code>IntlChar::BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-compatibility"><strong><code>IntlChar::BLOCK_CODE_CJK_COMPATIBILITY</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-a"><strong><code>IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-unified-ideographs"><strong><code>IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-yi-syllables"><strong><code>IntlChar::BLOCK_CODE_YI_SYLLABLES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-yi-radicals"><strong><code>IntlChar::BLOCK_CODE_YI_RADICALS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hangul-syllables"><strong><code>IntlChar::BLOCK_CODE_HANGUL_SYLLABLES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-high-surrogates"><strong><code>IntlChar::BLOCK_CODE_HIGH_SURROGATES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-high-private-use-surrogates"><strong><code>IntlChar::BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-low-surrogates"><strong><code>IntlChar::BLOCK_CODE_LOW_SURROGATES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-private-use-area"><strong><code>IntlChar::BLOCK_CODE_PRIVATE_USE_AREA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-private-use"><strong><code>IntlChar::BLOCK_CODE_PRIVATE_USE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-compatibility-ideographs"><strong><code>IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-alphabetic-presentation-forms"><strong><code>IntlChar::BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-arabic-presentation-forms-a"><strong><code>IntlChar::BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-combining-half-marks"><strong><code>IntlChar::BLOCK_CODE_COMBINING_HALF_MARKS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-compatibility-forms"><strong><code>IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_FORMS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-small-form-variants"><strong><code>IntlChar::BLOCK_CODE_SMALL_FORM_VARIANTS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-arabic-presentation-forms-b"><strong><code>IntlChar::BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-specials"><strong><code>IntlChar::BLOCK_CODE_SPECIALS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-halfwidth-and-fullwidth-forms"><strong><code>IntlChar::BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-old-italic"><strong><code>IntlChar::BLOCK_CODE_OLD_ITALIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-gothic"><strong><code>IntlChar::BLOCK_CODE_GOTHIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-deseret"><strong><code>IntlChar::BLOCK_CODE_DESERET</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-byzantine-musical-symbols"><strong><code>IntlChar::BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-musical-symbols"><strong><code>IntlChar::BLOCK_CODE_MUSICAL_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-mathematical-alphanumeric-symbols"><strong><code>IntlChar::BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-b"><strong><code>IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-compatibility-ideographs-supplement"><strong><code>IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tags"><strong><code>IntlChar::BLOCK_CODE_TAGS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cyrillic-supplement"><strong><code>IntlChar::BLOCK_CODE_CYRILLIC_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cyrillic-supplementary"><strong><code>IntlChar::BLOCK_CODE_CYRILLIC_SUPPLEMENTARY</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tagalog"><strong><code>IntlChar::BLOCK_CODE_TAGALOG</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hanunoo"><strong><code>IntlChar::BLOCK_CODE_HANUNOO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-buhid"><strong><code>IntlChar::BLOCK_CODE_BUHID</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tagbanwa"><strong><code>IntlChar::BLOCK_CODE_TAGBANWA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-miscellaneous-mathematical-symbols-a"><strong><code>IntlChar::BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-supplemental-arrows-a"><strong><code>IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-supplemental-arrows-b"><strong><code>IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-miscellaneous-mathematical-symbols-b"><strong><code>IntlChar::BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-supplemental-mathematical-operators"><strong><code>IntlChar::BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-katakana-phonetic-extensions"><strong><code>IntlChar::BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-variation-selectors"><strong><code>IntlChar::BLOCK_CODE_VARIATION_SELECTORS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-supplementary-private-use-area-a"><strong><code>IntlChar::BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-supplementary-private-use-area-b"><strong><code>IntlChar::BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-limbu"><strong><code>IntlChar::BLOCK_CODE_LIMBU</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tai-le"><strong><code>IntlChar::BLOCK_CODE_TAI_LE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-khmer-symbols"><strong><code>IntlChar::BLOCK_CODE_KHMER_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-phonetic-extensions"><strong><code>IntlChar::BLOCK_CODE_PHONETIC_EXTENSIONS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-miscellaneous-symbols-and-arrows"><strong><code>IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-yijing-hexagram-symbols"><strong><code>IntlChar::BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-linear-b-syllabary"><strong><code>IntlChar::BLOCK_CODE_LINEAR_B_SYLLABARY</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-linear-b-ideograms"><strong><code>IntlChar::BLOCK_CODE_LINEAR_B_IDEOGRAMS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-aegean-numbers"><strong><code>IntlChar::BLOCK_CODE_AEGEAN_NUMBERS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ugaritic"><strong><code>IntlChar::BLOCK_CODE_UGARITIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-shavian"><strong><code>IntlChar::BLOCK_CODE_SHAVIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-osmanya"><strong><code>IntlChar::BLOCK_CODE_OSMANYA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cypriot-syllabary"><strong><code>IntlChar::BLOCK_CODE_CYPRIOT_SYLLABARY</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tai-xuan-jing-symbols"><strong><code>IntlChar::BLOCK_CODE_TAI_XUAN_JING_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-variation-selectors-supplement"><strong><code>IntlChar::BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ancient-greek-musical-notation"><strong><code>IntlChar::BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ancient-greek-numbers"><strong><code>IntlChar::BLOCK_CODE_ANCIENT_GREEK_NUMBERS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-arabic-supplement"><strong><code>IntlChar::BLOCK_CODE_ARABIC_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-buginese"><strong><code>IntlChar::BLOCK_CODE_BUGINESE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-strokes"><strong><code>IntlChar::BLOCK_CODE_CJK_STROKES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-combining-diacritical-marks-supplement"><strong><code>IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-coptic"><strong><code>IntlChar::BLOCK_CODE_COPTIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ethiopic-extended"><strong><code>IntlChar::BLOCK_CODE_ETHIOPIC_EXTENDED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ethiopic-supplement"><strong><code>IntlChar::BLOCK_CODE_ETHIOPIC_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-georgian-supplement"><strong><code>IntlChar::BLOCK_CODE_GEORGIAN_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-glagolitic"><strong><code>IntlChar::BLOCK_CODE_GLAGOLITIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-kharoshthi"><strong><code>IntlChar::BLOCK_CODE_KHAROSHTHI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-modifier-tone-letters"><strong><code>IntlChar::BLOCK_CODE_MODIFIER_TONE_LETTERS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-new-tai-lue"><strong><code>IntlChar::BLOCK_CODE_NEW_TAI_LUE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-old-persian"><strong><code>IntlChar::BLOCK_CODE_OLD_PERSIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-phonetic-extensions-supplement"><strong><code>IntlChar::BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-supplemental-punctuation"><strong><code>IntlChar::BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-syloti-nagri"><strong><code>IntlChar::BLOCK_CODE_SYLOTI_NAGRI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tifinagh"><strong><code>IntlChar::BLOCK_CODE_TIFINAGH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-vertical-forms"><strong><code>IntlChar::BLOCK_CODE_VERTICAL_FORMS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-nko"><strong><code>IntlChar::BLOCK_CODE_NKO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-balinese"><strong><code>IntlChar::BLOCK_CODE_BALINESE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-latin-extended-c"><strong><code>IntlChar::BLOCK_CODE_LATIN_EXTENDED_C</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-latin-extended-d"><strong><code>IntlChar::BLOCK_CODE_LATIN_EXTENDED_D</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-phags-pa"><strong><code>IntlChar::BLOCK_CODE_PHAGS_PA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-phoenician"><strong><code>IntlChar::BLOCK_CODE_PHOENICIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cuneiform"><strong><code>IntlChar::BLOCK_CODE_CUNEIFORM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cuneiform-numbers-and-punctuation"><strong><code>IntlChar::BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-counting-rod-numerals"><strong><code>IntlChar::BLOCK_CODE_COUNTING_ROD_NUMERALS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-sundanese"><strong><code>IntlChar::BLOCK_CODE_SUNDANESE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-lepcha"><strong><code>IntlChar::BLOCK_CODE_LEPCHA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ol-chiki"><strong><code>IntlChar::BLOCK_CODE_OL_CHIKI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cyrillic-extended-a"><strong><code>IntlChar::BLOCK_CODE_CYRILLIC_EXTENDED_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-vai"><strong><code>IntlChar::BLOCK_CODE_VAI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cyrillic-extended-b"><strong><code>IntlChar::BLOCK_CODE_CYRILLIC_EXTENDED_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-saurashtra"><strong><code>IntlChar::BLOCK_CODE_SAURASHTRA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-kayah-li"><strong><code>IntlChar::BLOCK_CODE_KAYAH_LI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-rejang"><strong><code>IntlChar::BLOCK_CODE_REJANG</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cham"><strong><code>IntlChar::BLOCK_CODE_CHAM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ancient-symbols"><strong><code>IntlChar::BLOCK_CODE_ANCIENT_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-phaistos-disc"><strong><code>IntlChar::BLOCK_CODE_PHAISTOS_DISC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-lycian"><strong><code>IntlChar::BLOCK_CODE_LYCIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-carian"><strong><code>IntlChar::BLOCK_CODE_CARIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-lydian"><strong><code>IntlChar::BLOCK_CODE_LYDIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-mahjong-tiles"><strong><code>IntlChar::BLOCK_CODE_MAHJONG_TILES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-domino-tiles"><strong><code>IntlChar::BLOCK_CODE_DOMINO_TILES</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-samaritan"><strong><code>IntlChar::BLOCK_CODE_SAMARITAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-unified-canadian-aboriginal-syllabics-extended"><strong><code>IntlChar::BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tai-tham"><strong><code>IntlChar::BLOCK_CODE_TAI_THAM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-vedic-extensions"><strong><code>IntlChar::BLOCK_CODE_VEDIC_EXTENSIONS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-lisu"><strong><code>IntlChar::BLOCK_CODE_LISU</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-bamum"><strong><code>IntlChar::BLOCK_CODE_BAMUM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-common-indic-number-forms"><strong><code>IntlChar::BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-devanagari-extended"><strong><code>IntlChar::BLOCK_CODE_DEVANAGARI_EXTENDED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hangul-jamo-extended-a"><strong><code>IntlChar::BLOCK_CODE_HANGUL_JAMO_EXTENDED_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-javanese"><strong><code>IntlChar::BLOCK_CODE_JAVANESE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-myanmar-extended-a"><strong><code>IntlChar::BLOCK_CODE_MYANMAR_EXTENDED_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-tai-viet"><strong><code>IntlChar::BLOCK_CODE_TAI_VIET</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-meetei-mayek"><strong><code>IntlChar::BLOCK_CODE_MEETEI_MAYEK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-hangul-jamo-extended-b"><strong><code>IntlChar::BLOCK_CODE_HANGUL_JAMO_EXTENDED_B</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-imperial-aramaic"><strong><code>IntlChar::BLOCK_CODE_IMPERIAL_ARAMAIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-old-south-arabian"><strong><code>IntlChar::BLOCK_CODE_OLD_SOUTH_ARABIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-avestan"><strong><code>IntlChar::BLOCK_CODE_AVESTAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-inscriptional-parthian"><strong><code>IntlChar::BLOCK_CODE_INSCRIPTIONAL_PARTHIAN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-inscriptional-pahlavi"><strong><code>IntlChar::BLOCK_CODE_INSCRIPTIONAL_PAHLAVI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-old-turkic"><strong><code>IntlChar::BLOCK_CODE_OLD_TURKIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-rumi-numeral-symbols"><strong><code>IntlChar::BLOCK_CODE_RUMI_NUMERAL_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-kaithi"><strong><code>IntlChar::BLOCK_CODE_KAITHI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-egyptian-hieroglyphs"><strong><code>IntlChar::BLOCK_CODE_EGYPTIAN_HIEROGLYPHS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-enclosed-alphanumeric-supplement"><strong><code>IntlChar::BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-enclosed-ideographic-supplement"><strong><code>IntlChar::BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-c"><strong><code>IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-mandaic"><strong><code>IntlChar::BLOCK_CODE_MANDAIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-batak"><strong><code>IntlChar::BLOCK_CODE_BATAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-ethiopic-extended-a"><strong><code>IntlChar::BLOCK_CODE_ETHIOPIC_EXTENDED_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-brahmi"><strong><code>IntlChar::BLOCK_CODE_BRAHMI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-bamum-supplement"><strong><code>IntlChar::BLOCK_CODE_BAMUM_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-kana-supplement"><strong><code>IntlChar::BLOCK_CODE_KANA_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-playing-cards"><strong><code>IntlChar::BLOCK_CODE_PLAYING_CARDS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-miscellaneous-symbols-and-pictographs"><strong><code>IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-emoticons"><strong><code>IntlChar::BLOCK_CODE_EMOTICONS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-transport-and-map-symbols"><strong><code>IntlChar::BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-alchemical-symbols"><strong><code>IntlChar::BLOCK_CODE_ALCHEMICAL_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-d"><strong><code>IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-arabic-extended-a"><strong><code>IntlChar::BLOCK_CODE_ARABIC_EXTENDED_A</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-arabic-mathematical-alphabetic-symbols"><strong><code>IntlChar::BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-chakma"><strong><code>IntlChar::BLOCK_CODE_CHAKMA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-meetei-mayek-extensions"><strong><code>IntlChar::BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-meroitic-cursive"><strong><code>IntlChar::BLOCK_CODE_MEROITIC_CURSIVE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-meroitic-hieroglyphs"><strong><code>IntlChar::BLOCK_CODE_MEROITIC_HIEROGLYPHS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-miao"><strong><code>IntlChar::BLOCK_CODE_MIAO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-sharada"><strong><code>IntlChar::BLOCK_CODE_SHARADA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-sora-sompeng"><strong><code>IntlChar::BLOCK_CODE_SORA_SOMPENG</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-sundanese-supplement"><strong><code>IntlChar::BLOCK_CODE_SUNDANESE_SUPPLEMENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-takri"><strong><code>IntlChar::BLOCK_CODE_TAKRI</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-count"><strong><code>IntlChar::BLOCK_CODE_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.block-code-invalid-code"><strong><code>IntlChar::BLOCK_CODE_INVALID_CODE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.bpt-none"><strong><code>IntlChar::BPT_NONE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.bpt-open"><strong><code>IntlChar::BPT_OPEN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.bpt-close"><strong><code>IntlChar::BPT_CLOSE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.bpt-count"><strong><code>IntlChar::BPT_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.ea-neutral"><strong><code>IntlChar::EA_NEUTRAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.ea-ambiguous"><strong><code>IntlChar::EA_AMBIGUOUS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.ea-halfwidth"><strong><code>IntlChar::EA_HALFWIDTH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.ea-fullwidth"><strong><code>IntlChar::EA_FULLWIDTH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.ea-narrow"><strong><code>IntlChar::EA_NARROW</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.ea-wide"><strong><code>IntlChar::EA_WIDE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.ea-count"><strong><code>IntlChar::EA_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.unicode-char-name"><strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.unicode-10-char-name"><strong><code>IntlChar::UNICODE_10_CHAR_NAME</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.extended-char-name"><strong><code>IntlChar::EXTENDED_CHAR_NAME</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-name-alias"><strong><code>IntlChar::CHAR_NAME_ALIAS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.char-name-choice-count"><strong><code>IntlChar::CHAR_NAME_CHOICE_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.short-property-name"><strong><code>IntlChar::SHORT_PROPERTY_NAME</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.long-property-name"><strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.property-name-choice-count"><strong><code>IntlChar::PROPERTY_NAME_CHOICE_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-none"><strong><code>IntlChar::DT_NONE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-canonical"><strong><code>IntlChar::DT_CANONICAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-compat"><strong><code>IntlChar::DT_COMPAT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-circle"><strong><code>IntlChar::DT_CIRCLE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-final"><strong><code>IntlChar::DT_FINAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-font"><strong><code>IntlChar::DT_FONT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-fraction"><strong><code>IntlChar::DT_FRACTION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-initial"><strong><code>IntlChar::DT_INITIAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-isolated"><strong><code>IntlChar::DT_ISOLATED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-medial"><strong><code>IntlChar::DT_MEDIAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-narrow"><strong><code>IntlChar::DT_NARROW</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-nobreak"><strong><code>IntlChar::DT_NOBREAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-small"><strong><code>IntlChar::DT_SMALL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-square"><strong><code>IntlChar::DT_SQUARE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-sub"><strong><code>IntlChar::DT_SUB</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-super"><strong><code>IntlChar::DT_SUPER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-vertical"><strong><code>IntlChar::DT_VERTICAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-wide"><strong><code>IntlChar::DT_WIDE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.dt-count"><strong><code>IntlChar::DT_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jt-non-joining"><strong><code>IntlChar::JT_NON_JOINING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jt-join-causing"><strong><code>IntlChar::JT_JOIN_CAUSING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jt-dual-joining"><strong><code>IntlChar::JT_DUAL_JOINING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jt-left-joining"><strong><code>IntlChar::JT_LEFT_JOINING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jt-right-joining"><strong><code>IntlChar::JT_RIGHT_JOINING</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jt-transparent"><strong><code>IntlChar::JT_TRANSPARENT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jt-count"><strong><code>IntlChar::JT_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-no-joining-group"><strong><code>IntlChar::JG_NO_JOINING_GROUP</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-ain"><strong><code>IntlChar::JG_AIN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-alaph"><strong><code>IntlChar::JG_ALAPH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-alef"><strong><code>IntlChar::JG_ALEF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-beh"><strong><code>IntlChar::JG_BEH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-beth"><strong><code>IntlChar::JG_BETH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-dal"><strong><code>IntlChar::JG_DAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-dalath-rish"><strong><code>IntlChar::JG_DALATH_RISH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-e"><strong><code>IntlChar::JG_E</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-feh"><strong><code>IntlChar::JG_FEH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-final-semkath"><strong><code>IntlChar::JG_FINAL_SEMKATH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-gaf"><strong><code>IntlChar::JG_GAF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-gamal"><strong><code>IntlChar::JG_GAMAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-hah"><strong><code>IntlChar::JG_HAH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-teh-marbuta-goal"><strong><code>IntlChar::JG_TEH_MARBUTA_GOAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-hamza-on-heh-goal"><strong><code>IntlChar::JG_HAMZA_ON_HEH_GOAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-he"><strong><code>IntlChar::JG_HE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-heh"><strong><code>IntlChar::JG_HEH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-heh-goal"><strong><code>IntlChar::JG_HEH_GOAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-heth"><strong><code>IntlChar::JG_HETH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-kaf"><strong><code>IntlChar::JG_KAF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-kaph"><strong><code>IntlChar::JG_KAPH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-knotted-heh"><strong><code>IntlChar::JG_KNOTTED_HEH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-lam"><strong><code>IntlChar::JG_LAM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-lamadh"><strong><code>IntlChar::JG_LAMADH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-meem"><strong><code>IntlChar::JG_MEEM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-mim"><strong><code>IntlChar::JG_MIM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-noon"><strong><code>IntlChar::JG_NOON</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-nun"><strong><code>IntlChar::JG_NUN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-pe"><strong><code>IntlChar::JG_PE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-qaf"><strong><code>IntlChar::JG_QAF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-qaph"><strong><code>IntlChar::JG_QAPH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-reh"><strong><code>IntlChar::JG_REH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-reversed-pe"><strong><code>IntlChar::JG_REVERSED_PE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-sad"><strong><code>IntlChar::JG_SAD</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-sadhe"><strong><code>IntlChar::JG_SADHE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-seen"><strong><code>IntlChar::JG_SEEN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-semkath"><strong><code>IntlChar::JG_SEMKATH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-shin"><strong><code>IntlChar::JG_SHIN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-swash-kaf"><strong><code>IntlChar::JG_SWASH_KAF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-syriac-waw"><strong><code>IntlChar::JG_SYRIAC_WAW</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-tah"><strong><code>IntlChar::JG_TAH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-taw"><strong><code>IntlChar::JG_TAW</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-teh-marbuta"><strong><code>IntlChar::JG_TEH_MARBUTA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-teth"><strong><code>IntlChar::JG_TETH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-waw"><strong><code>IntlChar::JG_WAW</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-yeh"><strong><code>IntlChar::JG_YEH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-yeh-barree"><strong><code>IntlChar::JG_YEH_BARREE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-yeh-with-tail"><strong><code>IntlChar::JG_YEH_WITH_TAIL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-yudh"><strong><code>IntlChar::JG_YUDH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-yudh-he"><strong><code>IntlChar::JG_YUDH_HE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-zain"><strong><code>IntlChar::JG_ZAIN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-fe"><strong><code>IntlChar::JG_FE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-khaph"><strong><code>IntlChar::JG_KHAPH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-zhain"><strong><code>IntlChar::JG_ZHAIN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-burushaski-yeh-barree"><strong><code>IntlChar::JG_BURUSHASKI_YEH_BARREE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-farsi-yeh"><strong><code>IntlChar::JG_FARSI_YEH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-nya"><strong><code>IntlChar::JG_NYA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-rohingya-yeh"><strong><code>IntlChar::JG_ROHINGYA_YEH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.jg-count"><strong><code>IntlChar::JG_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-other"><strong><code>IntlChar::GCB_OTHER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-control"><strong><code>IntlChar::GCB_CONTROL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-cr"><strong><code>IntlChar::GCB_CR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-extend"><strong><code>IntlChar::GCB_EXTEND</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-l"><strong><code>IntlChar::GCB_L</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-lf"><strong><code>IntlChar::GCB_LF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-lv"><strong><code>IntlChar::GCB_LV</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-lvt"><strong><code>IntlChar::GCB_LVT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-t"><strong><code>IntlChar::GCB_T</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-v"><strong><code>IntlChar::GCB_V</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-spacing-mark"><strong><code>IntlChar::GCB_SPACING_MARK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-prepend"><strong><code>IntlChar::GCB_PREPEND</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-regional-indicator"><strong><code>IntlChar::GCB_REGIONAL_INDICATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.gcb-count"><strong><code>IntlChar::GCB_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-other"><strong><code>IntlChar::WB_OTHER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-aletter"><strong><code>IntlChar::WB_ALETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-format"><strong><code>IntlChar::WB_FORMAT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-katakana"><strong><code>IntlChar::WB_KATAKANA</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-midletter"><strong><code>IntlChar::WB_MIDLETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-midnum"><strong><code>IntlChar::WB_MIDNUM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-numeric"><strong><code>IntlChar::WB_NUMERIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-extendnumlet"><strong><code>IntlChar::WB_EXTENDNUMLET</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-cr"><strong><code>IntlChar::WB_CR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-extend"><strong><code>IntlChar::WB_EXTEND</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-lf"><strong><code>IntlChar::WB_LF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-midnumlet"><strong><code>IntlChar::WB_MIDNUMLET</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-newline"><strong><code>IntlChar::WB_NEWLINE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-regional-indicator"><strong><code>IntlChar::WB_REGIONAL_INDICATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-hebrew-letter"><strong><code>IntlChar::WB_HEBREW_LETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-single-quote"><strong><code>IntlChar::WB_SINGLE_QUOTE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-double-quote"><strong><code>IntlChar::WB_DOUBLE_QUOTE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.wb-count"><strong><code>IntlChar::WB_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-other"><strong><code>IntlChar::SB_OTHER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-aterm"><strong><code>IntlChar::SB_ATERM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-close"><strong><code>IntlChar::SB_CLOSE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-format"><strong><code>IntlChar::SB_FORMAT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-lower"><strong><code>IntlChar::SB_LOWER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-numeric"><strong><code>IntlChar::SB_NUMERIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-oletter"><strong><code>IntlChar::SB_OLETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-sep"><strong><code>IntlChar::SB_SEP</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-sp"><strong><code>IntlChar::SB_SP</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-sterm"><strong><code>IntlChar::SB_STERM</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-upper"><strong><code>IntlChar::SB_UPPER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-cr"><strong><code>IntlChar::SB_CR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-extend"><strong><code>IntlChar::SB_EXTEND</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-lf"><strong><code>IntlChar::SB_LF</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-scontinue"><strong><code>IntlChar::SB_SCONTINUE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.sb-count"><strong><code>IntlChar::SB_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-unknown"><strong><code>IntlChar::LB_UNKNOWN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-ambiguous"><strong><code>IntlChar::LB_AMBIGUOUS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-alphabetic"><strong><code>IntlChar::LB_ALPHABETIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-break-both"><strong><code>IntlChar::LB_BREAK_BOTH</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-break-after"><strong><code>IntlChar::LB_BREAK_AFTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-break-before"><strong><code>IntlChar::LB_BREAK_BEFORE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-mandatory-break"><strong><code>IntlChar::LB_MANDATORY_BREAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-contingent-break"><strong><code>IntlChar::LB_CONTINGENT_BREAK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-close-punctuation"><strong><code>IntlChar::LB_CLOSE_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-combining-mark"><strong><code>IntlChar::LB_COMBINING_MARK</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-carriage-return"><strong><code>IntlChar::LB_CARRIAGE_RETURN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-exclamation"><strong><code>IntlChar::LB_EXCLAMATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-glue"><strong><code>IntlChar::LB_GLUE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-hyphen"><strong><code>IntlChar::LB_HYPHEN</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-ideographic"><strong><code>IntlChar::LB_IDEOGRAPHIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-inseparable"><strong><code>IntlChar::LB_INSEPARABLE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-inseperable"><strong><code>IntlChar::LB_INSEPERABLE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-infix-numeric"><strong><code>IntlChar::LB_INFIX_NUMERIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-line-feed"><strong><code>IntlChar::LB_LINE_FEED</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-nonstarter"><strong><code>IntlChar::LB_NONSTARTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-numeric"><strong><code>IntlChar::LB_NUMERIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-open-punctuation"><strong><code>IntlChar::LB_OPEN_PUNCTUATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-postfix-numeric"><strong><code>IntlChar::LB_POSTFIX_NUMERIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-prefix-numeric"><strong><code>IntlChar::LB_PREFIX_NUMERIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-quotation"><strong><code>IntlChar::LB_QUOTATION</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-complex-context"><strong><code>IntlChar::LB_COMPLEX_CONTEXT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-surrogate"><strong><code>IntlChar::LB_SURROGATE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-space"><strong><code>IntlChar::LB_SPACE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-break-symbols"><strong><code>IntlChar::LB_BREAK_SYMBOLS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-zwspace"><strong><code>IntlChar::LB_ZWSPACE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-next-line"><strong><code>IntlChar::LB_NEXT_LINE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-word-joiner"><strong><code>IntlChar::LB_WORD_JOINER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-h2"><strong><code>IntlChar::LB_H2</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-h3"><strong><code>IntlChar::LB_H3</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-jl"><strong><code>IntlChar::LB_JL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-jt"><strong><code>IntlChar::LB_JT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-jv"><strong><code>IntlChar::LB_JV</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-close-parenthesis"><strong><code>IntlChar::LB_CLOSE_PARENTHESIS</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-conditional-japanese-starter"><strong><code>IntlChar::LB_CONDITIONAL_JAPANESE_STARTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-hebrew-letter"><strong><code>IntlChar::LB_HEBREW_LETTER</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-regional-indicator"><strong><code>IntlChar::LB_REGIONAL_INDICATOR</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.lb-count"><strong><code>IntlChar::LB_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.nt-none"><strong><code>IntlChar::NT_NONE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.nt-decimal"><strong><code>IntlChar::NT_DECIMAL</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.nt-digit"><strong><code>IntlChar::NT_DIGIT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.nt-numeric"><strong><code>IntlChar::NT_NUMERIC</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.nt-count"><strong><code>IntlChar::NT_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.hst-not-applicable"><strong><code>IntlChar::HST_NOT_APPLICABLE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.hst-leading-jamo"><strong><code>IntlChar::HST_LEADING_JAMO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.hst-vowel-jamo"><strong><code>IntlChar::HST_VOWEL_JAMO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.hst-trailing-jamo"><strong><code>IntlChar::HST_TRAILING_JAMO</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.hst-lv-syllable"><strong><code>IntlChar::HST_LV_SYLLABLE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.hst-lvt-syllable"><strong><code>IntlChar::HST_LVT_SYLLABLE</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.hst-count"><strong><code>IntlChar::HST_COUNT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.fold-case-default"><strong><code>IntlChar::FOLD_CASE_DEFAULT</code></strong></dt>       <dd>        <p class="para"/>      </dd>                  <dt id="intlchar.constants.fold-case-exclude-special-i"><strong><code>IntlChar::FOLD_CASE_EXCLUDE_SPECIAL_I</code></strong></dt>       <dd>        <p class="para"/>      </dd>           </dl>    </div>     <div class="section">    <h2 class="title">更新日志</h2>    <p class="para">     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>7.0.6</td>         <td>          The <strong><code>IntlChar::NO_NUMERIC_VALUE</code></strong> constant was added.         </td>        </tr>        </tbody>           </table>     </p>   </div>   </div>                                                                                                                                                                                                                                                                                                                                                                                                                                  <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link IntlChar::charAge} — Get the &quot;age&quot; of the code point</li><li>{@link IntlChar::charDigitValue} — Get the decimal digit value of a decimal digit character</li><li>{@link IntlChar::charDirection} — Get bidirectional category value for a code point</li><li>{@link IntlChar::charFromName} — Find Unicode character by name and return its code point value</li><li>{@link IntlChar::charMirror} — Get the &quot;mirror-image&quot; character for a code point</li><li>{@link IntlChar::charName} — Retrieve the name of a Unicode character</li><li>{@link IntlChar::charType} — Get the general category value for a code point</li><li>{@link IntlChar::chr} — Return Unicode character by code point value</li><li>{@link IntlChar::digit} — Get the decimal digit value of a code point for a given radix</li><li>{@link IntlChar::enumCharNames} — Enumerate all assigned Unicode characters within a range</li><li>{@link IntlChar::enumCharTypes} — Enumerate all code points with their Unicode general categories</li><li>{@link IntlChar::foldCase} — Perform case folding on a code point</li><li>{@link IntlChar::forDigit} — Get character representation for a given digit and radix</li><li>{@link IntlChar::getBidiPairedBracket} — Get the paired bracket character for a code point</li><li>{@link IntlChar::getBlockCode} — Get the Unicode allocation block containing a code point</li><li>{@link IntlChar::getCombiningClass} — Get the combining class of a code point</li><li>{@link IntlChar::getFC_NFKC_Closure} — Get the FC_NFKC_Closure property for a code point</li><li>{@link IntlChar::getIntPropertyMaxValue} — Get the max value for a Unicode property</li><li>{@link IntlChar::getIntPropertyMinValue} — Get the min value for a Unicode property</li><li>{@link IntlChar::getIntPropertyValue} — Get the value for a Unicode property for a code point</li><li>{@link IntlChar::getNumericValue} — Get the numeric value for a Unicode code point</li><li>{@link IntlChar::getPropertyEnum} — Get the property constant value for a given property name</li><li>{@link IntlChar::getPropertyName} — Get the Unicode name for a property</li><li>{@link IntlChar::getPropertyValueEnum} — Get the property value for a given value name</li><li>{@link IntlChar::getPropertyValueName} — Get the Unicode name for a property value</li><li>{@link IntlChar::getUnicodeVersion} — Get the Unicode version</li><li>{@link IntlChar::hasBinaryProperty} — Check a binary Unicode property for a code point</li><li>{@link IntlChar::isalnum} — Check if code point is an alphanumeric character</li><li>{@link IntlChar::isalpha} — Check if code point is a letter character</li><li>{@link IntlChar::isbase} — Check if code point is a base character</li><li>{@link IntlChar::isblank} — Check if code point is a &quot;blank&quot; or &quot;horizontal space&quot; character</li><li>{@link IntlChar::iscntrl} — Check if code point is a control character</li><li>{@link IntlChar::isdefined} — Check whether the code point is defined</li><li>{@link IntlChar::isdigit} — Check if code point is a digit character</li><li>{@link IntlChar::isgraph} — Check if code point is a graphic character</li><li>{@link IntlChar::isIDIgnorable} — Check if code point is an ignorable character</li><li>{@link IntlChar::isIDPart} — Check if code point is permissible in an identifier</li><li>{@link IntlChar::isIDStart} — Check if code point is permissible as the first character in an identifier</li><li>{@link IntlChar::isISOControl} — Check if code point is an ISO control code</li><li>{@link IntlChar::isJavaIDPart} — Check if code point is permissible in a Java identifier</li><li>{@link IntlChar::isJavaIDStart} — Check if code point is permissible as the first character in a Java identifier</li><li>{@link IntlChar::isJavaSpaceChar} — Check if code point is a space character according to Java</li><li>{@link IntlChar::islower} — Check if code point is a lowercase letter</li><li>{@link IntlChar::isMirrored} — Check if code point has the Bidi_Mirrored property</li><li>{@link IntlChar::isprint} — Check if code point is a printable character</li><li>{@link IntlChar::ispunct} — Check if code point is punctuation character</li><li>{@link IntlChar::isspace} — Check if code point is a space character</li><li>{@link IntlChar::istitle} — Check if code point is a titlecase letter</li><li>{@link IntlChar::isUAlphabetic} — Check if code point has the Alphabetic Unicode property</li><li>{@link IntlChar::isULowercase} — Check if code point has the Lowercase Unicode property</li><li>{@link IntlChar::isupper} — Check if code point has the general category &quot;Lu&quot; (uppercase letter)</li><li>{@link IntlChar::isUUppercase} — Check if code point has the Uppercase Unicode property</li><li>{@link IntlChar::isUWhiteSpace} — Check if code point has the White_Space Unicode property</li><li>{@link IntlChar::isWhitespace} — Check if code point is a whitespace character according to ICU</li><li>{@link IntlChar::isxdigit} — Check if code point is a hexadecimal digit</li><li>{@link IntlChar::ord} — Return Unicode code point value of character</li><li>{@link IntlChar::tolower} — Make Unicode character lowercase</li><li>{@link IntlChar::totitle} — Make Unicode character titlecase</li><li>{@link IntlChar::toupper} — Make Unicode character uppercase</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.intl.php">intl</a></div></div>
*/
class IntlChar {
    const UNICODE_VERSION = 6.3;
    const CODEPOINT_MIN = 0;
    const CODEPOINT_MAX = 1114111;
    const FOLD_CASE_DEFAULT = 0;
    const FOLD_CASE_EXCLUDE_SPECIAL_I = 1;
    const PROPERTY_ALPHABETIC = 0;
    const PROPERTY_BINARY_START = 0;
    const PROPERTY_ASCII_HEX_DIGIT = 1;
    const PROPERTY_BIDI_CONTROL = 2;
    const PROPERTY_BIDI_MIRRORED = 3;
    const PROPERTY_DASH = 4;
    const PROPERTY_DEFAULT_IGNORABLE_CODE_POINT = 5;
    const PROPERTY_DEPRECATED = 6;
    const PROPERTY_DIACRITIC = 7;
    const PROPERTY_EXTENDER = 8;
    const PROPERTY_FULL_COMPOSITION_EXCLUSION = 9;
    const PROPERTY_GRAPHEME_BASE = 10;
    const PROPERTY_GRAPHEME_EXTEND = 11;
    const PROPERTY_GRAPHEME_LINK = 12;
    const PROPERTY_HEX_DIGIT = 13;
    const PROPERTY_HYPHEN = 14;
    const PROPERTY_ID_CONTINUE = 15;
    const PROPERTY_ID_START = 16;
    const PROPERTY_IDEOGRAPHIC = 17;
    const PROPERTY_IDS_BINARY_OPERATOR = 18;
    const PROPERTY_IDS_TRINARY_OPERATOR = 19;
    const PROPERTY_JOIN_CONTROL = 20;
    const PROPERTY_LOGICAL_ORDER_EXCEPTION = 21;
    const PROPERTY_LOWERCASE = 22;
    const PROPERTY_MATH = 23;
    const PROPERTY_NONCHARACTER_CODE_POINT = 24;
    const PROPERTY_QUOTATION_MARK = 25;
    const PROPERTY_RADICAL = 26;
    const PROPERTY_SOFT_DOTTED = 27;
    const PROPERTY_TERMINAL_PUNCTUATION = 28;
    const PROPERTY_UNIFIED_IDEOGRAPH = 29;
    const PROPERTY_UPPERCASE = 30;
    const PROPERTY_WHITE_SPACE = 31;
    const PROPERTY_XID_CONTINUE = 32;
    const PROPERTY_XID_START = 33;
    const PROPERTY_CASE_SENSITIVE = 34;
    const PROPERTY_S_TERM = 35;
    const PROPERTY_VARIATION_SELECTOR = 36;
    const PROPERTY_NFD_INERT = 37;
    const PROPERTY_NFKD_INERT = 38;
    const PROPERTY_NFC_INERT = 39;
    const PROPERTY_NFKC_INERT = 40;
    const PROPERTY_SEGMENT_STARTER = 41;
    const PROPERTY_PATTERN_SYNTAX = 42;
    const PROPERTY_PATTERN_WHITE_SPACE = 43;
    const PROPERTY_POSIX_ALNUM = 44;
    const PROPERTY_POSIX_BLANK = 45;
    const PROPERTY_POSIX_GRAPH = 46;
    const PROPERTY_POSIX_PRINT = 47;
    const PROPERTY_POSIX_XDIGIT = 48;
    const PROPERTY_CASED = 49;
    const PROPERTY_CASE_IGNORABLE = 50;
    const PROPERTY_CHANGES_WHEN_LOWERCASED = 51;
    const PROPERTY_CHANGES_WHEN_UPPERCASED = 52;
    const PROPERTY_CHANGES_WHEN_TITLECASED = 53;
    const PROPERTY_CHANGES_WHEN_CASEFOLDED = 54;
    const PROPERTY_CHANGES_WHEN_CASEMAPPED = 55;
    const PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED = 56;
    const PROPERTY_BINARY_LIMIT = 57;
    const PROPERTY_BIDI_CLASS = 4096;
    const PROPERTY_INT_START = 4096;
    const PROPERTY_BLOCK = 4097;
    const PROPERTY_CANONICAL_COMBINING_CLASS = 4098;
    const PROPERTY_DECOMPOSITION_TYPE = 4099;
    const PROPERTY_EAST_ASIAN_WIDTH = 4100;
    const PROPERTY_GENERAL_CATEGORY = 4101;
    const PROPERTY_JOINING_GROUP = 4102;
    const PROPERTY_JOINING_TYPE = 4103;
    const PROPERTY_LINE_BREAK = 4104;
    const PROPERTY_NUMERIC_TYPE = 4105;
    const PROPERTY_SCRIPT = 4106;
    const PROPERTY_HANGUL_SYLLABLE_TYPE = 4107;
    const PROPERTY_NFD_QUICK_CHECK = 4108;
    const PROPERTY_NFKD_QUICK_CHECK = 4109;
    const PROPERTY_NFC_QUICK_CHECK = 4110;
    const PROPERTY_NFKC_QUICK_CHECK = 4111;
    const PROPERTY_LEAD_CANONICAL_COMBINING_CLASS = 4112;
    const PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS = 4113;
    const PROPERTY_GRAPHEME_CLUSTER_BREAK = 4114;
    const PROPERTY_SENTENCE_BREAK = 4115;
    const PROPERTY_WORD_BREAK = 4116;
    const PROPERTY_BIDI_PAIRED_BRACKET_TYPE = 4117;
    const PROPERTY_INT_LIMIT = 4118;
    const PROPERTY_GENERAL_CATEGORY_MASK = 8192;
    const PROPERTY_MASK_START = 8192;
    const PROPERTY_MASK_LIMIT = 8193;
    const PROPERTY_NUMERIC_VALUE = 12288;
    const PROPERTY_DOUBLE_START = 12288;
    const PROPERTY_DOUBLE_LIMIT = 12289;
    const PROPERTY_AGE = 16384;
    const PROPERTY_STRING_START = 16384;
    const PROPERTY_BIDI_MIRRORING_GLYPH = 16385;
    const PROPERTY_CASE_FOLDING = 16386;
    const PROPERTY_ISO_COMMENT = 16387;
    const PROPERTY_LOWERCASE_MAPPING = 16388;
    const PROPERTY_NAME = 16389;
    const PROPERTY_SIMPLE_CASE_FOLDING = 16390;
    const PROPERTY_SIMPLE_LOWERCASE_MAPPING = 16391;
    const PROPERTY_SIMPLE_TITLECASE_MAPPING = 16392;
    const PROPERTY_SIMPLE_UPPERCASE_MAPPING = 16393;
    const PROPERTY_TITLECASE_MAPPING = 16394;
    const PROPERTY_UNICODE_1_NAME = 16395;
    const PROPERTY_UPPERCASE_MAPPING = 16396;
    const PROPERTY_BIDI_PAIRED_BRACKET = 16397;
    const PROPERTY_STRING_LIMIT = 16398;
    const PROPERTY_SCRIPT_EXTENSIONS = 28672;
    const PROPERTY_OTHER_PROPERTY_START = 28672;
    const PROPERTY_OTHER_PROPERTY_LIMIT = 28673;
    const PROPERTY_INVALID_CODE = -1;
    const CHAR_CATEGORY_UNASSIGNED = 0;
    const CHAR_CATEGORY_GENERAL_OTHER_TYPES = 0;
    const CHAR_CATEGORY_UPPERCASE_LETTER = 1;
    const CHAR_CATEGORY_LOWERCASE_LETTER = 2;
    const CHAR_CATEGORY_TITLECASE_LETTER = 3;
    const CHAR_CATEGORY_MODIFIER_LETTER = 4;
    const CHAR_CATEGORY_OTHER_LETTER = 5;
    const CHAR_CATEGORY_NON_SPACING_MARK = 6;
    const CHAR_CATEGORY_ENCLOSING_MARK = 7;
    const CHAR_CATEGORY_COMBINING_SPACING_MARK = 8;
    const CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER = 9;
    const CHAR_CATEGORY_LETTER_NUMBER = 10;
    const CHAR_CATEGORY_OTHER_NUMBER = 11;
    const CHAR_CATEGORY_SPACE_SEPARATOR = 12;
    const CHAR_CATEGORY_LINE_SEPARATOR = 13;
    const CHAR_CATEGORY_PARAGRAPH_SEPARATOR = 14;
    const CHAR_CATEGORY_CONTROL_CHAR = 15;
    const CHAR_CATEGORY_FORMAT_CHAR = 16;
    const CHAR_CATEGORY_PRIVATE_USE_CHAR = 17;
    const CHAR_CATEGORY_SURROGATE = 18;
    const CHAR_CATEGORY_DASH_PUNCTUATION = 19;
    const CHAR_CATEGORY_START_PUNCTUATION = 20;
    const CHAR_CATEGORY_END_PUNCTUATION = 21;
    const CHAR_CATEGORY_CONNECTOR_PUNCTUATION = 22;
    const CHAR_CATEGORY_OTHER_PUNCTUATION = 23;
    const CHAR_CATEGORY_MATH_SYMBOL = 24;
    const CHAR_CATEGORY_CURRENCY_SYMBOL = 25;
    const CHAR_CATEGORY_MODIFIER_SYMBOL = 26;
    const CHAR_CATEGORY_OTHER_SYMBOL = 27;
    const CHAR_CATEGORY_INITIAL_PUNCTUATION = 28;
    const CHAR_CATEGORY_FINAL_PUNCTUATION = 29;
    const CHAR_CATEGORY_CHAR_CATEGORY_COUNT = 30;
    const CHAR_DIRECTION_LEFT_TO_RIGHT = 0;
    const CHAR_DIRECTION_RIGHT_TO_LEFT = 1;
    const CHAR_DIRECTION_EUROPEAN_NUMBER = 2;
    const CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR = 3;
    const CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR = 4;
    const CHAR_DIRECTION_ARABIC_NUMBER = 5;
    const CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR = 6;
    const CHAR_DIRECTION_BLOCK_SEPARATOR = 7;
    const CHAR_DIRECTION_SEGMENT_SEPARATOR = 8;
    const CHAR_DIRECTION_WHITE_SPACE_NEUTRAL = 9;
    const CHAR_DIRECTION_OTHER_NEUTRAL = 10;
    const CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING = 11;
    const CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE = 12;
    const CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC = 13;
    const CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING = 14;
    const CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE = 15;
    const CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT = 16;
    const CHAR_DIRECTION_DIR_NON_SPACING_MARK = 17;
    const CHAR_DIRECTION_BOUNDARY_NEUTRAL = 18;
    const CHAR_DIRECTION_FIRST_STRONG_ISOLATE = 19;
    const CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE = 20;
    const CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE = 21;
    const CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE = 22;
    const CHAR_DIRECTION_CHAR_DIRECTION_COUNT = 23;
    const BLOCK_CODE_NO_BLOCK = 0;
    const BLOCK_CODE_BASIC_LATIN = 1;
    const BLOCK_CODE_LATIN_1_SUPPLEMENT = 2;
    const BLOCK_CODE_LATIN_EXTENDED_A = 3;
    const BLOCK_CODE_LATIN_EXTENDED_B = 4;
    const BLOCK_CODE_IPA_EXTENSIONS = 5;
    const BLOCK_CODE_SPACING_MODIFIER_LETTERS = 6;
    const BLOCK_CODE_COMBINING_DIACRITICAL_MARKS = 7;
    const BLOCK_CODE_GREEK = 8;
    const BLOCK_CODE_CYRILLIC = 9;
    const BLOCK_CODE_ARMENIAN = 10;
    const BLOCK_CODE_HEBREW = 11;
    const BLOCK_CODE_ARABIC = 12;
    const BLOCK_CODE_SYRIAC = 13;
    const BLOCK_CODE_THAANA = 14;
    const BLOCK_CODE_DEVANAGARI = 15;
    const BLOCK_CODE_BENGALI = 16;
    const BLOCK_CODE_GURMUKHI = 17;
    const BLOCK_CODE_GUJARATI = 18;
    const BLOCK_CODE_ORIYA = 19;
    const BLOCK_CODE_TAMIL = 20;
    const BLOCK_CODE_TELUGU = 21;
    const BLOCK_CODE_KANNADA = 22;
    const BLOCK_CODE_MALAYALAM = 23;
    const BLOCK_CODE_SINHALA = 24;
    const BLOCK_CODE_THAI = 25;
    const BLOCK_CODE_LAO = 26;
    const BLOCK_CODE_TIBETAN = 27;
    const BLOCK_CODE_MYANMAR = 28;
    const BLOCK_CODE_GEORGIAN = 29;
    const BLOCK_CODE_HANGUL_JAMO = 30;
    const BLOCK_CODE_ETHIOPIC = 31;
    const BLOCK_CODE_CHEROKEE = 32;
    const BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS = 33;
    const BLOCK_CODE_OGHAM = 34;
    const BLOCK_CODE_RUNIC = 35;
    const BLOCK_CODE_KHMER = 36;
    const BLOCK_CODE_MONGOLIAN = 37;
    const BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL = 38;
    const BLOCK_CODE_GREEK_EXTENDED = 39;
    const BLOCK_CODE_GENERAL_PUNCTUATION = 40;
    const BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS = 41;
    const BLOCK_CODE_CURRENCY_SYMBOLS = 42;
    const BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS = 43;
    const BLOCK_CODE_LETTERLIKE_SYMBOLS = 44;
    const BLOCK_CODE_NUMBER_FORMS = 45;
    const BLOCK_CODE_ARROWS = 46;
    const BLOCK_CODE_MATHEMATICAL_OPERATORS = 47;
    const BLOCK_CODE_MISCELLANEOUS_TECHNICAL = 48;
    const BLOCK_CODE_CONTROL_PICTURES = 49;
    const BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION = 50;
    const BLOCK_CODE_ENCLOSED_ALPHANUMERICS = 51;
    const BLOCK_CODE_BOX_DRAWING = 52;
    const BLOCK_CODE_BLOCK_ELEMENTS = 53;
    const BLOCK_CODE_GEOMETRIC_SHAPES = 54;
    const BLOCK_CODE_MISCELLANEOUS_SYMBOLS = 55;
    const BLOCK_CODE_DINGBATS = 56;
    const BLOCK_CODE_BRAILLE_PATTERNS = 57;
    const BLOCK_CODE_CJK_RADICALS_SUPPLEMENT = 58;
    const BLOCK_CODE_KANGXI_RADICALS = 59;
    const BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS = 60;
    const BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION = 61;
    const BLOCK_CODE_HIRAGANA = 62;
    const BLOCK_CODE_KATAKANA = 63;
    const BLOCK_CODE_BOPOMOFO = 64;
    const BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO = 65;
    const BLOCK_CODE_KANBUN = 66;
    const BLOCK_CODE_BOPOMOFO_EXTENDED = 67;
    const BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS = 68;
    const BLOCK_CODE_CJK_COMPATIBILITY = 69;
    const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A = 70;
    const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS = 71;
    const BLOCK_CODE_YI_SYLLABLES = 72;
    const BLOCK_CODE_YI_RADICALS = 73;
    const BLOCK_CODE_HANGUL_SYLLABLES = 74;
    const BLOCK_CODE_HIGH_SURROGATES = 75;
    const BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES = 76;
    const BLOCK_CODE_LOW_SURROGATES = 77;
    const BLOCK_CODE_PRIVATE_USE_AREA = 78;
    const BLOCK_CODE_PRIVATE_USE = 78;
    const BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS = 79;
    const BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS = 80;
    const BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A = 81;
    const BLOCK_CODE_COMBINING_HALF_MARKS = 82;
    const BLOCK_CODE_CJK_COMPATIBILITY_FORMS = 83;
    const BLOCK_CODE_SMALL_FORM_VARIANTS = 84;
    const BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B = 85;
    const BLOCK_CODE_SPECIALS = 86;
    const BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS = 87;
    const BLOCK_CODE_OLD_ITALIC = 88;
    const BLOCK_CODE_GOTHIC = 89;
    const BLOCK_CODE_DESERET = 90;
    const BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS = 91;
    const BLOCK_CODE_MUSICAL_SYMBOLS = 92;
    const BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS = 93;
    const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B = 94;
    const BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT = 95;
    const BLOCK_CODE_TAGS = 96;
    const BLOCK_CODE_CYRILLIC_SUPPLEMENT = 97;
    const BLOCK_CODE_CYRILLIC_SUPPLEMENTARY = 97;
    const BLOCK_CODE_TAGALOG = 98;
    const BLOCK_CODE_HANUNOO = 99;
    const BLOCK_CODE_BUHID = 100;
    const BLOCK_CODE_TAGBANWA = 101;
    const BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A = 102;
    const BLOCK_CODE_SUPPLEMENTAL_ARROWS_A = 103;
    const BLOCK_CODE_SUPPLEMENTAL_ARROWS_B = 104;
    const BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B = 105;
    const BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS = 106;
    const BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS = 107;
    const BLOCK_CODE_VARIATION_SELECTORS = 108;
    const BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A = 109;
    const BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B = 110;
    const BLOCK_CODE_LIMBU = 111;
    const BLOCK_CODE_TAI_LE = 112;
    const BLOCK_CODE_KHMER_SYMBOLS = 113;
    const BLOCK_CODE_PHONETIC_EXTENSIONS = 114;
    const BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS = 115;
    const BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS = 116;
    const BLOCK_CODE_LINEAR_B_SYLLABARY = 117;
    const BLOCK_CODE_LINEAR_B_IDEOGRAMS = 118;
    const BLOCK_CODE_AEGEAN_NUMBERS = 119;
    const BLOCK_CODE_UGARITIC = 120;
    const BLOCK_CODE_SHAVIAN = 121;
    const BLOCK_CODE_OSMANYA = 122;
    const BLOCK_CODE_CYPRIOT_SYLLABARY = 123;
    const BLOCK_CODE_TAI_XUAN_JING_SYMBOLS = 124;
    const BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT = 125;
    const BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION = 126;
    const BLOCK_CODE_ANCIENT_GREEK_NUMBERS = 127;
    const BLOCK_CODE_ARABIC_SUPPLEMENT = 128;
    const BLOCK_CODE_BUGINESE = 129;
    const BLOCK_CODE_CJK_STROKES = 130;
    const BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT = 131;
    const BLOCK_CODE_COPTIC = 132;
    const BLOCK_CODE_ETHIOPIC_EXTENDED = 133;
    const BLOCK_CODE_ETHIOPIC_SUPPLEMENT = 134;
    const BLOCK_CODE_GEORGIAN_SUPPLEMENT = 135;
    const BLOCK_CODE_GLAGOLITIC = 136;
    const BLOCK_CODE_KHAROSHTHI = 137;
    const BLOCK_CODE_MODIFIER_TONE_LETTERS = 138;
    const BLOCK_CODE_NEW_TAI_LUE = 139;
    const BLOCK_CODE_OLD_PERSIAN = 140;
    const BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT = 141;
    const BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION = 142;
    const BLOCK_CODE_SYLOTI_NAGRI = 143;
    const BLOCK_CODE_TIFINAGH = 144;
    const BLOCK_CODE_VERTICAL_FORMS = 145;
    const BLOCK_CODE_NKO = 146;
    const BLOCK_CODE_BALINESE = 147;
    const BLOCK_CODE_LATIN_EXTENDED_C = 148;
    const BLOCK_CODE_LATIN_EXTENDED_D = 149;
    const BLOCK_CODE_PHAGS_PA = 150;
    const BLOCK_CODE_PHOENICIAN = 151;
    const BLOCK_CODE_CUNEIFORM = 152;
    const BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION = 153;
    const BLOCK_CODE_COUNTING_ROD_NUMERALS = 154;
    const BLOCK_CODE_SUNDANESE = 155;
    const BLOCK_CODE_LEPCHA = 156;
    const BLOCK_CODE_OL_CHIKI = 157;
    const BLOCK_CODE_CYRILLIC_EXTENDED_A = 158;
    const BLOCK_CODE_VAI = 159;
    const BLOCK_CODE_CYRILLIC_EXTENDED_B = 160;
    const BLOCK_CODE_SAURASHTRA = 161;
    const BLOCK_CODE_KAYAH_LI = 162;
    const BLOCK_CODE_REJANG = 163;
    const BLOCK_CODE_CHAM = 164;
    const BLOCK_CODE_ANCIENT_SYMBOLS = 165;
    const BLOCK_CODE_PHAISTOS_DISC = 166;
    const BLOCK_CODE_LYCIAN = 167;
    const BLOCK_CODE_CARIAN = 168;
    const BLOCK_CODE_LYDIAN = 169;
    const BLOCK_CODE_MAHJONG_TILES = 170;
    const BLOCK_CODE_DOMINO_TILES = 171;
    const BLOCK_CODE_SAMARITAN = 172;
    const BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED = 173;
    const BLOCK_CODE_TAI_THAM = 174;
    const BLOCK_CODE_VEDIC_EXTENSIONS = 175;
    const BLOCK_CODE_LISU = 176;
    const BLOCK_CODE_BAMUM = 177;
    const BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS = 178;
    const BLOCK_CODE_DEVANAGARI_EXTENDED = 179;
    const BLOCK_CODE_HANGUL_JAMO_EXTENDED_A = 180;
    const BLOCK_CODE_JAVANESE = 181;
    const BLOCK_CODE_MYANMAR_EXTENDED_A = 182;
    const BLOCK_CODE_TAI_VIET = 183;
    const BLOCK_CODE_MEETEI_MAYEK = 184;
    const BLOCK_CODE_HANGUL_JAMO_EXTENDED_B = 185;
    const BLOCK_CODE_IMPERIAL_ARAMAIC = 186;
    const BLOCK_CODE_OLD_SOUTH_ARABIAN = 187;
    const BLOCK_CODE_AVESTAN = 188;
    const BLOCK_CODE_INSCRIPTIONAL_PARTHIAN = 189;
    const BLOCK_CODE_INSCRIPTIONAL_PAHLAVI = 190;
    const BLOCK_CODE_OLD_TURKIC = 191;
    const BLOCK_CODE_RUMI_NUMERAL_SYMBOLS = 192;
    const BLOCK_CODE_KAITHI = 193;
    const BLOCK_CODE_EGYPTIAN_HIEROGLYPHS = 194;
    const BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT = 195;
    const BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT = 196;
    const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C = 197;
    const BLOCK_CODE_MANDAIC = 198;
    const BLOCK_CODE_BATAK = 199;
    const BLOCK_CODE_ETHIOPIC_EXTENDED_A = 200;
    const BLOCK_CODE_BRAHMI = 201;
    const BLOCK_CODE_BAMUM_SUPPLEMENT = 202;
    const BLOCK_CODE_KANA_SUPPLEMENT = 203;
    const BLOCK_CODE_PLAYING_CARDS = 204;
    const BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS = 205;
    const BLOCK_CODE_EMOTICONS = 206;
    const BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS = 207;
    const BLOCK_CODE_ALCHEMICAL_SYMBOLS = 208;
    const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D = 209;
    const BLOCK_CODE_ARABIC_EXTENDED_A = 210;
    const BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS = 211;
    const BLOCK_CODE_CHAKMA = 212;
    const BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS = 213;
    const BLOCK_CODE_MEROITIC_CURSIVE = 214;
    const BLOCK_CODE_MEROITIC_HIEROGLYPHS = 215;
    const BLOCK_CODE_MIAO = 216;
    const BLOCK_CODE_SHARADA = 217;
    const BLOCK_CODE_SORA_SOMPENG = 218;
    const BLOCK_CODE_SUNDANESE_SUPPLEMENT = 219;
    const BLOCK_CODE_TAKRI = 220;
    const BLOCK_CODE_BASSA_VAH = 221;
    const BLOCK_CODE_CAUCASIAN_ALBANIAN = 222;
    const BLOCK_CODE_COPTIC_EPACT_NUMBERS = 223;
    const BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_EXTENDED = 224;
    const BLOCK_CODE_DUPLOYAN = 225;
    const BLOCK_CODE_ELBASAN = 226;
    const BLOCK_CODE_GEOMETRIC_SHAPES_EXTENDED = 227;
    const BLOCK_CODE_GRANTHA = 228;
    const BLOCK_CODE_KHOJKI = 229;
    const BLOCK_CODE_KHUDAWADI = 230;
    const BLOCK_CODE_LATIN_EXTENDED_E = 231;
    const BLOCK_CODE_LINEAR_A = 232;
    const BLOCK_CODE_MAHAJANI = 233;
    const BLOCK_CODE_MANICHAEAN = 234;
    const BLOCK_CODE_MENDE_KIKAKUI = 235;
    const BLOCK_CODE_MODI = 236;
    const BLOCK_CODE_MRO = 237;
    const BLOCK_CODE_MYANMAR_EXTENDED_B = 238;
    const BLOCK_CODE_NABATAEAN = 239;
    const BLOCK_CODE_OLD_NORTH_ARABIAN = 240;
    const BLOCK_CODE_OLD_PERMIC = 241;
    const BLOCK_CODE_ORNAMENTAL_DINGBATS = 242;
    const BLOCK_CODE_PAHAWH_HMONG = 243;
    const BLOCK_CODE_PALMYRENE = 244;
    const BLOCK_CODE_PAU_CIN_HAU = 245;
    const BLOCK_CODE_PSALTER_PAHLAVI = 246;
    const BLOCK_CODE_SHORTHAND_FORMAT_CONTROLS = 247;
    const BLOCK_CODE_SIDDHAM = 248;
    const BLOCK_CODE_SINHALA_ARCHAIC_NUMBERS = 249;
    const BLOCK_CODE_SUPPLEMENTAL_ARROWS_C = 250;
    const BLOCK_CODE_TIRHUTA = 251;
    const BLOCK_CODE_WARANG_CITI = 252;
    const BLOCK_CODE_COUNT = 263;
    const BLOCK_CODE_INVALID_CODE = -1;
    const BPT_NONE = 0;
    const BPT_OPEN = 1;
    const BPT_CLOSE = 2;
    const BPT_COUNT = 3;
    const EA_NEUTRAL = 0;
    const EA_AMBIGUOUS = 1;
    const EA_HALFWIDTH = 2;
    const EA_FULLWIDTH = 3;
    const EA_NARROW = 4;
    const EA_WIDE = 5;
    const EA_COUNT = 6;
    const UNICODE_CHAR_NAME = 0;
    const UNICODE_10_CHAR_NAME = 1;
    const EXTENDED_CHAR_NAME = 2;
    const CHAR_NAME_ALIAS = 3;
    const CHAR_NAME_CHOICE_COUNT = 4;
    const SHORT_PROPERTY_NAME = 0;
    const LONG_PROPERTY_NAME = 1;
    const PROPERTY_NAME_CHOICE_COUNT = 2;
    const DT_NONE = 0;
    const DT_CANONICAL = 1;
    const DT_COMPAT = 2;
    const DT_CIRCLE = 3;
    const DT_FINAL = 4;
    const DT_FONT = 5;
    const DT_FRACTION = 6;
    const DT_INITIAL = 7;
    const DT_ISOLATED = 8;
    const DT_MEDIAL = 9;
    const DT_NARROW = 10;
    const DT_NOBREAK = 11;
    const DT_SMALL = 12;
    const DT_SQUARE = 13;
    const DT_SUB = 14;
    const DT_SUPER = 15;
    const DT_VERTICAL = 16;
    const DT_WIDE = 17;
    const DT_COUNT = 18;
    const JT_NON_JOINING = 0;
    const JT_JOIN_CAUSING = 1;
    const JT_DUAL_JOINING = 2;
    const JT_LEFT_JOINING = 3;
    const JT_RIGHT_JOINING = 4;
    const JT_TRANSPARENT = 5;
    const JT_COUNT = 6;
    const JG_NO_JOINING_GROUP = 0;
    const JG_AIN = 1;
    const JG_ALAPH = 2;
    const JG_ALEF = 3;
    const JG_BEH = 4;
    const JG_BETH = 5;
    const JG_DAL = 6;
    const JG_DALATH_RISH = 7;
    const JG_E = 8;
    const JG_FEH = 9;
    const JG_FINAL_SEMKATH = 10;
    const JG_GAF = 11;
    const JG_GAMAL = 12;
    const JG_HAH = 13;
    const JG_TEH_MARBUTA_GOAL = 14;
    const JG_HAMZA_ON_HEH_GOAL = 14;
    const JG_HE = 15;
    const JG_HEH = 16;
    const JG_HEH_GOAL = 17;
    const JG_HETH = 18;
    const JG_KAF = 19;
    const JG_KAPH = 20;
    const JG_KNOTTED_HEH = 21;
    const JG_LAM = 22;
    const JG_LAMADH = 23;
    const JG_MEEM = 24;
    const JG_MIM = 25;
    const JG_NOON = 26;
    const JG_NUN = 27;
    const JG_PE = 28;
    const JG_QAF = 29;
    const JG_QAPH = 30;
    const JG_REH = 31;
    const JG_REVERSED_PE = 32;
    const JG_SAD = 33;
    const JG_SADHE = 34;
    const JG_SEEN = 35;
    const JG_SEMKATH = 36;
    const JG_SHIN = 37;
    const JG_SWASH_KAF = 38;
    const JG_SYRIAC_WAW = 39;
    const JG_TAH = 40;
    const JG_TAW = 41;
    const JG_TEH_MARBUTA = 42;
    const JG_TETH = 43;
    const JG_WAW = 44;
    const JG_YEH = 45;
    const JG_YEH_BARREE = 46;
    const JG_YEH_WITH_TAIL = 47;
    const JG_YUDH = 48;
    const JG_YUDH_HE = 49;
    const JG_ZAIN = 50;
    const JG_FE = 51;
    const JG_KHAPH = 52;
    const JG_ZHAIN = 53;
    const JG_BURUSHASKI_YEH_BARREE = 54;
    const JG_FARSI_YEH = 55;
    const JG_NYA = 56;
    const JG_ROHINGYA_YEH = 57;
    const JG_MANICHAEAN_ALEPH = 58;
    const JG_MANICHAEAN_AYIN = 59;
    const JG_MANICHAEAN_BETH = 60;
    const JG_MANICHAEAN_DALETH = 61;
    const JG_MANICHAEAN_DHAMEDH = 62;
    const JG_MANICHAEAN_FIVE = 63;
    const JG_MANICHAEAN_GIMEL = 64;
    const JG_MANICHAEAN_HETH = 65;
    const JG_MANICHAEAN_HUNDRED = 66;
    const JG_MANICHAEAN_KAPH = 67;
    const JG_MANICHAEAN_LAMEDH = 68;
    const JG_MANICHAEAN_MEM = 69;
    const JG_MANICHAEAN_NUN = 70;
    const JG_MANICHAEAN_ONE = 71;
    const JG_MANICHAEAN_PE = 72;
    const JG_MANICHAEAN_QOPH = 73;
    const JG_MANICHAEAN_RESH = 74;
    const JG_MANICHAEAN_SADHE = 75;
    const JG_MANICHAEAN_SAMEKH = 76;
    const JG_MANICHAEAN_TAW = 77;
    const JG_MANICHAEAN_TEN = 78;
    const JG_MANICHAEAN_TETH = 79;
    const JG_MANICHAEAN_THAMEDH = 80;
    const JG_MANICHAEAN_TWENTY = 81;
    const JG_MANICHAEAN_WAW = 82;
    const JG_MANICHAEAN_YODH = 83;
    const JG_MANICHAEAN_ZAYIN = 84;
    const JG_STRAIGHT_WAW = 85;
    const JG_COUNT = 86;
    const GCB_OTHER = 0;
    const GCB_CONTROL = 1;
    const GCB_CR = 2;
    const GCB_EXTEND = 3;
    const GCB_L = 4;
    const GCB_LF = 5;
    const GCB_LV = 6;
    const GCB_LVT = 7;
    const GCB_T = 8;
    const GCB_V = 9;
    const GCB_SPACING_MARK = 10;
    const GCB_PREPEND = 11;
    const GCB_REGIONAL_INDICATOR = 12;
    const GCB_COUNT = 13;
    const WB_OTHER = 0;
    const WB_ALETTER = 1;
    const WB_FORMAT = 2;
    const WB_KATAKANA = 3;
    const WB_MIDLETTER = 4;
    const WB_MIDNUM = 5;
    const WB_NUMERIC = 6;
    const WB_EXTENDNUMLET = 7;
    const WB_CR = 8;
    const WB_EXTEND = 9;
    const WB_LF = 10;
    const WB_MIDNUMLET = 11;
    const WB_NEWLINE = 12;
    const WB_REGIONAL_INDICATOR = 13;
    const WB_HEBREW_LETTER = 14;
    const WB_SINGLE_QUOTE = 15;
    const WB_DOUBLE_QUOTE = 16;
    const WB_COUNT = 17;
    const SB_OTHER = 0;
    const SB_ATERM = 1;
    const SB_CLOSE = 2;
    const SB_FORMAT = 3;
    const SB_LOWER = 4;
    const SB_NUMERIC = 5;
    const SB_OLETTER = 6;
    const SB_SEP = 7;
    const SB_SP = 8;
    const SB_STERM = 9;
    const SB_UPPER = 10;
    const SB_CR = 11;
    const SB_EXTEND = 12;
    const SB_LF = 13;
    const SB_SCONTINUE = 14;
    const SB_COUNT = 15;
    const LB_UNKNOWN = 0;
    const LB_AMBIGUOUS = 1;
    const LB_ALPHABETIC = 2;
    const LB_BREAK_BOTH = 3;
    const LB_BREAK_AFTER = 4;
    const LB_BREAK_BEFORE = 5;
    const LB_MANDATORY_BREAK = 6;
    const LB_CONTINGENT_BREAK = 7;
    const LB_CLOSE_PUNCTUATION = 8;
    const LB_COMBINING_MARK = 9;
    const LB_CARRIAGE_RETURN = 10;
    const LB_EXCLAMATION = 11;
    const LB_GLUE = 12;
    const LB_HYPHEN = 13;
    const LB_IDEOGRAPHIC = 14;
    const LB_INSEPARABLE = 15;
    const LB_INSEPERABLE = 15;
    const LB_INFIX_NUMERIC = 16;
    const LB_LINE_FEED = 17;
    const LB_NONSTARTER = 18;
    const LB_NUMERIC = 19;
    const LB_OPEN_PUNCTUATION = 20;
    const LB_POSTFIX_NUMERIC = 21;
    const LB_PREFIX_NUMERIC = 22;
    const LB_QUOTATION = 23;
    const LB_COMPLEX_CONTEXT = 24;
    const LB_SURROGATE = 25;
    const LB_SPACE = 26;
    const LB_BREAK_SYMBOLS = 27;
    const LB_ZWSPACE = 28;
    const LB_NEXT_LINE = 29;
    const LB_WORD_JOINER = 30;
    const LB_H2 = 31;
    const LB_H3 = 32;
    const LB_JL = 33;
    const LB_JT = 34;
    const LB_JV = 35;
    const LB_CLOSE_PARENTHESIS = 36;
    const LB_CONDITIONAL_JAPANESE_STARTER = 37;
    const LB_HEBREW_LETTER = 38;
    const LB_REGIONAL_INDICATOR = 39;
    const LB_COUNT = 40;
    const NT_NONE = 0;
    const NT_DECIMAL = 1;
    const NT_DIGIT = 2;
    const NT_NUMERIC = 3;
    const NT_COUNT = 4;
    const HST_NOT_APPLICABLE = 0;
    const HST_LEADING_JAMO = 1;
    const HST_VOWEL_JAMO = 2;
    const HST_TRAILING_JAMO = 3;
    const HST_LV_SYLLABLE = 4;
    const HST_LVT_SYLLABLE = 5;
    const HST_COUNT = 6;

/**
*<div id="intlchar.hasbinaryproperty" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::hasBinaryProperty</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::hasBinaryProperty</span> &mdash; <span class="dc-title">Check a binary Unicode property for a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.hasbinaryproperty-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::hasBinaryProperty</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div>    <p class="para rdfs-comment">    Checks a binary Unicode property for a code point.   </p>   <p class="para">    Unicode, especially in version 3.2, defines many more properties than the original set in UnicodeData.txt.   </p>   <p class="para">    The properties APIs are intended to reflect Unicode properties as defined in the Unicode Character Database (UCD)    and Unicode Technical Reports (UTR). For details about the properties see    <a href="http://www.unicode.org/ucd/" class="link external">&raquo;&nbsp;http://www.unicode.org/ucd/</a>.    For names of Unicode properties see the UCD file PropertyAliases.txt.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.hasbinaryproperty-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>              <dt> <code class="parameter">property</code></dt>      <dd>       <p class="para">The Unicode property to lookup (see the <em>IntlChar::PROPERTY_*</em> constants).</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.hasbinaryproperty-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> or <strong><code>FALSE</code></strong> according to the binary Unicode property value for <code class="parameter">codepoint</code>.    Also <strong><code>FALSE</code></strong> if <code class="parameter">property</code> is out of bounds or if the Unicode version does not have data for    the property at all, or not for this code point.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.hasbinaryproperty-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3125">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_ALPHABETIC</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_CASE_SENSITIVE</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_MIRRORED</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_ALPHABETIC</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_CASE_SENSITIVE</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_MIRRORED</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) bool(false) bool(false) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.hasbinaryproperty-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>     <li class="member"><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE or FALSE according to the binary Unicode property value for codepoint.*/
    static public function hasBinaryProperty($codepoint, $property){}

/**
*<div id="intlchar.charage" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::charAge</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::charAge</span> &mdash; <span class="dc-title">Get the &quot;age&quot; of the code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.charage-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><strong>IntlChar::charAge</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Gets the &quot;age&quot; of the code point.   </p>   <p class="para">    The &quot;age&quot; is the Unicode version when the code point was first designated (as a non-character or for Private Use)    or assigned a character. This can be useful to avoid emitting code points to receiving processes that do not accept    newer characters.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.charage-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.charage-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The Unicode version number, as an <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>.    For example, version <em class="emphasis">1.3.31.2</em> would be represented as <em>[1, 3, 31, 2]</em>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.charage-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3100">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charage</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charage</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{1F576}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> array(4) {   [0]=&gt;   int(1)   [1]=&gt;   int(1)   [2]=&gt;   int(0)   [3]=&gt;   int(0) } array(4) {   [0]=&gt;   int(7)   [1]=&gt;   int(0)   [2]=&gt;   int(0)   [3]=&gt;   int(0) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.charage-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyMinValue()} - Get the min value for a Unicode property</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return array The Unicode version number, as an array. For example, version 1.3.31.2 would be represented as [1, 3, 31, 2].*/
    public static function charAge($codepoint) {}

/**
*<div id="intlchar.chardigitvalue" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::charDigitValue</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::charDigitValue</span> &mdash; <span class="dc-title">Get the decimal digit value of a decimal digit character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.chardigitvalue-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::charDigitValue</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Returns the decimal digit value of a decimal digit character.   </p>   <p class="para">    Such characters have the general category &quot;Nd&quot; (decimal digit numbers) and a Numeric_Type of Decimal.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.chardigitvalue-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.chardigitvalue-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The decimal digit value of <code class="parameter">codepoint</code>,    or <em>-1</em> if it is not a decimal digit character.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.chardigitvalue-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3101">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDigitValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDigitValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0662}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDigitValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0E53}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(1) int(2) int(3) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.chardigitvalue-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::getNumericValue()} - Get the numeric value for a Unicode code point</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int The decimal digit value of codepoint, or -1 if it is not a decimal digit character.*/
    public static function charDigitValue($codepoint){}

/**
*<div id="intlchar.chardirection" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::charDirection</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::charDirection</span> &mdash; <span class="dc-title">Get bidirectional category value for a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.chardirection-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::charDirection</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Returns the bidirectional category value for the code point, which is used in the <a href="http://www.unicode.org/reports/tr9/" class="link external">&raquo;&nbsp;Unicode bidirectional algorithm (UAX #9)</a>.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Some unassigned code points have bidi values of R or AL because they are in blocks that are reserved for Right-To-Left scripts.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.chardirection-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.chardirection-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The bidirectional category value; one of the following constants:    <ul class="simplelist">     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_ARABIC_NUMBER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_BLOCK_SEPARATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_SEGMENT_SEPARATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_WHITE_SPACE_NEUTRAL</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_OTHER_NEUTRAL</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_DIR_NON_SPACING_MARK</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_BOUNDARY_NEUTRAL</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_FIRST_STRONG_ISOLATE</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_DIRECTION_CHAR_DIRECTION_COUNT</code></strong></li>    </ul>   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.chardirection-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3102">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_LEFT_TO_RIGHT</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{05E9}"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_RIGHT_TO_LEFT</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"+"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int <p>The bidirectional category value; one of the following constants:*/
    public static function charDirection($codepoint) {}

/**
*<div id="intlchar.charfromname" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::charFromName</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::charFromName</span> &mdash; <span class="dc-title">Find Unicode character by name and return its code point value</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.charfromname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::charFromName</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$characterName</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Finds a Unicode character by its name and returns its code point value.   </p>   <p class="para">    The name is matched exactly and completely. If the name does not correspond to a code point, <strong><code>NULL</code></strong> is returned.   </p>   <p class="para">    A Unicode 1.0 name is matched only if it differs from the modern name. Unicode names are all uppercase.    Extended names are lowercase followed by an uppercase hexadecimal number, and within angle brackets.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.charfromname-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">characterName</code></dt>      <dd>       <p class="para">       Full name of the Unicode character.      </p>     </dd>              <dt> <code class="parameter">nameChoice</code></dt>      <dd>       <p class="para">       Which set of names to use for the lookup. Can be any of these constants:       <ul class="simplelist">        <li class="member"><strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong> (default)</li>        <li class="member"><strong><code>IntlChar::UNICODE_10_CHAR_NAME</code></strong></li>        <li class="member"><strong><code>IntlChar::EXTENDED_CHAR_NAME</code></strong></li>        <li class="member"><strong><code>IntlChar::CHAR_NAME_ALIAS</code></strong></li>        <li class="member"><strong><code>IntlChar::CHAR_NAME_CHOICE_COUNT</code></strong></li>       </ul>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.charfromname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The Unicode value of the code point with the given name (as an <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span>), or <strong><code>NULL</code></strong> if there is no such code point.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.charfromname-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3103">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"LATIN&nbsp;CAPITAL&nbsp;LETTER&nbsp;A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"SNOWMAN"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"RECYCLING&nbsp;SYMBOL&nbsp;FOR&nbsp;TYPE-1&nbsp;PLASTICS"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"A&nbsp;RANDOM&nbsp;STRING&nbsp;WHICH&nbsp;DOESN'T&nbsp;CORRESPOND&nbsp;TO&nbsp;ANY&nbsp;UNICODE&nbsp;CHARACTER"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(65) int(9731) int(9843) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.charfromname-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::charName()} - Retrieve the name of a Unicode character</span></li>     <li class="member"><span class="function">{@link IntlChar::enumCharNames()} - Enumerate all assigned Unicode characters within a range</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int The Unicode value of the code point with the given name (as an integer), or FALSE if there is no such code point.*/
    public static function charFromName($characterName, $nameChoice = IntlChar::UNICODE_CHAR_NAME) {}

/**
*<div id="intlchar.charmirror" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::charMirror</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::charMirror</span> &mdash; <span class="dc-title">Get the &quot;mirror-image&quot; character for a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.charmirror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>IntlChar::charMirror</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Maps the specified character to a &quot;mirror-image&quot; character.   </p>   <p class="para">    For characters with the <em class="emphasis">Bidi_Mirrored</em> property, implementations sometimes need a &quot;poor man&#039;s&quot; mapping to another    Unicode character (code point) such that the default glyph may serve as the mirror-image of the default glyph of the    specified character. This is useful for text conversion to and from codepages with visual order, and for displays    without glyph selection capabilities.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.charmirror-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.charmirror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns another Unicode code point that may serve as a mirror-image substitute, or <code class="parameter">codepoint</code>    itself if there is no such mapping or <code class="parameter">codepoint</code> does not have the    <em class="emphasis">Bidi_Mirrored</em> property.   </p>   <p class="para">The return type will be <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> unless the code point was passed as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>, in which case a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> will be returned.</p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.charmirror-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3104">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charMirror</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charMirror</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charMirror</span><span style="color: #007700">(</span><span style="color: #DD0000">"("</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(1) &quot;A&quot; string(1) &quot;&gt;&quot; string(2) &quot;)&quot; </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.charmirror-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isMirrored()} - Check if code point has the Bidi_Mirrored property</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_BIDI_MIRRORED</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return mixed Returns another Unicode code point that may serve as a mirror-image substitute, or codepoint itself if there is no such mapping or codepoint does not have the Bidi_Mirrored property.*/
    public static function charMirror($codepoint) {}

/**
*<div id="intlchar.charname" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::charName</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::charName</span> &mdash; <span class="dc-title">Retrieve the name of a Unicode character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.charname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><strong>IntlChar::charName</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Retrieves the name of a Unicode character.   </p>   <p class="para">    Depending on <code class="parameter">nameChoice</code>, the resulting character name is the &quot;modern&quot; name or the name that    was defined in Unicode version 1.0. The name contains only &quot;invariant&quot; characters like A-Z, 0-9, space, and &#039;-&#039;.    Unicode 1.0 names are only retrieved if they are different from the modern names and if ICU contains the data for them.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.charname-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>              <dt> <code class="parameter">nameChoice</code></dt>      <dd>       <p class="para">       Which set of names to use for the lookup. Can be any of these constants:       <ul class="simplelist">        <li class="member"><strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong> (default)</li>        <li class="member"><strong><code>IntlChar::UNICODE_10_CHAR_NAME</code></strong></li>        <li class="member"><strong><code>IntlChar::EXTENDED_CHAR_NAME</code></strong></li>        <li class="member"><strong><code>IntlChar::CHAR_NAME_ALIAS</code></strong></li>        <li class="member"><strong><code>IntlChar::CHAR_NAME_CHOICE_COUNT</code></strong></li>       </ul>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.charname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The corresponding name, or an empty string if there is no name for this character,    or <strong><code>NULL</code></strong> if there is no such code point.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.charname-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3105">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">UNICODE_CHAR_NAME</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0000}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(9) &quot;FULL STOP&quot; string(9) &quot;FULL STOP&quot; string(7) &quot;SNOWMAN&quot; string(0) &quot;&quot; </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.charname-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::charFromName()} - Find Unicode character by name and return its code point value</span></li>     <li class="member"><span class="function">{@link IntlChar::enumCharNames()} - Enumerate all assigned Unicode characters within a range</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return string The corresponding name, or an empty string if there is no name for this character.*/
    public static function charName($codepoint, $nameChoice = IntlChar::UNICODE_CHAR_NAME) {}

/**
*<div id="intlchar.chartype" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::charType</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::charType</span> &mdash; <span class="dc-title">Get the general category value for a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.chartype-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::charType</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Returns the general category value for the code point.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.chartype-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.chartype-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the general category type, which may be one of the following constants:    <ul class="simplelist">     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_UNASSIGNED</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_GENERAL_OTHER_TYPES</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_LOWERCASE_LETTER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_TITLECASE_LETTER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_MODIFIER_LETTER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_LETTER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_NON_SPACING_MARK</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_ENCLOSING_MARK</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_COMBINING_SPACING_MARK</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_LETTER_NUMBER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_NUMBER</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_SPACE_SEPARATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_LINE_SEPARATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_CONTROL_CHAR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_FORMAT_CHAR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_PRIVATE_USE_CHAR</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_SURROGATE</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_DASH_PUNCTUATION</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_START_PUNCTUATION</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_END_PUNCTUATION</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_CONNECTOR_PUNCTUATION</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_MATH_SYMBOL</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_CURRENCY_SYMBOL</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_MODIFIER_SYMBOL</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_OTHER_SYMBOL</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_INITIAL_PUNCTUATION</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_FINAL_PUNCTUATION</code></strong></li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_CHAR_CATEGORY_COUNT</code></strong></li>    </ul>   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.chartype-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3106">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_UPPERCASE_LETTER</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_OTHER_PUNCTUATION</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_CONTROL_CHAR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_OTHER_SYMBOL</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int Returns the general category type, which may be one of the following constants:*/
    public static function charType($codepoint)
    {
    }

/**
*<div id="intlchar.chr" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::chr</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::chr</span> &mdash; <span class="dc-title">Return Unicode character by code point value</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.chr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><strong>IntlChar::chr</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Returns a string containing the character specified by the Unicode code point value.   </p>   <p class="para">    This function compliments <span class="function">{@link IntlChar::ord()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.chr-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.chr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    A string containing the single character specified by the Unicode code point value.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.chr-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3107">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$values&nbsp;</span><span style="color: #007700">=&nbsp;[</span><span style="color: #DD0000">"A"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">63</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">123</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">9731</span><span style="color: #007700">];<br />foreach&nbsp;(</span><span style="color: #9876AA">$values&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">));<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(1) &quot;A&quot; string(1) &quot;?&quot; string(1) &quot;{&quot; string(3) &quot;☃&quot; </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.chr-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::ord()} - Return Unicode code point value of character</span></li>     <li class="member"><span class="function">{@link chr()} - 返回指定的字符</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return string A string containing the single character specified by the Unicode code point value.*/
    public static function chr ($codepoint)
    {

    }

/**
*<div id="intlchar.digit" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::digit</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::digit</span> &mdash; <span class="dc-title">Get the decimal digit value of a code point for a given radix</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.digit-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::digit</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$codepoint</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$radix</code><span class="initializer"> = 10</span></span>   ] )</div>    <p class="para rdfs-comment">    Returns the decimal digit value of the code point in the specified radix.   </p>   <p class="para">    If the radix is not in the range <em>2&lt;=radix&lt;=36</em> or if the value of <code class="parameter">codepoint</code>    is not a valid digit in the specified radix, <strong><code>FALSE</code></strong> is returned.    A character is a valid digit if at least one of the following is true:    <ul class="simplelist">     <li class="member">The character has a decimal digit value. Such characters have the general category &quot;Nd&quot; (decimal digit numbers) and a Numeric_Type of Decimal. In this case the value is the character&#039;s decimal digit value.</li>     <li class="member">The character is one of the uppercase Latin letters &#039;A&#039; through &#039;Z&#039;. In this case the value is c-&#039;A&#039;+10.</li>     <li class="member">The character is one of the lowercase Latin letters &#039;a&#039; through &#039;z&#039;. In this case the value is ch-&#039;a&#039;+10.</li>     <li class="member">Latin letters from both the ASCII range (0061..007A, 0041..005A) as well as from the Fullwidth ASCII range (FF41..FF5A, FF21..FF3A) are recognized.</li>    </ul>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.digit-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>              <dt> <code class="parameter">radix</code></dt>      <dd>       <p class="para">       The radix (defaults to <em>10</em>).      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.digit-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the numeric value represented by the character in the specified radix,    or <strong><code>FALSE</code></strong> if there is no value or if the value exceeds the radix.   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.digit-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3108">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"0"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"3"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">16</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(0) int(3) bool(false) int(10) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.digit-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::forDigit()} - Get character representation for a given digit and radix</span></li>     <li class="member"><span class="function">{@link IntlChar::charDigitValue()} - Get the decimal digit value of a decimal digit character</span></li>     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_NUMERIC_TYPE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int Returns the numeric value represented by the character in the specified radix, or <b>FALSE</b> if there is no value or if the value exceeds the radix.*/
    public static function digit ($codepoint,$radix = 10 ) {}

/**
*<div id="intlchar.enumcharnames" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::enumCharNames</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::enumCharNames</span> &mdash; <span class="dc-title">Enumerate all assigned Unicode characters within a range</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.enumcharnames-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>IntlChar::enumCharNames</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$start</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$limit</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Enumerate all assigned Unicode characters between the start and limit code points (start inclusive, limit exclusive)    and call a function for each, passing the code point value and the character name.   </p>   <p class="para">    For Unicode 1.0 names, only those are enumerated that differ from the modern names.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.enumcharnames-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">start</code></dt>      <dd>       <p class="para">       The first code point in the enumeration range.      </p>     </dd>              <dt> <code class="parameter">limit</code></dt>      <dd>       <p class="para">       One more than the last code point in the enumeration range (the first one after the range).      </p>     </dd>              <dt> <code class="parameter">callback</code></dt>      <dd>       <p class="para">       The function that is to be called for each character name.  The following three arguments will be passed into it:       <ul class="simplelist">        <li class="member"><span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> <em>$codepoint</em> - The numeric code point value</li>        <li class="member"><span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> <em>$nameChoice</em> - The same value as the <code class="parameter">nameChoice</code> parameter below</li>        <li class="member"><span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> <em>$name</em> - The name of the character</li>       </ul>      </p>     </dd>              <dt> <code class="parameter">nameChoice</code></dt>      <dd>       <p class="para">       Selector for which kind of names to enumerate.  Can be any of these constants:       <ul class="simplelist">        <li class="member"><strong><code>IntlChar::UNICODE_CHAR_NAME</code></strong> (default)</li>        <li class="member"><strong><code>IntlChar::UNICODE_10_CHAR_NAME</code></strong></li>        <li class="member"><strong><code>IntlChar::EXTENDED_CHAR_NAME</code></strong></li>        <li class="member"><strong><code>IntlChar::CHAR_NAME_ALIAS</code></strong></li>        <li class="member"><strong><code>IntlChar::CHAR_NAME_CHOICE_COUNT</code></strong></li>       </ul>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.enumcharnames-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.enumcharnames-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3109">    <p><strong>Example #1 Enumerating over a sample range of code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">enumCharNames</span><span style="color: #007700">(</span><span style="color: #9876AA">0x2600</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x2610</span><span style="color: #007700">,&nbsp;function(</span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$nameChoice</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$name</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"U+%04x&nbsp;%s\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br />});<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> U+2600 BLACK SUN WITH RAYS U+2601 CLOUD U+2602 UMBRELLA U+2603 SNOWMAN U+2604 COMET U+2605 BLACK STAR U+2606 WHITE STAR U+2607 LIGHTNING U+2608 THUNDERSTORM U+2609 SUN U+260a ASCENDING NODE U+260b DESCENDING NODE U+260c CONJUNCTION U+260d OPPOSITION U+260e BLACK TELEPHONE U+260f WHITE TELEPHONE </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.enumcharnames-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::charName()} - Retrieve the name of a Unicode character</span></li>     <li class="member"><span class="function">{@link IntlChar::charFromName()} - Find Unicode character by name and return its code point value</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
*/
    public static function enumCharNames ($start, $limit, $callback, $nameChoice = IntlChar::UNICODE_CHAR_NAME) {}

/**
*<div id="intlchar.enumchartypes" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::enumCharTypes</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::enumCharTypes</span> &mdash; <span class="dc-title">Enumerate all code points with their Unicode general categories</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.enumchartypes-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>IntlChar::enumCharTypes</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    )</div>    <p class="para rdfs-comment">    Enumerates efficiently all code points with their Unicode general categories. This is useful for building data    structures, for enumerating all assigned code points, etc.   </p>   <p class="para">    For each contiguous range of code points with a given general category (&quot;character type&quot;), the    <code class="parameter">callback</code> function is called. Adjacent ranges have different types. The Unicode Standard    guarantees that the numeric value of the type is 0..31.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.enumchartypes-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">callback</code></dt>      <dd>       <p class="para">       The function that is to be called for each contiguous range of code points with the same general category.       The following three arguments will be passed into it:       <ul class="simplelist">        <li class="member"><span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> <em>$start</em> - The starting code point of the range</li>        <li class="member"><span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> <em>$end</em> - The ending code point of the range</li>        <li class="member"><span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> <em>$name</em> - The category type (one of the <em>IntlChar::CHAR_CATEGORY_*</em> constants)</li>       </ul>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.enumchartypes-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.enumchartypes-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3110">    <p><strong>Example #1 Enumerating over a sample range of code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">enumCharTypes</span><span style="color: #007700">(function(</span><span style="color: #9876AA">$start</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$end</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"U+%04x&nbsp;through&nbsp;U+%04x&nbsp;are&nbsp;in&nbsp;category&nbsp;%d\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$start</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$end</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #007700">);<br />});<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> U+0000 through U+0020 are in category 15 U+0020 through U+0021 are in category 12 U+0021 through U+0024 are in category 23 U+0024 through U+0025 are in category 25 U+0025 through U+0028 are in category 23 U+0028 through U+0029 are in category 20 U+0029 through U+002a are in category 21 U+002a through U+002b are in category 23 U+002b through U+002c are in category 24 U+002c through U+002d are in category 23 U+002d through U+002e are in category 19 U+002e through U+0030 are in category 23 U+0030 through U+003a are in category 9 ... </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
*/
    public static function enumCharTypes ($callable) {}

/**
*<div id="intlchar.foldcase" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::foldCase</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::foldCase</span> &mdash; <span class="dc-title">Perform case folding on a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.foldcase-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>IntlChar::foldCase</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer"> = <strong><code>IntlChar::FOLD_CASE_DEFAULT</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    The given character is mapped to its case folding equivalent; if the character has no case folding equivalent,    the character itself is returned.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.foldcase-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>              <dt> <code class="parameter">options</code></dt>      <dd>       <p class="para">       Either <strong><code>IntlChar::FOLD_CASE_DEFAULT</code></strong> (default)       or <strong><code>IntlChar::FOLD_CASE_EXCLUDE_SPECIAL_I</code></strong>.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.foldcase-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the <em class="emphasis">Simple_Case_Folding</em> of the code point, if any; otherwise the code point itself.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return mixed Returns the Simple_Case_Folding of the code point, if any; otherwise the code point itself.*/
    public static function foldCase ($codepoint, $options = IntlChar::FOLD_CASE_DEFAULT ) {}

/**
*<div id="intlchar.fordigit" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::forDigit</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::forDigit</span> &mdash; <span class="dc-title">Get character representation for a given digit and radix</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.fordigit-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::forDigit</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$digit</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$radix</code><span class="initializer"> = 10</span></span>   ] )</div>    <p class="para rdfs-comment">    Determines the character representation for a specific digit in the specified radix.   </p>   <p class="para">    If the value of radix is not a valid radix, or the value of digit is not a valid digit in the specified radix,    the null character (<em>U+0000</em>) is returned.   </p>   <p class="para">    The radix argument is valid if it is greater than or equal to <em>2</em> and less than or equal to <em>36</em>.    The digit argument is valid if <em>0 &lt;= digit &lt; radix</em>.   </p>   <p class="para">    If the digit is less than <em>10</em>, then &#039;0&#039; + digit is returned. Otherwise, the value &#039;a&#039; + digit - 10 is returned.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.fordigit-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">digit</code></dt>      <dd>       <p class="para">       The number to convert to a character.      </p>     </dd>              <dt> <code class="parameter">radix</code></dt>      <dd>       <p class="para">       The radix (defaults to <em>10</em>).      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.fordigit-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The character representation (as a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>) of the specified digit in the specified radix.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.fordigit-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3111">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">16</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(48) int(51) int(51) int(0) int(97) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.fordigit-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::digit()} - Get the decimal digit value of a code point for a given radix</span></li>     <li class="member"><span class="function">{@link IntlChar::charDigitValue()} - Get the decimal digit value of a decimal digit character</span></li>     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_NUMERIC_TYPE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int The character representation (as a string) of the specified digit in the specified radix.*/
    public static function forDigit ($digit, $radix = 10) {}

/**
*<div id="intlchar.getbidipairedbracket" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getBidiPairedBracket</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getBidiPairedBracket</span> &mdash; <span class="dc-title">Get the paired bracket character for a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getbidipairedbracket-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>IntlChar::getBidiPairedBracket</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Maps the specified character to its paired bracket character.   </p>   <p class="para">    For <em>Bidi_Paired_Bracket_Type!=None</em>, this is the same as <span class="function">{@link IntlChar::charMirror()}</span>.    Otherwise <code class="parameter">codepoint</code> itself is returned.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getbidipairedbracket-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getbidipairedbracket-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the paired bracket code point, or <code class="parameter">codepoint</code> itself if there is no such mapping.   </p>   <p class="para">The return type will be <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> unless the code point was passed as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>, in which case a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> will be returned.</p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getbidipairedbracket-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3112">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBidiPairedBracket</span><span style="color: #007700">(</span><span style="color: #9876AA">91</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBidiPairedBracket</span><span style="color: #007700">(</span><span style="color: #DD0000">'['</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(93) string(1) &quot;]&quot; </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.getbidipairedbracket-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::charMirror()} - Get the &quot;mirror-image&quot; character for a code point</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_BIDI_PAIRED_BRACKET</code></strong></li>     <li class="member"><strong><code>IntlChar::PROPERTY_BIDI_PAIRED_BRACKET_TYPE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return mixed  Returns the paired bracket code point, or <em>codepoint</em> itself if there is no such mapping.*/
    public static function getBidiPairedBracket($codepoint) {}

/**
*<div id="intlchar.getblockcode" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getBlockCode</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getBlockCode</span> &mdash; <span class="dc-title">Get the Unicode allocation block containing a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getblockcode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::getBlockCode</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Returns the Unicode allocation block that contains the character.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getblockcode-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getblockcode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the block value for <code class="parameter">codepoint</code>.    See the <em>IntlChar::BLOCK_CODE_*</em> constants for possible return values.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getblockcode-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3113">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBlockCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_BASIC_LATIN</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBlockCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBlockCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_MISCELLANEOUS_SYMBOLS</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int Returns the block value for <em>codepoint</em>.*/
    public static function getBlockCode($codepoint) {}

/**
*<div id="intlchar.getcombiningclass" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getCombiningClass</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getCombiningClass</span> &mdash; <span class="dc-title">Get the combining class of a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getcombiningclass-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::getCombiningClass</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Returns the combining class of the code point.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getcombiningclass-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getcombiningclass-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the combining class of the character.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getcombiningclass-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3114">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getCombiningClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getCombiningClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0334}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getCombiningClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0358}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(0) int(1) int(232) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int Returns the combining class of the character.*/
    public static function getCombiningClass ($codepoint) {}

/**
*<div id="intlchar.getfc-nfkc-closure" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getFC_NFKC_Closure</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getFC_NFKC_Closure</span> &mdash; <span class="dc-title">Get the FC_NFKC_Closure property for a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getfc-nfkc-closure-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><strong>IntlChar::getFC_NFKC_Closure</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Gets the FC_NFKC_Closure property string for a character.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getfc-nfkc-closure-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getfc-nfkc-closure-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the FC_NFKC_Closure property string for the <code class="parameter">codepoint</code>, or an empty string if there is none.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getfc-nfkc-closure-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3115">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getFC_NFKC_Closure</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2121}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getFC_NFKC_Closure</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{1D2D}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(3) &quot;tel&quot; string(2) &quot;æ&quot; </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return string Returns the FC_NFKC_Closure property string for the codepoint, or an empty string if there is none.*/
    public static function getFC_NFKC_Closure ($codepoint) {}

/**
*<div id="intlchar.getintpropertymaxvalue" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getIntPropertyMaxValue</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getIntPropertyMaxValue</span> &mdash; <span class="dc-title">Get the max value for a Unicode property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getintpropertymaxvalue-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::getIntPropertyMaxValue</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div>    <p class="para rdfs-comment">    Gets the maximum value for an enumerated/integer/binary Unicode property.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getintpropertymaxvalue-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">property</code></dt>      <dd>       <p class="para">The Unicode property to lookup (see the <em>IntlChar::PROPERTY_*</em> constants).</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getintpropertymaxvalue-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The maximum value returned by <span class="function">{@link IntlChar::getIntPropertyValue()}</span> for a Unicode property.    <em>&lt;=0</em> if the property selector is out of range.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getintpropertymaxvalue-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3116">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_SCRIPT</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_IDEOGRAPHIC</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">999999999</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Some&nbsp;made-up&nbsp;value<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(22) int(166) int(1) int(-1) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.getintpropertymaxvalue-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyMinValue()} - Get the min value for a Unicode property</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>     <li class="member"><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int The maximum value returned by {@see IntlChar::getIntPropertyValue()} for a Unicode property. <=0 if the property selector is out of range.*/
    public static function getIntPropertyMaxValue  ($property) {}

/**
*<div id="intlchar.getintpropertyminvalue" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getIntPropertyMinValue</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getIntPropertyMinValue</span> &mdash; <span class="dc-title">Get the min value for a Unicode property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getintpropertyminvalue-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::getIntPropertyMinValue</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div>    <p class="para rdfs-comment">    Gets the minimum value for an enumerated/integer/binary Unicode property.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getintpropertyminvalue-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">property</code></dt>      <dd>       <p class="para">The Unicode property to lookup (see the <em>IntlChar::PROPERTY_*</em> constants).</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getintpropertyminvalue-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The minimum value returned by <span class="function">{@link IntlChar::getIntPropertyValue()}</span> for a Unicode property.    <em>0</em> if the property selector is out of range.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getintpropertyminvalue-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3117">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_SCRIPT</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_IDEOGRAPHIC</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">999999999</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;Some&nbsp;made-up&nbsp;value<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(0) int(0) int(0) int(0) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.getintpropertyminvalue-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyMaxValue()} - Get the max value for a Unicode property</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>     <li class="member"><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int The maximum value returned by {@see IntlChar::getIntPropertyValue()} for a Unicode property. 0 if the property selector is out of range.*/
    public static function getIntPropertyMinValue  ($property) {}

/**
*<div id="intlchar.getintpropertyvalue" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getIntPropertyValue</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getIntPropertyValue</span> &mdash; <span class="dc-title">Get the value for a Unicode property for a code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getintpropertyvalue-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::getIntPropertyValue</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    )</div>    <p class="para rdfs-comment">    Gets the property value for an enumerated or integer Unicode property for a code point.    Also returns binary and mask property values.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getintpropertyvalue-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>              <dt> <code class="parameter">property</code></dt>      <dd>       <p class="para">The Unicode property to lookup (see the <em>IntlChar::PROPERTY_*</em> constants).</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getintpropertyvalue-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the numeric value that is directly the property value or, for enumerated properties, corresponds to the    numeric value of the enumerated constant of the respective property value enumeration type.   </p>   <p class="para">    Returns <em>0</em> or <em>1</em> (for <strong><code>FALSE</code></strong>/<strong><code>TRUE</code></strong>) for binary Unicode properties.   </p>   <p class="para">    Returns a bit-mask for mask properties.   </p>   <p class="para">    Returns <em>0</em> if <code class="parameter">property</code> is out of bounds or if the Unicode version does not    have data for the property at all, or not for this code point.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getintpropertyvalue-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3118">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_ALPHABETIC</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_MIRRORED</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.getintpropertyvalue-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyMinValue()} - Get the min value for a Unicode property</span></li>     <li class="member"><span class="function">{@link IntlChar::getIntPropertyMaxValue()} - Get the max value for a Unicode property</span></li>     <li class="member"><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int <p>*/
    public static function getIntPropertyValue ($codepoint, $property ) {}

/**
*<div id="intlchar.getnumericvalue" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getNumericValue</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getNumericValue</span> &mdash; <span class="dc-title">Get the numeric value for a Unicode code point</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getnumericvalue-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">float</span> <span class="methodname"><strong>IntlChar::getNumericValue</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Gets the numeric value for a Unicode code point as defined in the Unicode Character Database.   </p>   <p class="para">    For characters without any numeric values in the Unicode Character Database, this function will return    <strong><code>IntlChar::NO_NUMERIC_VALUE</code></strong>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getnumericvalue-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getnumericvalue-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Numeric value of <code class="parameter">codepoint</code>,    or <strong><code>IntlChar::NO_NUMERIC_VALUE</code></strong> if none is defined. This    constant was added in PHP 7.0.6, prior to this version the literal value    (<span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span>)<em>-123456789</em> may be used instead.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getnumericvalue-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3119">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNumericValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"4"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNumericValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"x"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNumericValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{216C}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> float(4) float(-123456789) float(50) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return float Numeric value of codepoint, or float(-123456789) if none is defined.*/
    public static function getNumericValue ($codepoint) {}

/**
*<div id="intlchar.getpropertyenum" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getPropertyEnum</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyEnum</span> &mdash; <span class="dc-title">Get the property constant value for a given property name</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getpropertyenum-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::getPropertyEnum</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$alias</code></span>    )</div>    <p class="para rdfs-comment">    Returns the property constant value for a given property name, as specified in the Unicode database file PropertyAliases.txt.    Short, long, and any other variants are recognized.   </p>   <p class="para">    In addition, this function maps the synthetic names &quot;gcm&quot; / &quot;General_Category_Mask&quot; to the property    <strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</code></strong>. These names are not in PropertyAliases.txt.   </p>   <p class="para">    This function compliments <span class="function">{@link IntlChar::getPropertyName()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyenum-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">alias</code></dt>      <dd>       <p class="para">       The property name to be matched. The name is compared using &quot;loose matching&quot; as described in PropertyAliases.txt.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyenum-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an <em>IntlChar::PROPERTY_</em> constant value,    or <strong><code>IntlChar::PROPERTY_INVALID_CODE</code></strong> if the given name does not match any property.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getpropertyenum-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3120">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'Bidi_Class'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'script'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_SCRIPT</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'IDEOGRAPHIC'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_IDEOGRAPHIC</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'Some&nbsp;made-up&nbsp;string'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_INVALID_CODE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.getpropertyenum-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::getPropertyName()} - Get the Unicode name for a property</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int Returns an IntlChar::PROPERTY_ constant value, or <b>IntlChar::PROPERTY_INVALID_CODE</b> if the given name does not match any property.*/
    public static function getPropertyEnum ($alias ) {}

/**
*<div id="intlchar.getpropertyname" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getPropertyName</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyName</span> &mdash; <span class="dc-title">Get the Unicode name for a property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getpropertyname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><strong>IntlChar::getPropertyName</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Returns the Unicode name for a given property, as given in the Unicode database file PropertyAliases.txt.   </p>   <p class="para">    In addition, this function maps the property <strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</code></strong> to the    synthetic names &quot;gcm&quot; / &quot;General_Category_Mask&quot;. These names are not in PropertyAliases.txt.   </p>   <p class="para">    This function compliments <span class="function">{@link IntlChar::getPropertyEnum()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyname-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">property</code></dt>      <dd>       <p class="para">The Unicode property to lookup (see the <em>IntlChar::PROPERTY_*</em> constants).</p>      <p class="para">       <strong><code>IntlChar::PROPERTY_INVALID_CODE</code></strong> should not be used.       Also, if <code class="parameter">property</code> is out of range, <strong><code>FALSE</code></strong> is returned.      </p>     </dd>              <dt> <code class="parameter">nameChoice</code></dt>      <dd>       <p class="para">       Selector for which name to get. If out of range, <strong><code>FALSE</code></strong> is returned.      </p>      <p class="para">       All properties have a long name. Most have a short name, but some do not. Unicode allows for additional names;       if present these will be returned by adding 1, 2, etc. to <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong>.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the name, or <strong><code>FALSE</code></strong> if either the <code class="parameter">property</code> or the <code class="parameter">nameChoice</code>    is out of range.   </p>   <p class="para">    If a given <code class="parameter">nameChoice</code> returns <strong><code>FALSE</code></strong>, then all larger values of    <code class="parameter">nameChoice</code> will return <strong><code>FALSE</code></strong>, with one exception: if <strong><code>FALSE</code></strong> is returned for    <strong><code>IntlChar::SHORT_PROPERTY_NAME</code></strong>, then <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong>    (and higher) may still return a non-<strong><code>FALSE</code></strong> value.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getpropertyname-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3121">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT_PROPERTY_NAME</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME&nbsp;</span><span style="color: #007700">+&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(10) &quot;Bidi_Class&quot; string(2) &quot;bc&quot; string(10) &quot;Bidi_Class&quot; bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.getpropertyname-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::getPropertyEnum()} - Get the property constant value for a given property name</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return string <p>*/
    public static function getPropertyName ($property, $nameChoice = IntlChar::LONG_PROPERTY_NAME) {}

/**
*<div id="intlchar.getpropertyvalueenum" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getPropertyValueEnum</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyValueEnum</span> &mdash; <span class="dc-title">Get the property value for a given value name</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getpropertyvalueenum-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::getPropertyValueEnum</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="para rdfs-comment">    Returns the property value integer for a given value name, as specified in the Unicode database file PropertyValueAliases.txt.    Short, long, and any other variants are recognized.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Some of the names in PropertyValueAliases.txt will only be recognized with     <strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</code></strong>, not     <strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY</code></strong>.     These include:     <ul class="simplelist">      <li class="member">&quot;C&quot; / &quot;Other&quot;</li>      <li class="member">&quot;L&quot; / &quot;Letter&quot;</li>      <li class="member">&quot;LC&quot; / &quot;Cased_Letter&quot;</li>      <li class="member">&quot;M&quot; / &quot;Mark&quot;</li>      <li class="member">&quot;N&quot; / &quot;Number&quot;</li>      <li class="member">&quot;P&quot; / &quot;Punctuation&quot;</li>      <li class="member">&quot;S&quot; / &quot;Symbol&quot;</li>      <li class="member"> &quot;Z&quot; / &quot;Separator&quot;</li>     </ul>    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyvalueenum-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">property</code></dt>      <dd>       <p class="para">The Unicode property to lookup (see the <em>IntlChar::PROPERTY_*</em> constants).</p>      <p class="para">       If out of range, or this method doesn&#039;t work with the given value,       <strong><code>IntlChar::PROPERTY_INVALID_CODE</code></strong> is returned.      </p>     </dd>              <dt> <code class="parameter">name</code></dt>      <dd>       <p class="para">       The value name to be matched.  The name is compared using &quot;loose matching&quot; as described in PropertyValueAliases.txt.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyvalueenum-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the corresponding value integer, or <strong><code>IntlChar::PROPERTY_INVALID_CODE</code></strong> if the given name    does not match any value of the given property, or if the property is invalid.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getpropertyvalueenum-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3122">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'greek'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'RIGHT_TO_LEFT'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_RIGHT_TO_LEFT</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'some&nbsp;made-up&nbsp;string'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_INVALID_CODE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">123456789</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'RIGHT_TO_LEFT'</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_INVALID_CODE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int Returns the corresponding value integer, or IntlChar::PROPERTY_INVALID_CODE if the given name does not match any value of the given property, or if the property is invalid.*/
    public static function getPropertyValueEnum ($property, $name) {}

/**
*<div id="intlchar.getpropertyvaluename" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getPropertyValueName</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyValueName</span> &mdash; <span class="dc-title">Get the Unicode name for a property value</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getpropertyvaluename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><strong>IntlChar::getPropertyValueName</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$value</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nameChoice</code><span class="initializer"> = <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Returns the Unicode name for a given property value, as given in the Unicode database file PropertyValueAliases.txt.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Some of the names in PropertyValueAliases.txt can only be retrieved using     <strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</code></strong>, not     <strong><code>IntlChar::PROPERTY_GENERAL_CATEGORY</code></strong>.     These include:     <ul class="simplelist">      <li class="member">&quot;C&quot; / &quot;Other&quot;</li>      <li class="member">&quot;L&quot; / &quot;Letter&quot;</li>      <li class="member">&quot;LC&quot; / &quot;Cased_Letter&quot;</li>      <li class="member">&quot;M&quot; / &quot;Mark&quot;</li>      <li class="member">&quot;N&quot; / &quot;Number&quot;</li>      <li class="member">&quot;P&quot; / &quot;Punctuation&quot;</li>      <li class="member">&quot;S&quot; / &quot;Symbol&quot;</li>      <li class="member"> &quot;Z&quot; / &quot;Separator&quot;</li>     </ul>    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyvaluename-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">property</code></dt>      <dd>       <p class="para">The Unicode property to lookup (see the <em>IntlChar::PROPERTY_*</em> constants).</p>      <p class="para">       If out of range, or this method doesn&#039;t work with the given value, <strong><code>FALSE</code></strong> is returned.      </p>     </dd>              <dt> <code class="parameter">value</code></dt>      <dd>       <p class="para">       Selector for a value for the given property. If out of range, <strong><code>FALSE</code></strong> is returned.      </p>      <p class="para">       In general, valid values range from <em>0</em> up to some maximum. There are a couple exceptions:       <ul class="simplelist">        <li class="member">         <strong><code>IntlChar::PROPERTY_BLOCK</code></strong> values begin at the non-zero value <strong><code>IntlChar::BLOCK_CODE_BASIC_LATIN</code></strong>        </li>        <li class="member">         <strong><code>IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS</code></strong> values are not contiguous and range from 0..240.        </li>       </ul>      </p>     </dd>              <dt> <code class="parameter">nameChoice</code></dt>      <dd>       <p class="para">       Selector for which name to get. If out of range, <strong><code>FALSE</code></strong> is returned.      </p>      <p class="para">       All values have a long name. Most have a short name, but some do not. Unicode allows for additional names;       if present these will be returned by adding 1, 2, etc. to <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong>.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyvaluename-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the name, or <strong><code>FALSE</code></strong> if either the <code class="parameter">property</code> or the <code class="parameter">nameChoice</code>    is out of range.   </p>   <p class="para">    If a given <code class="parameter">nameChoice</code> returns <strong><code>FALSE</code></strong>, then all larger values of <code class="parameter">nameChoice</code>    will return <strong><code>FALSE</code></strong>, with one exception: if <strong><code>FALSE</code></strong> is returned for <strong><code>IntlChar::SHORT_PROPERTY_NAME</code></strong>,    then <strong><code>IntlChar::LONG_PROPERTY_NAME</code></strong> (and higher) may still return a non-<strong><code>FALSE</code></strong> value.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getpropertyvaluename-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3123">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT_PROPERTY_NAME</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME&nbsp;</span><span style="color: #007700">+&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(16) &quot;Greek_And_Coptic&quot; string(5) &quot;Greek&quot; string(16) &quot;Greek_And_Coptic&quot; bool(false) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return  string Returns the name, or FALSE if either the property or the nameChoice is out of range.*/
    public static function getPropertyValueName ($property, $value, $nameChoice = IntlChar::LONG_PROPERTY_NAME) {}

/**
*<div id="intlchar.getunicodeversion" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::getUnicodeVersion</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::getUnicodeVersion</span> &mdash; <span class="dc-title">Get the Unicode version</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.getunicodeversion-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><strong>IntlChar::getUnicodeVersion</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Gets the Unicode version information.   </p>   <p class="para">    The version array is filled in with the version information for the Unicode standard that is currently used by ICU.    For example, Unicode version 3.1.1 is represented as an array with the values <em>[3, 1, 1, 0]</em>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.getunicodeversion-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.getunicodeversion-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    An array containing the Unicode version number.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.getunicodeversion-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3124">    <p><strong>Example #1 Testing different properties</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getUnicodeVersion</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> array(4) {   [0]=&gt;   int(7)   [1]=&gt;   int(0)   [2]=&gt;   int(0)   [3]=&gt;   int(0) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.getunicodeversion-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::charAge()} - Get the &quot;age&quot; of the code point</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return array An array containing the Unicode version number.*/
    public static function getUnicodeVersion() {}

/**
*<div id="intlchar.isalnum" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isalnum</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isalnum</span> &mdash; <span class="dc-title">Check if code point is an alphanumeric character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isalnum-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isalnum</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is an alphanumeric character (letter or digit).  <strong><code>TRUE</code></strong> for characters with general categories &quot;L&quot; (letters) and &quot;Nd&quot; (decimal digit numbers).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isalnum-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isalnum-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is an alphanumeric character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isalnum-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3126">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalnum</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalnum</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalnum</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isalnum-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is an alphanumeric character, FALSE if not.*/
    public static function isalnum ($codepoint) {}

/**
*<div id="intlchar.isalpha" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isalpha</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isalpha</span> &mdash; <span class="dc-title">Check if code point is a letter character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isalpha-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isalpha</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a letter character.  <strong><code>TRUE</code></strong> for general categories &quot;L&quot; (letters).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isalpha-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isalpha-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a letter character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isalpha-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3127">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalpha</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalpha</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalpha</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isalpha-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isalnum()} - Check if code point is an alphanumeric character</span></li>     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a letter character, FALSE if not.*/
    public static function isalpha ($codepoint) {}
/**
*<div id="intlchar.isbase" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isbase</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isbase</span> &mdash; <span class="dc-title">Check if code point is a base character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isbase-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isbase</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a base character.  <strong><code>TRUE</code></strong> for general categories &quot;L&quot; (letters),    &quot;N&quot; (numbers), &quot;Mc&quot; (spacing combining marks), and &quot;Me&quot; (enclosing marks).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This is different from the Unicode definition in chapter 3.5, conformance clause D13, which defines base characters     to be all characters (not Cn) that do not graphically combine with preceding characters (M) and that are neither     control (Cc) or format (Cf) characters.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isbase-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isbase-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a base character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isbase-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3128">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isbase</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isbase</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isbase</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isbase-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a base character, FALSE if not.*/
    public static function isbase ($codepoint ){}
/**
*<div id="intlchar.isblank" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isblank</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isblank</span> &mdash; <span class="dc-title">Check if code point is a &quot;blank&quot; or &quot;horizontal space&quot; character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isblank-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isblank</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a &quot;blank&quot; or &quot;horizontal space&quot;, a character that visibly separates words on a line.   </p>   <p class="para">    The following are equivalent definitions:    <ul class="simplelist">     <li class="member">      <strong><code>TRUE</code></strong> for Unicode White_Space characters except for &quot;vertical space controls&quot; where &quot;vertical space controls&quot; are      the following characters: U+000A (LF) U+000B (VT) U+000C (FF) U+000D (CR) U+0085 (NEL) U+2028 (LS) U+2029 (PS)     </li>     <li class="member">      <strong><code>TRUE</code></strong> for U+0009 (TAB) and characters with general category &quot;Zs&quot; (space separators) except Zero Width Space (ZWSP, U+200B).     </li>    </ul>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isblank-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isblank-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is either a &quot;blank&quot; or &quot;horizontal space&quot; character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isblank-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3129">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isblank</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isblank</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isblank</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isblank-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>     <li class="member"><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>     <li class="member"><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>     <li class="member"><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is either a "blank" or "horizontal space" character, FALSE if not.*/
    public static function isblank ($codepoint){}

/**
*<div id="intlchar.iscntrl" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::iscntrl</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::iscntrl</span> &mdash; <span class="dc-title">Check if code point is a control character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.iscntrl-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::iscntrl</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a control character.   </p>   <p class="para">    A control character is one of the following:    <ul class="simplelist">     <li class="member">ISO 8-bit control character (U+0000..U+001f and U+007f..U+009f)</li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_CONTROL_CHAR</code></strong> (Cc)</li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_FORMAT_CHAR</code></strong> (Cf)</li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_LINE_SEPARATOR</code></strong> (Zl)</li>     <li class="member"><strong><code>IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR</code></strong> (Zp)</li>    </ul>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.iscntrl-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.iscntrl-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a control character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.iscntrl-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3130">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{200e}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(false) bool(true) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.iscntrl-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isprint()} - Check if code point is a printable character</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a control character, FALSE if not.*/
    public static function iscntrl ($codepoint ) {}

/**
*<div id="intlchar.isdefined" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isdefined</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isdefined</span> &mdash; <span class="dc-title">Check whether the code point is defined</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isdefined-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isdefined</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is &quot;defined&quot;, which usually means that it is assigned a character.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for general categories other than &quot;Cn&quot; (other, not assigned).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Note that non-character code points (e.g., U+FDD0) are not &quot;defined&quot; (they are Cn), but surrogate code points are &quot;defined&quot; (Cs).    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isdefined-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isdefined-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a defined character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isdefined-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3131">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdefined</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdefined</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdefined</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{FDD0}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isdefined-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>     <li class="member"><span class="function">{@link IntlChar::isalnum()} - Check if code point is an alphanumeric character</span></li>     <li class="member"><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category &quot;Lu&quot; (uppercase letter)</span></li>     <li class="member"><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>     <li class="member"><span class="function">{@link IntlChar::istitle()} - Check if code point is a titlecase letter</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a defined character, FALSE if not.*/
    public static function isdefined ($codepoint ) {}

/**
*<div id="intlchar.isdigit" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isdigit</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isdigit</span> &mdash; <span class="dc-title">Check if code point is a digit character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isdigit-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isdigit</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a digit character.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for characters with general category &quot;Nd&quot; (decimal digit numbers). Beginning with Unicode 4, this is the same as testing for the Numeric_Type of Decimal.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isdigit-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isdigit-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a digit character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isdigit-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3132">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isdigit-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>     <li class="member"><span class="function">{@link IntlChar::isalnum()} - Check if code point is an alphanumeric character</span></li>     <li class="member"><span class="function">{@link IntlChar::isxdigit()} - Check if code point is a hexadecimal digit</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a digit character, FALSE if not.*/
    public static function isdigit ($codepoint) {}
/**
*<div id="intlchar.isgraph" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isgraph</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isgraph</span> &mdash; <span class="dc-title">Check if code point is a graphic character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isgraph-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isgraph</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a &quot;graphic&quot; character (printable, excluding spaces).   </p>   <p class="para">    <strong><code>TRUE</code></strong> for all characters except those with general categories &quot;Cc&quot; (control codes), &quot;Cf&quot; (format controls), &quot;Cs&quot; (surrogates), &quot;Cn&quot; (unassigned), and &quot;Z&quot; (separators).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isgraph-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isgraph-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a &quot;graphic&quot; character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isgraph-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3133">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(true) bool(false) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a "graphic" character, FALSE if not.*/
    public static function isgraph ($codepoint ) {}
/**
*<div id="intlchar.isidignorable" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isIDIgnorable</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isIDIgnorable</span> &mdash; <span class="dc-title">Check if code point is an ignorable character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isidignorable-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isIDIgnorable</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines if the specified character should be regarded as an ignorable character in an identifier.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for characters with general category &quot;Cf&quot; (format controls) as well as non-whitespace ISO controls (U+0000..U+0008, U+000E..U+001B, U+007F..U+009F).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Note that Unicode just recommends to ignore Cf (format controls).    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isidignorable-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isidignorable-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is ignorable in identifiers, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isidignorable-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3134">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDIgnorable</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDIgnorable</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDIgnorable</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{007F}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(false) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isidignorable-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isIDStart()} - Check if code point is permissible as the first character in an identifier</span></li>     <li class="member"><span class="function">{@link IntlChar::isIDPart()} - Check if code point is permissible in an identifier</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is ignorable in identifiers, FALSE if not.*/
    public static function isIDIgnorable ($codepoint ) {}
/**
*<div id="intlchar.isidpart" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isIDPart</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isIDPart</span> &mdash; <span class="dc-title">Check if code point is permissible in an identifier</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isidpart-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isIDPart</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines if the specified character is permissible in an identifier.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for characters with general categories &quot;L&quot; (letters), &quot;Nl&quot; (letter numbers), &quot;Nd&quot; (decimal digits),    &quot;Mc&quot; and &quot;Mn&quot; (combining marks), &quot;Pc&quot; (connecting punctuation), and u_isIDIgnorable(c).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This is almost the same as Unicode&#039;s ID_Continue (<strong><code>IntlChar::PROPERTY_ID_CONTINUE</code></strong>) except that     Unicode recommends to ignore Cf which is less than <span class="function">{@link IntlChar::isIDIgnorable()}</span>.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isidpart-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isidpart-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is the code point may occur in an identifier, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isidpart-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3135">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(false) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isidpart-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isIDIgnorable()} - Check if code point is an ignorable character</span></li>     <li class="member"><span class="function">{@link IntlChar::isIDStart()} - Check if code point is permissible as the first character in an identifier</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_ID_CONTINUE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is the code point may occur in an identifier, FALSE if not.*/
    public static function isIDPart ($codepoint ) {}

/**
*<div id="intlchar.isidstart" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isIDStart</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isIDStart</span> &mdash; <span class="dc-title">Check if code point is permissible as the first character in an identifier</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isidstart-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isIDStart</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines if the specified character is permissible as the first character in an identifier according to Unicode (The Unicode Standard, Version 3.0, chapter 5.16 Identifiers).   </p>   <p class="para">    <strong><code>TRUE</code></strong> for characters with general categories &quot;L&quot; (letters) and &quot;Nl&quot; (letter numbers).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isidstart-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isidstart-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> may start an identifier, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isidstart-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3136">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(false) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isidstart-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>     <li class="member"><span class="function">{@link IntlChar::isIDPart()} - Check if code point is permissible in an identifier</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_ID_START</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint may start an identifier, FALSE if not.*/
    public static function isIDStart ($codepoint ) {}
/**
*<div id="intlchar.isisocontrol" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isISOControl</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isISOControl</span> &mdash; <span class="dc-title">Check if code point is an ISO control code</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isisocontrol-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isISOControl</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is an ISO control code.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for U+0000..U+001f and U+007f..U+009f (general category &quot;Cc&quot;).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isisocontrol-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isisocontrol-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is an ISO control code, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isisocontrol-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3137">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isISOControl</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isISOControl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isISOControl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{200e}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isisocontrol-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::iscntrl()} - Check if code point is a control character</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is an ISO control code, FALSE if not.*/
    public static function isISOControl ($codepoint ) {}
/**
*<div id="intlchar.isjavaidpart" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isJavaIDPart</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isJavaIDPart</span> &mdash; <span class="dc-title">Check if code point is permissible in a Java identifier</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isjavaidpart-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isJavaIDPart</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines if the specified character is permissible in a Java identifier.   </p>   <p class="para">    In addition to <span class="function">{@link IntlChar::isIDPart()}</span>, <strong><code>TRUE</code></strong> for characters with general category &quot;Sc&quot; (currency symbols).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isjavaidpart-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isjavaidpart-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> may occur in a Java identifier, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isjavaidpart-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3138">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isjavaidpart-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isIDIgnorable()} - Check if code point is an ignorable character</span></li>     <li class="member"><span class="function">{@link IntlChar::isIDPart()} - Check if code point is permissible in an identifier</span></li>     <li class="member"><span class="function">{@link IntlChar::isJavaIDStart()} - Check if code point is permissible as the first character in a Java identifier</span></li>     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint may occur in a Java identifier, FALSE if not.*/
    public static function isJavaIDPart ($codepoint ) {}
/**
*<div id="intlchar.isjavaidstart" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isJavaIDStart</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isJavaIDStart</span> &mdash; <span class="dc-title">Check if code point is permissible as the first character in a Java identifier</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isjavaidstart-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isJavaIDStart</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines if the specified character is permissible as the start of a Java identifier.   </p>   <p class="para">    In addition to <span class="function">{@link IntlChar::isIDStart()}</span>, <strong><code>TRUE</code></strong> for characters with general categories &quot;Sc&quot; (currency symbols) and &quot;Pc&quot; (connecting punctuation).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isjavaidstart-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isjavaidstart-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> may start a Java identifier, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isjavaidstart-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3139">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isjavaidstart-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isIDStart()} - Check if code point is permissible as the first character in an identifier</span></li>     <li class="member"><span class="function">{@link IntlChar::isJavaIDPart()} - Check if code point is permissible in a Java identifier</span></li>     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint may start a Java identifier, FALSE if not.*/
    public static function isJavaIDStart ($codepoint ) {}
/**
*<div id="intlchar.isjavaspacechar" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isJavaSpaceChar</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isJavaSpaceChar</span> &mdash; <span class="dc-title">Check if code point is a space character according to Java</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isjavaspacechar-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isJavaSpaceChar</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determine if the specified code point is a space character according to Java.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for characters with general categories &quot;Z&quot; (separators), which does not include control codes (e.g., TAB or Line Feed).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isjavaspacechar-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isjavaspacechar-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a space character according to Java, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isjavaspacechar-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3140">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(false) bool(false) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isjavaspacechar-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>     <li class="member"><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>     <li class="member"><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a space character according to Java, FALSE if not.*/
    public static function isJavaSpaceChar ($codepoint ) {}

/**
*<div id="intlchar.islower" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::islower</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::islower</span> &mdash; <span class="dc-title">Check if code point is a lowercase letter</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.islower-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::islower</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point has the general category &quot;Ll&quot; (lowercase letter).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This misses some characters that are also lowercase but have a different general category value. In order to include those, use <span class="function">{@link IntlChar::isULowercase()}</span>.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.islower-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.islower-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is an Ll lowercase letter, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.islower-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3141">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(false) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.islower-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category &quot;Lu&quot; (uppercase letter)</span></li>     <li class="member"><span class="function">{@link IntlChar::istitle()} - Check if code point is a titlecase letter</span></li>     <li class="member"><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>     <li class="member"><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_LOWERCASE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is an Ll lowercase letter, FALSE if not.*/
    public static function islower ($codepoint ) {}
/**
*<div id="intlchar.ismirrored" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isMirrored</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isMirrored</span> &mdash; <span class="dc-title">Check if code point has the Bidi_Mirrored property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.ismirrored-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isMirrored</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the code point has the Bidi_Mirrored property.   </p>   <p class="para">    This property is set for characters that are commonly used in Right-To-Left contexts and need to be displayed with a &quot;mirrored&quot; glyph.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.ismirrored-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.ismirrored-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> has the Bidi_Mirrored property, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.ismirrored-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3142">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isMirrored</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isMirrored</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isMirrored</span><span style="color: #007700">(</span><span style="color: #DD0000">"("</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.ismirrored-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::charMirror()} - Get the &quot;mirror-image&quot; character for a code point</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_BIDI_MIRRORED</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint has the Bidi_Mirrored property, FALSE if not.*/
    public static function isMirrored ($codepoint ) {}

/**
*<div id="intlchar.isprint" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isprint</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isprint</span> &mdash; <span class="dc-title">Check if code point is a printable character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isprint-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isprint</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a printable character.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for general categories other than &quot;C&quot; (controls).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isprint-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isprint-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a printable character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isprint-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3143">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{200e}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isprint-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::iscntrl()} - Check if code point is a control character</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a printable character, FALSE if not.*/
    public static function isprint ($codepoint ) {}

/**
*<div id="intlchar.ispunct" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::ispunct</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::ispunct</span> &mdash; <span class="dc-title">Check if code point is punctuation character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.ispunct-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::ispunct</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a punctuation character.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for characters with general categories &quot;P&quot; (punctuation).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.ispunct-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.ispunct-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a punctuation character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.ispunct-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3144">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">","</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a punctuation character, FALSE if not.*/
    public static function ispunct ($codepoint ) {}
/**
*<div id="intlchar.isspace" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isspace</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isspace</span> &mdash; <span class="dc-title">Check if code point is a space character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isspace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isspace</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines if the specified character is a space character or not.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isspace-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isspace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a space character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isspace-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3145">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isspace-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>     <li class="member"><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>     <li class="member"><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a space character, FALSE if not.*/
    public static function isspace ($codepoint ) {}
/**
*<div id="intlchar.istitle" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::istitle</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::istitle</span> &mdash; <span class="dc-title">Check if code point is a titlecase letter</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.istitle-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::istitle</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a titlecase letter.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for general category &quot;Lt&quot; (titlecase letter).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.istitle-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.istitle-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a titlecase letter, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.istitle-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3146">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(false) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.istitle-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category &quot;Lu&quot; (uppercase letter)</span></li>     <li class="member"><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>     <li class="member"><span class="function">{@link IntlChar::totitle()} - Make Unicode character titlecase</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return boolean Returns TRUE if codepoint is a titlecase letter, FALSE if not.*/
    public static function istitle ($codepoint ){}

/**
*<div id="intlchar.isualphabetic" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isUAlphabetic</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isUAlphabetic</span> &mdash; <span class="dc-title">Check if code point has the Alphabetic Unicode property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isualphabetic-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isUAlphabetic</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Check if a code point has the Alphabetic Unicode property.   </p>   <p class="para">    This is the same as <em>IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_ALPHABETIC)</em>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isualphabetic-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isualphabetic-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> has the Alphabetic Unicode property, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isualphabetic-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3147">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUAlphabetic</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUAlphabetic</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUAlphabetic</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isualphabetic-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>     <li class="member"><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_ALPHABETIC</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint has the Alphabetic Unicode property, FALSE if not.*/
    public static function isUAlphabetic ($codepoint ) {}
/**
*<div id="intlchar.isulowercase" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isULowercase</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isULowercase</span> &mdash; <span class="dc-title">Check if code point has the Lowercase Unicode property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isulowercase-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isULowercase</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Check if a code point has the Lowercase Unicode property.   </p>   <p class="para">    This is the same as <em>IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_LOWERCASE)</em>   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This is different than <span class="function">{@link IntlChar::islower()}</span> and will return <strong><code>TRUE</code></strong> for more characters.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isulowercase-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isulowercase-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> has the Lowercase Unicode property, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isulowercase-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3148">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(false) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isulowercase-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>     <li class="member"><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_LOWERCASE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint has the Lowercase Unicode property, FALSE if not.*/
    public static function isULowercase ($codepoint ) {}
/**
*<div id="intlchar.isupper" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isupper</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isupper</span> &mdash; <span class="dc-title">Check if code point has the general category &quot;Lu&quot; (uppercase letter)</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isupper-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isupper</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point has the general category &quot;Lu&quot; (uppercase letter).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This misses some characters that are also uppercase but have a different general category value. In order to include those, use <span class="function">{@link IntlChar::isUUppercase()}</span>.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isupper-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isupper-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is an Lu uppercase letter, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isupper-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3149">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(false) bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isupper-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>     <li class="member"><span class="function">{@link IntlChar::istitle()} - Check if code point is a titlecase letter</span></li>     <li class="member"><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>     <li class="member"><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_UPPERCASE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is an Lu uppercase letter, FALSE if not.*/
    public static function isupper ($codepoint) {}
/**
*<div id="intlchar.isuuppercase" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isUUppercase</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isUUppercase</span> &mdash; <span class="dc-title">Check if code point has the Uppercase Unicode property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isuuppercase-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isUUppercase</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Check if a code point has the Uppercase Unicode property.   </p>   <p class="para">    This is the same as <em>IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_UPPERCASE)</em>   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This is different than <span class="function">{@link IntlChar::isupper()}</span> and will return <strong><code>TRUE</code></strong> for more characters.    </p>   </p></blockquote>   </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isuuppercase-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isuuppercase-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> has the Uppercase Unicode property, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isuuppercase-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3150">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(false) bool(true) bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isuuppercase-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category &quot;Lu&quot; (uppercase letter)</span></li>     <li class="member"><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_UPPERCASE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint has the Uppercase Unicode property, FALSE if not.*/
    public static function isUUppercase ($codepoint) {}
/**
*<div id="intlchar.isuwhitespace" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isUWhiteSpace</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isUWhiteSpace</span> &mdash; <span class="dc-title">Check if code point has the White_Space Unicode property</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isuwhitespace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isUWhiteSpace</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Check if a code point has the White_Space Unicode property.   </p>   <p class="para">    This is the same as <em>IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_WHITE_SPACE)</em>   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This is different from both <span class="function">{@link IntlChar::isspace()}</span> and <span class="function">{@link IntlChar::isWhitespace()}</span>.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isuwhitespace-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isuwhitespace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> has the White_Space Unicode property, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isuwhitespace-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3151">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(true) bool(true) bool(true) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isuwhitespace-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>     <li class="member"><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>     <li class="member"><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>     <li class="member"><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>     <li class="member"><strong><code>IntlChar::PROPERTY_WHITE_SPACE</code></strong></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint has the White_Space Unicode property, FALSE if not.*/
    public static function isUWhiteSpace ($codepoint ) {}
/**
*<div id="intlchar.iswhitespace" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isWhitespace</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isWhitespace</span> &mdash; <span class="dc-title">Check if code point is a whitespace character according to ICU</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.iswhitespace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isWhitespace</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines if the specified code point is a whitespace character according to ICU.   </p>   <p class="para">    A character is considered to be a ICU whitespace character if and only if it satisfies one of the following criteria:    <ul class="simplelist">     <li class="member">It is a Unicode Separator character (categories &quot;Z&quot; = &quot;Zs&quot; or &quot;Zl&quot; or &quot;Zp&quot;), but is not also a non-breaking space (U+00A0 NBSP or U+2007 Figure Space or U+202F Narrow NBSP).</li>     <li class="member">It is U+0009 HORIZONTAL TABULATION.</li>     <li class="member">It is U+000A LINE FEED.</li>     <li class="member">It is U+000B VERTICAL TABULATION.</li>     <li class="member">It is U+000C FORM FEED.</li>     <li class="member">It is U+000D CARRIAGE RETURN.</li>     <li class="member">It is U+001C FILE SEPARATOR.</li>     <li class="member">It is U+001D GROUP SEPARATOR.</li>     <li class="member">It is U+001E RECORD SEPARATOR.</li>     <li class="member">It is U+001F UNIT SEPARATOR.</li>    </ul>   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.iswhitespace-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.iswhitespace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a whitespace character according to ICU, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.iswhitespace-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3152">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(false) bool(true) bool(true) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.iswhitespace-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>     <li class="member"><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>     <li class="member"><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool*/
    public static function isWhitespace($codepoint) {}

/**
*<div id="intlchar.isxdigit" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::isxdigit</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::isxdigit</span> &mdash; <span class="dc-title">Check if code point is a hexadecimal digit</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.isxdigit-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>IntlChar::isxdigit</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    Determines whether the specified code point is a hexadecimal digit.   </p>   <p class="para">    <strong><code>TRUE</code></strong> for characters with general category &quot;Nd&quot; (decimal digit numbers) as    well as Latin letters a-f and A-F in both ASCII and Fullwidth ASCII.    (That is, for letters with code points 0041..0046, 0061..0066, FF21..FF26, FF41..FF46.)   </p>   <p class="para">    This is equivalent to <em>IntlChar::digit($codepoint, 16) &gt;= 0</em>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.isxdigit-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.isxdigit-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">codepoint</code> is a hexadecimal character, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 notes" id="refsect1-intlchar.isxdigit-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     In order to narrow the definition of hexadecimal digits to only ASCII characters use:    </p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$isASCIIHexadecimal&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">)&nbsp;&lt;=&nbsp;</span><span style="color: #9876AA">0x7F&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p></blockquote>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.isxdigit-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3153">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> bool(true) bool(true) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.isxdigit-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return bool Returns TRUE if codepoint is a hexadecimal character, FALSE if not.*/
    public static function isxdigit ($codepoint){}

/**
*<div id="intlchar.ord" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::ord</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::ord</span> &mdash; <span class="dc-title">Return Unicode code point value of character</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.ord-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>IntlChar::ord</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$character</code></span>    )</div>    <p class="para rdfs-comment">    Returns the Unicode code point value of the given character.   </p>   <p class="para">    This function compliments <span class="function">{@link IntlChar::chr()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.ord-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">character</code></dt>      <dd>       <p class="para">       A Unicode character.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.ord-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the Unicode code point value as an integer.   </p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.ord-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3154">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> int(65) int(32) int(9731) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.ord-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::isalnum()} - Check if code point is an alphanumeric character</span></li>     <li class="member"><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>     <li class="member"><span class="function">{@link IntlChar::chr()} - Return Unicode character by code point value</span></li>     <li class="member"><span class="function">{@link ord()} - 转换字符串第一个字节为 0-255 之间的值</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return int Returns the Unicode code point value as an integer.*/
    public static function ord ($character) {}

/**
*<div id="intlchar.tolower" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::tolower</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::tolower</span> &mdash; <span class="dc-title">Make Unicode character lowercase</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.tolower-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>IntlChar::tolower</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    The given character is mapped to its lowercase equivalent.    If the character has no lowercase equivalent, the original character itself is returned.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.tolower-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.tolower-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the Simple_Lowercase_Mapping of the code point, if any;    otherwise the code point itself.   </p>   <p class="para">The return type will be <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> unless the code point was passed as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>, in which case a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> will be returned.</p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.tolower-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3155">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(1) &quot;a&quot; string(1) &quot;a&quot; string(2) &quot;φ&quot; string(2) &quot;φ&quot; string(1) &quot;1&quot; int(97) int(97) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.tolower-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::totitle()} - Make Unicode character titlecase</span></li>     <li class="member"><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>     <li class="member"><span class="function">{@link mb_strtolower()} - 使字符串小写</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return mixed Returns the Simple_Lowercase_Mapping of the code point, if any; otherwise the code point itself.*/
    public static function tolower($codepoint) {}
/**
*<div id="intlchar.totitle" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::totitle</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::totitle</span> &mdash; <span class="dc-title">Make Unicode character titlecase</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.totitle-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>IntlChar::totitle</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    The given character is mapped to its titlecase equivalent.    If the character has no titlecase equivalent, the original character itself is returned.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.totitle-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.totitle-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the Simple_Titlecase_Mapping of the code point, if any;    otherwise the code point itself.   </p>   <p class="para">The return type will be <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> unless the code point was passed as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>, in which case a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> will be returned.</p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.totitle-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3156">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(1) &quot;A&quot; string(1) &quot;A&quot; string(2) &quot;Φ&quot; string(2) &quot;Φ&quot; string(1) &quot;1&quot; int(65) int(65) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.totitle-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>     <li class="member"><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>     <li class="member"><span class="function">{@link mb_convert_case()} - 对字符串进行大小写转换</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
     * @return mixed  Returns the Simple_Titlecase_Mapping of the code point, if any; otherwise the code point itself.*/
    public static function totitle ($codepoint ) {}

/**
*<div id="intlchar.toupper" class="refentry">  <div class="refnamediv">   <h1 class="refname">IntlChar::toupper</h1>   <p class="verinfo">(PHP 7)</p><p class="refpurpose"><span class="refname">IntlChar::toupper</span> &mdash; <span class="dc-title">Make Unicode character uppercase</span></p>   </div>   <div class="refsect1 description" id="refsect1-intlchar.toupper-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>IntlChar::toupper</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$codepoint</code></span>    )</div>    <p class="para rdfs-comment">    The given character is mapped to its uppercase equivalent.    If the character has no uppercase equivalent, the character itself is returned.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-intlchar.toupper-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">codepoint</code></dt>      <dd>       <p class="para">The <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> codepoint value (e.g. <em>0x2603</em> for <em class="emphasis">U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> (e.g. <em>&quot;\u{2603}&quot;</em>)</p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-intlchar.toupper-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the Simple_Uppercase_Mapping of the code point, if any;    otherwise the code point itself.   </p>   <p class="para">The return type will be <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> unless the code point was passed as a UTF-8 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>, in which case a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> will be returned.</p>  </div>    <div class="refsect1 examples" id="refsect1-intlchar.toupper-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3157">    <p><strong>Example #1 Testing different code points</strong></p>    <div class="example-contents">     <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen">     <div class="cdata"><pre> string(1) &quot;A&quot; string(1) &quot;A&quot; string(2) &quot;Φ&quot; string(2) &quot;Φ&quot; string(1) &quot;1&quot; int(65) int(65) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-intlchar.toupper-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>     <li class="member"><span class="function">{@link IntlChar::totitle()} - Make Unicode character titlecase</span></li>     <li class="member"><span class="function">{@link mb_strtoupper()} - 使字符串大写</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.intlchar.php">IntlChar</a></div></div>
*/
    public static function toupper ($codepoint ) {}
}