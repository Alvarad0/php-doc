<?php

// Start of sockets v.

/**
*<div id="function.socket-select" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_select</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_select</span> &mdash; <span class="dc-title">Runs the select() system call on the given arrays of sockets with a specified timeout</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-select-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_select</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$read</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$write</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$except</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$tv_sec</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$tv_usec</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> accepts arrays of sockets and waits for    them to change status. Those coming with BSD sockets background will    recognize that those socket resource arrays are in fact the so-called file    descriptor sets. Three independent arrays of socket resources are watched.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-select-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">read</span></dt>       <dd>        <p class="para">        The sockets listed in the <span class="parameter" style="color:#2EACF9">read</span> array will be        watched to see if characters become available for reading (more        precisely, to see if a read will not block - in particular, a socket        resource is also ready on end-of-file, in which case a        <span class="function">{@link socket_read()}</span> will return a zero length string).       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">write</span></dt>       <dd>        <p class="para">        The sockets listed in the <span class="parameter" style="color:#2EACF9">write</span> array will be        watched to see if a write will not block.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">except</span></dt>       <dd>        <p class="para">        The sockets listed in the <span class="parameter" style="color:#2EACF9">except</span> array will be        watched for exceptions.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">tv_sec</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">tv_sec</span> and <span class="parameter" style="color:#2EACF9">tv_usec</span>        together form the <em>timeout</em> parameter. The        <em>timeout</em> is an upper bound on the amount of time        elapsed before <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> return.        <span class="parameter" style="color:#2EACF9">tv_sec</span> may be zero , causing        <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> to return immediately. This is useful        for polling. If <span class="parameter" style="color:#2EACF9">tv_sec</span> is <strong><span>NULL</span></strong> (no timeout),        <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> can block indefinitely.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">tv_usec</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     On exit, the arrays are modified to indicate which socket resource     actually changed status.    </p>   </div>   <p class="para">    You do not need to pass every array to    <span class="function"><strong style="color:#CC7832">socket_select()</strong></span>. You can leave it out and use an    empty array or <strong><span>NULL</span></strong> instead. Also do not forget that those arrays are    passed <em class="emphasis">by reference</em> and will be modified after    <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> returns.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Due a limitation in the current Zend Engine it is not possible to pass a     constant modifier like <strong><span>NULL</span></strong> directly as a parameter to a function     which expects this parameter to be passed by reference. Instead use a     temporary variable or an expression with the leftmost member being a     temporary variable:     <div class="example" id="snmp.setsecurity.example.basic">      <p><strong>Example #1 Using <strong><span>NULL</span></strong> with <span class="function"><strong style="color:#CC7832">socket_select()</strong></span></strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$e&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">socket_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$w</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>      </div>    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-select-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    On success <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> returns the number of    socket resources contained in the modified arrays, which may be zero if    the timeout expires before anything interesting happens. On error <strong><span>FALSE</span></strong>    is returned. The error code can be retrieved with    <span class="function">{@link socket_last_error()}</span>.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Be sure to use the <em>===</em> operator when checking for an     error. Since the <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> may return 0 the     comparison with <em>==</em> would evaluate to <strong><span>TRUE</span></strong>:     <div class="example" id="snmp.walk.example.basic">      <p><strong>Example #2 Understanding <span class="function"><strong style="color:#CC7832">socket_select()</strong></span>&#039;s result</strong></p>      <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$e&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br />if&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">socket_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$w</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_select()&nbsp;failed,&nbsp;reason:&nbsp;"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">())&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>      </div>      </div>    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-select-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.walk.example.suffix-as-key">     <p><strong>Example #3 <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Prepare&nbsp;the&nbsp;read&nbsp;array&nbsp;<br /></span><span style="color: #9876AA">$read&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">$socket1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$socket2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$write&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$except&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$num_changed_sockets&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_select</span><span style="color: #007700">(</span><span style="color: #9876AA">$read</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$write</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$except</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$num_changed_sockets&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Error&nbsp;handling&nbsp;<br /></span><span style="color: #007700">}&nbsp;else&nbsp;if&nbsp;(</span><span style="color: #9876AA">$num_changed_sockets&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;At&nbsp;least&nbsp;at&nbsp;one&nbsp;of&nbsp;the&nbsp;sockets&nbsp;something&nbsp;interesting&nbsp;happened&nbsp;<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.socket-select-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Be aware that some socket implementations need to be handled very     carefully. A few basic rules:     <ul class="itemizedlist">      <li class="listitem">       <span class="simpara">        You should always try to use <span class="function"><strong style="color:#CC7832">socket_select()</strong></span>        without timeout. Your program should have nothing to do if there is        no data available. Code that depends on timeouts is not usually        portable and difficult to debug.       </span>      </li>      <li class="listitem">       <span class="simpara">        No socket resource must be added to any set if you do not intend to        check its result after the <span class="function"><strong style="color:#CC7832">socket_select()</strong></span> call,        and respond appropriately. After <span class="function"><strong style="color:#CC7832">socket_select()</strong></span>        returns, all socket resources in all arrays must be checked. Any        socket resource that is available for writing must be written to, and        any socket resource available for reading must be read from.       </span>      </li>      <li class="listitem">       <span class="simpara">        If you read/write to a socket returns in the arrays be aware that        they do not necessarily read/write the full amount of data you have        requested. Be prepared to even only be able to read/write a single        byte.       </span>      </li>      <li class="listitem">       <span class="simpara">        It&#039;s common to most socket implementations that the only exception        caught with the <span class="parameter" style="color:#2EACF9">except</span> array is out-of-bound        data received on a socket.       </span>      </li>     </ul>    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-select-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_read()} - Reads a maximum of length bytes from a socket</span></li>     <li class="member"><span class="function">{@link socket_write()} - Write to a socket</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int On success <b>socket_select</b> returns the number of*/
function socket_select (array &$read, array &$write, array &$except, $tv_sec, $tv_usec = 0) {}

/**
*<div id="function.socket-create" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_create</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_create</span> &mdash; <span class="dc-title">创建一个套接字（通讯节点）</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-create-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>socket_create</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$domain</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$type</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$protocol</span></span>    )</div>    <p class="para rdfs-comment">    创建并返回一个套接字，也称作一个通讯节点。一个典型的网络连接由 2 个套接字构成，一个运行在客户端，另一个运行在服务器端。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-create-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">domain</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">domain</span> 参数指定哪个协议用在当前套接字上。       </p>       <table class="doctable table">        <caption><strong>可用的地址/协议</strong></caption>                 <thead>          <tr>           <th>Domain</th>           <th>描述</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td><strong><span>AF_INET</span></strong></td>           <td>            IPv4 网络协议。TCP 和 UDP 都可使用此协议。           </td>          </tr>           <tr>           <td><strong><span>AF_INET6</span></strong></td>           <td>            IPv6 网络协议。TCP 和 UDP 都可使用此协议。           </td>          </tr>           <tr>           <td><strong><span>AF_UNIX</span></strong></td>           <td>            本地通讯协议。具有高性能和低成本的 IPC（进程间通讯）。           </td>          </tr>          </tbody>               </table>       </dd>                 <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">type</span> 参数用于选择套接字使用的类型。       </p>       <table class="doctable table">        <caption><strong>可用的套接字类型</strong></caption>                 <thead>          <tr>           <th>类型</th>           <th>描述</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td><strong><span>SOCK_STREAM</span></strong></td>           <td>            提供一个顺序化的、可靠的、全双工的、基于连接的字节流。支持数据传送流量控制机制。TCP 协议即基于这种流式套接字。           </td>          </tr>           <tr>           <td><strong><span>SOCK_DGRAM</span></strong></td>           <td>            提供数据报文的支持。(无连接，不可靠、固定最大长度).UDP协议即基于这种数据报文套接字。           </td>          </tr>           <tr>           <td><strong><span>SOCK_SEQPACKET</span></strong></td>           <td>            提供一个顺序化的、可靠的、全双工的、面向连接的、固定最大长度的数据通信；数据端通过接收每一个数据段来读取整个数据包。           </td>          </tr>           <tr>           <td><strong><span>SOCK_RAW</span></strong></td>           <td>            提供读取原始的网络协议。这种特殊的套接字可用于手工构建任意类型的协议。一般使用这个套接字来实现 ICMP 请求（例如 ping）。           </td>          </tr>           <tr>           <td><strong><span>SOCK_RDM</span></strong></td>           <td>            提供一个可靠的数据层，但不保证到达顺序。一般的操作系统都未实现此功能。           </td>          </tr>          </tbody>               </table>       </dd>                 <dt> <span class="parameter" style="color:#2EACF9">protocol</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">protocol</span> 参数，是设置指定 <span class="parameter" style="color:#2EACF9">domain</span>         套接字下的具体协议。这个值可以使用 <span class="function">{@link getprotobyname()}</span>        函数进行读取。如果所需的协议是 TCP 或 UDP，可以直接使用常量 <strong><span>SOL_TCP</span></strong> 和 <strong><span>SOL_UDP</span></strong> 。       </p>       <table class="doctable table">        <caption><strong>常见协议</strong></caption>                 <thead>          <tr>           <th>名称</th>           <th>描述</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td>icmp</td>           <td>            Internet Control Message Protocol            主要用于网关和主机报告错误的数据通信。例如“ping”命令（在目前大部分的操作系统中）就是使用 ICMP 协议实现的。           </td>          </tr>           <tr>           <td>udp</td>           <td>            User Datagram Protocol 是一个无连接的、不可靠的、具有固定最大长度的报文协议。由于这些特性，UDP 协议拥有最小的协议开销。           </td>          </tr>           <tr>           <td>tcp</td>           <td>            Transmission Control Protocol 是一个可靠的、基于连接的、面向数据流的全双工协议。TCP            能够保障所有的数据包是按照其发送顺序而接收的。如果任意数据包在通讯时丢失，TCP            将自动重发数据包直到目标主机应答已接收。因为可靠性和性能的原因，TCP 在数据传输层使用 8bit 字节边界。因此，TCP 应用程序必须允许传送部分报文的可能。           </td>          </tr>          </tbody>               </table>       </dd>          </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-create-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_create()</strong></span> 正确时返回一个套接字，失败时返回    <strong><span>FALSE</span></strong>。要读取错误代码，可以调用 <span class="function">{@link socket_last_error()}</span>。这个错误代码可以通过 <span class="function">{@link socket_strerror()}</span> 读取文字的错误说明。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.socket-create-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.0.0</td>        <td>         增加 <strong><span>AF_INET6</span></strong> 支持。        </td>       </tr>       </tbody>         </table>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.socket-create-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果使用一个无效的 <span class="parameter" style="color:#2EACF9">domain</span> 或 <span class="parameter" style="color:#2EACF9">type</span>，<span class="function"><strong style="color:#CC7832">socket_create()</strong></span>    会使用 <strong><span>AF_INET</span></strong> 和    <strong><span>SOCK_STREAM</span></strong> 替代无效参数，同时会发出 <strong><span>E_WARNING</span></strong> 警告信息。   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-create-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_accept()} - Accepts a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return resource <b>socket_create</b> returns a socket resource on success,*/
function socket_create ($domain, $type, $protocol) {}

/**
*<div id="function.socket-export-stream" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_export_stream</h1>   <p class="verinfo">(PHP 7 &gt;= 7.0.7)</p><p class="refpurpose"><span class="refname">socket_export_stream</span> &mdash; <span class="dc-title">Export a socket extension resource into a stream that encapsulates a socket</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-export-stream-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>socket_export_stream</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-export-stream-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>      <dd>       <span>             </span>     </dd>        </dl>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-export-stream-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Return resource 或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
*/
function socket_export_stream($socket) {}

/**
*<div id="function.socket-create-listen" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_create_listen</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_create_listen</span> &mdash; <span class="dc-title">Opens a socket on port to accept connections </span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-create-listen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>socket_create_listen</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$port</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$backlog</span><span class="initializer"> = 128</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">socket_create_listen()</strong></span> creates a new socket resource of    type <strong><span>AF_INET</span></strong> listening on <em class="emphasis">all</em>    local interfaces on the given port waiting for new connections.   </p>   <p class="para">    This function is meant to ease the task of creating a new socket which    only listens to accept new connections.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-create-listen-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">port</span></dt>       <dd>        <p class="para">        The port on which to listen on all interfaces.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">backlog</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">backlog</span> parameter defines the maximum length        the queue of pending connections may grow to.        <strong><span>SOMAXCONN</span></strong> may be passed as        <span class="parameter" style="color:#2EACF9">backlog</span> parameter, see        <span class="function">{@link socket_listen()}</span> for more information.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-create-listen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_create_listen()</strong></span> returns a new socket resource    on success or <strong><span>FALSE</span></strong> on error. The error code can be retrieved with    <span class="function">{@link socket_last_error()}</span>. This code may be passed to    <span class="function">{@link socket_strerror()}</span> to get a textual explanation of the    error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.socket-create-listen-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     If you want to create a socket which only listens on a certain     interface you need to use <span class="function">{@link socket_create()}</span>,     <span class="function">{@link socket_bind()}</span> and <span class="function">{@link socket_listen()}</span>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-create-listen-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_create_pair()} - Creates a pair of indistinguishable sockets and stores them in an array</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return resource <b>socket_create_listen</b> returns a new socket resource*/
function socket_create_listen ($port, $backlog = 128) {}

/**
*<div id="function.socket-create-pair" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_create_pair</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_create_pair</span> &mdash; <span class="dc-title">Creates a pair of indistinguishable sockets and stores them in an array</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-create-pair-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_create_pair</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$domain</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$type</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$protocol</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$fd</span></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">socket_create_pair()</strong></span> creates two connected and    indistinguishable sockets, and stores them in <span class="parameter" style="color:#2EACF9">fd</span>.    This function is commonly used in IPC (InterProcess Communication).   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-create-pair-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">domain</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">domain</span> parameter specifies the protocol        family to be used by the socket. See <span class="function">{@link socket_create()}</span>        for the full list.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">type</span> parameter selects the type of communication        to be used by the socket. See <span class="function">{@link socket_create()}</span> for the         full list.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">protocol</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">protocol</span> parameter sets the specific        protocol within the specified <span class="parameter" style="color:#2EACF9">domain</span> to be used        when communicating on the returned socket. The proper value can be retrieved by        name by using <span class="function">{@link getprotobyname()}</span>. If        the desired protocol is TCP, or UDP the corresponding constants        <strong><span>SOL_TCP</span></strong>, and <strong><span>SOL_UDP</span></strong>        can also be used.       </p>       <p class="para">        See <span class="function">{@link socket_create()}</span> for the full list of supported         protocols.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">fd</span></dt>       <dd>        <p class="para">        Reference to an array in which the two socket resources will be inserted.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-create-pair-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.socket-create-pair-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         This function is now re-enabled on Windows platforms.        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         This function was due to a bug made unavailable on          Windows platforms.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-create-pair-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.geterrno.example.basic">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_create_pair()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$sockets&nbsp;</span><span style="color: #007700">=&nbsp;array();<br /><br /></span><span style="color: #FF8000">//&nbsp;On&nbsp;Windows&nbsp;we&nbsp;need&nbsp;to&nbsp;use&nbsp;AF_INET&nbsp;<br /></span><span style="color: #9876AA">$domain&nbsp;</span><span style="color: #007700">=&nbsp;(</span><span style="color: #9876AA">strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_OS</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">))&nbsp;==&nbsp;</span><span style="color: #DD0000">'WIN'&nbsp;</span><span style="color: #007700">?&nbsp;</span><span style="color: #9876AA">AF_INET&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #9876AA">AF_UNIX</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Setup&nbsp;socket&nbsp;pair&nbsp;<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">socket_create_pair</span><span style="color: #007700">(</span><span style="color: #9876AA">$domain</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_create_pair&nbsp;failed.&nbsp;Reason:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">());<br />}<br /></span><span style="color: #FF8000">//&nbsp;Send&nbsp;and&nbsp;Recieve&nbsp;Data&nbsp;<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">socket_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">],&nbsp;</span><span style="color: #DD0000">"ABCdef123\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #DD0000">"ABCdef123\n"</span><span style="color: #007700">))&nbsp;===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_write()&nbsp;failed.&nbsp;Reason:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]));<br />}<br />if&nbsp;((</span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">],&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #DD0000">"ABCdef123\n"</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_BINARY_READ</span><span style="color: #007700">))&nbsp;===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_read()&nbsp;failed.&nbsp;Reason:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]));<br />}<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Close&nbsp;sockets&nbsp;<br /></span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>   <p class="para">    <div class="example" id="snmp.geterror.example.basic">     <p><strong>Example #2 <span class="function"><strong style="color:#CC7832">socket_create_pair()</strong></span> IPC example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$ary&nbsp;</span><span style="color: #007700">=&nbsp;array();<br /></span><span style="color: #9876AA">$strone&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'Message&nbsp;From&nbsp;Parent.'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$strtwo&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'Message&nbsp;From&nbsp;Child.'</span><span style="color: #007700">;<br /><br />if&nbsp;(</span><span style="color: #9876AA">socket_create_pair</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_UNIX</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ary</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_create_pair()&nbsp;failed.&nbsp;Reason:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">());<br />}<br /></span><span style="color: #9876AA">$pid&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">pcntl_fork</span><span style="color: #007700">();<br />if&nbsp;(</span><span style="color: #9876AA">$pid&nbsp;</span><span style="color: #007700">==&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Could&nbsp;not&nbsp;fork&nbsp;Process.'</span><span style="color: #007700">;<br />}&nbsp;elseif&nbsp;(</span><span style="color: #9876AA">$pid</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//parent<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">socket_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">],&nbsp;</span><span style="color: #9876AA">$strone</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$strone</span><span style="color: #007700">))&nbsp;===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_write()&nbsp;failed.&nbsp;Reason:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">socket_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">],&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$strtwo</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_BINARY_READ</span><span style="color: #007700">)&nbsp;==&nbsp;</span><span style="color: #9876AA">$strtwo</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Recieved&nbsp;</span><span style="color: #9876AA">$strtwo</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//child<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">socket_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">],&nbsp;</span><span style="color: #9876AA">$strtwo</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$strtwo</span><span style="color: #007700">))&nbsp;===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_write()&nbsp;failed.&nbsp;Reason:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">socket_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">],&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$strone</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_BINARY_READ</span><span style="color: #007700">)&nbsp;==&nbsp;</span><span style="color: #9876AA">$strone</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Recieved&nbsp;</span><span style="color: #9876AA">$strone</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-create-pair-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_create_listen()} - Opens a socket on port to accept connections</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function socket_create_pair ($domain, $type, $protocol, array &$fd) {}

/**
*<div id="function.socket-accept" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_accept</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_accept</span> &mdash; <span class="dc-title">Accepts a connection on a socket</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-accept-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>socket_accept</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    )</div>    <p class="para rdfs-comment">    After the socket <span class="parameter" style="color:#2EACF9">socket</span> has been created    using <span class="function">{@link socket_create()}</span>, bound to a name with    <span class="function">{@link socket_bind()}</span>, and told to listen for connections    with <span class="function">{@link socket_listen()}</span>, this function will accept    incoming connections on that socket. Once a successful connection    is made, a new socket resource is returned, which may be used    for communication. If there are multiple connections queued on    the socket, the first will be used. If there are no pending    connections, <span class="function"><strong style="color:#CC7832">socket_accept()</strong></span> will block until    a connection becomes present. If <span class="parameter" style="color:#2EACF9">socket</span>    has been made non-blocking using    <span class="function">{@link socket_set_blocking()}</span> or    <span class="function">{@link socket_set_nonblock()}</span>, <strong><span>FALSE</span></strong> will be returned.   </p>   <p class="para">    The socket resource returned by    <span class="function"><strong style="color:#CC7832">socket_accept()</strong></span> may not be used to accept new    connections. The original listening socket    <span class="parameter" style="color:#2EACF9">socket</span>, however, remains open and may be    reused.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-accept-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-accept-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a new socket resource on success, or <strong><span>FALSE</span></strong> on error. The actual    error code can be retrieved by calling    <span class="function">{@link socket_last_error()}</span>. This error code may be passed to    <span class="function">{@link socket_strerror()}</span> to get a textual explanation of the    error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-accept-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return resource a new socket resource on success, or <b>FALSE</b> on error. The actual*/
function socket_accept ($socket) {}

/**
*<div id="function.socket-set-nonblock" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_set_nonblock</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_set_nonblock</span> &mdash; <span class="dc-title">Sets nonblocking mode for file descriptor fd </span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-set-nonblock-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_set_nonblock</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    )</div>    <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">socket_set_nonblock()</strong></span> function sets the     <strong><span>O_NONBLOCK</span></strong> flag on the socket specified by    the <span class="parameter" style="color:#2EACF9">socket</span> parameter.   </p>   <p class="para">    When an operation (e.g. receive, send, connect, accept, ...) is performed on     a non-blocking socket, the script will not pause its execution until it receives a     signal or it can perform the operation. Rather, if the operation would result    in a block, the called function will fail.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-set-nonblock-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-set-nonblock-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-set-nonblock-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5602">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_set_nonblock()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create_listen</span><span style="color: #007700">(</span><span style="color: #9876AA">1223</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">socket_set_nonblock</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">socket_accept</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>      This example creates a listening socket on all interfaces on port 1223 and      sets the socket to <strong><span>O_NONBLOCK</span></strong> mode.       <span class="function">{@link socket_accept()}</span> will immediately fail unless there is a      pending connection exactly at this moment.     </p></div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-set-nonblock-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_set_block()} - Sets blocking mode on a socket resource</span></li>     <li class="member"><span class="function">{@link socket_set_option()} - Sets socket options for the socket</span></li>     <li class="member"><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function socket_set_nonblock ($socket) {}

/**
*<div id="function.socket-set-block" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_set_block</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_set_block</span> &mdash; <span class="dc-title">Sets blocking mode on a socket resource</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-set-block-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_set_block</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    )</div>    <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">socket_set_block()</strong></span> function removes the     <strong><span>O_NONBLOCK</span></strong> flag on the socket specified by the     <span class="parameter" style="color:#2EACF9">socket</span> parameter.   </p>   <p class="para">    When an operation (e.g. receive, send, connect, accept, ...) is performed on     a blocking socket, the script will pause its execution until it receives    a signal or it can perform the operation.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-set-block-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-set-block-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-set-block-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5601">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_set_block()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create_listen</span><span style="color: #007700">(</span><span style="color: #9876AA">1223</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">socket_set_block</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">socket_accept</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>      This example creates a listening socket on all interfaces on port 1223 and      sets the socket to <strong><span>O_BLOCK</span></strong> mode.       <span class="function">{@link socket_accept()}</span> will hang until there is a connection      to accept.     </p></div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-set-block-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_set_nonblock()} - Sets nonblocking mode for file descriptor fd</span></li>     <li class="member"><span class="function">{@link socket_set_option()} - Sets socket options for the socket</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function socket_set_block ($socket) {}

/**
*<div id="function.socket-listen" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_listen</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_listen</span> &mdash; <span class="dc-title">Listens for a connection on a socket</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-listen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_listen</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$backlog</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    After the socket <span class="parameter" style="color:#2EACF9">socket</span> has been created    using <span class="function">{@link socket_create()}</span> and bound to a name with    <span class="function">{@link socket_bind()}</span>, it may be told to listen for incoming    connections on <span class="parameter" style="color:#2EACF9">socket</span>.   </p>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_listen()</strong></span> is applicable only to sockets of    type <strong><span>SOCK_STREAM</span></strong> or    <strong><span>SOCK_SEQPACKET</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-listen-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_addrinfo_bind()}</span>       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">backlog</span></dt>       <dd>        <p class="para">        A maximum of <span class="parameter" style="color:#2EACF9">backlog</span> incoming connections will be        queued for processing. If a connection request arrives with the queue        full the client may receive an error with an indication of        <em>ECONNREFUSED</em>, or, if the underlying protocol supports        retransmission, the request may be ignored so that retries may succeed.       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:         <p class="para">         The maximum number passed to the <span class="parameter" style="color:#2EACF9">backlog</span>         parameter highly depends on the underlying platform. On Linux, it is         silently truncated to <strong><span>SOMAXCONN</span></strong>. On win32, if         passed <strong><span>SOMAXCONN</span></strong>, the underlying service provider         responsible for the socket will set the backlog to a maximum         <em class="emphasis">reasonable</em> value. There is no standard provision to         find out the actual backlog value on this platform.        </p>       </p></blockquote>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-listen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。 The error code can be retrieved with    <span class="function">{@link socket_last_error()}</span>. This code may be passed to    <span class="function">{@link socket_strerror()}</span> to get a textual explanation of the    error.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-listen-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_accept()} - Accepts a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>     <li class="member"><span class="function">{@link socket_addrinfo_bind()} - Create and bind to a socket from a given addrinfo</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure. The error code can be retrieved with*/
function socket_listen ($socket, $backlog = 0) {}

/**
*<div id="function.socket-close" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_close</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_close</span> &mdash; <span class="dc-title">关闭套接字资源</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>socket_close</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">socket_close()</strong></span> 会关闭掉给定的 <span class="parameter" style="color:#2EACF9">socket</span> 资源。    这个函数只针对套接字资源有效，不能用在其他类型的资源类型上。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-close-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>         <p class="para">         由 <span class="function">{@link socket_create()}</span>         或者是 <span class="function">{@link socket_accept()}</span> 创建的有效的套接字资源。        </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-close-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-close-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return void No value is returned.*/
function socket_close ($socket) {}

/**
*<div id="function.socket-write" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_write</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_write</span> &mdash; <span class="dc-title">Write to a socket</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-write-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_write</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$buffer</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    The function <span class="function"><strong style="color:#CC7832">socket_write()</strong></span> writes to the    <span class="parameter" style="color:#2EACF9">socket</span> from the given    <span class="parameter" style="color:#2EACF9">buffer</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-write-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">buffer</span></dt>       <dd>        <p class="para">        The buffer to be written.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        The optional parameter <span class="parameter" style="color:#2EACF9">length</span> can specify an        alternate length of bytes written to the socket. If this length is        greater than the buffer length, it is silently truncated to the length        of the buffer.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-write-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of bytes successfully written to the socket 或者在失败时返回 <strong><span>FALSE</span></strong>.    The error code can be retrieved with    <span class="function">{@link socket_last_error()}</span>. This code may be passed to    <span class="function">{@link socket_strerror()}</span> to get a textual explanation of the    error.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     It is perfectly valid for <span class="function"><strong style="color:#CC7832">socket_write()</strong></span> to     return zero which means no bytes have been written. Be sure to use the     <em>===</em> operator to check for <strong><span>FALSE</span></strong> in case of an     error.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.socket-write-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">socket_write()</strong></span> does not necessarily write all bytes     from the given buffer. It&#039;s valid that, depending on the network     buffers etc., only a certain amount of data, even one byte, is written     though your buffer is greater. You have to watch out so you don&#039;t     unintentionally forget to transmit the rest of your data.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-write-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_accept()} - Accepts a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_read()} - Reads a maximum of length bytes from a socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int the number of bytes successfully written to the socket or <b>FALSE</b> on failure.*/
function socket_write ($socket, $buffer, $length = 0) {}

/**
*<div id="function.socket-read" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_read</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_read</span> &mdash; <span class="dc-title">Reads a maximum of length bytes from a socket</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-read-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>socket_read</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$length</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$type</span><span class="initializer"> = PHP_BINARY_READ</span></span>   ] )</div>    <p class="para rdfs-comment">    The function <span class="function"><strong style="color:#CC7832">socket_read()</strong></span> reads from the socket    resource <span class="parameter" style="color:#2EACF9">socket</span> created by the    <span class="function">{@link socket_create()}</span> or    <span class="function">{@link socket_accept()}</span> functions.    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-read-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">length</span></dt>       <dd>        <p class="para">        The maximum number of bytes read is specified by the        <span class="parameter" style="color:#2EACF9">length</span> parameter. Otherwise you can use        <strong><span>\r</span></strong>, <strong><span>\n</span></strong>,        or <strong><span>\0</span></strong> to end reading (depending on the <span class="parameter" style="color:#2EACF9">type</span>        parameter, see below).       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>       <dd>        <p class="para">        Optional <span class="parameter" style="color:#2EACF9">type</span> parameter is a named constant:        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">           <strong><span>PHP_BINARY_READ</span></strong> (Default) - use the system           <em>recv()</em> function. Safe for reading binary data.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><span>PHP_NORMAL_READ</span></strong> - reading stops at           <em>\n</em> or <em>\r</em>.          </span>         </li>        </ul>       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-read-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_read()</strong></span> returns the data as a string on success,    or <strong><span>FALSE</span></strong> on error (including if the remote host has closed the    connection). The error code can be retrieved with    <span class="function">{@link socket_last_error()}</span>. This code may be passed to    <span class="function">{@link socket_strerror()}</span> to get a textual representation of    the error.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">socket_read()</strong></span> returns a zero length string (&quot;&quot;)     when there is no more data to read.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-read-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_accept()} - Accepts a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>     <li class="member"><span class="function">{@link socket_write()} - Write to a socket</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return string <b>socket_read</b> returns the data as a string on success,*/
function socket_read ($socket, $length, $type = PHP_BINARY_READ) {}

/**
*<div id="function.socket-getsockname" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_getsockname</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_getsockname</span> &mdash; <span class="dc-title">Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-getsockname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_getsockname</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$addr</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$port</span></span>   ] )</div>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <span class="simpara">     <span class="function"><strong style="color:#CC7832">socket_getsockname()</strong></span> should not be used with     <strong><span>AF_UNIX</span></strong> sockets created with <span class="function">{@link socket_connect()}</span>.     Only sockets created with <span class="function">{@link socket_accept()}</span> or a primary     server socket following a call to <span class="function">{@link socket_bind()}</span> will return     meaningful values.    </span>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-getsockname-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>         or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">addr</span></dt>       <dd>        <p class="para">        If the given socket is of type <strong><span>AF_INET</span></strong>        or <strong><span>AF_INET6</span></strong>, <span class="function"><strong style="color:#CC7832">socket_getsockname()</strong></span>        will return the local <em class="emphasis">IP address</em> in appropriate notation (e.g.        <em>127.0.0.1</em> or <em>fe80::1</em>) in the        <span class="parameter" style="color:#2EACF9">address</span> parameter and, if the optional        <span class="parameter" style="color:#2EACF9">port</span> parameter is present, also the associated port.       </p>       <p class="para">        If the given socket is of type <strong><span>AF_UNIX</span></strong>,        <span class="function"><strong style="color:#CC7832">socket_getsockname()</strong></span> will return the Unix filesystem        path (e.g. <em>/var/run/daemon.sock</em>) in the        <span class="parameter" style="color:#2EACF9">address</span> parameter.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">port</span></dt>       <dd>        <p class="para">        If provided, this will hold the associated port.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-getsockname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。 <span class="function"><strong style="color:#CC7832">socket_getsockname()</strong></span> may also return    <strong><span>FALSE</span></strong> if the socket type is not any of <strong><span>AF_INET</span></strong>,    <strong><span>AF_INET6</span></strong>, or <strong><span>AF_UNIX</span></strong>, in which    case the last socket error code is <em class="emphasis">not</em> updated.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-getsockname-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_getpeername()} - Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure. <b>socket_getsockname</b> may also return*/
function socket_getsockname ($socket, &$addr, &$port = null) {}

/**
*<div id="function.socket-getpeername" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_getpeername</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_getpeername</span> &mdash; <span class="dc-title">Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-getpeername-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_getpeername</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$address</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$port</span></span>   ] )</div>    <p class="para rdfs-comment">    Queries the remote side of the given socket which may either result in    host/port or in a Unix filesystem path, dependent on its type.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-getpeername-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">address</span></dt>       <dd>        <p class="para">        If the given socket is of type <strong><span>AF_INET</span></strong> or        <strong><span>AF_INET6</span></strong>, <span class="function"><strong style="color:#CC7832">socket_getpeername()</strong></span>        will return the peers (remote) <em class="emphasis">IP address</em> in        appropriate notation (e.g. <em>127.0.0.1</em> or        <em>fe80::1</em>) in the <span class="parameter" style="color:#2EACF9">address</span>        parameter and, if the optional <span class="parameter" style="color:#2EACF9">port</span> parameter is        present, also the associated port.       </p>       <p class="para">        If the given socket is of type <strong><span>AF_UNIX</span></strong>,        <span class="function"><strong style="color:#CC7832">socket_getpeername()</strong></span> will return the Unix filesystem        path (e.g. <em>/var/run/daemon.sock</em>) in the        <span class="parameter" style="color:#2EACF9">address</span> parameter.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">port</span></dt>       <dd>        <p class="para">        If given, this will hold the port associated to        <span class="parameter" style="color:#2EACF9">address</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-getpeername-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。 <span class="function"><strong style="color:#CC7832">socket_getpeername()</strong></span> may also return    <strong><span>FALSE</span></strong> if the socket type is not any of <strong><span>AF_INET</span></strong>,    <strong><span>AF_INET6</span></strong>, or <strong><span>AF_UNIX</span></strong>, in which    case the last socket error code is <em class="emphasis">not</em> updated.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.socket-getpeername-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">socket_getpeername()</strong></span> should not be used with     <strong><span>AF_UNIX</span></strong> sockets created with <span class="function">{@link socket_accept()}</span>.     Only sockets created with <span class="function">{@link socket_connect()}</span> or a primary     server socket following a call to <span class="function">{@link socket_bind()}</span> will return     meaningful values.    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     For having <span class="function"><strong style="color:#CC7832">socket_getpeername()</strong></span> to return a meaningful value,     the socket it is applied upon must of course be one for which the concept of      &quot;peer&quot; makes sense.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-getpeername-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_getsockname()} - Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure. <b>socket_getpeername</b> may also return*/
function socket_getpeername ($socket, &$address, &$port = null) {}

/**
*<div id="function.socket-connect" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_connect</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_connect</span> &mdash; <span class="dc-title">开启一个套接字连接</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-connect-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_connect</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$address</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$port</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    用 <span class="function">{@link socket_create()}</span> 创建的有效的套接字资源来连接到 <span class="parameter" style="color:#2EACF9">address</span> 。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-connect-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">address</span></dt>       <dd>        <p class="para">        如果参数 <span class="parameter" style="color:#2EACF9">socket</span> 是 <strong><span>AF_INET</span></strong> ，        那么参数 <span class="parameter" style="color:#2EACF9">address</span> 则可以是一个点分四组表示法（例如 <em>127.0.0.1</em> ） 的 IPv4 地址；        如果支持 IPv6 并且 <span class="parameter" style="color:#2EACF9">socket</span> 是 <strong><span>AF_INET6</span></strong>，那么 <span class="parameter" style="color:#2EACF9">address</span>        也可以是有效的 IPv6 地址（例如 <em>::1</em>）；如果套接字类型为 <strong><span>AF_UNIX</span></strong> ，那么         <span class="parameter" style="color:#2EACF9">address</span> 也可以是一个Unix 套接字。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">port</span></dt>       <dd>        <p class="para">        参数 <span class="parameter" style="color:#2EACF9">port</span> 仅仅用于 <strong><span>AF_INET</span></strong> 和 <strong><span>AF_INET6</span></strong>        套接字连接的时候，并且是在此情况下是需要强制说明连接对应的远程服务器上的端口号。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-connect-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。 错误代码会传入 <span class="function">{@link socket_last_error()}</span> ，如果将此参数传入 <span class="function">{@link socket_strerror()}</span>    则可以得到错误的文字说明。   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     If the socket is non-blocking then this function returns <strong><span>FALSE</span></strong> with an     error <em>Operation now in progress</em>.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-connect-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure. The error code can be retrieved with*/
function socket_connect ($socket, $address, $port = 0) {}

/**
*<div id="function.socket-strerror" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_strerror</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_strerror</span> &mdash; <span class="dc-title">Return a string describing a socket error</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-strerror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">string</span> <span class="methodname" style="color:#CC7832"><strong>socket_strerror</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$errno</span></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong style="color:#CC7832">socket_strerror()</strong></span> takes as its    <span class="parameter" style="color:#2EACF9">errno</span> parameter a socket error code as returned by    <span class="function">{@link socket_last_error()}</span> and returns the corresponding    explanatory text.   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Although the error messages generated by the socket extension are in      English, the system messages retrieved with this function will appear     depending on the current locale (<strong><span>LC_MESSAGES</span></strong>).    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-strerror-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">errno</span></dt>       <dd>        <p class="para">        A valid socket error number, likely produced by         <span class="function">{@link socket_last_error()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-strerror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the error message associated with the <span class="parameter" style="color:#2EACF9">errno</span>    parameter.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-strerror-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5604">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_strerror()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">==&nbsp;(</span><span style="color: #9876AA">$socket&nbsp;</span><span style="color: #007700">=&nbsp;@</span><span style="color: #9876AA">socket_create</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_INET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_TCP</span><span style="color: #007700">)))&nbsp;{<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_create()&nbsp;failed:&nbsp;reason:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">())&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br />if&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">==&nbsp;(@</span><span style="color: #9876AA">socket_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">80</span><span style="color: #007700">)))&nbsp;{<br />&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_bind()&nbsp;failed:&nbsp;reason:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>      The expected output from the above example (assuming the script      is not run with root privileges):     </p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> socket_bind() failed: reason: Permission denied </span></div>     </div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-strerror-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_accept()} - Accepts a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return string the error message associated with the <i>errno</i>*/
function socket_strerror ($errno) {}

/**
*<div id="function.socket-bind" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_bind</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_bind</span> &mdash; <span class="dc-title">给套接字绑定名字</span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-bind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_bind</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$address</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$port</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    绑定 <span class="parameter" style="color:#2EACF9">address</span> 到 <span class="parameter" style="color:#2EACF9">socket</span>。    该操作必须是在使用 <span class="function">{@link socket_connect()}</span> 或者 <span class="function">{@link socket_listen()}</span>    建立一个连接之前。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-bind-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        用 <span class="function">{@link socket_create()}</span> 创建的一个有效的套接字资源。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">address</span></dt>       <dd>        <p class="para">        如果套接字是 <strong><span>AF_INET</span></strong> 族，那么        <span class="parameter" style="color:#2EACF9">address</span> 必须是一个四点分法的 IP 地址（例如 <em>127.0.0.1</em> ）。       </p>       <p class="para">        如果套接字是 <strong><span>AF_UNIX</span></strong> 族，那么 <span class="parameter" style="color:#2EACF9">address</span> 是 Unix 套接字一部分（例如 <var class="filename">/tmp/my.sock</var> ）。       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">port</span> （可选）</dt>       <dd>        <p class="para">        参数 <span class="parameter" style="color:#2EACF9">port</span> 仅仅用于 <strong><span>AF_INET</span></strong>        套接字连接的时候，并且指定连接中需要监听的端口号。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-bind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>   <p class="para">    错误代码会传入 <span class="function">{@link socket_last_error()}</span> ，如果将此参数传入 <span class="function">{@link socket_strerror()}</span>    则可以得到错误的文字说明。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-bind-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.get.example.oidarray">     <p><strong>Example #1 使用 <span class="function"><strong style="color:#CC7832">socket_bind()</strong></span> 来设置套接字资源地址</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;a&nbsp;new&nbsp;socket<br /></span><span style="color: #9876AA">$sock&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_INET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_TCP</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;An&nbsp;example&nbsp;list&nbsp;of&nbsp;IP&nbsp;addresses&nbsp;owned&nbsp;by&nbsp;the&nbsp;computer<br /></span><span style="color: #9876AA">$sourceips</span><span style="color: #007700">[</span><span style="color: #DD0000">'kevin'</span><span style="color: #007700">]&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$sourceips</span><span style="color: #007700">[</span><span style="color: #DD0000">'madcoder'</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">'127.0.0.2'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Bind&nbsp;the&nbsp;source&nbsp;address<br /></span><span style="color: #9876AA">socket_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$sock</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sourceips</span><span style="color: #007700">[</span><span style="color: #DD0000">'madcoder'</span><span style="color: #007700">]);<br /><br /></span><span style="color: #FF8000">//&nbsp;Connect&nbsp;to&nbsp;destination&nbsp;address<br /></span><span style="color: #9876AA">socket_connect</span><span style="color: #007700">(</span><span style="color: #9876AA">$sock</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">80</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Write<br /></span><span style="color: #9876AA">$request&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'GET&nbsp;/&nbsp;HTTP/1.1'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\r\n"&nbsp;</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'Host:&nbsp;example.com'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\r\n\r\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">socket_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$sock</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$request</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Close<br /></span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$sock</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.socket-bind-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     该函数必须在 <span class="function">{@link socket_connect()}</span> 之前使用。    </p>   </p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     Windows 9x/ME 兼容性注意点:     如果尝试绑定套接字资源到一个错误的地址，而这个地址不是本机的地址，那么 <span class="function">{@link socket_last_error()}</span> 可能会返回一个无效的错误代码。    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-bind-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>     <li class="member"><span class="function">{@link socket_listen()} - Listens for a connection on a socket</span></li>     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function socket_bind ($socket, $address, $port = 0) {}

/**
*<div id="function.socket-recv" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_recv</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_recv</span> &mdash; <span class="dc-title">从已连接的socket接收数据</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-recv-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_recv</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$buf</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$len</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div>    <p class="para rdfs-comment">    函数 <span class="function"><strong style="color:#CC7832">socket_recv()</strong></span> 从 <span class="parameter" style="color:#2EACF9">socket</span> 中接受长度为    <span class="parameter" style="color:#2EACF9">len</span> 字节的数据，并保存在 <span class="parameter" style="color:#2EACF9">buf</span> 中。    <span class="function"><strong style="color:#CC7832">socket_recv()</strong></span> 用于从已连接的socket中接收数据。除此之外，可以设定一个或多个 flags     来控制函数的具体行为。   </p>   <p class="para">    <span class="parameter" style="color:#2EACF9">buf</span> 以引用形式传递，因此必须是一个以声明的有效的变量。从    <span class="parameter" style="color:#2EACF9">socket</span> 中接收到的数据将会保存在 <span class="parameter" style="color:#2EACF9">buf</span> 中。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-recv-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        参数 <span class="parameter" style="color:#2EACF9">socket</span> 必须是一个由 <span class="function">{@link socket_create()}</span>         创建的socket资源。       </p>      </dd>                  <dt> <span class="parameter" style="color:#2EACF9">buf</span></dt>       <dd>        <p class="para">        从socket中获取的数据将被保存在由 <span class="parameter" style="color:#2EACF9">buf</span> 制定的变量中。        如果有错误发生，如链接被重置，数据不可用等等， <span class="parameter" style="color:#2EACF9">buf</span> 将被设为 <strong><span>NULL</span></strong>。       </p>      </dd>                  <dt> <span class="parameter" style="color:#2EACF9">len</span></dt>       <dd>        <p class="para">        长度最多为 <span class="parameter" style="color:#2EACF9">len</span> 字节的数据将被接收。       </p>      </dd>                  <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">flags</span> 的值可以为下列任意flag的组合。使用按位或运算符(<em>|</em>)来        组合不同的flag。       </p>              <table class="doctable table">        <caption><strong>可用的 <span class="parameter" style="color:#2EACF9">flags</span> 值</strong></caption>                 <thead>          <tr>           <th>Flag</th>           <th>描述</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td><strong><span>MSG_OOB</span></strong></td>           <td>            处理超出边界的数据           </td>          </tr>           <tr>           <td><strong><span>MSG_PEEK</span></strong></td>           <td>            从接受队列的起始位置接收数据，但不将他们从接受队列中移除。           </td>          </tr>           <tr>           <td><strong><span>MSG_WAITALL</span></strong></td>           <td>            在接收到至少 <span class="parameter" style="color:#2EACF9">len</span> 字节的数据之前，造成一个阻塞，并暂停脚本运行（block）。但是，            如果接收到中断信号，或远程服务器断开连接，该函数将返回少于 <span class="parameter" style="color:#2EACF9">len</span> 字节的数据。           </td>          </tr>           <tr>           <td><strong><span>MSG_DONTWAIT</span></strong></td>           <td>            如果制定了该flag，函数将不会造成阻塞，即使在全局设置中指定了阻塞设置。           </td>          </tr>          </tbody>               </table>       </dd>              </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-recv-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_recv()</strong></span> 返回一个数字，表示接收到的字节数。如果发生了错误，则返回 <strong><span>FALSE</span></strong>    错误码可使用 <span class="function">{@link socket_last_error()}</span> 接收。也可使用函数 <span class="function">{@link socket_strerror()}</span>     来取得关于错误的文字描述。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-recv-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.set.example.multiple">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_recv()</strong></span> 范例</strong></p>     <div class="example-contents"><p>      该范例简单地使用 <span class="function"><strong style="color:#CC7832">socket_recv()</strong></span> 重写了 <a href="http://php.net/manual/zh/sockets.examples.php" class="xref">范例</a> 中的      第一个例子。     </p></div>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"&lt;h2&gt;TCP/IP&nbsp;Connection&lt;/h2&gt;\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Get&nbsp;the&nbsp;port&nbsp;for&nbsp;the&nbsp;WWW&nbsp;service.&nbsp;<br /></span><span style="color: #9876AA">$service_port&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getservbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'tcp'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Get&nbsp;the&nbsp;IP&nbsp;address&nbsp;for&nbsp;the&nbsp;target&nbsp;host.&nbsp;<br /></span><span style="color: #9876AA">$address&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">gethostbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;a&nbsp;TCP/IP&nbsp;socket.&nbsp;<br /></span><span style="color: #9876AA">$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_INET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_TCP</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$socket&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_create()&nbsp;failed:&nbsp;reason:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">())&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"OK.\n"</span><span style="color: #007700">;<br />}<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Attempting&nbsp;to&nbsp;connect&nbsp;to&nbsp;'</span><span style="color: #9876AA">$address</span><span style="color: #DD0000">'&nbsp;on&nbsp;port&nbsp;'</span><span style="color: #9876AA">$service_port</span><span style="color: #DD0000">'..."</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_connect</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$address</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$service_port</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_connect()&nbsp;failed.\nReason:&nbsp;(</span><span style="color: #9876AA">$result</span><span style="color: #DD0000">)&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"OK.\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$in&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"HEAD&nbsp;/&nbsp;HTTP/1.1\r\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$in&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"Host:&nbsp;www.example.com\r\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$in&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"Connection:&nbsp;Close\r\n\r\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$out&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Sending&nbsp;HTTP&nbsp;HEAD&nbsp;request..."</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">socket_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$in</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$in</span><span style="color: #007700">));<br />echo&nbsp;</span><span style="color: #DD0000">"OK.\n"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Reading&nbsp;response:\n\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$buf&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'This&nbsp;is&nbsp;my&nbsp;buffer.'</span><span style="color: #007700">;<br />if&nbsp;(</span><span style="color: #9876AA">false&nbsp;</span><span style="color: #007700">!==&nbsp;(</span><span style="color: #9876AA">$bytes&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_recv</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$buf</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2048</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">MSG_WAITALL</span><span style="color: #007700">)))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Read&nbsp;</span><span style="color: #9876AA">$bytes</span><span style="color: #DD0000">&nbsp;bytes&nbsp;from&nbsp;socket_recv().&nbsp;Closing&nbsp;socket..."</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"socket_recv()&nbsp;failed;&nbsp;reason:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">))&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$buf&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">"OK.\n\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>      The above example will produce something like:     </p></div>     <div class="example-contents screen" style="background:black;padding-left:5px;"> <div class="cdata"><span> &lt;h2&gt;TCP/IP Connection&lt;/h2&gt; OK. Attempting to connect to &#039;208.77.188.166&#039; on port &#039;80&#039;...OK. Sending HTTP HEAD request...OK. Reading response:  Read 123 bytes from socket_recv(). Closing socket...HTTP/1.1 200 OK Date: Mon, 14 Sep 2009 08:56:36 GMT Server: Apache/2.2.3 (Red Hat) Last-Modified: Tue, 15 Nov 2005 13:24:10 GMT ETag: &quot;b80f4-1b6-80bfd280&quot; Accept-Ranges: bytes Content-Length: 438 Connection: close Content-Type: text/html; charset=UTF-8  OK. </span></div>     </div>    </div>   </span>  </div>                        <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int <b>socket_recv</b> returns the number of bytes received,*/
function socket_recv ($socket, &$buf, $len, $flags) {}

/**
*<div id="function.socket-send" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_send</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_send</span> &mdash; <span class="dc-title">Sends data to a connected socket</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-send-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_send</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$buf</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$len</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    )</div>    <p class="para rdfs-comment">    The function <span class="function"><strong style="color:#CC7832">socket_send()</strong></span> sends    <span class="parameter" style="color:#2EACF9">len</span> bytes to the socket    <span class="parameter" style="color:#2EACF9">socket</span> from <span class="parameter" style="color:#2EACF9">buf</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-send-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">buf</span></dt>       <dd>        <p class="para">        A buffer containing the data that will be sent to the remote host.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">len</span></dt>       <dd>        <p class="para">        The number of bytes that will be sent to the remote host from         <span class="parameter" style="color:#2EACF9">buf</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The value of <span class="parameter" style="color:#2EACF9">flags</span> can be any combination of         the following flags, joined with the binary OR (<em>|</em>)        operator.        <table class="doctable table">         <caption><strong>Possible values for <span class="parameter" style="color:#2EACF9">flags</span></strong></caption>                   <tbody class="tbody">           <tr>            <td><strong><span>MSG_OOB</span></strong></td>            <td>             Send OOB (out-of-band) data.            </td>           </tr>            <tr>            <td><strong><span>MSG_EOR</span></strong></td>            <td>             Indicate a record mark. The sent data completes the record.            </td>           </tr>            <tr>            <td><strong><span>MSG_EOF</span></strong></td>            <td>             Close the sender side of the socket and include an appropriate             notification of this at the end of the sent data. The sent data             completes the transaction.            </td>           </tr>            <tr>            <td><strong><span>MSG_DONTROUTE</span></strong></td>            <td>             Bypass routing, use direct interface.            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-send-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_send()</strong></span> returns the number of bytes sent, or <strong><span>FALSE</span></strong> on error.    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-send-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_sendto()} - Sends a message to a socket, whether it is connected or not</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int <b>socket_send</b> returns the number of bytes sent, or <b>FALSE</b> on error.*/
function socket_send ($socket, $buf, $len, $flags) {}

/**
*<div id="function.socket-sendmsg" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_sendmsg</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">socket_sendmsg</span> &mdash; <span class="dc-title">Send a message</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-sendmsg-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_sendmsg</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">$message</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-sendmsg-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">message</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-sendmsg-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of bytes sent,  或者在失败时返回 <strong><span>FALSE</span></strong>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-sendmsg-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_recvmsg()} - Read a message</span></li>     <li class="member"><span class="function">{@link socket_cmsg_space()} - Calculate message buffer size</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int*/
function socket_sendmsg ($socket, array $message, $flags ) {}

/**
*<div id="function.socket-recvfrom" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_recvfrom</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_recvfrom</span> &mdash; <span class="dc-title">Receives data from a socket whether or not it is connection-oriented</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-recvfrom-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_recvfrom</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$buf</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$len</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">&$name</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">&$port</span></span>   ] )</div>    <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">socket_recvfrom()</strong></span> function receives    <span class="parameter" style="color:#2EACF9">len</span> bytes of data in <span class="parameter" style="color:#2EACF9">buf</span> from    <span class="parameter" style="color:#2EACF9">name</span> on port <span class="parameter" style="color:#2EACF9">port</span> (if the    socket is not of type <strong><span>AF_UNIX</span></strong>) using    <span class="parameter" style="color:#2EACF9">socket</span>. <span class="function"><strong style="color:#CC7832">socket_recvfrom()</strong></span> can be    used to gather data from both connected and unconnected sockets.    Additionally, one or more flags can be specified to modify the behaviour of    the function.   </p>   <p class="para">    The <span class="parameter" style="color:#2EACF9">name</span> and <span class="parameter" style="color:#2EACF9">port</span> must be    passed by reference. If the socket is not connection-oriented,    <span class="parameter" style="color:#2EACF9">name</span> will be set to the internet protocol address of    the remote host or the path to the UNIX socket. If the socket is    connection-oriented, <span class="parameter" style="color:#2EACF9">name</span> is <strong><span>NULL</span></strong>. Additionally,    the <span class="parameter" style="color:#2EACF9">port</span> will contain the port of the remote host in    the case of an unconnected <strong><span>AF_INET</span></strong> or    <strong><span>AF_INET6</span></strong> socket.    </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-recvfrom-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">socket</span> must be a socket resource previously        created by socket_create().       </p>      </dd>                  <dt> <span class="parameter" style="color:#2EACF9">buf</span></dt>       <dd>        <p class="para">        The data received will be fetched to the variable specified with        <span class="parameter" style="color:#2EACF9">buf</span>.       </p>      </dd>                  <dt> <span class="parameter" style="color:#2EACF9">len</span></dt>       <dd>        <p class="para">        Up to <span class="parameter" style="color:#2EACF9">len</span> bytes will be fetched from remote host.       </p>      </dd>                  <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The value of <span class="parameter" style="color:#2EACF9">flags</span> can be any combination of         the following flags, joined with the binary OR (<em>|</em>)        operator.       </p>              <table class="doctable table">        <caption><strong>Possible values for <span class="parameter" style="color:#2EACF9">flags</span></strong></caption>                 <thead>          <tr>           <th>Flag</th>           <th>Description</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td><strong><span>MSG_OOB</span></strong></td>           <td>            Process out-of-band data.           </td>          </tr>           <tr>           <td><strong><span>MSG_PEEK</span></strong></td>           <td>            Receive data from the beginning of the receive queue without            removing it from the queue.           </td>          </tr>           <tr>           <td><strong><span>MSG_WAITALL</span></strong></td>           <td>            Block until at least <span class="parameter" style="color:#2EACF9">len</span> are received.            However, if a signal is caught or the remote host disconnects, the            function may return less data.           </td>          </tr>           <tr>           <td><strong><span>MSG_DONTWAIT</span></strong></td>           <td>            With this flag set, the function returns even if it would normally            have blocked.           </td>          </tr>          </tbody>               </table>       </dd>                  <dt> <span class="parameter" style="color:#2EACF9">name</span></dt>       <dd>        <p class="para">        If the socket is of the type <strong><span>AF_UNIX</span></strong> type,        <span class="parameter" style="color:#2EACF9">name</span> is the path to the file. Else, for        unconnected sockets, <span class="parameter" style="color:#2EACF9">name</span> is the IP address of,        the remote host, or <strong><span>NULL</span></strong> if the socket is connection-oriented.       </p>      </dd>                  <dt> <span class="parameter" style="color:#2EACF9">port</span></dt>       <dd>        <p class="para">        This argument only applies to <strong><span>AF_INET</span></strong> and        <strong><span>AF_INET6</span></strong> sockets, and specifies the remote port        from which the data is received. If the socket is connection-oriented,        <span class="parameter" style="color:#2EACF9">port</span> will be <strong><span>NULL</span></strong>.       </p>      </dd>               </dl>    </span>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-recvfrom-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_recvfrom()</strong></span> returns the number of bytes received,    or <strong><span>FALSE</span></strong> if there was an error. The actual error code can be retrieved by     calling <span class="function">{@link socket_last_error()}</span>. This error code may be    passed to <span class="function">{@link socket_strerror()}</span> to get a textual explanation    of the error.   </p>  </div>                         <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-recvfrom-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.set.example.bits">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_recvfrom()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">E_STRICT</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_INET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_DGRAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_UDP</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">socket_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1223</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$from&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$port&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$buf</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">12</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$from</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$port</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Received&nbsp;</span><span style="color: #9876AA">$buf</span><span style="color: #DD0000">&nbsp;from&nbsp;remote&nbsp;address&nbsp;</span><span style="color: #9876AA">$from</span><span style="color: #DD0000">&nbsp;and&nbsp;remote&nbsp;port&nbsp;</span><span style="color: #9876AA">$port</span><span style="color: #DD0000">"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>      <div class="example-contents"><p>      This example will initiate a UDP socket on port 1223 of 127.0.0.1      and print at most 12 characters received from a remote host.     </p></div>    </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.socket-recvfrom-changelog">   <h3 class="title">更新日志</h3>   <span>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.0</td>        <td>         <span class="function"><strong style="color:#CC7832">socket_recvfrom()</strong></span> is now binary safe.        </td>       </tr>       </tbody>         </table>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-recvfrom-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_recv()} - 从已连接的socket接收数据</span></li>     <li class="member"><span class="function">{@link socket_send()} - Sends data to a connected socket</span></li>     <li class="member"><span class="function">{@link socket_sendto()} - Sends a message to a socket, whether it is connected or not</span></li>     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>    </ul>   </span>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int <b>socket_recvfrom</b> returns the number of bytes received,*/
function socket_recvfrom ($socket, &$buf, $len, $flags, &$name, &$port = null) {}

/**
*<div id="function.socket-recvmsg" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_recvmsg</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">socket_recvmsg</span> &mdash; <span class="dc-title">Read a message</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-recvmsg-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_recvmsg</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#2EACF9">&$message</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-recvmsg-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">message</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-recvmsg-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-recvmsg-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_sendmsg()} - Send a message</span></li>     <li class="member"><span class="function">{@link socket_cmsg_space()} - Calculate message buffer size</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int*/
function socket_recvmsg ($socket , $message, $flags) {}
/**
*<div id="function.socket-sendto" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_sendto</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_sendto</span> &mdash; <span class="dc-title">Sends a message to a socket, whether it is connected or not </span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-sendto-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_sendto</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$buf</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$len</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$flags</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#2EACF9">$addr</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$port</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    The function <span class="function"><strong style="color:#CC7832">socket_sendto()</strong></span> sends    <span class="parameter" style="color:#2EACF9">len</span> bytes from <span class="parameter" style="color:#2EACF9">buf</span>    through the socket <span class="parameter" style="color:#2EACF9">socket</span> to the    <span class="parameter" style="color:#2EACF9">port</span> at the address <span class="parameter" style="color:#2EACF9">addr</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-sendto-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created using <span class="function">{@link socket_create()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">buf</span></dt>       <dd>        <p class="para">        The sent data will be taken from buffer <span class="parameter" style="color:#2EACF9">buf</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">len</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">len</span> bytes from <span class="parameter" style="color:#2EACF9">buf</span> will be        sent.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">flags</span></dt>       <dd>        <p class="para">        The value of <span class="parameter" style="color:#2EACF9">flags</span> can be any combination of         the following flags, joined with the binary OR (<em>|</em>)        operator.        <table class="doctable table">         <caption><strong>Possible values for <span class="parameter" style="color:#2EACF9">flags</span></strong></caption>                   <tbody class="tbody">           <tr>            <td><strong><span>MSG_OOB</span></strong></td>            <td>             Send OOB (out-of-band) data.            </td>           </tr>            <tr>            <td><strong><span>MSG_EOR</span></strong></td>            <td>             Indicate a record mark. The sent data completes the record.            </td>           </tr>            <tr>            <td><strong><span>MSG_EOF</span></strong></td>            <td>             Close the sender side of the socket and include an appropriate             notification of this at the end of the sent data. The sent data             completes the transaction.            </td>           </tr>            <tr>            <td><strong><span>MSG_DONTROUTE</span></strong></td>            <td>             Bypass routing, use direct interface.            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">addr</span></dt>       <dd>        <p class="para">        IP address of the remote host.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">port</span></dt>       <dd>        <p class="para">        <span class="parameter" style="color:#2EACF9">port</span> is the remote port number at which the data        will be sent.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-sendto-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong style="color:#CC7832">socket_sendto()</strong></span> returns the number of bytes sent to the    remote host, or <strong><span>FALSE</span></strong> if an error occurred.   </p>  </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-sendto-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5600">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_sendto()</strong></span> Example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />&nbsp;&nbsp;&nbsp;&nbsp;$sock&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_INET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_DGRAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_UDP</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$msg&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"Ping&nbsp;!"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$len&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$msg</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">socket_sendto</span><span style="color: #007700">(</span><span style="color: #9876AA">$sock</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$msg</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$len</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1223</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">socket_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$sock</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-sendto-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_send()} - Sends data to a connected socket</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int <b>socket_sendto</b> returns the number of bytes sent to the*/
function socket_sendto ($socket, $buf, $len, $flags, $addr, $port = 0) {}

/**
*<div id="function.socket-get-option" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_get_option</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_get_option</span> &mdash; <span class="dc-title">Gets socket options for the socket </span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-get-option-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="methodname" style="color:#CC7832"><strong>socket_get_option</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$level</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$optname</span></span>    )</div>    <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">socket_get_option()</strong></span> function retrieves the value for    the option specified by the <span class="parameter" style="color:#2EACF9">optname</span> parameter for the    specified <span class="parameter" style="color:#2EACF9">socket</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-get-option-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">level</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">level</span> parameter specifies the protocol        level at which the option resides. For example, to retrieve options at        the socket level, a <span class="parameter" style="color:#2EACF9">level</span> parameter of        <strong><span>SOL_SOCKET</span></strong> would be used. Other levels, such as        <strong><span>TCP</span></strong>, can be used by        specifying the protocol number of that level. Protocol numbers can be        found by using the <span class="function">{@link getprotobyname()}</span> function.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">optname</span></dt>       <dd>        <table class="doctable table">        <caption><strong>Available Socket Options</strong></caption>                 <thead>          <tr>           <th>Option</th>           <th>Description</th>           <th>Type</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td><strong><span>SO_DEBUG</span></strong></td>           <td>            Reports whether debugging information is being recorded.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_BROADCAST</span></strong></td>           <td>            Reports whether transmission of broadcast messages is supported.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_REUSEADDR</span></strong></td>           <td>            Reports whether local addresses can be reused.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_REUSEPORT</span></strong></td>           <td>            Reports whether local ports can be reused.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_KEEPALIVE</span></strong></td>           <td>            Reports whether connections are kept active with periodic transmission            of messages. If the connected socket fails to respond to these messages,            the connection is broken and processes writing to that socket are notified            with a SIGPIPE signal.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_LINGER</span></strong></td>           <td>            <p class="para">             Reports whether the <span class="parameter" style="color:#2EACF9">socket</span> lingers on              <span class="function">{@link socket_close()}</span> if data is present. By default,              when the socket is closed, it attempts to send all unsent data.             In the case of a connection-oriented socket,              <span class="function">{@link socket_close()}</span> will wait for its peer to             acknowledge the data.             </p>            <p class="para">             If <var class="varname"><var class="varname">l_onoff</var></var> is non-zero and              <var class="varname"><var class="varname">l_linger</var></var> is zero, all the              unsent data will be discarded and RST (reset) is sent to the              peer in the case of a connection-oriented socket.             </p>            <p class="para">             On the other hand, if <var class="varname"><var class="varname">l_onoff</var></var> is              non-zero and <var class="varname"><var class="varname">l_linger</var></var> is non-zero,             <span class="function">{@link socket_close()}</span> will block until all the data              is sent or the time specified in <var class="varname"><var class="varname">l_linger</var></var>             elapses. If the socket is non-blocking,              <span class="function">{@link socket_close()}</span> will fail and return an error.            </p>           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>. The array will contain two keys:            <var class="varname"><var class="varname">l_onoff</var></var> and             <var class="varname"><var class="varname">l_linger</var></var>.            </td>          </tr>           <tr>           <td><strong><span>SO_OOBINLINE</span></strong></td>           <td>            Reports whether the <span class="parameter" style="color:#2EACF9">socket</span> leaves out-of-band data inline.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_SNDBUF</span></strong></td>           <td>            Reports the size of the send buffer.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>                    </tr>           <tr>           <td><strong><span>SO_RCVBUF</span></strong></td>           <td>            Reports the size of the receive buffer.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>                   </tr>           <tr>           <td><strong><span>SO_ERROR</span></strong></td>           <td>            Reports information about error status and clears it.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> (cannot be set by <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>SO_TYPE</span></strong></td>           <td>            Reports the <span class="parameter" style="color:#2EACF9">socket</span> type (e.g.             <strong><span>SOCK_STREAM</span></strong>).           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> (cannot be set by <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>SO_DONTROUTE</span></strong></td>           <td>            Reports whether outgoing messages bypass the standard routing facilities.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_RCVLOWAT</span></strong></td>           <td>            Reports the minimum number of bytes to process for <span class="parameter" style="color:#2EACF9">socket</span>             input operations.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>SO_RCVTIMEO</span></strong></td>           <td>            Reports the timeout value for input operations.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>. The array will contain two keys:            <var class="varname"><var class="varname">sec</var></var> which is the seconds part on the timeout            value and <var class="varname"><var class="varname">usec</var></var> which is the microsecond part             of the timeout value.            </td>          </tr>           <tr>           <td><strong><span>SO_SNDTIMEO</span></strong></td>           <td>            Reports the timeout value specifying the amount of time that an output            function blocks because flow control prevents data from being sent.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>. The array will contain two keys:            <var class="varname"><var class="varname">sec</var></var> which is the seconds part on the timeout            value and <var class="varname"><var class="varname">usec</var></var> which is the microsecond part             of the timeout value.            </td>          </tr>           <tr>           <td><strong><span>SO_SNDLOWAT</span></strong></td>           <td>            Reports the minimum number of bytes to process for <span class="parameter" style="color:#2EACF9">socket</span> output operations.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>TCP_NODELAY</span></strong></td>           <td>            Reports whether the Nagle TCP algorithm is disabled.           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>           </td>          </tr>           <tr>           <td><strong><span>MCAST_JOIN_GROUP</span></strong></td>           <td>            Joins a multicast group. (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with keys <em>&quot;group&quot;</em>, specifying            a <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> with an IPv4 or IPv6 multicast address and            <em>&quot;interface&quot;</em>, specifying either an interface            number (type <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>) or a <em>string</em> with            the interface name, like <em>&quot;eth0&quot;</em>.            <em>0</em> can be specified to indicate the interface            should be selected using routing rules. (can only be used in            <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>MCAST_LEAVE_GROUP</span></strong></td>           <td>            Leaves a multicast group. (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>. See <strong><span>MCAST_JOIN_GROUP</span></strong> for            more information. (can only be used in            <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>MCAST_BLOCK_SOURCE</span></strong></td>           <td>            Blocks packets arriving from a specific source to a specific            multicast group, which must have been previously joined.            (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with the same keys as            <strong><span>MCAST_JOIN_GROUP</span></strong>, plus one extra key,            <em>source</em>, which maps to a <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>            specifying an IPv4 or IPv6 address of the source to be blocked.            (can only be used in <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>MCAST_UNBLOCK_SOURCE</span></strong></td>           <td>            Unblocks (start receiving again) packets arriving from a specific            source address to a specific multicast group, which must have been            previously joined. (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with the same format as            <strong><span>MCAST_BLOCK_SOURCE</span></strong>.            (can only be used in <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>MCAST_JOIN_SOURCE_GROUP</span></strong></td>           <td>            Receive packets destined to a specific multicast group whose source            address matches a specific value. (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with the same format as            <strong><span>MCAST_BLOCK_SOURCE</span></strong>.            (can only be used in <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>MCAST_LEAVE_SOURCE_GROUP</span></strong></td>           <td>            Stop receiving packets destined to a specific multicast group whose            soure address matches a specific value. (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with the same format as            <strong><span>MCAST_BLOCK_SOURCE</span></strong>.            (can only be used in <span class="function">{@link socket_set_option()}</span>)           </td>          </tr>           <tr>           <td><strong><span>IP_MULTICAST_IF</span></strong></td>           <td>            The outgoing interface for IPv4 multicast packets.            (added in PHP 5.4)           </td>           <td>            Either <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> specifying the interface number or a            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> with an interface name, like            <em>eth0</em>. The value <span class="type" style="color:#EAB766"><span class="type 0" style="color:#EAB766">0</span></span> can be used to            indicate the routing table is to used in the interface selection.            The function <span class="function"><strong style="color:#CC7832">socket_get_option()</strong></span> returns an            interface index.            Note that, unlike the C API, this option does NOT take an IP            address. This eliminates the interface difference between            <strong><span>IP_MULTICAST_IF</span></strong> and            <strong><span>IPV6_MULTICAST_IF</span></strong>.           </td>          </tr>           <tr>           <td><strong><span>IPV6_MULTICAST_IF</span></strong></td>           <td>            The outgoing interface for IPv6 multicast packets.            (added in PHP 5.4)           </td>           <td>            The same as <strong><span>IP_MULTICAST_IF</span></strong>.           </td>          </tr>           <tr>           <td><strong><span>IP_MULTICAST_LOOP</span></strong></td>           <td>            The multicast loopback policy for IPv4 packets, which            determines whether multicast packets sent by this socket also reach            receivers in the same host that have joined the same multicast group            on the outgoing interface used by this socket. This is the case by            default.            (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> (either <em>0</em> or            <em>1</em>). For <span class="function">{@link socket_set_option()}</span>            any value will be accepted and will be converted to a boolean            following the usual PHP rules.           </td>          </tr>           <tr>           <td><strong><span>IPV6_MULTICAST_LOOP</span></strong></td>           <td>            Analogous to <strong><span>IP_MULTICAST_LOOP</span></strong>, but for IPv6.            (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>. See <strong><span>IP_MULTICAST_LOOP</span></strong>.           </td>          </tr>           <tr>           <td><strong><span>IP_MULTICAST_TTL</span></strong></td>           <td>            The time-to-live of outgoing IPv4 multicast packets. This should be            a value between 0 (don&#039;t leave the interface) and 255. The default            value is 1 (only the local network is reached).            (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> between 0 and 255.           </td>          </tr>           <tr>           <td><strong><span>IPV6_MULTICAST_HOPS</span></strong></td>           <td>            Analogous to <strong><span>IP_MULTICAST_TTL</span></strong>, but for IPv6            packets. The value -1 is also accepted, meaning the route default            should be used.            (added in PHP 5.4)           </td>           <td>            <span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> between -1 and 255.           </td>          </tr>          </tbody>               </table>       </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-get-option-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the value of the given option, or <strong><span>FALSE</span></strong> on errors.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-get-option-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.getnext.example.singleoid">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_get_option()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create_listen</span><span style="color: #007700">(</span><span style="color: #9876AA">1223</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$linger&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'l_linger'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'l_onoff'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">socket_set_option</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_SOCKET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SO_LINGER</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$linger</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_get_option</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_SOCKET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SO_REUSEADDR</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-get-option-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_create_listen()} - Opens a socket on port to accept connections</span></li>     <li class="member"><span class="function">{@link socket_set_option()} - Sets socket options for the socket</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return mixed the value of the given option, or <b>FALSE</b> on errors.*/
function socket_get_option ($socket, $level, $optname) {}

/**
*<div id="function.socket-set-option" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_set_option</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_set_option</span> &mdash; <span class="dc-title">Sets socket options for the socket</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-set-option-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_set_option</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$level</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$optname</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#2EACF9">$optval</span></span>    )</div>    <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">socket_set_option()</strong></span> function sets the option    specified by the <span class="parameter" style="color:#2EACF9">optname</span> parameter, at the    specified protocol <span class="parameter" style="color:#2EACF9">level</span>, to the value pointed to    by the <span class="parameter" style="color:#2EACF9">optval</span> parameter for the     <span class="parameter" style="color:#2EACF9">socket</span>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-set-option-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>        or <span class="function">{@link socket_accept()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">level</span></dt>       <dd>        <p class="para">        The <span class="parameter" style="color:#2EACF9">level</span> parameter specifies the protocol        level at which the option resides. For example, to retrieve options at        the socket level, a <span class="parameter" style="color:#2EACF9">level</span> parameter of        <strong><span>SOL_SOCKET</span></strong> would be used. Other levels, such as        TCP, can be used by specifying the protocol number of that level.         Protocol numbers can be found by using the         <span class="function">{@link getprotobyname()}</span> function.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">optname</span></dt>       <dd>        <p class="para">        The available socket options are the same as those for the        <span class="function">{@link socket_get_option()}</span> function.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">optval</span></dt>       <dd>        <p class="para">        The option value.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-set-option-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-set-option-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="example-5603">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_set_option()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$socket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_create</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_INET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_TCP</span><span style="color: #007700">);<br /><br />if&nbsp;(!</span><span style="color: #9876AA">is_resource</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Unable&nbsp;to&nbsp;create&nbsp;socket:&nbsp;'</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">())&nbsp;.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /><br />if&nbsp;(!</span><span style="color: #9876AA">socket_set_option</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_SOCKET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SO_REUSEADDR</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Unable&nbsp;to&nbsp;set&nbsp;option&nbsp;on&nbsp;socket:&nbsp;'</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">())&nbsp;.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /><br />if&nbsp;(!</span><span style="color: #9876AA">socket_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1223</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Unable&nbsp;to&nbsp;bind&nbsp;socket:&nbsp;'</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">())&nbsp;.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$rval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_get_option</span><span style="color: #007700">(</span><span style="color: #9876AA">$socket</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_SOCKET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SO_REUSEADDR</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$rval&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Unable&nbsp;to&nbsp;get&nbsp;socket&nbsp;option:&nbsp;'</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">())&nbsp;.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;if&nbsp;(</span><span style="color: #9876AA">$rval&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'SO_REUSEADDR&nbsp;is&nbsp;set&nbsp;on&nbsp;socket&nbsp;!'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-set-option-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_create()} - 创建一个套接字（通讯节点）</span></li>     <li class="member"><span class="function">{@link socket_bind()} - 给套接字绑定名字</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_get_option()} - Gets socket options for the socket</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function socket_set_option ($socket, $level, $optname, $optval) {}

/**
*<div id="function.socket-shutdown" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_shutdown</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_shutdown</span> &mdash; <span class="dc-title">Shuts down a socket for receiving, sending, or both</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-shutdown-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">bool</span> <span class="methodname" style="color:#CC7832"><strong>socket_shutdown</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$how</span><span class="initializer"> = 2</span></span>   ] )</div>    <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">socket_shutdown()</strong></span> function allows you to stop    incoming, outgoing or all data (the default) from being sent through the    <span class="parameter" style="color:#2EACF9">socket</span>   </p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     The associated buffer, or buffers, may or may not be emptied.    </p>   </p></blockquote>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-shutdown-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>.       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">how</span></dt>       <dd>        <p class="para">        The value of <span class="parameter" style="color:#2EACF9">how</span> can be one of the following:        <table class="doctable table">         <caption><strong>possible values for <span class="parameter" style="color:#2EACF9">how</span></strong></caption>                   <tbody class="tbody">           <tr>            <td><em>0</em></td>            <td>             Shutdown socket reading            </td>           </tr>            <tr>            <td><em>1</em></td>            <td>             Shutdown socket writing            </td>           </tr>            <tr>            <td><em>2</em></td>            <td>             Shutdown socket reading and writing            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-shutdown-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><span>TRUE</span></strong>， 或者在失败时返回 <strong><span>FALSE</span></strong>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function socket_shutdown ($socket, $how = 2) {}

/**
*<div id="function.socket-last-error" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_last_error</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_last_error</span> &mdash; <span class="dc-title">Returns the last error on the socket </span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-last-error-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_last_error</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>   ] )</div>    <p class="para rdfs-comment">    If a socket resource is passed to this function, the last error which    occurred on this particular socket is returned. If the socket resource is    omitted, the error code of the last failed socket function is returned.    The latter is particularly helpful for functions like    <span class="function">{@link socket_create()}</span> which don&#039;t return a socket on    failure and <span class="function">{@link socket_select()}</span> which can fail for reasons    not directly tied to a particular socket.  The error code is suitable to    be fed to <span class="function">{@link socket_strerror()}</span> which returns a string    describing the given error code.   </p>   <p class="para">    If no error had occurred, or the error had been cleared with    <span class="function">{@link socket_clear_error()}</span>, the function returns <em>0</em>.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-last-error-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        A valid socket resource created with <span class="function">{@link socket_create()}</span>.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-last-error-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    This function returns a socket error code.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-last-error-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.set.example.basic">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_last_error()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$socket&nbsp;</span><span style="color: #007700">=&nbsp;@</span><span style="color: #9876AA">socket_create</span><span style="color: #007700">(</span><span style="color: #9876AA">AF_INET</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOCK_STREAM</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SOL_TCP</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$socket&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$errorcode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_last_error</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$errormsg&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_strerror</span><span style="color: #007700">(</span><span style="color: #9876AA">$errorcode</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">"Couldn't&nbsp;create&nbsp;socket:&nbsp;[</span><span style="color: #9876AA">$errorcode</span><span style="color: #DD0000">]&nbsp;</span><span style="color: #9876AA">$errormsg</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.socket-last-error-notes">   <h3 class="title">注释</h3>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">Note</strong>:     <p class="para">     <span class="function"><strong style="color:#CC7832">socket_last_error()</strong></span> does not clear the error code, use     <span class="function">{@link socket_clear_error()}</span> for this purpose.    </p>   </p></blockquote>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int This function returns a socket error code.*/
function socket_last_error ($socket = null) {}

/**
*<div id="function.socket-clear-error" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_clear_error</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_clear_error</span> &mdash; <span class="dc-title">清除套接字或者最后的错误代码上的错误</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-clear-error-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span> <span class="methodname" style="color:#CC7832"><strong>socket_clear_error</strong></span>     ([ <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$socket</span></span>   ] )</div>    <p class="para rdfs-comment">    这个函数清除给定的套接字上的错误代码或是最后一个全局的套接字如果套接字没有指定的话   </p>   <p class="para">    这个函数允许明确的重置错误代码值 不论是一个套接字或者最后全局错误代码的扩展，    这对在检测应用的一部分是否有错误发生是十分有用的   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-clear-error-parameters">    <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">socket</span></dt>       <dd>        <p class="para">        用<span class="function">{@link socket_create()}</span>创建的有效的套接字资源。       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-clear-error-returnvalues">  <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-clear-error-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_last_error()} - Returns the last error on the socket</span></li>     <li class="member"><span class="function">{@link socket_strerror()} - Return a string describing a socket error</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return void No value is returned.*/
function socket_clear_error ($socket = null) {}

/**
*<div id="function.socket-import-stream" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_import_stream</h1>   <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7)</p><p class="refpurpose"><span class="refname">socket_import_stream</span> &mdash; <span class="dc-title">Import a stream</span></p>   </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-import-stream-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">resource</span> <span class="methodname" style="color:#CC7832"><strong>socket_import_stream</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#2EACF9">$stream</span></span>    )</div>    <p class="para rdfs-comment">    Imports a stream that encapsulates a socket into a socket extension resource.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-import-stream-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">stream</span></dt>       <dd>        <p class="para">        The stream resource to import.       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-import-stream-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><span>FALSE</span></strong> or <strong><span>NULL</span></strong> on failure.   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.socket-import-stream-examples">   <h3 class="title">范例</h3>   <span>    <div class="example" id="snmp.getnext.example.oidarray">     <p><strong>Example #1 <span class="function"><strong style="color:#CC7832">socket_import_stream()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$stream&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">"udp://0.0.0.0:58380"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errno</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$errstr</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">STREAM_SERVER_BIND</span><span style="color: #007700">);&nbsp;<br /></span><span style="color: #9876AA">$sock&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">socket_import_stream</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </span></div>     </div>     </div>   </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-import-stream-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link stream_socket_server()} - Create an Internet or Unix domain server socket</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return resource <b>FALSE</b> or <b>NULL</b> on failure.*/
function socket_import_stream ($stream) {}

/**
*<div id="function.socket-cmsg-space" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_cmsg_space</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">socket_cmsg_space</span> &mdash; <span class="dc-title">Calculate message buffer size</span></p>   </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-cmsg-space-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description" style="border:1px gray;padding-left:5px;background:#232525">    <span class="type" style="color:#EAB766">int</span> <span class="methodname" style="color:#CC7832"><strong>socket_cmsg_space</strong></span>     ( <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$level</span></span>    , <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$type</span></span>    [, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#2EACF9">$n</span><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    Calculates the size of the buffer that should be allocated for    receiving the ancillary data.   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.socket-cmsg-space-parameters">   <h3 class="title">参数</h3>   <span>    <dl>            <dt> <span class="parameter" style="color:#2EACF9">level</span></dt>       <dd>        <p class="para">       </p>      </dd>                 <dt> <span class="parameter" style="color:#2EACF9">type</span></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </span>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.socket-cmsg-space-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">   </p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.socket-cmsg-space-seealso">   <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link socket_recvmsg()} - Read a message</span></li>     <li class="member"><span class="function">{@link socket_sendmsg()} - Send a message</span></li>    </ul>   </span>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
 * @return int*/
function socket_cmsg_space ($level, $type, $n = 0) {}

/**
*<div id="function.socket-getopt" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_getopt</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_getopt</span> &mdash; <span class="dc-title">别名 <span class="function">{@link socket_get_option()}</span></span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-getopt-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link socket_get_option()}</span>.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
*/
function socket_getopt ($socket, $level, $optname) {}

/**
*<div id="function.socket-setopt" class="refentry">  <div class="refnamediv">   <h1 class="refname">socket_setopt</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">socket_setopt</span> &mdash; <span class="dc-title">别名 <span class="function">{@link socket_set_option()}</span></span></p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.socket-setopt-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link socket_set_option()}</span>.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.sockets.php">Socket 函数</a></div></div>
*/
function socket_setopt ($socket, $level, $optname, $optval) {}

define ('AF_UNIX', 1);
define ('AF_INET', 2);

/**
*      只有在编译时加入 IPv6 支持的时候才有效。     
*/
define ('AF_INET6', 10);
define ('SOCK_STREAM', 1);
define ('SOCK_DGRAM', 2);
define ('SOCK_RAW', 3);
define ('SOCK_SEQPACKET', 5);
define ('SOCK_RDM', 4);
define ('MSG_OOB', 1);
define ('MSG_WAITALL', 256);
define ('MSG_CTRUNC', 8);
define ('MSG_TRUNC', 32);
define ('MSG_PEEK', 2);
define ('MSG_DONTROUTE', 4);

/**
*      在 Windows 平台上无效。     
*/
define ('MSG_EOR', 128);

/**
*      在 Windows 平台上无效。     
*/
define ('MSG_EOF', 512);
define ('MSG_CONFIRM', 2048);
define ('MSG_ERRQUEUE', 8192);
define ('MSG_NOSIGNAL', 16384);
define ('MSG_DONTWAIT', 64);
define ('MSG_MORE', 32768);
define ('MSG_WAITFORONE', 65536);
define ('MSG_CMSG_CLOEXEC', 1073741824);
define ('SO_DEBUG', 1);
define ('SO_REUSEADDR', 2);

/**
*      该常量在PHP5.4.10及以上版本，并且支持<strong><code>SO_REUSEPORT</code></strong>socket选项的平台上可用。包括Mac OS X和FreeBSD，不包括Linux和Windows。     
*/
define ('SO_REUSEPORT', 15);
define ('SO_KEEPALIVE', 9);
define ('SO_DONTROUTE', 5);
define ('SO_LINGER', 13);
define ('SO_BROADCAST', 6);
define ('SO_OOBINLINE', 10);
define ('SO_SNDBUF', 7);
define ('SO_RCVBUF', 8);
define ('SO_SNDLOWAT', 19);
define ('SO_RCVLOWAT', 18);
define ('SO_SNDTIMEO', 21);
define ('SO_RCVTIMEO', 20);
define ('SO_TYPE', 3);
define ('SO_ERROR', 4);
define ('SO_BINDTODEVICE', 25);
define ('SOL_SOCKET', 1);
define ('SOMAXCONN', 128);

/**
*      Used to disable Nagle TCP algorithm.      Added in PHP 5.2.7.      
*/
define ('TCP_NODELAY', 1);
define ('PHP_NORMAL_READ', 1);
define ('PHP_BINARY_READ', 2);
define ('MCAST_JOIN_GROUP', 42);
define ('MCAST_LEAVE_GROUP', 45);
define ('MCAST_BLOCK_SOURCE', 43);
define ('MCAST_UNBLOCK_SOURCE', 44);
define ('MCAST_JOIN_SOURCE_GROUP', 46);
define ('MCAST_LEAVE_SOURCE_GROUP', 47);
define ('IP_MULTICAST_IF', 32);
define ('IP_MULTICAST_TTL', 33);
define ('IP_MULTICAST_LOOP', 34);
define ('IPV6_MULTICAST_IF', 17);
define ('IPV6_MULTICAST_HOPS', 18);
define ('IPV6_MULTICAST_LOOP', 19);
define ('IPV6_V6ONLY', 27);

/**
*      操作不允许。     
*/
define ('SOCKET_EPERM', 1);

/**
*      文件或目录不存在。     
*/
define ('SOCKET_ENOENT', 2);

/**
*      中断系统调用。     
*/
define ('SOCKET_EINTR', 4);

/**
*      I/O错误。     
*/
define ('SOCKET_EIO', 5);

/**
*      未找到设备或地址。     
*/
define ('SOCKET_ENXIO', 6);

/**
*      参数列表太长。     
*/
define ('SOCKET_E2BIG', 7);

/**
*      坏文件编号。     
*/
define ('SOCKET_EBADF', 9);

/**
*      请重试。     
*/
define ('SOCKET_EAGAIN', 11);

/**
*      内存不足。     
*/
define ('SOCKET_ENOMEM', 12);

/**
*      拒绝访问。     
*/
define ('SOCKET_EACCES', 13);

/**
*      错误的地址。     
*/
define ('SOCKET_EFAULT', 14);

/**
*      需要块设备。     
*/
define ('SOCKET_ENOTBLK', 15);

/**
*      设备或资源忙。     
*/
define ('SOCKET_EBUSY', 16);

/**
*      文件存在。     
*/
define ('SOCKET_EEXIST', 17);

/**
*      跨设备链路。     
*/
define ('SOCKET_EXDEV', 18);

/**
*      设备不存在。     
*/
define ('SOCKET_ENODEV', 19);

/**
*      非目录。     
*/
define ('SOCKET_ENOTDIR', 20);

/**
*      是目录。     
*/
define ('SOCKET_EISDIR', 21);

/**
*      无效的参数。     
*/
define ('SOCKET_EINVAL', 22);

/**
*      文件表溢出。     
*/
define ('SOCKET_ENFILE', 23);

/**
*      打开的文件太多。     
*/
define ('SOCKET_EMFILE', 24);

/**
*      不是打字机。     
*/
define ('SOCKET_ENOTTY', 25);

/**
*      设备上没有剩余空间。     
*/
define ('SOCKET_ENOSPC', 28);

/**
*      非法查找。     
*/
define ('SOCKET_ESPIPE', 29);

/**
*      文件系统只读。     
*/
define ('SOCKET_EROFS', 30);

/**
*      链路太多。     
*/
define ('SOCKET_EMLINK', 31);

/**
*      管道断开。     
*/
define ('SOCKET_EPIPE', 32);

/**
*      文件名过长。     
*/
define ('SOCKET_ENAMETOOLONG', 36);

/**
*      无可用的记录锁。     
*/
define ('SOCKET_ENOLCK', 37);

/**
*      函数未实现。     
*/
define ('SOCKET_ENOSYS', 38);

/**
*      目录不为空。     
*/
define ('SOCKET_ENOTEMPTY', 39);

/**
*      Too many symbolic links encountered.     
*/
define ('SOCKET_ELOOP', 40);

/**
*      操作将阻塞。     
*/
define ('SOCKET_EWOULDBLOCK', 11);

/**
*      无需要类型的消息。     
*/
define ('SOCKET_ENOMSG', 42);

/**
*      标识符被删除。     
*/
define ('SOCKET_EIDRM', 43);

/**
*      通道数超出范围。     
*/
define ('SOCKET_ECHRNG', 44);

/**
*      2级未同步。     
*/
define ('SOCKET_EL2NSYNC', 45);

/**
*      3级停止。     
*/
define ('SOCKET_EL3HLT', 46);

/**
*      3级重置。     
*/
define ('SOCKET_EL3RST', 47);

/**
*      链接数超出范围。     
*/
define ('SOCKET_ELNRNG', 48);

/**
*      协议驱动没有安装。     
*/
define ('SOCKET_EUNATCH', 49);

/**
*      没有可用的CSI结构。     
*/
define ('SOCKET_ENOCSI', 50);

/**
*      2级停止。     
*/
define ('SOCKET_EL2HLT', 51);

/**
*      无效的交换。     
*/
define ('SOCKET_EBADE', 52);

/**
*      无效的请求描述符。     
*/
define ('SOCKET_EBADR', 53);

/**
*      交换满了。     
*/
define ('SOCKET_EXFULL', 54);

/**
*      无阳极。     
*/
define ('SOCKET_ENOANO', 55);

/**
*      无效的请求代码。     
*/
define ('SOCKET_EBADRQC', 56);

/**
*      无效的插槽。     
*/
define ('SOCKET_EBADSLT', 57);

/**
*      设备不是流。     
*/
define ('SOCKET_ENOSTR', 60);

/**
*      无可用的数据。     
*/
define ('SOCKET_ENODATA', 61);

/**
*      计时器过期。     
*/
define ('SOCKET_ETIME', 62);

/**
*      流资源不够用。     
*/
define ('SOCKET_ENOSR', 63);

/**
*      机器不在网络上。     
*/
define ('SOCKET_ENONET', 64);

/**
*      对象是远程。     
*/
define ('SOCKET_EREMOTE', 66);

/**
*      链接已被切断。     
*/
define ('SOCKET_ENOLINK', 67);

/**
*      通知错误。     
*/
define ('SOCKET_EADV', 68);

/**
*      Srmount错误。     
*/
define ('SOCKET_ESRMNT', 69);

/**
*      发送时通信错误。     
*/
define ('SOCKET_ECOMM', 70);

/**
*      协议错误。     
*/
define ('SOCKET_EPROTO', 71);

/**
*      多跳尝试。     
*/
define ('SOCKET_EMULTIHOP', 72);

/**
*      不是一个数据消息。     
*/
define ('SOCKET_EBADMSG', 74);

/**
*      名称在网络上不唯一。     
*/
define ('SOCKET_ENOTUNIQ', 76);

/**
*      文件描述符处于错误状态。     
*/
define ('SOCKET_EBADFD', 77);

/**
*      远程地址改变。     
*/
define ('SOCKET_EREMCHG', 78);

/**
*      中断的系统调用应该被重新启动。     
*/
define ('SOCKET_ERESTART', 85);

/**
*      流管道错误。     
*/
define ('SOCKET_ESTRPIPE', 86);

/**
*      太多用户。     
*/
define ('SOCKET_EUSERS', 87);

/**
*      非socket套接字操作。     
*/
define ('SOCKET_ENOTSOCK', 88);

/**
*      需要目的地址。     
*/
define ('SOCKET_EDESTADDRREQ', 89);

/**
*      消息太长。     
*/
define ('SOCKET_EMSGSIZE', 90);

/**
*      socket协议类型错误。     
*/
define ('SOCKET_EPROTOTYPE', 91);
define ('SOCKET_ENOPROTOOPT', 92);

/**
*      不支持的协议。     
*/
define ('SOCKET_EPROTONOSUPPORT', 93);

/**
*      不支持的socket类型。     
*/
define ('SOCKET_ESOCKTNOSUPPORT', 94);

/**
*      传输断点不支持的操作。     
*/
define ('SOCKET_EOPNOTSUPP', 95);

/**
*      不支持的协议族。     
*/
define ('SOCKET_EPFNOSUPPORT', 96);

/**
*      协议不支持的地址族。     
*/
define ('SOCKET_EAFNOSUPPORT', 97);
define ('SOCKET_EADDRINUSE', 98);

/**
*      不能分配请求的地址。     
*/
define ('SOCKET_EADDRNOTAVAIL', 99);

/**
*      网络出现故障。     
*/
define ('SOCKET_ENETDOWN', 100);

/**
*      网络不可达。     
*/
define ('SOCKET_ENETUNREACH', 101);

/**
*      复位，网络掉线。     
*/
define ('SOCKET_ENETRESET', 102);

/**
*      软件导致连接中止。     
*/
define ('SOCKET_ECONNABORTED', 103);

/**
*      对方重置连接。     
*/
define ('SOCKET_ECONNRESET', 104);

/**
*      无可用的缓存区空间。     
*/
define ('SOCKET_ENOBUFS', 105);

/**
*      传输端点已经连接。     
*/
define ('SOCKET_EISCONN', 106);

/**
*      传输端点未连接。     
*/
define ('SOCKET_ENOTCONN', 107);

/**
*      传输端点关闭，无法发送。     
*/
define ('SOCKET_ESHUTDOWN', 108);

/**
*      过多的引用：无法接合。     
*/
define ('SOCKET_ETOOMANYREFS', 109);

/**
*      连接超时。     
*/
define ('SOCKET_ETIMEDOUT', 110);

/**
*      连接被拒绝。     
*/
define ('SOCKET_ECONNREFUSED', 111);

/**
*      主机已关闭。     
*/
define ('SOCKET_EHOSTDOWN', 112);

/**
*      没有路由到主机。     
*/
define ('SOCKET_EHOSTUNREACH', 113);

/**
*      操作已在进行中。     
*/
define ('SOCKET_EALREADY', 114);

/**
*      操作正在进行中。     
*/
define ('SOCKET_EINPROGRESS', 115);

/**
*      是一个已命名类型的文件。     
*/
define ('SOCKET_EISNAM', 120);

/**
*      远程I/O错误。     
*/
define ('SOCKET_EREMOTEIO', 121);

/**
*      超过配额。     
*/
define ('SOCKET_EDQUOT', 122);

/**
*      未找到媒体。     
*/
define ('SOCKET_ENOMEDIUM', 123);

/**
*      错误的媒体类型。     
*/
define ('SOCKET_EMEDIUMTYPE', 124);
define ('IPPROTO_IP', 0);
define ('IPPROTO_IPV6', 41);
define ('SOL_TCP', 6);
define ('SOL_UDP', 17);
define ('IPV6_UNICAST_HOPS', 16);
define ('IPV6_RECVPKTINFO', 49);
define ('IPV6_PKTINFO', 50);
define ('IPV6_RECVHOPLIMIT', 51);
define ('IPV6_HOPLIMIT', 52);
define ('IPV6_RECVTCLASS', 66);
define ('IPV6_TCLASS', 67);
define ('SCM_RIGHTS', 1);
define ('SCM_CREDENTIALS', 2);
define ('SO_PASSCRED', 16);

// End of sockets v.
?>
