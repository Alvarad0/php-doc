<?php

// Start of dba v.

/**
*<div id="function.dba-open" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_open</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_open</span> &mdash; <span class="dc-title">Open database</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-open-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>dba_open</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$handler</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$...</code></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_open()</strong></span> establishes a database instance for    <code class="parameter">path</code> with <code class="parameter">mode</code> using    <code class="parameter">handler</code>.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-open-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">path</code></dt>       <dd>        <p class="para">        Commonly a regular path in your filesystem.       </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        It is <em>r</em> for read access, <em>w</em> for        read/write access to an already existing database, <em>c</em>        for read/write access and database creation if it doesn&#039;t currently exist,        and <em>n</em> for create, truncate and read/write access.        The database is created in BTree mode, other modes (like Hash or Queue)        are not supported.       </p>       <p class="para">        Additionally you can set the database lock method with the next char.         Use <em>l</em> to lock the database with a <var class="filename">.lck</var>        file or <em>d</em> to lock the databasefile itself. It is         important that all of your applications do this consistently.       </p>       <p class="para">        If you want to test the access and do not want to wait for the lock         you can add <em>t</em> as third character. When you are         absolutely sure that you do not require database locking you can do         so by using <em>-</em> instead of <em>l</em> or        <em>d</em>. When none of <em>d</em>,         <em>l</em> or <em>-</em> is used, dba will lock        on the database file as it would with <em>d</em>.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         There can only be one writer for one database file. When you use dba on          a web server and more than one request requires write operations they can         only be done one after another. Also read during write is not allowed.         The dba extension uses locks to prevent this. See the following table:         <table class="doctable table">          <caption><strong>DBA locking</strong></caption>                     <thead>            <tr>             <th>already open</th>             <th><code class="parameter">mode</code> = &quot;rl&quot;</th>             <th><code class="parameter">mode</code> = &quot;rlt&quot;</th>             <th><code class="parameter">mode</code> = &quot;wl&quot;</th>             <th><code class="parameter">mode</code> = &quot;wlt&quot;</th>             <th><code class="parameter">mode</code> = &quot;rd&quot;</th>             <th><code class="parameter">mode</code> = &quot;rdt&quot;</th>             <th><code class="parameter">mode</code> = &quot;wd&quot;</th>             <th><code class="parameter">mode</code> = &quot;wdt&quot;</th>            </tr>            </thead>            <tbody class="tbody">            <tr>             <td>not open</td>             <td>ok</td>             <td>ok</td>             <td>ok</td>             <td>ok</td>             <td>ok</td>             <td>ok</td>             <td>ok</td>             <td>ok</td>            </tr>             <tr>             <td><code class="parameter">mode</code> = &quot;rl&quot;</td>             <td>ok</td>             <td>ok</td>             <td>wait</td>             <td>false</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>            </tr>             <tr>             <td><code class="parameter">mode</code> = &quot;wl&quot;</td>             <td>wait</td>             <td>false</td>             <td>wait</td>             <td>false</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>            </tr>             <tr>             <td><code class="parameter">mode</code> = &quot;rd&quot;</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>             <td>ok</td>             <td>ok</td>             <td>wait</td>             <td>false</td>            </tr>             <tr>             <td><code class="parameter">mode</code> = &quot;wd&quot;</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>             <td>illegal</td>             <td>wait</td>             <td>false</td>             <td>wait</td>             <td>false</td>            </tr>            </tbody>                   </table>          <ul class="simplelist">          <li class="member">ok: the second call will be successfull.</li>          <li class="member">wait: the second call waits until <span class="function">{@link dba_close()}</span> is called for the first.</li>          <li class="member">false: the second call returns false.</li>          <li class="member">illegal: you must not mix <em>&quot;l&quot;</em> and <em>&quot;d&quot;</em> modifiers for <code class="parameter">mode</code> parameter.</li>         </ul>        </p>       </p></blockquote>      </dd>                 <dt> <code class="parameter">handler</code></dt>       <dd>        <p class="para">        The name of the <a href="http://php.net/manual/zh/dba.requirements.php" class="link">handler</a> which        shall be used for accessing <code class="parameter">path</code>. It is passed         all optional parameters given to <span class="function"><strong>dba_open()</strong></span> and         can act on behalf of them.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-open-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a positive handle on success 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.dba-open-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.0</td>        <td>         It&#039;s possible to open database files over network connection. However         in cases a socket connection will be used (as with http or ftp) the         connection will be locked instead of the resource itself. This is important          to know since in such cases locking is simply ignored on the resource          and other solutions have to be found.        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-open-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_popen()} - Open database persistently</span></li>     <li class="member"><span class="function">{@link dba_close()} - Close a DBA database</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return resource a positive handle on success or <b>FALSE</b> on failure.*/
function dba_open ($path, $mode, $handler = null, $_ = null) {}

/**
*<div id="function.dba-popen" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_popen</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_popen</span> &mdash; <span class="dc-title">Open database persistently</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-popen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>dba_popen</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$handler</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$...</code></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_popen()</strong></span> establishes a persistent database instance    for <code class="parameter">path</code> with <code class="parameter">mode</code> using    <code class="parameter">handler</code>.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-popen-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">path</code></dt>       <dd>        <p class="para">        Commonly a regular path in your filesystem.      </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        It is <em>r</em> for read access, <em>w</em> for        read/write access to an already existing database, <em>c</em>        for read/write access and database creation if it doesn&#039;t currently exist,        and <em>n</em> for create, truncate and read/write access.       </p>      </dd>                 <dt> <code class="parameter">handler</code></dt>       <dd>        <p class="para">        The name of the <a href="http://php.net/manual/zh/dba.requirements.php" class="link">handler</a> which        shall be used for accessing <code class="parameter">path</code>. It is passed         all optional parameters given to <span class="function"><strong>dba_popen()</strong></span> and         can act on behalf of them.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-popen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a positive handle on success 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-popen-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_open()} - Open database</span></li>     <li class="member"><span class="function">{@link dba_close()} - Close a DBA database</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return resource a positive handle on success or <b>FALSE</b> on failure.*/
function dba_popen ($path, $mode, $handler = null, $_ = null) {}

/**
*<div id="function.dba-close" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_close</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_close</span> &mdash; <span class="dc-title">Close a DBA database</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>dba_close</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_close()</strong></span> closes the established database and frees    all resources of the specified database handle.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-close-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-close-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-close-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_open()} - Open database</span></li>     <li class="member"><span class="function">{@link dba_popen()} - Open database persistently</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return void No value is returned.*/
function dba_close ($handle) {}

/**
*<div id="function.dba-delete" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_delete</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_delete</span> &mdash; <span class="dc-title">Delete DBA entry specified by key</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-delete-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>dba_delete</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_delete()</strong></span> deletes the specified entry from the database.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-delete-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The key of the entry which is deleted.       </p>      </dd>                 <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-delete-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-delete-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_exists()} - Check whether key exists</span></li>     <li class="member"><span class="function">{@link dba_fetch()} - Fetch data specified by key</span></li>     <li class="member"><span class="function">{@link dba_insert()} - Insert entry</span></li>     <li class="member"><span class="function">{@link dba_replace()} - Replace or insert entry</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function dba_delete ($key, $handle) {}

/**
*<div id="function.dba-exists" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_exists</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_exists</span> &mdash; <span class="dc-title">Check whether key exists</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-exists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>dba_exists</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_exists()</strong></span> checks whether the specified    <code class="parameter">key</code> exists in the database.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-exists-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The key the check is performed for.       </p>      </dd>                 <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-exists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if the key exists, <strong><code>FALSE</code></strong> otherwise.   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-exists-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_delete()} - Delete DBA entry specified by key</span></li>     <li class="member"><span class="function">{@link dba_fetch()} - Fetch data specified by key</span></li>     <li class="member"><span class="function">{@link dba_insert()} - Insert entry</span></li>     <li class="member"><span class="function">{@link dba_replace()} - Replace or insert entry</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return bool <b>TRUE</b> if the key exists, <b>FALSE</b> otherwise.*/
function dba_exists ($key, $handle) {}

/**
*<div id="function.dba-fetch" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_fetch</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_fetch</span> &mdash; <span class="dc-title">Fetch data specified by key</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-fetch-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>dba_fetch</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>     <div class="methodsynopsis dc-description">     <span class="type">string</span> <span class="methodname"><strong>dba_fetch</strong></span>      ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>     , <span class="methodparam"><span class="type">int</span> <code class="parameter">$skip</code></span>     , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>     )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_fetch()</strong></span> fetches the data specified by    <code class="parameter">key</code> from the database specified with    <code class="parameter">handle</code>.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-fetch-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The key the data is specified by.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         When working with inifiles this function accepts arrays as keys         where index 0 is the group and index 1 is the value name. See:         <span class="function">{@link dba_key_split()}</span>.        </p>       </p></blockquote>      </dd>                 <dt> <code class="parameter">skip</code></dt>       <dd>        <p class="para">        The number of key-value pairs to ignore when using cdb databases.         This value is ignored for all other databases which do not support        multiple keys with the same name.       </p>      </dd>                 <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-fetch-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the associated string if the key/data pair is found, <strong><code>FALSE</code></strong>     otherwise.   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.dba-fetch-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.0</td>        <td>         The <code class="parameter">skip</code> parameter is available to support          cdb&#039;s capability of multiple keys having the same name.        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-fetch-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_exists()} - Check whether key exists</span></li>     <li class="member"><span class="function">{@link dba_delete()} - Delete DBA entry specified by key</span></li>     <li class="member"><span class="function">{@link dba_insert()} - Insert entry</span></li>     <li class="member"><span class="function">{@link dba_replace()} - Replace or insert entry</span></li>     <li class="member"><span class="function">{@link dba_key_split()} - Splits a key in string representation into array representation</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return string the associated string if the key/data pair is found, <b>FALSE</b>*/
function dba_fetch ($key, $handle) {}

/**
*<div id="function.dba-insert" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_insert</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_insert</span> &mdash; <span class="dc-title">Insert entry</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-insert-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>dba_insert</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_insert()</strong></span> inserts the entry described with    <code class="parameter">key</code> and <code class="parameter">value</code> into the    database.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-insert-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The key of the entry to be inserted. If this key already exist in the         database, this function will fail. Use <span class="function">{@link dba_replace()}</span>        if you need to replace an existent key.       </p>      </dd>                 <dt> <code class="parameter">value</code></dt>       <dd>        <p class="para">        The value to be inserted.       </p>      </dd>                 <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-insert-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-insert-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_exists()} - Check whether key exists</span></li>     <li class="member"><span class="function">{@link dba_delete()} - Delete DBA entry specified by key</span></li>     <li class="member"><span class="function">{@link dba_fetch()} - Fetch data specified by key</span></li>     <li class="member"><span class="function">{@link dba_replace()} - Replace or insert entry</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function dba_insert ($key, $value, $handle) {}

/**
*<div id="function.dba-replace" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_replace</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_replace</span> &mdash; <span class="dc-title">Replace or insert entry</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-replace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>dba_replace</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_replace()</strong></span> replaces or inserts the entry described    with <code class="parameter">key</code> and <code class="parameter">value</code> into the    database specified by <code class="parameter">handle</code>.   </p>   </div>   <div class="refsect1 parameters" id="refsect1-function.dba-replace-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The key of the entry to be replaced.       </p>      </dd>                 <dt> <code class="parameter">value</code></dt>       <dd>        <p class="para">        The value to be replaced.       </p>      </dd>                 <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-replace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-replace-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_exists()} - Check whether key exists</span></li>     <li class="member"><span class="function">{@link dba_delete()} - Delete DBA entry specified by key</span></li>     <li class="member"><span class="function">{@link dba_fetch()} - Fetch data specified by key</span></li>     <li class="member"><span class="function">{@link dba_insert()} - Insert entry</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function dba_replace ($key, $value, $handle) {}

/**
*<div id="function.dba-firstkey" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_firstkey</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_firstkey</span> &mdash; <span class="dc-title">Fetch first key</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-firstkey-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>dba_firstkey</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_firstkey()</strong></span> returns the first key of the database    and resets the internal key pointer. This permits a linear search through    the whole database.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-firstkey-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-firstkey-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the key on success 或者在失败时返回 <strong><code>FALSE</code></strong>.    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-firstkey-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_nextkey()} - Fetch next key</span></li>     <li class="member"><span class="function">{@link dba_key_split()} - Splits a key in string representation into array representation</span></li>     <li class="member">Example 2 in the <a href="http://php.net/manual/zh/dba.examples.php" class="link">DBA examples</a></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return string the key on success or <b>FALSE</b> on failure.*/
function dba_firstkey ($handle) {}

/**
*<div id="function.dba-nextkey" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_nextkey</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_nextkey</span> &mdash; <span class="dc-title">Fetch next key</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-nextkey-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>dba_nextkey</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_nextkey()</strong></span> returns the next key of the database    and advances the internal key pointer.   </p>   </div>   <div class="refsect1 parameters" id="refsect1-function.dba-nextkey-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-nextkey-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the key on success 或者在失败时返回 <strong><code>FALSE</code></strong>.    </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-nextkey-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_firstkey()} - Fetch first key</span></li>     <li class="member"><span class="function">{@link dba_key_split()} - Splits a key in string representation into array representation</span></li>     <li class="member">Example 2 in the <a href="http://php.net/manual/zh/dba.examples.php" class="link">DBA examples</a></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return string the key on success or <b>FALSE</b> on failure.*/
function dba_nextkey ($handle) {}

/**
*<div id="function.dba-optimize" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_optimize</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_optimize</span> &mdash; <span class="dc-title">Optimize database</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-optimize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>dba_optimize</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_optimize()</strong></span> optimizes the underlying database.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-optimize-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-optimize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-optimize-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_sync()} - Synchronize database</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function dba_optimize ($handle) {}

/**
*<div id="function.dba-sync" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_sync</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_sync</span> &mdash; <span class="dc-title">Synchronize database</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-sync-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>dba_sync</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_sync()</strong></span> synchronizes the database. This will probably     trigger a physical write to the disk, if supported.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-sync-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        The database handler, returned by <span class="function">{@link dba_open()}</span> or        <span class="function">{@link dba_popen()}</span>.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-sync-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-sync-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_optimize()} - Optimize database</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function dba_sync ($handle) {}

/**
*<div id="function.dba-handlers" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_handlers</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_handlers</span> &mdash; <span class="dc-title">List all the handlers available</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-handlers-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>dba_handlers</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$full_info</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_handlers()</strong></span> list all the handlers supported by this    extension.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-handlers-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">full_info</code></dt>       <dd>        <p class="para">        Turns on/off full information display in the result.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-handlers-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of database handlers. If <code class="parameter">full_info</code>    is set to <strong><code>TRUE</code></strong>, the array will be associative with the handlers names as    keys, and their version information as value. Otherwise, the result will be    an indexed array of handlers names.     </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     When the internal cdb library is used you will see      <em>cdb</em> and <em>cdb_make</em>.    </p>   </p></blockquote>  </div>   <div class="refsect1 examples" id="refsect1-function.dba-handlers-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="openssl_spki_verify.example.keygen">     <p><strong>Example #1 <span class="function"><strong>dba_handlers()</strong></span> Example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Available&nbsp;DBA&nbsp;handlers:\n"</span><span style="color: #007700">;<br />foreach&nbsp;(</span><span style="color: #9876AA">dba_handlers</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">)&nbsp;as&nbsp;</span><span style="color: #9876AA">$handler_name&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$handler_version</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;clean&nbsp;the&nbsp;versions<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$handler_version&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">str_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'$'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$handler_version</span><span style="color: #007700">);<br />&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"&nbsp;-&nbsp;</span><span style="color: #9876AA">$handler_name</span><span style="color: #DD0000">:&nbsp;</span><span style="color: #9876AA">$handler_version</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Available DBA handlers:  - cdb: 0.75, Revision: 1.3.2.3   - cdb_make: 0.75, Revision: 1.2.2.4   - db2: Sleepycat Software: Berkeley DB 2.7.7: (08/20/99)  - inifile: 1.0, Revision: 1.6.2.3   - flatfile: 1.0, Revision: 1.5.2.4  </pre></div>     </div>    </div>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return array an array of database handlers. If <i>full_info</i>*/
function dba_handlers ($full_info = false) {}

/**
*<div id="function.dba-list" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_list</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_list</span> &mdash; <span class="dc-title">List all open database files</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-list-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>dba_list</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_list()</strong></span> list all open database files.   </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-list-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    An associative array, in the form <em>resourceid =&gt; filename</em>.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return array An associative array, in the form resourceid =&gt; filename.*/
function dba_list () {}

/**
*<div id="function.dba-key-split" class="refentry">  <div class="refnamediv">   <h1 class="refname">dba_key_split</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">dba_key_split</span> &mdash; <span class="dc-title">    Splits a key in string representation into array representation   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.dba-key-split-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>dba_key_split</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$key</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>dba_key_split()</strong></span> splits a key (string representation)    into an array representation.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.dba-key-split-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The key in string representation.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.dba-key-split-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of the form <em>array(0 =&gt; group, 1 =&gt;     value_name)</em>. This function will return <strong><code>FALSE</code></strong> if     <code class="parameter">key</code> is <strong><code>NULL</code></strong> or <strong><code>FALSE</code></strong>.   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.dba-key-split-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link dba_firstkey()} - Fetch first key</span></li>     <li class="member"><span class="function">{@link dba_nextkey()} - Fetch next key</span></li>     <li class="member"><span class="function">{@link dba_fetch()} - Fetch data specified by key</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.dba.php">DBA 函数</a></div></div>
 * @return mixed an array of the form array(0 =&gt; group, 1 =&gt;*/
function dba_key_split ($key) {}

// End of dba v.
