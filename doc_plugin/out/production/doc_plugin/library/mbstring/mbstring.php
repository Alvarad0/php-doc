<?php

// Start of mbstring v.

/**
*<div id="function.mb-convert-case" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_convert_case</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_convert_case</span> &mdash; <span class="dc-title">对字符串进行大小写转换</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.mb-convert-case-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_convert_case</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    对一个 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 进行大小写转换，转换模式由 <code class="parameter">mode</code> 指定。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.mb-convert-case-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要被转换的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        转换的模式。它可以是        <strong><code>MB_CASE_UPPER</code></strong>、         <strong><code>MB_CASE_LOWER</code></strong> 和        <strong><code>MB_CASE_TITLE</code></strong> 的其中一个。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-convert-case-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    按 <code class="parameter">mode</code> 指定的模式转换 <code class="parameter">string</code> 大小写后的版本。   </p>  </div>    <div class="refsect1 unicode" id="refsect1-function.mb-convert-case-unicode">   <h3 class="title">Unicode</h3>   <p class="para">    和类似 <span class="function">{@link strtolower()}</span>、<span class="function">{@link strtoupper()}</span> 的标准大小写转换函数相比，    大小写转换的执行根据 Unicode 字符属性的基础。    因此此函数的行为不受语言环境（locale）设置的影响，能够转换任意具有“字母”属性的字符，例如元音变音A（Ä）。   </p>   <p class="para">    更多关于 Unicode 属性的信息，请查看 <a href="http://www.unicode.org/unicode/reports/tr21/" class="link external">&raquo;&nbsp;http://www.unicode.org/unicode/reports/tr21/</a>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-convert-case-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3168">     <p><strong>Example #1 <span class="function"><strong>mb_convert_case()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"mary&nbsp;had&nbsp;a&nbsp;Little&nbsp;lamb&nbsp;and&nbsp;she&nbsp;loved&nbsp;it&nbsp;so"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">MB_CASE_UPPER</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;输出&nbsp;MARY&nbsp;HAD&nbsp;A&nbsp;LITTLE&nbsp;LAMB&nbsp;AND&nbsp;SHE&nbsp;LOVED&nbsp;IT&nbsp;SO<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">MB_CASE_TITLE</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;输出&nbsp;Mary&nbsp;Had&nbsp;A&nbsp;Little&nbsp;Lamb&nbsp;And&nbsp;She&nbsp;Loved&nbsp;It&nbsp;So<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>    <p class="para">    <div class="example" id="example-3169">     <p><strong>Example #2 非拉丁 UTF-8 文本的<span class="function"><strong>mb_convert_case()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"Τάχιστη&nbsp;αλώπηξ&nbsp;βαφής&nbsp;ψημένη&nbsp;γη,&nbsp;δρασκελίζει&nbsp;υπέρ&nbsp;νωθρού&nbsp;κυνός"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">MB_CASE_UPPER</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;输出&nbsp;ΤΆΧΙΣΤΗ&nbsp;ΑΛΏΠΗΞ&nbsp;ΒΑΦΉΣ&nbsp;ΨΗΜΈΝΗ&nbsp;ΓΗ,&nbsp;ΔΡΑΣΚΕΛΊΖΕΙ&nbsp;ΥΠΈΡ&nbsp;ΝΩΘΡΟΎ&nbsp;ΚΥΝΌΣ<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">MB_CASE_TITLE</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;输出&nbsp;Τάχιστη&nbsp;Αλώπηξ&nbsp;Βαφήσ&nbsp;Ψημένη&nbsp;Γη,&nbsp;Δρασκελίζει&nbsp;Υπέρ&nbsp;Νωθρού&nbsp;Κυνόσ<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-convert-case-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strtolower()} - 使字符串小写</span></li>     <li class="member"><span class="function">{@link mb_strtoupper()} - 使字符串大写</span></li>     <li class="member"><span class="function">{@link strtolower()} - 将字符串转化为小写</span></li>     <li class="member"><span class="function">{@link strtoupper()} - 将字符串转化为大写</span></li>     <li class="member"><span class="function">{@link ucfirst()} - 将字符串的首字母转换为大写</span></li>     <li class="member"><span class="function">{@link ucwords()} - 将字符串中每个单词的首字母转换为大写</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string A case folded version of string converted in the*/
function mb_convert_case ($str, $mode, $encoding = null) {}

/**
*<div id="function.mb-strtoupper" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strtoupper</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strtoupper</span> &mdash; <span class="dc-title">使字符串大写</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-strtoupper-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_strtoupper</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">     将所有的字母字符转化成大写并返回 <code class="parameter">str</code>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strtoupper-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要大写的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strtoupper-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <code class="parameter">str</code> 里所有的字母都转换成大写的。   </p>  </div>    <div class="refsect1 unicode" id="refsect1-function.mb-strtoupper-unicode">   <h3 class="title">Unicode</h3>   <p class="para">    更多 Unicode 属性的信息，请参见 <a href="http://www.unicode.org/unicode/reports/tr21/" class="link external">&raquo;&nbsp;http://www.unicode.org/unicode/reports/tr21/</a>。   </p>   <p class="para">    和 <span class="function">{@link strtoupper()}</span> 不同的是，“字母”是通过 Unicode 字符属性来确定的。    因此这个函数不会受语言环境（locale）设置影响，能够转化任何具有“字母”属性的字符，例如 a 变音符号（ä）。   </p> </div>    <div class="refsect1 examples" id="refsect1-function.mb-strtoupper-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3191">     <p><strong>Example #1 <span class="function"><strong>mb_strtoupper()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"Mary&nbsp;Had&nbsp;A&nbsp;Little&nbsp;Lamb&nbsp;and&nbsp;She&nbsp;LOVED&nbsp;It&nbsp;So"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;Prints&nbsp;MARY&nbsp;HAD&nbsp;A&nbsp;LITTLE&nbsp;LAMB&nbsp;AND&nbsp;SHE&nbsp;LOVED&nbsp;IT&nbsp;SO<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>    <p class="para">    <div class="example" id="example-3192">     <p><strong>Example #2 非拉丁 UTF-8 文本的 <span class="function"><strong>mb_strtoupper()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"Τάχιστη&nbsp;αλώπηξ&nbsp;βαφής&nbsp;ψημένη&nbsp;γη,&nbsp;δρασκελίζει&nbsp;υπέρ&nbsp;νωθρού&nbsp;κυνός"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;打印了&nbsp;ΤΆΧΙΣΤΗ&nbsp;ΑΛΏΠΗΞ&nbsp;ΒΑΦΉΣ&nbsp;ΨΗΜΈΝΗ&nbsp;ΓΗ,&nbsp;ΔΡΑΣΚΕΛΊΖΕΙ&nbsp;ΥΠΈΡ&nbsp;ΝΩΘΡΟΎ&nbsp;ΚΥΝΌΣ<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strtoupper-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strtolower()} - 使字符串小写</span></li>     <li class="member"><span class="function">{@link mb_convert_case()} - 对字符串进行大小写转换</span></li>     <li class="member"><span class="function">{@link strtoupper()} - 将字符串转化为大写</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string str with all alphabetic characters converted to uppercase.*/
function mb_strtoupper ($str, $encoding = null) {}

/**
*<div id="function.mb-strtolower" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strtolower</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strtolower</span> &mdash; <span class="dc-title">使字符串小写</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-strtolower-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_strtolower</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    返回所有字母字符转换成小写的 <code class="parameter">str</code>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strtolower-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要被小写的<span class="type"><span class="type 字符串">字符串</span></span>。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strtolower-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    所有字母字符已被转换成小写的 <code class="parameter">str</code>。   </p>  </div>    <div class="refsect1 unicode" id="refsect1-function.mb-strtolower-unicode">   <h3 class="title">Unicode</h3>   <p class="para">    更多关于 Unicode 属性的信息，请参见 <a href="http://www.unicode.org/unicode/reports/tr21/" class="link external">&raquo;&nbsp;http://www.unicode.org/unicode/reports/tr21/</a>。   </p>   <p class="para">    和 <span class="function">{@link strtolower()}</span> 不同的是，“字母”字符的检测是根据字符的 Unicode 属性。    因此函数的行为不会受语言设置的影响，能偶转换任意具有“字母”属性的字符，例如元音变音 A（Ä）。   </p> </div>    <div class="refsect1 examples" id="refsect1-function.mb-strtolower-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3189">     <p><strong>Example #1 <span class="function"><strong>mb_strtolower()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"Mary&nbsp;Had&nbsp;A&nbsp;Little&nbsp;Lamb&nbsp;and&nbsp;She&nbsp;LOVED&nbsp;It&nbsp;So"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_strtolower</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;输出：&nbsp;mary&nbsp;had&nbsp;a&nbsp;little&nbsp;lamb&nbsp;and&nbsp;she&nbsp;loved&nbsp;it&nbsp;so<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>    <p class="para">    <div class="example" id="example-3190">     <p><strong>Example #2 非拉丁 UTF-8 文本的 <span class="function"><strong>mb_strtolower()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"Τάχιστη&nbsp;αλώπηξ&nbsp;βαφής&nbsp;ψημένη&nbsp;γη,&nbsp;δρασκελίζει&nbsp;υπέρ&nbsp;νωθρού&nbsp;κυνός"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_strtolower</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;输出&nbsp;τάχιστη&nbsp;αλώπηξ&nbsp;βαφής&nbsp;ψημένη&nbsp;γη,&nbsp;δρασκελίζει&nbsp;υπέρ&nbsp;νωθρού&nbsp;κυνός<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strtolower-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strtoupper()} - 使字符串大写</span></li>     <li class="member"><span class="function">{@link mb_convert_case()} - 对字符串进行大小写转换</span></li>     <li class="member"><span class="function">{@link strtolower()} - 将字符串转化为小写</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string str with all alphabetic characters converted to lowercase.*/
function mb_strtolower ($str, $encoding = null) {}

/**
*<div id="function.mb-language" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_language</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_language</span> &mdash; <span class="dc-title">设置/获取当前的语言</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-language-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_language</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$language</code><span class="initializer"> = mb_language()</span></span>   ] )</div>    <p class="para rdfs-comment">    设置/获取当前的语言。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-language-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">language</code></dt>       <dd>        <p class="para">        用于编码邮件信息。有效的语言有：&quot;Japanese&quot;,&quot;ja&quot;,&quot;English&quot;,&quot;en&quot; 和 &quot;uni&quot;（UTF-8）。        <span class="function">{@link mb_send_mail()}</span> 使用了该设置来对邮件进行编码。       </p>       <p class="para">         语言和它的设置，日文是 ISO-2022-JP/Base64，uni 是 UTF-8/Base64，英文是 ISO-8859-1/quoted。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-language-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果设置了 <code class="parameter">language</code>，并且 <code class="parameter">language</code> 是有效的，它将返回 <strong><code>TRUE</code></strong>。否则将返回 <strong><code>FALSE</code></strong>。    当省略了 <code class="parameter">language</code> 参数，它将返回语言名称的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。如果之前没有设置过语言，则将返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-language-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_send_mail()} - 发送编码过的邮件</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool|string If language is set and*/
function mb_language ($language = null) {}

/**
*<div id="function.mb-internal-encoding" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_internal_encoding</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_internal_encoding</span> &mdash; <span class="dc-title">设置/获取内部字符编码</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-internal-encoding-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_internal_encoding</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    设置/获取内部字符编码   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-internal-encoding-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        <code class="parameter">encoding</code> 字符编码名称使用于 HTTP 输入字符编码转换、HTTP 输出字符编码转换、mbstring 模块系列函数字符编码转换的默认编码。        You should notice that the internal encoding is totally different from the one for multibyte regex.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-internal-encoding-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果设置了 <code class="parameter">encoding</code>，则成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。    In this case, the character encoding for multibyte regex is NOT changed.    如果省略了 <code class="parameter">encoding</code>，则返回当前的字符编码名称。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.mb-internal-encoding-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3184">     <p><strong>Example #1 <span class="function"><strong>mb_internal_encoding()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;设置内部字符编码为&nbsp;UTF-8&nbsp;<br /></span><span style="color: #9876AA">mb_internal_encoding</span><span style="color: #007700">(</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;显示当前的内部字符编码<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">mb_internal_encoding</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>       <div class="refsect1 seealso" id="refsect1-function.mb-internal-encoding-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_http_input()} - 检测 HTTP 输入字符编码</span></li>     <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>     <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool|string If encoding is set, then*/
function mb_internal_encoding ($encoding = null) {}

/**
*<div id="function.mb-http-input" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_http_input</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_http_input</span> &mdash; <span class="dc-title">检测 HTTP 输入字符编码</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-http-input-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_http_input</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code><span class="initializer"> = &quot;&quot;</span></span>   ] )</div>    <p class="simpara">    检测 HTTP 输入字符的编码。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.mb-http-input-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">type</code></dt>       <dd>        <p class="para">        设置的字符串指定了输入类型。        &quot;G&quot; 是 GET，&quot;P&quot; 是 POST，&quot;C&quot; 是 COOKIE，&quot;S&quot; 是 string，&quot;L&quot; 是 list，以及 &quot;I&quot; 是整个列表（将会返回 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>）。        如果省略了 type，它将返回最后处理的一种输入类型。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-http-input-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    每个 <code class="parameter">type</code> 的字符编码名称。    如果 <span class="function"><strong>mb_http_input()</strong></span> 没有处理过任何指定的 HTTP 输入，它将返回 <strong><code>FALSE</code></strong>。    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-http-input-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>     <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>     <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return false|string The character encoding name, as per the type.*/
function mb_http_input ($type = null) {}

/**
*<div id="function.mb-http-output" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_http_output</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_http_output</span> &mdash; <span class="dc-title">设置/获取 HTTP 输出字符编码</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-http-output-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_http_output</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_http_output()</span></span>   ] )</div>    <p class="para rdfs-comment">    设置/获取 HTTP 输出字符编码。此函数被调用之后输出的内容会被转换成 <code class="parameter">encoding</code>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-http-output-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        如果设置了 <code class="parameter">encoding</code>，<span class="function"><strong>mb_http_output()</strong></span> 设置 HTTP 输出字符编码为 <code class="parameter">encoding</code>。       </p>       <p class="para">        如果省略了 <code class="parameter">encoding</code>，<span class="function"><strong>mb_http_output()</strong></span> 返回当前的 HTTP 输出字符编码。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-http-output-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果省略了 <code class="parameter">encoding</code>，<span class="function"><strong>mb_http_output()</strong></span> 返回当前的 HTTP 输出字符编码。    否则成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-http-output-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>     <li class="member"><span class="function">{@link mb_http_input()} - 检测 HTTP 输入字符编码</span></li>     <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool|string If encoding is omitted,*/
function mb_http_output ($encoding = null) {}

/**
*<div id="function.mb-detect-order" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_detect_order</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_detect_order</span> &mdash; <span class="dc-title">设置/获取 字符编码的检测顺序</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-detect-order-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_detect_order</strong></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$encoding_list</code><span class="initializer"> = mb_detect_order()</span></span>   ] )</div>    <p class="para rdfs-comment">    为编码列表 <code class="parameter">encoding_list</code> 设置自动检测字符编码的顺序。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-detect-order-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">encoding_list</code></dt>       <dd>        <p class="para">        <code class="parameter">encoding_list</code> 是一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 或者逗号分隔的字符编码列表。        参见<a href="http://php.net/manual/zh/mbstring.supported-encodings.php" class="link">支持的编码</a>。       </p>       <p class="para">        如果省略了 <code class="parameter">encoding_list</code> 参数，它将返回当前字符编码检测顺序的数组。       </p>       <p class="para">        该设置会影响 <span class="function">{@link mb_detect_encoding()}</span> 和 <span class="function">{@link mb_send_mail()}</span>。       </p>       <p class="para">        <em>mbstring</em> 当前实现了以下编码检测筛选器。        如有以下编码列表的无效字节序列，编码的检测将会失败。       </p>       <span class="simpara">        <em>UTF-8</em>, <em>UTF-7</em>,        <em>ASCII</em>,        <em>EUC-JP</em>,<em>SJIS</em>,        <em>eucJP-win</em>, <em>SJIS-win</em>,        <em>JIS</em>, <em>ISO-2022-JP</em>        </span>       <p class="para">        对于 <em>ISO-8859-*</em>，<em>mbstring</em>        总是检测为 <em>ISO-8859-*</em>。       </p>       <p class="para">        对于 <em>UTF-16</em>、<em>UTF-32</em>、        <em>UCS2</em> 和 <em>UCS4</em>，编码检测总是会失败。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-detect-order-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    设置编码检测顺序时候，成功时返回 <strong><code>TRUE</code></strong>，识别时候返回  <strong><code>FALSE</code></strong>。   </p>   <p class="para">    在获取编码检测顺序的时候，会返回排序过的编码数组。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-detect-order-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3176">     <p><strong>Example #1 <span class="function"><strong>mb_detect_order()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;为检测顺序设置枚举列表&nbsp;<br /></span><span style="color: #9876AA">mb_detect_order</span><span style="color: #007700">(</span><span style="color: #DD0000">"eucjp-win,sjis-win,UTF-8"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;通过数组设置检测顺序&nbsp;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #DD0000">"ASCII"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #DD0000">"JIS"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #DD0000">"EUC-JP"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">mb_detect_order</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;显示当前的检测顺序&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">",&nbsp;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">mb_detect_order</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>       <p class="para">        <div class="example" id="example-3177">         <p><strong>Example #2 案例展示了无效的检测顺序</strong></p>         <div class="example-contents"> <div class="cdata"><pre> ; 总是检测为 ISO-8859-1 detect_order = ISO-8859-1, UTF-8  ; 总是检测为 UTF-8，由于 ASCII/UTF-7 的值对  UTF-8 是有效的 detect_order = UTF-8, ASCII, UTF-7 </pre></div>         </div>         </div>       </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-detect-order-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>     <li class="member"><span class="function">{@link mb_http_input()} - 检测 HTTP 输入字符编码</span></li>     <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>     <li class="member"><span class="function">{@link mb_send_mail()} - 发送编码过的邮件</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool|string[] When setting the encoding detection order,*/
function mb_detect_order ($encoding_list = null) {}

/**
*<div id="function.mb-substitute-character" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_substitute_character</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_substitute_character</span> &mdash; <span class="dc-title">设置/获取替代字符</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.mb-substitute-character-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_substitute_character</strong></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$substchar</code><span class="initializer"> = mb_substitute_character()</span></span>   ] )</div>    <p class="para rdfs-comment">    当输入字符的编码是无效的，或者字符代码不存在于输出的字符编码中时，可以为其指定一个替代字符。    无效字符可以被替换为 <strong><code>NULL</code></strong>（不输出）、<span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 或者 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span> 值（Unicode 字符代码的值）。   </p>   <p class="para">    该设置会影响 <span class="function">{@link mb_convert_encoding()}</span>、    <span class="function">{@link mb_convert_variables()}</span>、    <span class="function">{@link mb_output_handler()}</span>    和 <span class="function">{@link mb_send_mail()}</span>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-substitute-character-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">substchar</code></dt>       <dd>        <p class="para">        指定 Unicode 值为一个 <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type integer">integer</a></span>，或者是以下<span class="type"><span class="type 字符串">字符串</span></span>中的一个：        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">           <em>&quot;none&quot;</em>:：不输出          </span>         </li>         <li class="listitem">          <span class="simpara">           <em>&quot;long&quot;</em>：输出字符代码的值（比如：<em>U+3000</em>、<em>JIS+7E7E</em>）          </span>         </li>         <li class="listitem">          <span class="simpara">           <em>&quot;entity&quot;</em>：输出字符的实体（比如：<em>&amp;#x200;</em>）          </span>         </li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-substitute-character-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果设置了 <code class="parameter">substchar</code>，在成功时返回 <strong><code>TRUE</code></strong>，失败时返回 <strong><code>FALSE</code></strong>。    如果没有设置 <code class="parameter">substchar</code>，它将返回当前设置。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-substitute-character-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3193">     <p><strong>Example #1 <span class="function"><strong>mb_substitute_character()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;设置为&nbsp;Unicode&nbsp;U+3013&nbsp;(GETA&nbsp;MARK)&nbsp;<br /></span><span style="color: #9876AA">mb_substitute_character</span><span style="color: #007700">(</span><span style="color: #9876AA">0x3013</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;设置十六进制格式&nbsp;<br /></span><span style="color: #9876AA">mb_substitute_character</span><span style="color: #007700">(</span><span style="color: #DD0000">"long"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;显示当前设置&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">mb_substitute_character</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool|int|string If substchar is set, it returns true for success,*/
function mb_substitute_character ($substrchar = null) {}

/**
*<div id="function.mb-parse-str" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_parse_str</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_parse_str</span> &mdash; <span class="dc-title">解析 GET/POST/COOKIE 数据并设置全局变量</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-parse-str-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>mb_parse_str</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoded_string</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span>   ] )</div>    <p class="para rdfs-comment">    解析 GET/POST/COOKIE 数据并设置全局变量。    由于 PHP 不提供原始 POST/COOKIE 数据，目前它仅能够用于 GET 数据。    它解析了 URL 编码过的数据，检测其编码，并转换编码为内部编码，然后设置其值为 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 的 <code class="parameter">result</code> 或者全局变量。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-parse-str-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">encoded_string</code></dt>       <dd>        <p class="para">        URL 编码过的数据。       </p>      </dd>                 <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>，包含解码过的、编码转换后的值。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-parse-str-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.mb-parse-str-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function mb_parse_str ($encoded_string, array &$result = null) {}

/**
*<div id="function.mb-output-handler" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_output_handler</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_output_handler</span> &mdash; <span class="dc-title">在输出缓冲中转换字符编码的回调函数</span></p>    </div>      <div class="refsect1 description" id="refsect1-function.mb-output-handler-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_output_handler</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_output_handler()</strong></span> 是一个    <span class="function">{@link ob_start()}</span> 回调函数。     <span class="function"><strong>mb_output_handler()</strong></span> 将输出缓冲中的字符从内部字符编码转换为 HTTP 输出的字符编码。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-output-handler-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">contents</code></dt>       <dd>        <p class="para">        输出缓冲的内容。       </p>      </dd>                 <dt> <code class="parameter">status</code></dt>       <dd>        <p class="para">        输出缓冲的状态。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-output-handler-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    转换后的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-output-handler-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.1.0</td>        <td>         <p class="para">          当遇到以下条件的时候，该函数将添加 HTTP 字符编码头：         </p>         <p class="para">          <ul class="itemizedlist">           <li class="listitem">            <span class="simpara">             未使用 <span class="function">{@link header()}</span> 设置 <em>Content-Type</em>。            </span>           </li>           <li class="listitem">            <span class="simpara">             默认 MIME 类型以 <em>text/</em> 开始。            </span>           </li>           <li class="listitem">            <span class="simpara">             <a href="http://php.net/manual/zh/mbstring.configuration.php#ini.mbstring.http-input" class="link">mbstring.http_input</a> 是除 <em>pass</em> 外的任意设置。            </span>           </li>          </ul>         </p>        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-output-handler-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3186">     <p><strong>Example #1 <span class="function"><strong>mb_output_handler()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />mb_http_output</span><span style="color: #007700">(</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ob_start</span><span style="color: #007700">(</span><span style="color: #DD0000">"mb_output_handler"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-output-handler-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     如果你想要输出二进制数据，比如图片，必须在任何二进制数据发送到客户端之前使用 <span class="function">{@link header()}</span> 来设置 Content-Type: 头。（例如 header(&quot;Content-Type: image/png&quot;)）。     如果 Content-Type: 头已发送，输出字符编码的转换将不会执行。    </p>    <p class="para">     注意，如果发送了 &#039;Content-Type: text//&#039;，则内容被认为是文本，将发生转换。    </p>   </p></blockquote>  </div>     <div class="refsect1 seealso" id="refsect1-function.mb-output-handler-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link ob_start()} - 打开输出控制缓冲</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The converted string.*/
function mb_output_handler ($contents, $status) {}

/**
*<div id="function.mb-preferred-mime-name" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_preferred_mime_name</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_preferred_mime_name</span> &mdash; <span class="dc-title">获取 MIME 字符串</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-preferred-mime-name-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_preferred_mime_name</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span>    )</div>    <p class="para rdfs-comment">    获取指定编码的 MIME 字符 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-preferred-mime-name-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        要检查的字符串。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-preferred-mime-name-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    字符编码 <code class="parameter">encoding</code> 的 MIME <em>charset</em> <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.mb-preferred-mime-name-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3187">     <p><strong>Example #1 <span class="function"><strong>mb_preferred_mime_name()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$outputenc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"sjis-win"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">mb_http_output</span><span style="color: #007700">(</span><span style="color: #9876AA">$outputenc</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ob_start</span><span style="color: #007700">(</span><span style="color: #DD0000">"mb_output_handler"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type:&nbsp;text/html;&nbsp;charset="&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">mb_preferred_mime_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$outputenc</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The MIME charset string for character encoding*/
function mb_preferred_mime_name ($encoding) {}

/**
*<div id="function.mb-strlen" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strlen</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strlen</span> &mdash; <span class="dc-title">获取字符串的长度</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-strlen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_strlen</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    获取一个 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 的长度。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strlen-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要检查长度的<span class="type"><span class="type 字符串">字符串</span></span>。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strlen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回具有 <code class="parameter">encoding</code> 编码的<span class="type"><span class="type 字符串">字符串</span></span> <code class="parameter">str</code> 包含的字符数。    多字节的字符被计为 1。   </p>   <p class="para">    如果给定的 <code class="parameter">encoding</code> 无效则返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strlen-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>     <li class="member"><span class="function">{@link grapheme_strlen()} - Get string length in grapheme units</span></li>     <li class="member"><span class="function">{@link iconv_strlen()} - 返回字符串的字符数统计</span></li>     <li class="member"><span class="function">{@link strlen()} - 获取字符串长度</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int the number of characters in*/
function mb_strlen ($str, $encoding = null) {}

/**
*<div id="function.mb-strpos" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strpos</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strpos</span> &mdash; <span class="dc-title">查找字符串在另一个字符串中首次出现的位置</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-strpos-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_strpos</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer"> = 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    查找 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 在一个 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 中首次出现的位置。   </p>   <p class="para">    基于字符数执行一个多字节安全的 <span class="function">{@link strpos()}</span> 操作。    第一个字符的位置是 0，第二个字符的位置是 1，以此类推。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strpos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        要被检查的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        在 <code class="parameter">haystack</code> 中查找这个字符串。        和 <span class="function">{@link strpos()}</span> 不同的是，数字的值不会被当做字符的顺序值。       </p>      </dd>                 <dt> <code class="parameter">offset</code></dt>       <dd>        <p class="para">        搜索位置的偏移。如果没有提供该参数，将会使用 0。负数的 offset 会从字符串尾部开始统计。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strpos-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 的 <code class="parameter">haystack</code> 中 <code class="parameter">needle</code> 首次出现位置的数值。    如果没有找到 <code class="parameter">needle</code>，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>      <div class="refsect1 changelog" id="refsect1-function.mb-strpos-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        支持负数的 <code class="parameter">offset</code>。       </td>      </tr>      </tbody>       </table>   </div>     <div class="refsect1 seealso" id="refsect1-function.mb-strpos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>     <li class="member"><span class="function">{@link strpos()} - 查找字符串首次出现的位置</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int|false the numeric position of*/
function mb_strpos ($haystack, $needle, $offset = 0, $encoding = null) {}

/**
*<div id="function.mb-strrpos" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strrpos</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strrpos</span> &mdash; <span class="dc-title">查找字符串在一个字符串中最后出现的位置</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.mb-strrpos-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_strrpos</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    基于字符数执行一个多字节安全的 <span class="function">{@link strrpos()}</span> 操作。    <code class="parameter">needle</code> 的位置是从 <code class="parameter">haystack</code> 的开始进行统计的。    第一个字符的位置是 0，第二个字符的位置是 1。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strrpos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        查找 <code class="parameter">needle</code> 在这个 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 中最后出现的位置。       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">         在 <code class="parameter">haystack</code> 中查找这个 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">offset</code></dt>       <dd>        <span class="simpara">        可以用于指定 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 里从任意字符数开始进行搜索。        负数的值将导致搜索会终止于指向 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 末尾的任意点。       </span>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strrpos-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 的 <code class="parameter">haystack</code> 中，<code class="parameter">needle</code> 最后出现位置的数值。    如果没有找到 <code class="parameter">needle</code>，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-strrpos-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.2.0</td>        <td>增加了可选参数 <code class="parameter">offset</code>。</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-strrpos-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     从 PHP 5.2.0 开始，<code class="parameter">encoding</code> 参数从第三个位置移到了第四个位置。     为实现向后兼容，可以将第三个参数指定为 <code class="parameter">encoding</code>，但不建议这么做，在将来会移除这个特性。    </span>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strrpos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strpos()} - 查找字符串在另一个字符串中首次出现的位置</span></li>     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>     <li class="member"><span class="function">{@link strrpos()} - 计算指定字符串在目标字符串中最后一次出现的位置</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int|false the numeric position of*/
function mb_strrpos ($haystack, $needle, $offset = 0, $encoding = null) {}

/**
*<div id="function.mb-stripos" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_stripos</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">mb_stripos</span> &mdash; <span class="dc-title">大小写不敏感地查找字符串在另一个字符串中首次出现的位置</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.mb-stripos-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_stripos</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_stripos()</strong></span> 返回 <code class="parameter">needle</code> 在字符串 <code class="parameter">haystack</code> 中首次出现位置的数值。    和 <span class="function">{@link mb_strpos()}</span> 不同的是，<span class="function"><strong>mb_stripos()</strong></span> 是大小写不敏感的。    如果 <code class="parameter">needle</code> 没找到，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.mb-stripos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        在这个字符串中查找获取 <code class="parameter">needle</code> 首次出现的位置       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        在 <code class="parameter">haystack</code> 中查找这个字符串       </p>      </dd>                 <dt> <code class="parameter">offset</code></dt>       <dd>        <p class="para">        <code class="parameter">haystack</code> 里开始搜索的位置。如果是负数，就从字符串的尾部开始统计。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        使用的字符编码名称。        如果省略了它，将使用内部字符编码。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.mb-stripos-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回字符串 <code class="parameter">haystack</code> 中 <code class="parameter">needle</code> 首次出现位置的数值。    如果没有找到 <code class="parameter">needle</code>，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-stripos-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        支持 <code class="parameter">offset</code> 使用负数。       </td>      </tr>      </tbody>       </table>   </div>        <div class="refsect1 seealso" id="refsect1-function.mb-stripos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link stripos()} - 查找字符串首次出现的位置（不区分大小写）</span></li>     <li class="member"><span class="function">{@link strpos()} - 查找字符串首次出现的位置</span></li>     <li class="member"><span class="function">{@link mb_strpos()} - 查找字符串在另一个字符串中首次出现的位置</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int|false Return the numeric position of the first occurrence of*/
function mb_stripos ($haystack, $needle, $offset = 0, $encoding = null) {}

/**
*<div id="function.mb-strripos" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strripos</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strripos</span> &mdash; <span class="dc-title">大小写不敏感地在字符串中查找一个字符串最后出现的位置</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.mb-strripos-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_strripos</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_strripos()</strong></span> 基于字符数执行一个多字节安全的 <span class="function">{@link strripos()}</span> 操作。    <code class="parameter">needle</code> 的位置是从 <code class="parameter">haystack</code> 的开始进行统计的。    第一个字符的位置是 0，第二个字符的位置是 1。    和 <span class="function">{@link mb_strrpos()}</span> 不同的是，<span class="function"><strong>mb_strripos()</strong></span> 是大小写不敏感的。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.mb-strripos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        查找 <code class="parameter">needle</code> 在这个字符串中最后出现的位置。       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        在 <code class="parameter">haystack</code> 中查找这个字符串。       </p>      </dd>                 <dt> <code class="parameter">offset</code></dt>       <dd>        <p class="para">        在 <code class="parameter">haystack</code> 中开始搜索的位置。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        使用的字符编码名称。如果省略了，则将使用内部编码。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.mb-strripos-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回字符串 <code class="parameter">haystack</code> 中 <code class="parameter">needle</code> 最后出现位置的数值。    如果没有找到 <code class="parameter">needle</code>，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>               <div class="refsect1 seealso" id="refsect1-function.mb-strripos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link strripos()} - 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）</span></li>     <li class="member"><span class="function">{@link strrpos()} - 计算指定字符串在目标字符串中最后一次出现的位置</span></li>     <li class="member"><span class="function">{@link mb_strrpos()} - 查找字符串在一个字符串中最后出现的位置</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int|false Return the numeric position of*/
function mb_strripos ($haystack, $needle, $offset = 0, $encoding = null) {}

/**
*<div id="function.mb-strstr" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strstr</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strstr</span> &mdash; <span class="dc-title">查找字符串在另一个字符串里的首次出现</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.mb-strstr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_strstr</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_strstr()</strong></span> 查找了 <code class="parameter">needle</code> 在 <code class="parameter">haystack</code> 中首次的出现并返回 <code class="parameter">haystack</code> 的一部分。    如果 <code class="parameter">needle</code> 没有找到，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.mb-strstr-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        要获取 <code class="parameter">needle</code> 首次出现的字符串。       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        在 <code class="parameter">haystack</code> 中查找这个字符串。       </p>      </dd>                 <dt> <code class="parameter">before_needle</code></dt>       <dd>        <p class="para">        决定这个函数返回 <code class="parameter">haystack</code> 的哪一部分。        如果设置为 <strong><code>TRUE</code></strong>，它返回 <code class="parameter">haystack</code> 中从开始到 <code class="parameter">needle</code> 出现位置的所有字符（不包括 needle）。        如果设置为 <strong><code>FALSE</code></strong>，它返回 <code class="parameter">haystack</code> 中 <code class="parameter">needle</code> 出现位置到最后的所有字符（包括了 needle）。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        要使用的字符编码名称。        如果省略该参数，将使用内部字符编码。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.mb-strstr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">haystack</code> 的一部分，或者 <code class="parameter">needle</code> 没找到则返回 <strong><code>FALSE</code></strong>。   </p>  </div>               <div class="refsect1 seealso" id="refsect1-function.mb-strstr-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>     <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>     <li class="member"><span class="function">{@link mb_stristr()} - 大小写不敏感地查找字符串在另一个字符串里的首次出现</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false the portion of haystack,*/
function mb_strstr ($haystack, $needle, $part = null, $encoding = null) {}

/**
*<div id="function.mb-strrchr" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strrchr</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strrchr</span> &mdash; <span class="dc-title">查找指定字符在另一个字符串中最后一次的出现</span></p>   </div> <div class="refsect1 description" id="refsect1-function.mb-strrchr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_strrchr</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$part</code><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_strrchr()</strong></span> 查找了 <code class="parameter">needle</code> 在 <code class="parameter">haystack</code> 中最后一次出现的位置，并返回 <code class="parameter">haystack</code> 的部分。    如果没有找到 <code class="parameter">needle</code>，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.mb-strrchr-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        在该字符串中查找 <code class="parameter">needle</code> 最后出现的位置       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        在 <code class="parameter">haystack</code> 中查找这个字符串       </p>      </dd>                 <dt> <code class="parameter">part</code></dt>       <dd>        <p class="para">        决定这个函数返回 <code class="parameter">haystack</code> 的哪一部分。        如果设置为 <strong><code>TRUE</code></strong>，它将返回的字符是从 <code class="parameter">haystack</code> 的开始到 <code class="parameter">needle</code> 最后出现的位置。         如果设置为 <strong><code>FALSE</code></strong>，它将返回的字符是从 <code class="parameter">needle</code> 最后出现的位置到 <code class="parameter">haystack</code> 的末尾。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        使用的字符编码名称。如果省略了，则将使用内部编码。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.mb-strrchr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">haystack</code> 的一部分。    或者在没有找到 <code class="parameter">needle</code> 时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strrchr-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link strrchr()} - 查找指定字符在字符串中的最后一次出现</span></li>     <li class="member"><span class="function">{@link mb_strstr()} - 查找字符串在另一个字符串里的首次出现</span></li>     <li class="member"><span class="function">{@link mb_strrichr()} - 大小写不敏感地查找指定字符在另一个字符串中最后一次的出现</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false the portion of haystack.*/
function mb_strrchr ($haystack, $needle, $part = null, $encoding = null) {}

/**
*<div id="function.mb-stristr" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_stristr</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">mb_stristr</span> &mdash; <span class="dc-title">大小写不敏感地查找字符串在另一个字符串里的首次出现</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.mb-stristr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_stristr</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function">{@link mb_strstr()}</span> 查找了 <code class="parameter">needle</code> 在 <code class="parameter">haystack</code> 中首次的出现并返回 <code class="parameter">haystack</code> 的一部分。    和 <span class="function">{@link mb_strstr()}</span> 不同的是，<span class="function"><strong>mb_stristr()</strong></span> 是大小写不敏感的。    如果 <code class="parameter">needle</code> 没有找到，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.mb-stristr-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        要获取 <code class="parameter">needle</code> 首次出现的字符串。       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        在 <code class="parameter">haystack</code> 中查找这个字符串。       </p>      </dd>                 <dt> <code class="parameter">before_needle</code></dt>       <dd>        <p class="para">        决定这个函数返回 <code class="parameter">haystack</code> 的哪一部分。        如果设置为 <strong><code>TRUE</code></strong>，它返回 <code class="parameter">haystack</code> 中从开始到 <code class="parameter">needle</code> 出现位置的所有字符（不包括 needle）。        如果设置为 <strong><code>FALSE</code></strong>，它返回 <code class="parameter">haystack</code> 中 <code class="parameter">needle</code> 出现位置到最后的所有字符（包括了 needle）。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        要使用的字符编码名称。        如果省略该参数，将使用内部字符编码。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.mb-stristr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">haystack</code> 的一部分，或者 <code class="parameter">needle</code> 没找到则返回 <strong><code>FALSE</code></strong>。   </p>  </div>               <div class="refsect1 seealso" id="refsect1-function.mb-stristr-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>     <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>     <li class="member"><span class="function">{@link mb_strstr()} - 查找字符串在另一个字符串里的首次出现</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false the portion of haystack,*/
function mb_stristr ($haystack, $needle, $part = null, $encoding = null) {}

/**
*<div id="function.mb-strrichr" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strrichr</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strrichr</span> &mdash; <span class="dc-title">大小写不敏感地查找指定字符在另一个字符串中最后一次的出现</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.mb-strrichr-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_strrichr</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$part</code><span class="initializer"> = false</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_strrichr()</strong></span> 大小写不敏感地查找指定 <code class="parameter">needle</code> 在 <code class="parameter">haystack</code> 中最后一次的出现，并返回 <code class="parameter">haystack</code> 的一部分。    和 <span class="function">{@link mb_strrchr()}</span> 不同的是，<span class="function"><strong>mb_strrichr()</strong></span> 是大小写不敏感的。    如果 <code class="parameter">needle</code> 没有找到，它将返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.mb-strrichr-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        在该字符串中查找 <code class="parameter">needle</code> 的最后出现位置       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        在 <code class="parameter">needle</code> 中查找该字符串       </p>      </dd>                 <dt> <code class="parameter">part</code></dt>       <dd>        <p class="para">        决定这个函数返回 <code class="parameter">haystack</code> 的哪一部分。        如果设置为 <strong><code>TRUE</code></strong>，它将返回的字符是从 <code class="parameter">haystack</code> 的开始到 <code class="parameter">needle</code> 最后出现的位置。         如果设置为 <strong><code>FALSE</code></strong>，它将返回的字符是从 <code class="parameter">needle</code> 最后出现的位置到 <code class="parameter">haystack</code> 的末尾。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        使用的字符编码名称。如果省略了，则将使用内部编码。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.mb-strrichr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">haystack</code> 的一部分。    或者在没有找到 <code class="parameter">needle</code> 时返回 <strong><code>FALSE</code></strong>。   </p>  </div>                <div class="refsect1 seealso" id="refsect1-function.mb-strrichr-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_stristr()} - 大小写不敏感地查找字符串在另一个字符串里的首次出现</span></li>     <li class="member"><span class="function">{@link mb_strrchr()} - 查找指定字符在另一个字符串中最后一次的出现</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false the portion of haystack.*/
function mb_strrichr ($haystack, $needle, $part = null, $encoding = null) {}

/**
*<div id="function.mb-substr-count" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_substr_count</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_substr_count</span> &mdash; <span class="dc-title">统计字符串出现的次数</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-substr-count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_substr_count</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    统计子字符串 <code class="parameter">needle</code> 出现在<span class="type"><span class="type 字符串">字符串</span></span> <code class="parameter">haystack</code> 中的次数。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-substr-count-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        要检查的<span class="type"><span class="type 字符串">字符串</span></span>。       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        待查找的<span class="type"><span class="type 字符串">字符串</span></span>。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-substr-count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    子字符串 <code class="parameter">needle</code> 出现在<span class="type"><span class="type 字符串">字符串</span></span> <code class="parameter">haystack</code> 中的次数。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-substr-count-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3194">     <p><strong>Example #1 <span class="function"><strong>mb_substr_count()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">mb_substr_count</span><span style="color: #007700">(</span><span style="color: #DD0000">"This&nbsp;is&nbsp;a&nbsp;test"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"is"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;输出&nbsp;2<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-substr-count-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strpos()} - 查找字符串在另一个字符串中首次出现的位置</span></li>     <li class="member"><span class="function">{@link mb_substr()} - 获取部分字符串</span></li>     <li class="member"><span class="function">{@link substr_count()} - 计算字串出现的次数</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int The number of times the*/
function mb_substr_count ($haystack, $needle, $encoding = null) {}

/**
*<div id="function.mb-substr" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_substr</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_substr</span> &mdash; <span class="dc-title">获取部分字符串</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-substr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_substr</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer"> = NULL</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    根据字符数执行一个多字节安全的 <span class="function">{@link substr()}</span> 操作。    位置是从 <code class="parameter">str</code> 的开始位置进行计数。    第一个字符的位置是 0。第二个字符的位置是 1，以此类推。    </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-substr-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        从该 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 中提取子字符串。       </p>      </dd>                 <dt> <code class="parameter">start</code></dt>       <dd>        <p class="para">         如果 <code class="parameter">start</code> 不是负数，返回的字符串会从 <code class="parameter">str</code> 第 <code class="parameter">start</code> 的位置开始，从 0 开始计数。举个例子，字符串 &#039;<em>abcdef</em>&#039;，位置 <em>0</em> 的字符是 &#039;<em>a</em>&#039;，位置 <em>2</em> 的字符是        &#039;<em>c</em>&#039;，以此类推。       </p>       <p class="para">        如果 <code class="parameter">start</code> 是负数，返回的字符串是从 <code class="parameter">str</code> 末尾处第 <code class="parameter">start</code> 个字符开始的。       </p>      </dd>                 <dt> <code class="parameter">length</code></dt>       <dd>        <p class="para">        <code class="parameter">str</code> 中要使用的最大字符数。如果省略了此参数或者传入了 <em>NULL</em>，则会提取到字符串的尾部。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-substr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong>mb_substr()</strong></span> 函数根据 <code class="parameter">start</code> 和 <code class="parameter">length</code> 参数返回 <code class="parameter">str</code> 中指定的部分。   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.mb-substr-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.8</td>        <td>         <code class="parameter">length</code> 传入 <em>NULL</em>，则从 start 提取到字符串的结尾处。         在之前的版本里，         <em>NULL</em> 会被当作 <em>0</em> 来处理。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-substr-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strcut()} - 获取字符的一部分</span></li>     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string mb_substr returns the portion of*/
function mb_substr ($str, $start, $length = null, $encoding = null) {}

/**
*<div id="function.mb-strcut" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strcut</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strcut</span> &mdash; <span class="dc-title">获取字符的一部分</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.mb-strcut-description">   <h3 class="title">说明</h3> <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_strcut</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer"> = NULL</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_strcut()</strong></span> 和 <span class="function">{@link mb_substr()}</span> 类似，都是从字符串中提取子字符串，但是按字节数来执行，而不是字符个数。    如果截断位置位于多字节字符两个字节的中间，将于该字符的第一个字节开始执行。    这也是和 <span class="function">{@link substr()}</span> 函数的不同之处，后者简单地将字符串在字节之间截断，这将导致一个畸形的字节序列。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strcut-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要截断的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">start</code></dt>       <dd>        <p class="para">         如果 <code class="parameter">start</code> 不是负数，返回的字符串会从 <code class="parameter">str</code> 的第 <code class="parameter">start</code> <em class="emphasis">字节</em>位置开始，从 0 开始计数。举个例子，字符串 &#039;<em>abcdef</em>&#039;，字节位置 <em>0</em> 的字符是 &#039;<em>a</em>&#039;，字节位置 <em>2</em> 的字符是        &#039;<em>c</em>&#039;，以此类推。       </p>       <p class="para">        如果 <code class="parameter">start</code> 是负数，返回的字符串是从 <code class="parameter">str</code> 末尾处第 <code class="parameter">start</code> 个字节开始的。       </p>      </dd>                 <dt> <code class="parameter">length</code></dt>       <dd>        <p class="para">        <em class="emphasis">字节</em>长度。If omitted or <em>NULL</em>        is passed, extract all bytes to the end of the string.       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strcut-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong>mb_strcut()</strong></span> 根据 <code class="parameter">start</code> 和 <code class="parameter">length</code> 参数返回 <code class="parameter">str</code> 的一部分。   </p>  </div>       <div class="refsect1 changelog" id="refsect1-function.mb-strcut-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.8</td>        <td>         Passing <em>NULL</em> as <code class="parameter">length</code>         extracts all bytes to the end of the string. Prior to this version         <em>NULL</em> was treated the same as <em>0</em>.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strcut-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_substr()} - 获取部分字符串</span></li>     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string mb_strcut returns the portion of*/
function mb_strcut ($str, $start, $length = null, $encoding = null) {}

/**
*<div id="function.mb-strwidth" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strwidth</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strwidth</span> &mdash; <span class="dc-title">返回字符串的宽度</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-strwidth-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_strwidth</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    返回 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 类型 <code class="parameter">str</code> 的宽度。   </p>   <p class="para">    多字节字符通常是单字节字符的两倍宽度。   </p>   <p class="para">    <table class="doctable table">     <caption><strong>字符宽度</strong></caption>           <thead>       <tr>        <th>字符</th>        <th>宽度</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>U+0000 - U+0019</td>        <td>0</td>       </tr>        <tr>        <td>U+0020 - U+1FFF</td>        <td>1</td>       </tr>        <tr>        <td>U+2000 - U+FF60</td>        <td>2</td>       </tr>        <tr>        <td>U+FF61 - U+FF9F</td>        <td>1</td>       </tr>        <tr>        <td>U+FFA0 -      </td>        <td>2</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strwidth-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        待解码的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strwidth-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> <code class="parameter">str</code> 的宽度。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strwidth-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strimwidth()} - 获取按指定宽度截断的字符串</span></li>     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int The width of string str.*/
function mb_strwidth ($str, $encoding = null) {}

/**
*<div id="function.mb-strimwidth" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_strimwidth</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_strimwidth</span> &mdash; <span class="dc-title">获取按指定宽度截断的字符串</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-strimwidth-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_strimwidth</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$trimmarker</code><span class="initializer"> = &quot;&quot;</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    按 <code class="parameter">width</code> 将<span class="type"><span class="type 字符串">字符串</span></span> <code class="parameter">str</code> 截短。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-strimwidth-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要截短的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">start</code></dt>       <dd>        <p class="para">        开始位置的偏移。从这些字符数开始的截取字符串。（默认是 0 个字符）        如果 start 是负数，就是字符串结尾处的字符数。       </p>      </dd>                 <dt> <code class="parameter">width</code></dt>       <dd>        <p class="para">        所需修剪的宽度。负数的宽度是从字符串结尾处统计的。       </p>      </dd>                 <dt> <code class="parameter">trimmarker</code></dt>       <dd>        <p class="para">        当字符串被截短的时候，将此字符串添加到截短后的末尾。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-strimwidth-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    截短后的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。    如果设置了 <code class="parameter">trimmarker</code>，还将结尾处的字符替换为 <code class="parameter">trimmarker</code> ，并符合 <code class="parameter">width</code> 的宽度。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-strimwidth-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        支持负数的 <code class="parameter">start</code> 和 <code class="parameter">width</code>。       </td>      </tr>      </tbody>       </table>   </div>     <div class="refsect1 examples" id="refsect1-function.mb-strimwidth-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3188">     <p><strong>Example #1 <span class="function"><strong>mb_strimwidth()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">mb_strimwidth</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello&nbsp;World"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"..."</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;输出&nbsp;Hello&nbsp;W...<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-strimwidth-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_strwidth()} - 返回字符串的宽度</span></li>     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The truncated string. If trimmarker is set,*/
function mb_strimwidth ($str, $start, $width, $trimmarker = null, $encoding = null) {}

/**
*<div id="function.mb-convert-encoding" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_convert_encoding</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_convert_encoding</span> &mdash; <span class="dc-title">转换字符的编码</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-convert-encoding-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_convert_encoding</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_encoding</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$from_encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    将 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 类型 <code class="parameter">str</code> 的字符编码从可选的 <code class="parameter">from_encoding</code> 转换到 <code class="parameter">to_encoding</code>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-convert-encoding-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要编码的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">to_encoding</code></dt>       <dd>        <p class="para">        <code class="parameter">str</code> 要转换成的编码类型。       </p>      </dd>                 <dt> <code class="parameter">from_encoding</code></dt>       <dd>        <p class="para">        在转换前通过字符代码名称来指定。它可以是一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 也可以是逗号分隔的枚举列表。        如果没有提供 <code class="parameter">from_encoding</code>，则会使用内部（internal）编码。               </p>       <p class="para">       参见<a href="http://php.net/manual/zh/mbstring.supported-encodings.php" class="link">支持的编码</a>。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-convert-encoding-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    编码后的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-convert-encoding-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3170">     <p><strong>Example #1 <span class="function"><strong>mb_convert_encoding()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;转换内部编码为&nbsp;SJIS&nbsp;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"SJIS"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;将&nbsp;EUC-JP&nbsp;转换成&nbsp;UTF-7&nbsp;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-7"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"EUC-JP"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;从&nbsp;JIS,&nbsp;eucjp-win,&nbsp;sjis-win&nbsp;中自动检测编码，并转换&nbsp;str&nbsp;到&nbsp;UCS-2LE&nbsp;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UCS-2LE"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"JIS,&nbsp;eucjp-win,&nbsp;sjis-win"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;"auto"&nbsp;扩展成&nbsp;"ASCII,JIS,UTF-8,EUC-JP,SJIS"&nbsp;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"EUC-JP"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"auto"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>      <div class="refsect1 seealso" id="refsect1-function.mb-convert-encoding-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The encoded string.*/
function mb_convert_encoding ($str, $to_encoding, $from_encoding = null) {}

/**
*<div id="function.mb-detect-encoding" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_detect_encoding</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_detect_encoding</span> &mdash; <span class="dc-title">检测字符的编码</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-detect-encoding-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_detect_encoding</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$encoding_list</code><span class="initializer"> = mb_detect_order()</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strict</code><span class="initializer"> = false</span></span>   ]] )</div>    <p class="para rdfs-comment">    检测<span class="type"><span class="type 字符串">字符串</span></span> <code class="parameter">str</code> 的编码。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-detect-encoding-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        待检查的<span class="type"><span class="type 字符串">字符串</span></span>。       </p>      </dd>                 <dt> <code class="parameter">encoding_list</code></dt>       <dd>        <p class="para">        <code class="parameter">encoding_list</code> 是一个字符编码列表。        编码顺序可以由数组或者逗号分隔的列表字符串指定。       </p>       <p class="para">        如果省略了 <code class="parameter">encoding_list</code> 将会使用 detect_order。       </p>      </dd>                 <dt> <code class="parameter">strict</code></dt>       <dd>        <p class="para">        <code class="parameter">strict</code> 指定了是否严格地检测编码。        默认是 <strong><code>FALSE</code></strong>。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-detect-encoding-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    检测到的字符编码，或者无法检测指定字符串的编码时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-detect-encoding-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3175">     <p><strong>Example #1 <span class="function"><strong>mb_detect_encoding()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;使用当前的&nbsp;detect_order&nbsp;来检测字符编码&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;"auto"&nbsp;将根据&nbsp;mbstring.language&nbsp;来扩展&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"auto"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;通过逗号分隔的列表来指定编码列表&nbsp;encoding_list&nbsp;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"JIS,&nbsp;eucjp-win,&nbsp;sjis-win"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;使用数组来指定编码列表&nbsp;encoding_list&nbsp;&nbsp;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #DD0000">"ASCII"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #DD0000">"JIS"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #DD0000">"EUC-JP"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$ary</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-detect-encoding-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false The detected character encoding or false if the encoding cannot be*/
function mb_detect_encoding ($str, $encoding_list = null, $strict = false) {}

/**
*<div id="function.mb-list-encodings" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_list_encodings</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_list_encodings</span> &mdash; <span class="dc-title">返回所有支持编码的数组</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.mb-list-encodings-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>mb_list_encodings</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回所有支持编码的数组。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.mb-list-encodings-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-list-encodings-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数字索引数组。   </p>  </div>     <div class="refsect1 errors" id="refsect1-function.mb-list-encodings-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    该函数不会触发任何错误。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.mb-list-encodings-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3185">     <p><strong>Example #1 <span class="function"><strong>mb_list_encodings()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_list_encodings</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Array (     [0] =&gt; pass     [1] =&gt; auto     [2] =&gt; wchar     [3] =&gt; byte2be     [4] =&gt; byte2le     [5] =&gt; byte4be     [6] =&gt; byte4le     [7] =&gt; BASE64     [8] =&gt; UUENCODE     [9] =&gt; HTML-ENTITIES     [10] =&gt; Quoted-Printable     [11] =&gt; 7bit     [12] =&gt; 8bit     [13] =&gt; UCS-4     [14] =&gt; UCS-4BE     [15] =&gt; UCS-4LE     [16] =&gt; UCS-2     [17] =&gt; UCS-2BE     [18] =&gt; UCS-2LE     [19] =&gt; UTF-32     [20] =&gt; UTF-32BE     [21] =&gt; UTF-32LE     [22] =&gt; UTF-16     [23] =&gt; UTF-16BE     [24] =&gt; UTF-16LE     [25] =&gt; UTF-8     [26] =&gt; UTF-7     [27] =&gt; UTF7-IMAP     [28] =&gt; ASCII     [29] =&gt; EUC-JP     [30] =&gt; SJIS     [31] =&gt; eucJP-win     [32] =&gt; SJIS-win     [33] =&gt; JIS     [34] =&gt; ISO-2022-JP     [35] =&gt; Windows-1252     [36] =&gt; ISO-8859-1     [37] =&gt; ISO-8859-2     [38] =&gt; ISO-8859-3     [39] =&gt; ISO-8859-4     [40] =&gt; ISO-8859-5     [41] =&gt; ISO-8859-6     [42] =&gt; ISO-8859-7     [43] =&gt; ISO-8859-8     [44] =&gt; ISO-8859-9     [45] =&gt; ISO-8859-10     [46] =&gt; ISO-8859-13     [47] =&gt; ISO-8859-14     [48] =&gt; ISO-8859-15     [49] =&gt; EUC-CN     [50] =&gt; CP936     [51] =&gt; HZ     [52] =&gt; EUC-TW     [53] =&gt; BIG-5     [54] =&gt; EUC-KR     [55] =&gt; UHC     [56] =&gt; ISO-2022-KR     [57] =&gt; Windows-1251     [58] =&gt; CP866     [59] =&gt; KOI8-R ) </pre></div>     </div>    </div>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string[] a numerically indexed array.*/
function mb_list_encodings () {}

/**
*<div id="function.mb-encoding-aliases" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_encoding_aliases</h1>   <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7)</p><p class="refpurpose"><span class="refname">mb_encoding_aliases</span> &mdash; <span class="dc-title">Get aliases of a known encoding type</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.mb-encoding-aliases-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>mb_encoding_aliases</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span>    )</div>    <p class="para rdfs-comment">    Returns an array of aliases for a known <code class="parameter">encoding</code> type.   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.mb-encoding-aliases-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">encoding</code></dt>      <dd>       <p class="para">       The encoding type being checked, for aliases.      </p>     </dd>        </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-encoding-aliases-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a numerically indexed array of encoding aliases on success,     或者在失败时返回 <strong><code>FALSE</code></strong>   </p>  </div>    <div class="refsect1 errors" id="refsect1-function.mb-encoding-aliases-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Emits an <strong><code>E_WARNING</code></strong> level error if    <code class="parameter">encoding</code> is unknown.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-encoding-aliases-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3181">    <p><strong>Example #1 <span class="function"><strong>mb_encoding_aliases()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$encoding&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'ASCII'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$known_encodings&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_list_encodings</span><span style="color: #007700">();<br /><br />if&nbsp;(</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoding</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$known_encodings</span><span style="color: #007700">))&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$aliases&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_encoding_aliases</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoding</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$aliases</span><span style="color: #007700">);<br /><br />}&nbsp;else&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Unknown&nbsp;(</span><span style="color: #9876AA">$encoding</span><span style="color: #DD0000">)&nbsp;encoding.\n"</span><span style="color: #007700">;<br /><br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [0] =&gt; ANSI_X3.4-1968     [1] =&gt; iso-ir-6     [2] =&gt; ANSI_X3.4-1986     [3] =&gt; ISO_646.irv:1991     [4] =&gt; US-ASCII     [5] =&gt; ISO646-US     [6] =&gt; us     [7] =&gt; IBM367     [8] =&gt; cp367     [9] =&gt; csASCII ) </pre></div>    </div>   </div>  </div>     <div class="refsect1 seealso" id="refsect1-function.mb-encoding-aliases-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_list_encodings()} - 返回所有支持编码的数组</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string[]|false a numerically indexed array of encoding aliases on success, or FALSE on failure*/
function mb_encoding_aliases ($encoding) {}

/**
*<div id="function.mb-convert-kana" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_convert_kana</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_convert_kana</span> &mdash; <span class="dc-title">Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more)</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-convert-kana-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_convert_kana</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;KV&quot;</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    Performs a &quot;han-kaku&quot; - &quot;zen-kaku&quot; conversion for <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> <code class="parameter">str</code>.     This function is only useful for Japanese.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-convert-kana-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being converted.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        The conversion option.       </p>       <p class="para">        Specify with a combination of following options.        <table class="doctable table">         <caption><strong>Applicable Conversion Options</strong></caption>                   <thead>           <tr>            <th>Option</th>            <th>Meaning</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><em>r</em></td>            <td>             Convert &quot;zen-kaku&quot; alphabets to &quot;han-kaku&quot;            </td>           </tr>            <tr>            <td><em>R</em></td>            <td>             Convert &quot;han-kaku&quot; alphabets to &quot;zen-kaku&quot;            </td>           </tr>            <tr>            <td><em>n</em></td>            <td>             Convert &quot;zen-kaku&quot; numbers to &quot;han-kaku&quot;            </td>           </tr>            <tr>            <td><em>N</em></td>            <td>             Convert &quot;han-kaku&quot; numbers to &quot;zen-kaku&quot;            </td>           </tr>            <tr>            <td><em>a</em></td>            <td>             Convert &quot;zen-kaku&quot; alphabets and numbers to &quot;han-kaku&quot;            </td>           </tr>            <tr>            <td><em>A</em></td>            <td>             Convert &quot;han-kaku&quot; alphabets and numbers to &quot;zen-kaku&quot;             (Characters included in &quot;a&quot;, &quot;A&quot; options are             U+0021 - U+007E excluding U+0022, U+0027, U+005C, U+007E)            </td>           </tr>            <tr>            <td><em>s</em></td>            <td>             Convert &quot;zen-kaku&quot; space to &quot;han-kaku&quot; (U+3000 -&gt; U+0020)            </td>           </tr>            <tr>            <td><em>S</em></td>            <td>             Convert &quot;han-kaku&quot; space to &quot;zen-kaku&quot; (U+0020 -&gt; U+3000)            </td>           </tr>            <tr>            <td><em>k</em></td>            <td>             Convert &quot;zen-kaku kata-kana&quot; to &quot;han-kaku kata-kana&quot;            </td>           </tr>            <tr>            <td><em>K</em></td>            <td>             Convert &quot;han-kaku kata-kana&quot; to &quot;zen-kaku kata-kana&quot;            </td>           </tr>            <tr>            <td><em>h</em></td>            <td>             Convert &quot;zen-kaku hira-gana&quot; to &quot;han-kaku kata-kana&quot;            </td>           </tr>            <tr>            <td><em>H</em></td>            <td>             Convert &quot;han-kaku kata-kana&quot; to &quot;zen-kaku hira-gana&quot;            </td>           </tr>            <tr>            <td><em>c</em></td>            <td>            Convert &quot;zen-kaku kata-kana&quot; to &quot;zen-kaku hira-gana&quot;            </td>           </tr>            <tr>            <td><em>C</em></td>            <td>             Convert &quot;zen-kaku hira-gana&quot; to &quot;zen-kaku kata-kana&quot;            </td>           </tr>            <tr>            <td><em>V</em></td>            <td>             Collapse voiced sound notation and convert them into a character. Use with &quot;K&quot;,&quot;H&quot;            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-convert-kana-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The converted <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-convert-kana-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3171">     <p><strong>Example #1 <span class="function"><strong>mb_convert_kana()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Convert&nbsp;all&nbsp;"kana"&nbsp;to&nbsp;"zen-kaku"&nbsp;"kata-kana"&nbsp;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_kana</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"KVC"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Convert&nbsp;"han-kaku"&nbsp;"kata-kana"&nbsp;to&nbsp;"zen-kaku"&nbsp;"kata-kana"&nbsp;<br />&nbsp;&nbsp;&nbsp;and&nbsp;"zen-kaku"&nbsp;alpha-numeric&nbsp;to&nbsp;"han-kaku"&nbsp;<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_kana</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"KVa"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The converted string.*/
function mb_convert_kana ($str, $option = null, $encoding = null) {}

/**
*<div id="function.mb-encode-mimeheader" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_encode_mimeheader</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_encode_mimeheader</span> &mdash; <span class="dc-title">为 MIME 头编码字符串</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-encode-mimeheader-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_encode_mimeheader</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer"> = determined by mb_language()</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$transfer_encoding</code><span class="initializer"> = &quot;B&quot;</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$linefeed</code><span class="initializer"> = &quot;\r\n&quot;</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$indent</code><span class="initializer"> = 0</span></span>   ]]]] )</div>    <p class="para rdfs-comment">    按 MIME 头编码方案将指定的<span class="type"><span class="type 字符串">字符串</span></span> <code class="parameter">str</code> 进行编码。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-encode-mimeheader-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要编码的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。        它的编码应该和 <span class="function">{@link mb_internal_encoding()}</span> 一样。       </p>      </dd>                 <dt> <code class="parameter">charset</code></dt>       <dd>        <p class="para">        <code class="parameter">charset</code> 指定了 <code class="parameter">str</code> 的字符集名。        其默认值由当前的 NLS 设置（<em>mbstring.language</em>）来确定。       </p>      </dd>                 <dt> <code class="parameter">transfer_encoding</code></dt>       <dd>        <p class="para">        <code class="parameter">transfer_encoding</code> 指定了 MIME 的编码方案。        它可以是 <em>&quot;B&quot;</em>（Base64）也可以是 <em>&quot;Q&quot;</em>（Quoted-Printable）。        如果未设置，将回退为 <em>&quot;B&quot;</em>。       </p>      </dd>                 <dt> <code class="parameter">linefeed</code></dt>       <dd>        <p class="para">        <code class="parameter">linefeed</code> 指定了 EOL（行尾）标记，使 <span class="function"><strong>mb_encode_mimeheader()</strong></span> 执行了一个换行（<a href="http://www.faqs.org/rfcs/rfc2822" class="link external">&raquo;&nbsp;RFC</a> 文档中规定，超过长度的一行将换成多行，当前该长度硬式编码为 74 个字符）。        如果没有设定，则回退为 <em>&quot;\r\n&quot;</em> (CRLF)。       </p>      </dd>                 <dt> <code class="parameter">indent</code></dt>       <dd>        <p class="para">        首行缩进（header 里 <code class="parameter">str</code> 前的字符数目）。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-encode-mimeheader-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    转换后的<span class="type"><span class="type 字符串">字符串</span></span>版本以 ASCII 形式表达。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-encode-mimeheader-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3178">     <p><strong>Example #1 <span class="function"><strong>mb_encode_mimeheader()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$name&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">""</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;kanji<br /></span><span style="color: #9876AA">$mbox&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"kru"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$doma&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"gtinn.mon"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$addr&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_encode_mimeheader</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-7"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Q"</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"&nbsp;&lt;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$mbox&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"@"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$doma&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">"&gt;"</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">$addr</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-encode-mimeheader-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     这个函数没有设计成据更高级上下文的中断点来换行（单词边界等）。     这个特性将导致意外的空格可能会让原始字符串看上去很乱。    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-encode-mimeheader-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_decode_mimeheader()} - 解码 MIME 头字段中的字符串</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string A converted version of the string represented in ASCII.*/
function mb_encode_mimeheader ($str, $charset = null, $transfer_encoding = null, $linefeed = null, $indent = null) {}

/**
*<div id="function.mb-decode-mimeheader" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_decode_mimeheader</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_decode_mimeheader</span> &mdash; <span class="dc-title">解码 MIME 头字段中的字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.mb-decode-mimeheader-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_decode_mimeheader</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    )</div>    <p class="para rdfs-comment">    解码 MIME 头中编码过的<span class="type"><span class="type 字符串">字符串</span></span> <code class="parameter">str</code>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-decode-mimeheader-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要解码的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-decode-mimeheader-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    以内部（internal）字符编码解码的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-decode-mimeheader-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_encode_mimeheader()} - 为 MIME 头编码字符串</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The decoded string in internal character encoding.*/
function mb_decode_mimeheader ($str) {}

/**
*<div id="function.mb-convert-variables" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_convert_variables</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_convert_variables</span> &mdash; <span class="dc-title">转换一个或多个变量的字符编码</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-convert-variables-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_convert_variables</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_encoding</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$from_encoding</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter reference">&$vars</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter reference">&$...</code></span>   ] )</div>    <p class="para rdfs-comment">    将变量 <code class="parameter">vars</code> 的编码从 <code class="parameter">from_encoding</code> 转换成编码 <code class="parameter">to_encoding</code>。   </p>   <p class="para">    <span class="function"><strong>mb_convert_variables()</strong></span> 会拼接变量数组或对象中的字符串来检测编码，因为短字符串的检测往往会失败。因此，不能在一个数组或对象中混合使用编码。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.mb-convert-variables-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">to_encoding</code></dt>       <dd>        <p class="para">        将 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> 转换成这个编码。       </p>      </dd>                 <dt> <code class="parameter">from_encoding</code></dt>       <dd>        <p class="para">        <code class="parameter">from_encoding</code> 可以指定为一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 或者逗号分隔的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>，它将尝试根据 <code class="parameter">from-coding</code> 来检测编码。        当省略了 <code class="parameter">from_encoding</code>，将使用 <em>detect_order</em>。       </p>      </dd>                 <dt> <code class="parameter">vars</code></dt>       <dd>        <p class="para">        <code class="parameter">vars</code> 是要转换的变量的引用。        参数可以接受 String、Array 和 Object 的类型。        <span class="function"><strong>mb_convert_variables()</strong></span> 假设所有的参数都具有同样的编码。       </p>      </dd>                 <dt> <code class="parameter">...</code></dt>       <dd>        <p class="para">        额外的 <code class="parameter">vars</code>。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-convert-variables-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回转换前的字符编码，失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-convert-variables-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3172">     <p><strong>Example #1 <span class="function"><strong>mb_convert_variables()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;转换变量&nbsp;$post1、$post2&nbsp;编码为内部（internal）编码&nbsp;<br /></span><span style="color: #9876AA">$interenc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_internal_encoding</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$inputenc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_convert_variables</span><span style="color: #007700">(</span><span style="color: #9876AA">$interenc</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"ASCII,UTF-8,SJIS-win"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$post1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$post2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false The character encoding before conversion for success,*/
function mb_convert_variables ($to_encoding, $from_encoding, &...$vars) {}

/**
*<div id="function.mb-encode-numericentity" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_encode_numericentity</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_encode_numericentity</span> &mdash; <span class="dc-title">Encode character to HTML numeric string reference</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-encode-numericentity-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_encode_numericentity</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$convmap</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_hex</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">    Converts    specified character codes in <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> <code class="parameter">str</code>    from character code to HTML numeric character reference.       </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-encode-numericentity-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being encoded.       </p>      </dd>                 <dt> <code class="parameter">convmap</code></dt>       <dd>        <p class="para">        <code class="parameter">convmap</code> is array specifies code area to        convert.       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>                 <dt> <code class="parameter">is_hex</code></dt>       <dd>        <p class="para">       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-encode-numericentity-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The converted <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-encode-numericentity-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.0</td>        <td>         Added <code class="parameter">is_hex</code> parameter.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-encode-numericentity-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3179">     <p><strong>Example #1 <code class="parameter">convmap</code> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$convmap&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(<br />&nbsp;</span><span style="color: #9876AA">int&nbsp;start_code1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;end_code1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;offset1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;mask1</span><span style="color: #007700">,<br />&nbsp;</span><span style="color: #9876AA">int&nbsp;start_code2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;end_code2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;offset2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;mask2</span><span style="color: #007700">,<br />&nbsp;........<br />&nbsp;</span><span style="color: #9876AA">int&nbsp;start_codeN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;end_codeN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;offsetN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;maskN&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;Specify&nbsp;Unicode&nbsp;value&nbsp;for&nbsp;start_codeN&nbsp;and&nbsp;end_codeN<br />//&nbsp;Add&nbsp;offsetN&nbsp;to&nbsp;value&nbsp;and&nbsp;take&nbsp;bit-wise&nbsp;'AND'&nbsp;with&nbsp;maskN,&nbsp;then<br />//&nbsp;it&nbsp;converts&nbsp;value&nbsp;to&nbsp;numeric&nbsp;string&nbsp;reference.<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-encode-numericentity-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3180">     <p><strong>Example #2 <span class="function"><strong>mb_encode_numericentity()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Convert&nbsp;Left&nbsp;side&nbsp;of&nbsp;ISO-8859-1&nbsp;to&nbsp;HTML&nbsp;numeric&nbsp;character&nbsp;reference&nbsp;<br /></span><span style="color: #9876AA">$convmap&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #9876AA">0x80</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xff</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xff</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_encode_numericentity</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$convmap</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"ISO-8859-1"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Convert&nbsp;user&nbsp;defined&nbsp;SJIS-win&nbsp;code&nbsp;in&nbsp;block&nbsp;95-104&nbsp;to&nbsp;numeric<br />&nbsp;&nbsp;&nbsp;string&nbsp;reference&nbsp;<br /></span><span style="color: #9876AA">$convmap&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe000</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe03e</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x1040</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe03f</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe0bb</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x1041</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe0bc</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe0fa</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x1084</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe0fb</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe177</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x1085</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe178</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe1b6</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x10c8</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe1b7</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe233</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x10c9</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe234</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe272</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x110c</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe273</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe2ef</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x110d</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe2f0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe32e</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x1150</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0xe32f</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xe3ab</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0x1151</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_encode_numericentity</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$convmap</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"sjis-win"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-encode-numericentity-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_decode_numericentity()} - 根据 HTML 数字字符串解码成字符</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The converted string.*/
function mb_encode_numericentity ($str, array $convmap, $encoding = null, $is_hex = false) {}

/**
*<div id="function.mb-decode-numericentity" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_decode_numericentity</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_decode_numericentity</span> &mdash; <span class="dc-title">根据 HTML 数字字符串解码成字符</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-decode-numericentity-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_decode_numericentity</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$convmap</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    将数字<span class="type"><span class="type 字符串">字符串</span></span>的引用<code class="parameter">str</code> 按指定的字符块转换成字符串。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-decode-numericentity-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        要解码的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">convmap</code></dt>       <dd>        <p class="para">        <code class="parameter">convmap</code> 是一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>，指定了要转换的代码区域。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-decode-numericentity-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    转换后的<span class="type"><span class="type 字符串">字符串</span></span>。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.mb-decode-numericentity-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3173">     <p><strong>Example #1 <code class="parameter">convmap</code> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$convmap&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">int&nbsp;start_code1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;end_code1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;offset1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;mask1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">int&nbsp;start_code2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;end_code2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;offset2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;mask2</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;........<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">int&nbsp;start_codeN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;end_codeN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;offsetN</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">int&nbsp;maskN&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;Specify&nbsp;Unicode&nbsp;value&nbsp;for&nbsp;start_codeN&nbsp;and&nbsp;end_codeN<br />//&nbsp;Add&nbsp;offsetN&nbsp;to&nbsp;value&nbsp;and&nbsp;take&nbsp;bit-wise&nbsp;'AND'&nbsp;with&nbsp;maskN,&nbsp;<br />//&nbsp;then&nbsp;convert&nbsp;value&nbsp;to&nbsp;numeric&nbsp;string&nbsp;reference.<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-decode-numericentity-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_encode_numericentity()} - Encode character to HTML numeric string reference</span></li>    </ul>   </p>       <p class="para">    <div class="example" id="example-3174">     <p><strong>Example #2 <code class="parameter">convmap</code> 的例子： 编码(escape) JavaScript 字符串</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">escape_javascript_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$map&nbsp;</span><span style="color: #007700">=&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;49<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;99<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;149<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;199<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;249<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;255<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">];<br />&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Char&nbsp;encoding&nbsp;is&nbsp;UTF-8<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$mblen&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">mb_strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$utf32&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'UTF-32'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">));<br />&nbsp;&nbsp;for&nbsp;(</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$encoded</span><span style="color: #007700">=</span><span style="color: #DD0000">''</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">$mblen</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$u&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$utf32</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">*</span><span style="color: #9876AA">8</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$v&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">base_convert</span><span style="color: #007700">(</span><span style="color: #9876AA">$u</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">16</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$v&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">256&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;</span><span style="color: #9876AA">$map</span><span style="color: #007700">[</span><span style="color: #9876AA">$v</span><span style="color: #007700">])&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$encoded&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">'\\x'</span><span style="color: #007700">.</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$u</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">6</span><span style="color: #007700">,</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(</span><span style="color: #9876AA">$v&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">2028</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$encoded&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">'\\u2028'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(</span><span style="color: #9876AA">$v&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #9876AA">2029</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$encoded&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">'\\u2029'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$encoded&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">hex2bin</span><span style="color: #007700">(</span><span style="color: #9876AA">$u</span><span style="color: #007700">),&nbsp;</span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'UTF-32'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$encoded</span><span style="color: #007700">;<br />}<br />&nbsp;<br /></span><span style="color: #FF8000">//&nbsp;Test&nbsp;data<br /></span><span style="color: #9876AA">$convmap&nbsp;</span><span style="color: #007700">=&nbsp;[&nbsp;</span><span style="color: #9876AA">0x0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0xffff&nbsp;</span><span style="color: #007700">];<br /></span><span style="color: #9876AA">$msg&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />for&nbsp;(</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;chr()&nbsp;cannot&nbsp;generate&nbsp;correct&nbsp;UTF-8&nbsp;data&nbsp;larger&nbsp;value&nbsp;than&nbsp;128,&nbsp;use&nbsp;mb_decode_numericentity().<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$msg&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #9876AA">mb_decode_numericentity</span><span style="color: #007700">(</span><span style="color: #DD0000">'&amp;#'</span><span style="color: #007700">.</span><span style="color: #9876AA">$i</span><span style="color: #007700">.</span><span style="color: #DD0000">';'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$convmap</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />}<br />&nbsp;<br /></span><span style="color: #FF8000">//&nbsp;var_dump($msg);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">escape_javascript_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$msg</span><span style="color: #007700">));</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The converted string.*/
function mb_decode_numericentity ($str, array $convmap, $encoding = null) {}

/**
*<div id="function.mb-send-mail" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_send_mail</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_send_mail</span> &mdash; <span class="dc-title">发送编码过的邮件</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-send-mail-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>mb_send_mail</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$additional_headers</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$additional_parameter</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">     发送邮件。邮件头和内容根据 <span class="function">{@link mb_language()}</span> 设置来转换编码。    这是 <span class="function">{@link mail()}</span> 的一个包装器函数，所以详情参见 <span class="function">{@link mail()}</span>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-send-mail-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">to</code></dt>       <dd>        <p class="para">        被发送到该邮件地址。可通过逗号分隔地址的 <code class="parameter">to</code> 来指定多个收件人。        该参数不会被自动编码。       </p>      </dd>                 <dt> <code class="parameter">subject</code></dt>       <dd>        <p class="para">        邮件标题。       </p>      </dd>                 <dt> <code class="parameter">message</code></dt>       <dd>        <p class="para">        邮件消息。       </p>      </dd>                 <dt> <code class="parameter">additional_headers</code>(可选)</dt>       <dd>        <p class="para">        String to be inserted at the end of the email header.       </p>       <p class="para">        This is typically used to add extra headers (From, Cc, and Bcc).        Multiple extra headers should be separated with a CRLF (\r\n).        Validate parameter not to be injected unwanted headers by attackers.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         When sending mail, the mail <em class="emphasis">must</em> contain         a <em>From</em> header. This can be set with the          <code class="parameter">additional_headers</code> parameter, or a default         can be set in <var class="filename">php.ini</var>.        </p>        <p class="para">         Failing to do this will result in an error         message similar to <em>Warning: mail(): &quot;sendmail_from&quot; not         set in php.ini or custom &quot;From:&quot; header missing</em>.         The <em>From</em> header sets also         <em>Return-Path</em> under Windows.        </p>       </p></blockquote>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         If messages are not received, try using a LF (\n) only.         Some Unix mail transfer agents (most notably         <a href="http://www.qmail.org/" class="link external">&raquo;&nbsp;qmail</a>) replace LF by CRLF         automatically (which leads to doubling CR if CRLF is used).         This should be a last resort, as it does not comply with         <a href="http://www.faqs.org/rfcs/rfc2822" class="link external">&raquo;&nbsp;RFC 2822</a>.        </p>       </p></blockquote>      </dd>                 <dt> <code class="parameter">additional_parameter</code></dt>       <dd>        <p class="para">        <code class="parameter">additional_parameter</code> 是一个 MTA 命令行参数。        在使用 sendmail 时对设置正确的返回路径头很有帮助。       </p>       <p class="para">        This parameter is escaped by <span class="function">{@link escapeshellcmd()}</span> internally        to prevent command execution. <span class="function">{@link escapeshellcmd()}</span> prevents        command execution, but allows to add addtional parameters. For security reason,        this parameter should be validated.       </p>       <p class="para">        Since <span class="function">{@link escapeshellcmd()}</span> is applied automatically, some characters        that are allowed as email addresses by internet RFCs cannot be used. Programs        that are required to use these characters <span class="function">{@link mail()}</span> cannot be used.       </p>       <p class="para">        The user that the webserver runs as should be added as a trusted user to the        sendmail configuration to prevent a &#039;X-Warning&#039; header from being added        to the message when the envelope sender (-f) is set using this method.        For sendmail users, this file is <var class="filename">/etc/mail/trusted-users</var>.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-send-mail-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>      <div class="refsect1 seealso" id="refsect1-function.mb-send-mail-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mail()} - 发送邮件</span></li>     <li class="member"><span class="function">{@link mb_encode_mimeheader()} - 为 MIME 头编码字符串</span></li>     <li class="member"><span class="function">{@link mb_language()} - 设置/获取当前的语言</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function mb_send_mail ($to, $subject, $message, $additional_headers = null, $additional_parameter = null) {}

/**
*<div id="function.mb-get-info" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_get_info</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_get_info</span> &mdash; <span class="dc-title">获取 mbstring 的内部设置</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-get-info-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_get_info</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code><span class="initializer"> = &quot;all&quot;</span></span>   ] )</div>    <p class="simpara">    <span class="function"><strong>mb_get_info()</strong></span> 返回 mbstring 参数的内部设定。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-get-info-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">type</code></dt>       <dd>        <p class="para">        如果没有设定 <code class="parameter">type</code>，或者将其设定为 &quot;all&quot;，将会返回一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>，并且包含了以下所有元素：&quot;internal_encoding&quot;,        &quot;http_output&quot;, &quot;http_input&quot;, &quot;func_overload&quot;, &quot;mail_charset&quot;,        &quot;mail_header_encoding&quot;, &quot;mail_body_encoding&quot;。       </p>       <p class="para">        如果 <code class="parameter">type</code> 设定为类似 &quot;http_output&quot;,        &quot;http_input&quot;, &quot;internal_encoding&quot;, &quot;func_overload&quot;，将返回该参数的设置。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-get-info-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果没有指定 <code class="parameter">type</code> 将返回类型信息的数组，否则将返回指定 <code class="parameter">type</code> 的信息。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-get-info-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.3</td>        <td>         实体 &quot;mail_charset&quot;、&quot;mail_header_encoding&quot; 和 &quot;mail_body_encoding&quot; 开始有效。                 </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         条目 &quot;http_output_conv_mimetypes&quot; 开始有效。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-get-info-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return array|mixed An array of type information if type*/
function mb_get_info ($type = null) {}

/**
*<div id="function.mb-check-encoding" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_check_encoding</h1>   <p class="verinfo">(PHP 4 &gt;= 4.4.3, PHP 5 &gt;= 5.1.3, PHP 7)</p><p class="refpurpose"><span class="refname">mb_check_encoding</span> &mdash; <span class="dc-title">检查字符串在指定的编码里是否有效</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.mb-check-encoding-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>mb_check_encoding</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$var</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_internal_encoding()</span></span>   ]] )</div>    <p class="para rdfs-comment">    检查指定的字节流在指定的编码里是否有效。它能有效避免所谓的“无效编码攻击（Invalid Encoding Attack）”。   </p>   <p class="para">   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-check-encoding-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">var</code></dt>       <dd>        <p class="para">        要检查的字节流。如果省略了这个参数，此函数会检查所有来自最初请求所有的输入。       </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        期望的编码。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-check-encoding-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function mb_check_encoding ($var = null, $encoding = null) {}

/**
*<div id="function.mb-regex-encoding" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_regex_encoding</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_regex_encoding</span> &mdash; <span class="dc-title">Set/Get character encoding for multibyte regex</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-regex-encoding-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>mb_regex_encoding</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = mb_regex_encoding()</span></span>   ] )</div>    <p class="para rdfs-comment">    Set/Get character encoding for a multibyte regex.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-regex-encoding-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para"><code class="parameter">encoding</code> 参数为字符编码。如果省略，则使用内部字符编码。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-regex-encoding-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    If <code class="parameter">encoding</code> is set, then     成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。     In this case, the internal character encoding is NOT changed.    If <code class="parameter">encoding</code> is omitted, then     the current character encoding name for a multibyte regex is returned.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-regex-encoding-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.6.0</td>        <td>         Default encoding is changed to UTF-8. It was EUC-JP Previously.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-regex-encoding-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>     <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool|string If encoding is set, then Returns TRUE on success*/
function mb_regex_encoding ($encoding = null) {}

/**
*<div id="function.mb-regex-set-options" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_regex_set_options</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_regex_set_options</span> &mdash; <span class="dc-title">Set/Get the default options for mbregex functions</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-regex-set-options-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_regex_set_options</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$options</code><span class="initializer"> = mb_regex_set_options()</span></span>   ] )</div>    <p class="simpara">    Sets the default options described by <code class="parameter">options</code>     for multibyte regex functions.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-regex-set-options-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">options</code></dt>       <dd>        <p class="para">        The options to set. This is a string where each         character is an option. To set a mode, the mode         character must be the last one set, however there         can only be set one mode but multiple options.       </p>        <table class="doctable table">        <caption><strong>Regex options</strong></caption>                 <thead>          <tr>           <th>Option</th>           <th>Meaning</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td>i</td>           <td>Ambiguity match on</td>          </tr>           <tr>           <td>x</td>           <td>Enables extended pattern form</td>          </tr>           <tr>           <td>m</td>           <td><em>&#039;.&#039;</em> matches with newlines</td>          </tr>           <tr>           <td>s</td>           <td><em>&#039;^&#039;</em> -&gt; <em>&#039;\A&#039;</em>, <em>&#039;$&#039;</em> -&gt; <em>&#039;\Z&#039;</em></td>          </tr>           <tr>           <td>p</td>           <td>Same as both the <em>m</em> and <em>s</em> options</td>          </tr>           <tr>           <td>l</td>           <td>Finds longest matches</td>          </tr>           <tr>           <td>n</td>           <td>Ignores empty matches</td>          </tr>           <tr>           <td>e</td>           <td><span class="function">{@link eval()}</span> resulting code</td>          </tr>          </tbody>               </table>        <table class="doctable table">        <caption><strong>Regex syntax modes</strong></caption>                 <thead>          <tr>           <th>Mode</th>           <th>Meaning</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td>j</td>           <td>Java (Sun java.util.regex)</td>          </tr>           <tr>           <td>u</td>           <td>GNU regex</td>          </tr>           <tr>           <td>g</td>           <td>grep</td>          </tr>           <tr>           <td>c</td>           <td>Emacs</td>          </tr>           <tr>           <td>r</td>           <td>Ruby</td>          </tr>           <tr>           <td>z</td>           <td>Perl</td>          </tr>           <tr>           <td>b</td>           <td>POSIX Basic regex</td>          </tr>           <tr>           <td>d</td>           <td>POSIX Extended regex</td>          </tr>          </tbody>               </table>       </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-regex-set-options-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The previous options. If <code class="parameter">options</code> is omitted,     it returns the <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> that describes the current options.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-regex-set-options-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_split()} - 使用正则表达式分割多字节字符串</span></li>     <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>     <li class="member"><span class="function">{@link mb_eregi()} - Regular expression match ignoring case with multibyte support</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string The previous options. If options is omitted, */
function mb_regex_set_options ($options = null) {}

/**
*<div id="function.mb-ereg" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg</span> &mdash; <span class="dc-title">Regular expression match with multibyte support</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_ereg</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$regs</code></span>   ] )</div>    <p class="simpara">    Executes the regular expression match with multibyte support.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The search pattern.       </p>      </dd>                 <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The search <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>.       </p>      </dd>                 <dt> <code class="parameter">regs</code></dt>       <dd>        <p class="para">        If matches are found for parenthesized substrings of        <code class="parameter">pattern</code> and the function is called with the        third argument <code class="parameter">regs</code>, the matches will be stored        in the elements of the array <code class="parameter">regs</code>.        If no matches are found, <code class="parameter">regs</code> is set to an empty        array.       </p>       <p class="para">        <var class="varname"><var class="varname">$regs[1]</var></var> will contain the substring which starts at        the first left parenthesis; <var class="varname"><var class="varname">$regs[2]</var></var> will contain        the substring starting at the second, and so on.        <var class="varname"><var class="varname">$regs[0]</var></var> will contain a copy of the complete string        matched.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the byte length of the matched string if a match for    <code class="parameter">pattern</code> was found in <code class="parameter">string</code>,    or <strong><code>FALSE</code></strong> if no matches were found or an error occurred.   </p>   <p class="para">    If the optional parameter <code class="parameter">regs</code> was not passed or    the length of the matched string is <em>0</em>, this function returns <em>1</em>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-ereg-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        <span class="function"><strong>mb_ereg()</strong></span> will now set <code class="parameter">regs</code> to        an empty <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>, if nothing matched. Formerly,        <code class="parameter">regs</code> was not modified in that case.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_eregi()} - Regular expression match ignoring case with multibyte support</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int */
function mb_ereg ($pattern, $string, array $regs = null) {}

/**
*<div id="function.mb-eregi" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_eregi</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_eregi</span> &mdash; <span class="dc-title">Regular expression match ignoring case with multibyte support</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-eregi-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_eregi</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$regs</code></span>   ] )</div>    <p class="simpara">    Executes the case insensitive regular expression match with multibyte support.   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.mb-eregi-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The regular expression pattern.       </p>      </dd>                 <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being searched.       </p>      </dd>                 <dt> <code class="parameter">regs</code></dt>       <dd>        <p class="para">        If matches are found for parenthesized substrings of        <code class="parameter">pattern</code> and the function is called with the        third argument <code class="parameter">regs</code>, the matches will be stored        in the elements of the array <code class="parameter">regs</code>.        If no matches are found, <code class="parameter">regs</code> is set to an empty        array.       </p>       <p class="para">        <var class="varname"><var class="varname">$regs[1]</var></var> will contain the substring which starts at        the first left parenthesis; <var class="varname"><var class="varname">$regs[2]</var></var> will contain        the substring starting at the second, and so on.        <var class="varname"><var class="varname">$regs[0]</var></var> will contain a copy of the complete string        matched.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-eregi-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the byte length of the matched string if a match for    <code class="parameter">pattern</code> was found in <code class="parameter">string</code>,    or <strong><code>FALSE</code></strong> if no matches were found or an error occurred.   </p>   <p class="para">    If the optional parameter <code class="parameter">regs</code> was not passed or    the length of the matched string is <em>0</em>, this function returns <em>1</em>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-eregi-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        <span class="function"><strong>mb_eregi()</strong></span> will now set <code class="parameter">regs</code> to        an empty <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>, if nothing matched. Formerly,        <code class="parameter">regs</code> was not modified in that case.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 notes" id="refsect1-function.mb-eregi-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-eregi-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int */
function mb_eregi ($pattern, $string, array $regs = null) {}

/**
*<div id="function.mb-ereg-replace" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_replace</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_replace</span> &mdash; <span class="dc-title">Replace regular expression with multibyte support</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-replace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_ereg_replace</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$replacement</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;msr&quot;</span></span>   ] )</div>    <p class="simpara">    Scans <code class="parameter">string</code> for matches to    <code class="parameter">pattern</code>, then replaces the matched text    with <code class="parameter">replacement</code>     </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-replace-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The regular expression pattern.       </p>       <p class="para">        Multibyte characters may be used in <code class="parameter">pattern</code>.       </p>      </dd>                 <dt> <code class="parameter">replacement</code></dt>       <dd>        <p class="para">        The replacement text.       </p>      </dd>                 <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being checked.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <span class="simpara">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </span>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-replace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The resultant <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> on success, or <strong><code>FALSE</code></strong> on error.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-ereg-replace-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.1.0</td>        <td>         The <em>e</em> modifier has been deprecated.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-replace-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>   <div class="warning"><strong class="warning">Warning</strong><p class="para">处理非信任的输入时从不使用 <em>e</em> 修饰符，就不会转码（即调用 <span class="function">{@link preg_replace()}</span>）。不注意这些会很可能会导致应用程序引发远程代码执行的漏洞。</p></div>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-replace-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_eregi_replace()} - Replace regular expression with multibyte support ignoring case</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false The resultant string on success, or false on error.*/
function mb_ereg_replace ($pattern, $replacement, $string, $option = "msr") {}

/**
*<div id="function.mb-ereg-replace-callback" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_replace_callback</h1>   <p class="verinfo">(PHP 5 &gt;= 5.4.1, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_replace_callback</span> &mdash; <span class="dc-title">Perform a regular expresssion seach and replace with multibyte support using a callback   </span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-replace-callback-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_ereg_replace_callback</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;msr&quot;</span></span>   ] )</div>    <p class="para rdfs-comment">    Scans <code class="parameter">string</code> for matches to    <code class="parameter">pattern</code>, then replaces the matched text    with the output of <code class="parameter">callback</code> function.     </p>   <p class="para">     The behavior of this function is almost identical to <span class="function">{@link mb_ereg_replace()}</span>,      except for the fact that instead of     <code class="parameter">replacement</code> parameter, one should specify a     <code class="parameter">callback</code>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-replace-callback-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The regular expression pattern.       </p>       <p class="para">        Multibyte characters may be used in <code class="parameter">pattern</code>.       </p>      </dd>                 <dt> <code class="parameter">callback</code></dt>       <dd>        <p class="para">         A callback that will be called and passed an array of matched elements         in the  <code class="parameter">subject</code> string. The callback should        return the replacement string.       </p>       <p class="para">         You&#039;ll often need the <code class="parameter">callback</code> function         for a <span class="function"><strong>mb_ereg_replace_callback()</strong></span> in just one place.         In this case you can use an         <a href="http://php.net/manual/zh/functions.anonymous.php" class="link">anonymous function</a> to         declare the callback within the call to         <span class="function"><strong>mb_ereg_replace_callback()</strong></span>. By doing it this way         you have all information for the call in one place and do not         clutter the function namespace with a callback function&#039;s name         not used anywhere else.               </p>      </dd>                 <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being checked.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-replace-callback-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The resultant <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> on success, or <strong><code>FALSE</code></strong> on error.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-replace-callback-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 examples" id="refsect1-function.mb-ereg-replace-callback-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3182">     <p><strong>Example #1 <span class="function"><strong>mb_ereg_replace_callback()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;this&nbsp;text&nbsp;was&nbsp;used&nbsp;in&nbsp;2002<br />//&nbsp;we&nbsp;want&nbsp;to&nbsp;get&nbsp;this&nbsp;up&nbsp;to&nbsp;date&nbsp;for&nbsp;2003<br /></span><span style="color: #9876AA">$text&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"April&nbsp;fools&nbsp;day&nbsp;is&nbsp;04/01/2002\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$text</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"Last&nbsp;christmas&nbsp;was&nbsp;12/24/2001\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;the&nbsp;callback&nbsp;function<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">next_year</span><span style="color: #007700">(</span><span style="color: #9876AA">$matches</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;as&nbsp;usual:&nbsp;$matches[0]&nbsp;is&nbsp;the&nbsp;complete&nbsp;match<br />&nbsp;&nbsp;//&nbsp;$matches[1]&nbsp;the&nbsp;match&nbsp;for&nbsp;the&nbsp;first&nbsp;subpattern<br />&nbsp;&nbsp;//&nbsp;enclosed&nbsp;in&nbsp;'(...)'&nbsp;and&nbsp;so&nbsp;on<br />&nbsp;&nbsp;</span><span style="color: #007700">return&nbsp;</span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">].(</span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]+</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />}<br />echo&nbsp;</span><span style="color: #9876AA">mb_ereg_replace_callback</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"(\d{2}/\d{2}/)(\d{4})"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"next_year"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$text</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> April fools day is 04/01/2003 Last christmas was 12/24/2002 </pre></div>     </div>    </div>   </p>   <p class="para">    <div class="example" id="example-3183">     <p><strong>Example #2 <span class="function"><strong>mb_ereg_replace_callback()</strong></span> using anonymous function       supported in PHP 5.3.0 or later</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;this&nbsp;text&nbsp;was&nbsp;used&nbsp;in&nbsp;2002<br />//&nbsp;we&nbsp;want&nbsp;to&nbsp;get&nbsp;this&nbsp;up&nbsp;to&nbsp;date&nbsp;for&nbsp;2003<br /></span><span style="color: #9876AA">$text&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"April&nbsp;fools&nbsp;day&nbsp;is&nbsp;04/01/2002\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$text</span><span style="color: #007700">.=&nbsp;</span><span style="color: #DD0000">"Last&nbsp;christmas&nbsp;was&nbsp;12/24/2001\n"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #9876AA">mb_ereg_replace_callback</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"(\d{2}/\d{2}/)(\d{4})"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;(</span><span style="color: #9876AA">$matches</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">].(</span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]+</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$text</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-replace-callback-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_replace()} - Replace regular expression with multibyte support</span></li>     <li class="member"><a href="http://php.net/manual/zh/functions.anonymous.php" class="link">Anonymous functions</a></li>     <li class="member"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.callback" class="link">callback</a> 类型的信息</li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false <p>*/
function mb_ereg_replace_callback ($pattern, callable $callback, $string, $option = "msr") {}

/**
*<div id="function.mb-eregi-replace" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_eregi_replace</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_eregi_replace</span> &mdash; <span class="dc-title">Replace regular expression with multibyte support ignoring case</span></p>        </div>      <div class="refsect1 description" id="refsect1-function.mb-eregi-replace-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_eregi_replace</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$replace</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;msri&quot;</span></span>   ] )</div>    <p class="simpara">    Scans <code class="parameter">string</code> for matches to    <code class="parameter">pattern</code>, then replaces the matched text    with <code class="parameter">replacement</code>.    </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-eregi-replace-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The regular expression pattern.  Multibyte characters may be used. The case will be ignored.       </p>      </dd>                 <dt> <code class="parameter">replace</code></dt>       <dd>        <p class="para">        The replacement text.       </p>      </dd>                 <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The searched <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <span class="simpara">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </span>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-eregi-replace-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The resultant <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> or <strong><code>FALSE</code></strong> on error.    </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-eregi-replace-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.1.0</td>        <td>         The <em>e</em> modifier has been deprecated.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-eregi-replace-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>   <div class="warning"><strong class="warning">Warning</strong><p class="para">处理非信任的输入时从不使用 <em>e</em> 修饰符，就不会转码（即调用 <span class="function">{@link preg_replace()}</span>）。不注意这些会很可能会导致应用程序引发远程代码执行的漏洞。</p></div>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-eregi-replace-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_replace()} - Replace regular expression with multibyte support</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false The resultant string or false on error.*/
function mb_eregi_replace ($pattern, $replace, $string, $option = "msr") {}

/**
*<div id="function.mb-split" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_split</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_split</span> &mdash; <span class="dc-title">使用正则表达式分割多字节字符串</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-split-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>mb_split</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="simpara">    使用正则表达式 <code class="parameter">pattern</code> 分割多字节 <code class="parameter">string</code> 并返回结果 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-split-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        正则表达式。       </p>      </dd>                 <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        待分割的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">limit</code></dt>       <dd>        <span class="simpara">        如果指定了可选参数 <code class="parameter">limit</code>，将最多分割为 <code class="parameter">limit</code> 个元素。       </span>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-split-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 的结果。   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-split-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">The character encoding specified by <span class="function">{@link mb_regex_encoding()}</span> will be used as the character encoding for this function by default.</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-split-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string[] The result as an array.*/
function mb_split ($pattern, $string, $limit = null) {}

/**
*<div id="function.mb-ereg-match" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_match</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_match</span> &mdash; <span class="dc-title">Regular expression match for multibyte string</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-match-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>mb_ereg_match</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;msr&quot;</span></span>   ] )</div>    <p class="para rdfs-comment">    A regular expression match for a multibyte string   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-match-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The regular expression pattern.       </p>      </dd>                 <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being evaluated.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-match-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    Returns <strong><code>TRUE</code></strong> if    <code class="parameter">string</code> matches the regular expression    <code class="parameter">pattern</code>, <strong><code>FALSE</code></strong> if not.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-match-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-match-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool */
function mb_ereg_match ($pattern, $string, $option = null) {}

/**
*<div id="function.mb-ereg-search" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_search</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_search</span> &mdash; <span class="dc-title">Multibyte regular expression match for predefined multibyte string</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-search-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>mb_ereg_search</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;ms&quot;</span></span>   ]] )</div>    <p class="para rdfs-comment">    Performs a multibyte regular expression match for a predefined multibyte string.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The search pattern.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    <span class="function"><strong>mb_ereg_search()</strong></span> returns <strong><code>TRUE</code></strong> if the    multibyte string matches with the regular expression, or <strong><code>FALSE</code></strong>    otherwise. The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> for matching is set by     <span class="function">{@link mb_ereg_search_init()}</span>. If    <code class="parameter">pattern</code> is not specified, the previous one    is used.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-search-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool */
function mb_ereg_search ($pattern = null, $option = null) {}

/**
*<div id="function.mb-ereg-search-pos" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_search_pos</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_search_pos</span> &mdash; <span class="dc-title">Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-search-pos-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>mb_ereg_search_pos</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;ms&quot;</span></span>   ]] )</div>    <p class="para rdfs-comment">    Returns position and length of a matched part of the multibyte regular expression     for a predefined multibyte string   </p>   <p class="para">    The string for match is specified by    <span class="function">{@link mb_ereg_search_init()}</span>. If it is not specified,    the previous one will be used.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-pos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The search pattern.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-pos-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    An <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> containing two elements. The first element is the    offset, in bytes, where the match begins relative to the start of the    search string, and the second element is the length in bytes of the match.   </p>   <p class="simpara">    If an error occurs, <strong><code>FALSE</code></strong> is returned.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-search-pos-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-pos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int[]|false An array containing two elements. The first*/
function mb_ereg_search_pos ($pattern = null, $option = null) {}

/**
*<div id="function.mb-ereg-search-regs" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_search_regs</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_search_regs</span> &mdash; <span class="dc-title">Returns the matched part of a multibyte regular expression</span></p>   </div>     <div class="refsect1 description" id="refsect1-function.mb-ereg-search-regs-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>mb_ereg_search_regs</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;ms&quot;</span></span>   ]] )</div>    <p class="para rdfs-comment">    Returns the matched part of a multibyte regular expression.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-regs-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The search pattern.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-regs-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    <span class="function"><strong>mb_ereg_search_regs()</strong></span> executes the multibyte    regular expression match, and if there are some matched part, it    returns an <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> including substring of matched part as first    element, the first grouped part with brackets as second element,    the second grouped part as third element, and so on.     It returns <strong><code>FALSE</code></strong> on error.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-search-regs-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-regs-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string[]|false mb_ereg_search_regs() executes the multibyte*/
function mb_ereg_search_regs ($pattern = null, $option = null) {}

/**
*<div id="function.mb-ereg-search-init" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_search_init</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_search_init</span> &mdash; <span class="dc-title">Setup string and regular expression for a multibyte regular expression match</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-search-init-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>mb_ereg_search_init</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer"> = &quot;msr&quot;</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>mb_ereg_search_init()</strong></span> sets    <code class="parameter">string</code> and <code class="parameter">pattern</code>    for a multibyte regular expression. These values are used for    <span class="function">{@link mb_ereg_search()}</span>,    <span class="function">{@link mb_ereg_search_pos()}</span>, and    <span class="function">{@link mb_ereg_search_regs()}</span>.    </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-init-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The search string.       </p>      </dd>                 <dt> <code class="parameter">pattern</code></dt>       <dd>        <p class="para">        The search pattern.       </p>      </dd>                 <dt> <code class="parameter">option</code></dt>       <dd>        <p class="para">        The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-init-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-search-init-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-init-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_search_regs()} - Returns the matched part of a multibyte regular expression</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool */
function mb_ereg_search_init ($string, $pattern = null, $option = null) {}

/**
*<div id="function.mb-ereg-search-getregs" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_search_getregs</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_search_getregs</span> &mdash; <span class="dc-title">Retrieve the result from the last multibyte regular expression match</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-search-getregs-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>mb_ereg_search_getregs</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    Retrieve the result from the last multibyte regular expression match   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-getregs-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-getregs-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    An <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>    including the sub-string of matched part by last    <span class="function">{@link mb_ereg_search()}</span>,    <span class="function">{@link mb_ereg_search_pos()}</span>,    <span class="function">{@link mb_ereg_search_regs()}</span>. If there are some    matches, the first element will have the matched sub-string, the    second element will have the first part grouped with brackets,     the third element will have the second part grouped with    brackets, and so on. It returns <strong><code>FALSE</code></strong> on error;   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-search-getregs-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-getregs-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string[]|false An array including the sub-string of matched*/
function mb_ereg_search_getregs () {}

/**
*<div id="function.mb-ereg-search-getpos" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_search_getpos</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_search_getpos</span> &mdash; <span class="dc-title">Returns start point for next regular expression match</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.mb-ereg-search-getpos-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_ereg_search_getpos</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    Returns the start point for the next regular expression match.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-getpos-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-getpos-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    <span class="function"><strong>mb_ereg_search_getpos()</strong></span> returns    the point to start regular expression match for    <span class="function">{@link mb_ereg_search()}</span>,    <span class="function">{@link mb_ereg_search_pos()}</span>,    <span class="function">{@link mb_ereg_search_regs()}</span>. The position is    represented by bytes from the head of string.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-search-getpos-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-getpos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_search_setpos()} - Set start point of next regular expression match</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int */
function mb_ereg_search_getpos () {}

/**
*<div id="function.mb-ereg-search-setpos" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ereg_search_setpos</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">mb_ereg_search_setpos</span> &mdash; <span class="dc-title">Set start point of next regular expression match</span></p>   </div>      <div class="refsect1 description" id="refsect1-function.mb-ereg-search-setpos-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>mb_ereg_search_setpos</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$position</code></span>    )</div>    <p class="simpara">    <span class="function"><strong>mb_ereg_search_setpos()</strong></span> sets the starting    point of a match for <span class="function">{@link mb_ereg_search()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-setpos-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">position</code></dt>       <dd>        <p class="para">        The position to set. If it is negative, it counts from the end of the string.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-setpos-returnvalues">   <h3 class="title">返回值</h3>   <p class="simpara">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.mb-ereg-search-setpos-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        Support for negative <code class="parameter">position</code>s has been added.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 notes" id="refsect1-function.mb-ereg-search-setpos-notes">   <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span> 指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-setpos-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>     <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return bool*/
function mb_ereg_search_setpos ($position) {}

/**
 * @param $encoding [optional]
 */
function mbregex_encoding ($encoding) {}

/**
 * @param $pattern
 * @param $string
 * @param $registers [optional]
 */
function mbereg ($pattern, $string, &$registers) {}

/**
 * @param $pattern
 * @param $string
 * @param $registers [optional]
 */
function mberegi ($pattern, $string, &$registers) {}

/**
 * @param $pattern
 * @param $replacement
 * @param $string
 * @param $option [optional]
 */
function mbereg_replace ($pattern, $replacement, $string, $option) {}

/**
 * @param $pattern
 * @param $replacement
 * @param $string
 * @param string $option
 * @return string
 */
function mberegi_replace ($pattern, $replacement, $string, string $option = "msri") {}

/**
 * @param $pattern
 * @param $string
 * @param $limit [optional]
 */
function mbsplit ($pattern, $string, $limit) {}

/**
 * @param $pattern
 * @param $string
 * @param $option [optional]
 */
function mbereg_match ($pattern, $string, $option) {}

/**
 * @param $pattern [optional]
 * @param $option [optional]
 */
function mbereg_search ($pattern, $option) {}

/**
 * @param $pattern [optional]
 * @param $option [optional]
 */
function mbereg_search_pos ($pattern, $option) {}

/**
 * @param $pattern [optional]
 * @param $option [optional]
 */
function mbereg_search_regs ($pattern, $option) {}

/**
 * @param $string
 * @param $pattern [optional]
 * @param $option [optional]
 */
function mbereg_search_init ($string, $pattern, $option) {}

function mbereg_search_getregs () {}

function mbereg_search_getpos () {}

/**
*<div id="function.mb-chr" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_chr</h1>   <p class="verinfo">(PHP 7 &gt;= 7.2.0)</p><p class="refpurpose"><span class="refname">mb_chr</span> &mdash; <span class="dc-title">Get a specific character</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.mb-chr-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_chr</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cp</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-function.mb-chr-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">cp</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">encoding</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-chr-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a specific character 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-chr-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_ord()} - Get code point of character</span></li>     <li class="member"><span class="function">{@link chr()} - 返回指定的字符</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false*/
function mb_chr($cp, $encoding) {}

/**
*<div id="function.mb-ord" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_ord</h1>   <p class="verinfo">(PHP 7 &gt;= 7.2.0)</p><p class="refpurpose"><span class="refname">mb_ord</span> &mdash; <span class="dc-title">Get code point of character</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.mb-ord-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>mb_ord</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-function.mb-ord-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">str</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">encoding</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-ord-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a code point of character 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.mb-ord-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link mb_chr()} - Get a specific character</span></li>     <li class="member"><span class="function">{@link ord()} - 转换字符串第一个字节为 0-255 之间的值</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return int|false*/
function mb_ord($str, $encoding) {}

/**
*<div id="function.mb-scrub" class="refentry">  <div class="refnamediv">   <h1 class="refname">mb_scrub</h1>   <p class="verinfo">(PHP 7 &gt;= 7.2.0)</p><p class="refpurpose"><span class="refname">mb_scrub</span> &mdash; <span class="dc-title">Description</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.mb-scrub-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>mb_scrub</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-function.mb-scrub-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">str</code></dt>      <dd>       <p class="para">             </p>     </dd>              <dt> <code class="parameter">encoding</code></dt>      <dd>       <p class="para">             </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.mb-scrub-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">       </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.mbstring.php">多字节字符串 函数</a></div></div>
 * @return string|false*/
function mb_scrub($str, $encoding) {}

/**
 * @param $position
 */
function mbereg_search_setpos ($position) {}

define ('MB_OVERLOAD_MAIL', 1);
define ('MB_OVERLOAD_STRING', 2);
define ('MB_OVERLOAD_REGEX', 4);
define ('MB_CASE_UPPER', 0);
define ('MB_CASE_LOWER', 1);
define ('MB_CASE_TITLE', 2);

// End of mbstring v.
?>
