<?php

// Start of standard v.5.3.2-0.dotdeb.1

class __PHP_Incomplete_Class  {
}

/**
*<div id="class.php-user-filter" class="reference">   <h1 class="title">The php_user_filter class</h1>     <div class="partintro"><p class="verinfo">(PHP 5, PHP 7)</p>     <div class="section" id="php-user-filter.intro">    <h2 class="title">简介</h2>    <p class="para">     Children of this class are passed to     <span class="function">{@link stream_filter_register()}</span>.    </p>   </div>     <div class="section" id="php-user-filter.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">php_user_filter</strong>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.php-user-filter.php#php-user-filter.props.filtername">$<var class="varname">filtername</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.php-user-filter.php#php-user-filter.props.params">$<var class="varname">params</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/php-user-filter.filter.php" class="methodname">filter</a></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$in</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$out</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$consumed</code></span>    , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$closing</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/php-user-filter.onclose.php" class="methodname">onClose</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/php-user-filter.oncreate.php" class="methodname">onCreate</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>        <div class="section" id="php-user-filter.props">    <h2 class="title">属性</h2>    <dl>            <dt id="php-user-filter.props.filtername"><var class="varname"><var class="varname">filtername</var></var></dt>       <dd>        <p class="para">        Name of the filter registered by        <span class="function">{@link stream_filter_append()}</span>.       </p>      </dd>                 <dt id="php-user-filter.props.params"><var class="varname"><var class="varname">params</var></var></dt>       <dd>        <p class="para"/>      </dd>          </dl>    </div>     </div>                          <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link php_user_filter::filter} — Called when applying the filter</li><li>{@link php_user_filter::onClose} — Called when closing the filter</li><li>{@link php_user_filter::onCreate} — Called when creating the filter</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.stream.php">Streams</a></div></div>
*/
class php_user_filter  {
        public $filtername;
        public $params;


/**
*<div id="php-user-filter.filter" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_user_filter::filter</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">php_user_filter::filter</span> &mdash; <span class="dc-title">Called when applying the filter</span></p>   </div>   <div class="refsect1 description" id="refsect1-php-user-filter.filter-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>php_user_filter::filter</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$in</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$out</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$consumed</code></span>    , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$closing</code></span>    )</div>    <p class="para rdfs-comment">    This method is called whenever data is read from or written to    the attached stream (such as with <span class="function">{@link fread()}</span> or <span class="function">{@link fwrite()}</span>).   </p>   </div>    <div class="refsect1 parameters" id="refsect1-php-user-filter.filter-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">in</code></dt>      <dd>       <p class="para">       <code class="parameter">in</code> is a resource pointing to a <em>bucket brigade</em>       which contains one or more <em>bucket</em> objects containing data to be filtered.      </p>     </dd>              <dt> <code class="parameter">out</code></dt>      <dd>       <p class="para">       <code class="parameter">out</code> is a resource pointing to a second <em>bucket brigade</em>       into which your modified buckets should be placed.      </p>     </dd>              <dt> <code class="parameter">consumed</code></dt>      <dd>       <p class="para">       <code class="parameter">consumed</code>, which must <em class="emphasis">always</em>       be declared by reference, should be incremented by the length of the data       which your filter reads in and alters.  In most cases this means you will       increment <code class="parameter">consumed</code> by <em>$bucket-&gt;datalen</em>       for each <em>$bucket</em>.      </p>     </dd>              <dt> <code class="parameter">closing</code></dt>      <dd>       <p class="para">       If the stream is in the process of closing       (and therefore this is the last pass through the filterchain),       the <code class="parameter">closing</code> parameter will be set to <strong><code>TRUE</code></strong>.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-php-user-filter.filter-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The <span class="methodname"><strong>filter()</strong></span> method must return one of    three values upon completion.    <table class="doctable informaltable">           <thead>       <tr>        <th>Return Value</th>        <th>Meaning</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td><strong><code>PSFS_PASS_ON</code></strong></td>        <td>         Filter processed successfully with data available in the         <code class="parameter">out</code> <em>bucket brigade</em>.        </td>       </tr>        <tr>        <td><strong><code>PSFS_FEED_ME</code></strong></td>        <td>         Filter processed successfully, however no data was available to         return. More data is required from the stream or prior filter.        </td>       </tr>        <tr>        <td><strong><code>PSFS_ERR_FATAL</code></strong> (default)</td>        <td>         The filter experienced an unrecoverable error and cannot continue.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.php-user-filter.php">php_user_filter</a></div></div>
     * @return int <p>*/
    public function filter($in, $out, &$consumed, $closing)
    {
    }

/**
*<div id="php-user-filter.oncreate" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_user_filter::onCreate</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">php_user_filter::onCreate</span> &mdash; <span class="dc-title">Called when creating the filter</span></p>   </div>   <div class="refsect1 description" id="refsect1-php-user-filter.oncreate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>php_user_filter::onCreate</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method is called during instantiation of the filter class    object.  If your filter allocates or initializes any other resources    (such as a buffer), this is the place to do it.   </p>    <p class="para">    When your filter is first instantiated, and    <em>yourfilter-&gt;onCreate()</em> is called, a number of properties    will be available as shown in the table below.   </p>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>Property</th>        <th>Contents</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td><em>FilterClass-&gt;filtername</em></td>        <td>         A string containing the name the filter was instantiated with.         Filters may be registered under multiple names or under wildcards.         Use this property to determine which name was used.        </td>       </tr>        <tr>        <td><em>FilterClass-&gt;params</em></td>        <td>         The contents of the <code class="parameter">params</code> parameter passed         to <span class="function">{@link stream_filter_append()}</span>         or <span class="function">{@link stream_filter_prepend()}</span>.        </td>       </tr>        <tr>        <td><em>FilterClass-&gt;stream</em></td>        <td>         The stream resource being filtered. Maybe available only during         <span class="methodname"><strong>filter()</strong></span> calls when the          <em>closing</em> parameter is set to <strong><code>FALSE</code></strong>.        </td>       </tr>       </tbody>         </table>    </p>   </div>    <div class="refsect1 parameters" id="refsect1-php-user-filter.oncreate-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-php-user-filter.oncreate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Your implementation of    this method should return <strong><code>FALSE</code></strong> on failure, or <strong><code>TRUE</code></strong> on success.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.php-user-filter.php">php_user_filter</a></div></div>
     * @return bool*/
    public function onCreate()
    {
    }

/**
*<div id="php-user-filter.onclose" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_user_filter::onClose</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">php_user_filter::onClose</span> &mdash; <span class="dc-title">Called when closing the filter</span></p>   </div>   <div class="refsect1 description" id="refsect1-php-user-filter.onclose-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>php_user_filter::onClose</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method is called upon filter shutdown (typically, this is also    during stream shutdown), and is executed <em class="emphasis">after</em>    the <em>flush</em> method is called.  If any resources    were allocated or initialized during <em>onCreate()</em>    this would be the time to destroy or dispose of them.   </p>   </div>    <div class="refsect1 parameters" id="refsect1-php-user-filter.onclose-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-php-user-filter.onclose-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Return value is ignored.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.php-user-filter.php">php_user_filter</a></div></div>
*/
    public function onClose()
    {
    }

}

/**
*<div id="class.directory" class="reference">   <h1 class="title">Directory 类</h1>     <div class="partintro"><p class="verinfo">(PHP 4, PHP 5, PHP 7)</p>     <div class="section" id="directory.intro">    <h2 class="title">简介</h2>    <p class="para">      <strong class="classname">Directory</strong> 实例是通过调用     <span class="function">{@link dir()}</span> 函数创建的，而不是 <a href="http://php.net/manual/zh/language.oop5.basic.php#language.oop5.basic.new" class="link">new</a> 操作符。    </p>   </div>     <div class="section" id="directory.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Directory</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.directory.php#directory.props.path">$<var class="varname">path</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">resource</span>       <var class="varname"><a href="http://php.net/manual/zh/class.directory.php#directory.props.handle">$<var class="varname">handle</var></a></var>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/directory.close.php" class="methodname">close</a></span>     ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/directory.read.php" class="methodname">read</a></span>     ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/directory.rewind.php" class="methodname">rewind</a></span>     ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span>   ] )</div>     }</div>     </div>     <div class="section" id="directory.props">    <h2 class="title">属性</h2>    <dl>            <dt id="directory.props.path"><var class="varname"><var class="varname">path</var></var></dt>       <dd>        <p class="para">        被打开目录的地址       </p>      </dd>                 <dt id="directory.props.handle"><var class="varname"><var class="varname">handle</var></var></dt>       <dd>        <p class="para">        目录句柄。可以被其他的目录操作函数使用，例如        <span class="function">{@link readdir()}</span>, <span class="function">{@link rewinddir()}</span> and        <span class="function">{@link closedir()}</span>。       </p>      </dd>          </dl>    </div>    </div>                                <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Directory::close} — 释放目录句柄</li><li>{@link Directory::read} — 从目录句柄中读取条目</li><li>{@link Directory::rewind} — 倒回目录句柄</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.dir.php">目录</a></div></div>
*/
class Directory  {

    /**
     * @var string The directory that was opened.
     */
    public $path;

    /**
     * @var resource Can be used with other directory functions such as {@see readdir()}, {@see rewinddir()} and {@see closedir()}.
     */
    public $handle;
    
/**
*<div id="directory.close" class="refentry">  <div class="refnamediv">   <h1 class="refname">Directory::close</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">Directory::close</span> &mdash; <span class="dc-title">释放目录句柄</span></p>   </div>   <div class="refsect1 description" id="refsect1-directory.close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Directory::close</strong></span>     ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span>   ] )</div>    <p class="para rdfs-comment">    与 <span class="function">{@link closedir()}</span> 函数功能一样，只是 <code class="parameter">    dir_handle</code> 默认为 <var class="varname"><var class="varname">$this</var></var> 变量。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directory.php">Directory</a></div></div>
*/
    public function close ( $dir_handle ) {}

/**
*<div id="directory.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">Directory::rewind</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">Directory::rewind</span> &mdash; <span class="dc-title">倒回目录句柄</span></p>   </div>   <div class="refsect1 description" id="refsect1-directory.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>Directory::rewind</strong></span>     ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span>   ] )</div>    <p class="para rdfs-comment">    与 <span class="function">{@link rewinddir()}</span> 函数功能一样, 只是 <code class="parameter">    dir_handle</code> 默认为 <var class="varname"><var class="varname">$this</var></var> 变量。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directory.php">Directory</a></div></div>
*/
    public function rewind ( $dir_handle ) {}

/**
*<div id="directory.read" class="refentry">  <div class="refnamediv">   <h1 class="refname">Directory::read</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">Directory::read</span> &mdash; <span class="dc-title">从目录句柄中读取条目</span></p>   </div>   <div class="refsect1 description" id="refsect1-directory.read-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Directory::read</strong></span>     ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span>   ] )</div>    <p class="para rdfs-comment">    与 <span class="function">{@link readdir()}</span> 函数功能一样, 只是 <code class="parameter">    dir_handle</code> 默认为 <var class="varname"><var class="varname">$this</var></var> 变量。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.directory.php">Directory</a></div></div>
     * @return string*/
    public function read ( $dir_handle) { }

}

/**
*<div id="function.constant" class="refentry">  <div class="refnamediv">   <h1 class="refname">constant</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">constant</span> &mdash; <span class="dc-title">返回一个常量的值</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.constant-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>constant</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>    <p class="simpara">    通过 <code class="parameter">name</code> 返回常量的值。   </p>   <p class="simpara">    当你不知道常量名，却需要获取常量的值时，<span class="function"><strong>constant()</strong></span> 就很有用了。也就是常量名储存在一个变量里，或者由函数返回常量名。   </p>   <p class="simpara">    该函数也适用 <a href="http://php.net/manual/zh/language.oop5.constants.php" class="link">class constants</a>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.constant-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">name</code></dt>       <dd>        <p class="para">           常量名。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.constant-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">   返回常量的值。如果常量未定义则返回 <strong><code>NULL</code></strong>。   </p>  </div>    <div class="refsect1 errors" id="refsect1-function.constant-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果常量未定义，会产生一个 <strong><code>E_WARNING</code></strong> 级别的错误。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.constant-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4527">     <p><strong>Example #1 <span class="function"><strong>constant()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />define</span><span style="color: #007700">(</span><span style="color: #DD0000">"MAXSIZE"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">MAXSIZE</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #DD0000">"MAXSIZE"</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;same&nbsp;thing&nbsp;as&nbsp;the&nbsp;previous&nbsp;line<br /><br /><br /></span><span style="color: #007700">interface&nbsp;</span><span style="color: #9876AA">bar&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span style="color: #9876AA">test&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'foobar!'</span><span style="color: #007700">;<br />}<br /><br />class&nbsp;</span><span style="color: #9876AA">foo&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span style="color: #9876AA">test&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'foobar!'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$const&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'test'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #DD0000">'bar::'</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$const</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;string(7)&nbsp;"foobar!"<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo::'</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$const</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;string(7)&nbsp;"foobar!"<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.constant-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link define()} - 定义一个常量</span></li>     <li class="member"><span class="function">{@link defined()} - 检查某个名称的常量是否存在</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.constants.php" class="link">Constants</a> 这一节</li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return mixed the value of the constant, or &null; if the constant is not*/
function constant ($name) {}

/**
*<div id="function.bin2hex" class="refentry">  <div class="refnamediv">   <h1 class="refname">bin2hex</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">bin2hex</span> &mdash; <span class="dc-title">函数把包含数据的二进制字符串转换为十六进制值</span></p>   </div>     <div class="refsect1 description" id="refsect1-function.bin2hex-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>bin2hex</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    )</div>    <p class="para rdfs-comment">    把二进制的参数    <code class="parameter">str</code>    转换为的十六进制的字符串。转换使用字节方式，高四位字节优先。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.bin2hex-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        二进制字符串。       </p>      </dd>          </dl>    </p>  </div>      <div class="refsect1 returnvalues" id="refsect1-function.bin2hex-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回指定字符串十六进制的表示。   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.bin2hex-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link hex2bin()} - 转换十六进制字符串为二进制字符串</span></li>     <li class="member"><span class="function">{@link pack()} - 将数据打包成二进制字符串</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the hexadecimal representation of the given string.*/
function bin2hex ($str) {}

/**
*<div id="function.sleep" class="refentry">  <div class="refnamediv">   <h1 class="refname">sleep</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">sleep</span> &mdash; <span class="dc-title">延缓执行</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.sleep-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>sleep</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span>    )</div>    <p class="simpara">    程序延迟执行指定的 <code class="parameter">seconds</code> 的秒数。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sleep-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">seconds</code></dt>       <dd>        <p class="para">        暂停的秒数。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sleep-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 0，错误时返回 <strong><code>FALSE</code></strong>。   </p>   <p class="para">    如果函数的调用被一个信号中止，<span class="function"><strong>sleep()</strong></span> 会返回一个非零的值。在Windows上，该值总是 <em>192</em>（即Windows API常量<strong><code>WAIT_IO_COMPLETION</code></strong>的值）。其他平台上，该返回值是剩余未sleep的秒数。   </p>  </div>    <div class="refsect1 errors" id="refsect1-function.sleep-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果指定的 <code class="parameter">seconds</code> 是负数，该函数会产生一个 <strong><code>E_WARNING</code></strong> 级别的错误。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.sleep-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.4</td>        <td>         在PHP 5.3.4之前，Windows平台下无论 <span class="function"><strong>sleep()</strong></span> 是否成功调用，总是会返回一个 <strong><code>NULL</code></strong>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sleep-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4543">     <p><strong>Example #1 <span class="function"><strong>sleep()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;current&nbsp;time<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'h:i:s'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;sleep&nbsp;for&nbsp;10&nbsp;seconds<br /></span><span style="color: #9876AA">sleep</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;wake&nbsp;up&nbsp;!<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'h:i:s'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>      该例子会在休眠10秒后输出。     </p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 05:31:23 05:31:33 </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sleep-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link usleep()} - 以指定的微秒数延迟执行</span></li>     <li class="member"><span class="function">{@link time_nanosleep()} - 延缓执行若干秒和纳秒</span></li>     <li class="member"><span class="function">{@link time_sleep_until()} - 使脚本睡眠到指定的时间为止。</span></li>     <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return int zero on success, or false on errors. If the call was interrupted*/
function sleep ($seconds) {}

/**
*<div id="function.usleep" class="refentry">  <div class="refnamediv">   <h1 class="refname">usleep</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">usleep</span> &mdash; <span class="dc-title">以指定的微秒数延迟执行</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.usleep-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>usleep</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$micro_seconds</code></span>    )</div>    <p class="para rdfs-comment">    以指定的微秒数延缓程序的执行。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.usleep-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">micro_seconds</code></dt>       <dd>        <p class="para">        暂停的时间以微秒计。1微秒（micro second）是百万分之一秒。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.usleep-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.usleep-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4551">     <p><strong>Example #1 <span class="function"><strong>usleep()</strong></span>例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;Current&nbsp;time<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'h:i:s'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;wait&nbsp;for&nbsp;2&nbsp;seconds<br /></span><span style="color: #9876AA">usleep</span><span style="color: #007700">(</span><span style="color: #9876AA">2000000</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;back!<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'h:i:s'</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 11:13:28 11:13:30 </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.usleep-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sleep()} - 延缓执行</span></li>     <li class="member"><span class="function">{@link time_nanosleep()} - 延缓执行若干秒和纳秒</span></li>     <li class="member"><span class="function">{@link time_sleep_until()} - 使脚本睡眠到指定的时间为止。</span></li>     <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return void */
function usleep ($micro_seconds) {}

/**
*<div id="function.time-nanosleep" class="refentry">  <div class="refnamediv">   <h1 class="refname">time_nanosleep</h1>   <p class="verinfo">(PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">time_nanosleep</span> &mdash; <span class="dc-title">延缓执行若干秒和纳秒</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.time-nanosleep-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>time_nanosleep</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$nanoseconds</code></span>    )</div>    <p class="para rdfs-comment">    程序延缓执行指定数量的 <code class="parameter">seconds</code> 和 <code class="parameter">nanoseconds</code>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.time-nanosleep-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">seconds</code></dt>       <dd>        <p class="para">        必须是一个非负整数。       </p>      </dd>                 <dt> <code class="parameter">nanoseconds</code></dt>       <dd>        <p class="para">        必须是一个小于1亿的非负整数。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.time-nanosleep-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>   <p class="para">    如果延迟被中断，一个关联数组会返回，内容为：    <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       <em>seconds</em> - 延迟剩余未执行的秒数      </span>     </li>     <li class="listitem">      <span class="simpara">       <em>nanoseconds</em> - 延迟剩余未执行的纳秒数      </span>     </li>    </ul>   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.time-nanosleep-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         至此之后该函数在Windows平台下可用。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.time-nanosleep-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4545">     <p><strong>Example #1 <span class="function"><strong>time_nanosleep()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Careful!&nbsp;This&nbsp;won't&nbsp;work&nbsp;as&nbsp;expected&nbsp;if&nbsp;an&nbsp;array&nbsp;is&nbsp;returned<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">time_nanosleep</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">500000000</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Slept&nbsp;for&nbsp;half&nbsp;a&nbsp;second.\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;This&nbsp;is&nbsp;better:<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">time_nanosleep</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">500000000</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Slept&nbsp;for&nbsp;half&nbsp;a&nbsp;second.\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;And&nbsp;this&nbsp;is&nbsp;the&nbsp;best:<br /></span><span style="color: #9876AA">$nano&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">time_nanosleep</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">100000</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">$nano&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Slept&nbsp;for&nbsp;2&nbsp;seconds,&nbsp;100&nbsp;microseconds.\n"</span><span style="color: #007700">;<br />}&nbsp;elseif&nbsp;(</span><span style="color: #9876AA">$nano&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Sleeping&nbsp;failed.\n"</span><span style="color: #007700">;<br />}&nbsp;elseif&nbsp;(</span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$nano</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$seconds&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$nano</span><span style="color: #007700">[</span><span style="color: #DD0000">'seconds'</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$nanoseconds&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$nano</span><span style="color: #007700">[</span><span style="color: #DD0000">'nanoseconds'</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Interrupted&nbsp;by&nbsp;a&nbsp;signal.\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Time&nbsp;remaining:&nbsp;</span><span style="color: #9876AA">$seconds</span><span style="color: #DD0000">&nbsp;seconds,&nbsp;</span><span style="color: #9876AA">$nanoseconds</span><span style="color: #DD0000">&nbsp;nanoseconds."</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.time-nanosleep-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sleep()} - 延缓执行</span></li>     <li class="member"><span class="function">{@link usleep()} - 以指定的微秒数延迟执行</span></li>     <li class="member"><span class="function">{@link time_sleep_until()} - 使脚本睡眠到指定的时间为止。</span></li>     <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return bool|array true on success or false on failure.*/
function time_nanosleep ($seconds, $nanoseconds) {}

/**
*<div id="function.time-sleep-until" class="refentry">  <div class="refnamediv">   <h1 class="refname">time_sleep_until</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">time_sleep_until</span> &mdash; <span class="dc-title">    使脚本睡眠到指定的时间为止。   </span></p>   </div>   <div class="refsect1 description" id="refsect1-function.time-sleep-until-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>time_sleep_until</strong></span>     ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$timestamp</code></span>    )</div>    <p class="para rdfs-comment">    使脚本睡眠到指定的    <code class="parameter">timestamp</code>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.time-sleep-until-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">timestamp</code></dt>       <dd>        <p class="para">        将脚本唤醒的时间戳。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.time-sleep-until-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.time-sleep-until-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         自此，函数在Windows平台可用。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 errors" id="refsect1-function.time-sleep-until-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果设定的 <code class="parameter">timestamp</code> 为过去的时间，脚本将会产生一个 <strong><code>E_WARNING</code></strong> 级别的错误。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.time-sleep-until-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-4546">     <p><strong>Example #1 <span class="function"><strong>time_sleep_until()</strong></span> 的一个例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//returns&nbsp;false&nbsp;and&nbsp;generates&nbsp;a&nbsp;warning<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">time_sleep_until</span><span style="color: #007700">(</span><span style="color: #9876AA">time</span><span style="color: #007700">()-</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;may&nbsp;only&nbsp;work&nbsp;on&nbsp;faster&nbsp;computers,&nbsp;will&nbsp;sleep&nbsp;up&nbsp;to&nbsp;0.2&nbsp;seconds<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">time_sleep_until</span><span style="color: #007700">(</span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">)+</span><span style="color: #9876AA">0.2</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.time-sleep-until-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     所有的信号会被延迟至脚本唤醒以后。    </span>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.time-sleep-until-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sleep()} - 延缓执行</span></li>     <li class="member"><span class="function">{@link usleep()} - 以指定的微秒数延迟执行</span></li>     <li class="member"><span class="function">{@link time_nanosleep()} - 延缓执行若干秒和纳秒</span></li>     <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.misc.php">杂项 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function time_sleep_until ($timestamp) {}

/**
*<div id="function.strptime" class="refentry">  <div class="refnamediv">   <h1 class="refname">strptime</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">strptime</span> &mdash; <span class="dc-title">解析由 <span class="function">{@link strftime()}</span> 生成的日期／时间</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.strptime-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>strptime</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$date</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>strptime()</strong></span> 返回一个将    <code class="parameter">date</code> 解析后的数组，如果出错返回 <strong><code>FALSE</code></strong>。   </p>   <p class="para">    月份和星期几的名字以及其它与语种有关的字符串对应于    <span class="function">{@link setlocale()}</span>设定的当前区域（<strong><code>LC_TIME</code></strong>）。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.strptime-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">date</code>（<span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>）</dt>       <dd>        <p class="para">        被解析的字符串（例如从 <span class="function">{@link strftime()}</span> 返回的）       </p>      </dd>                 <dt> <code class="parameter">format</code>（<span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>）</dt>       <dd>        <p class="para">        <code class="parameter">date</code> 所使用的格式（例如同        <span class="function">{@link strftime()}</span> 中所使用的相同）。       </p>       <p class="para">        更多有关格式选项的信息见 <span class="function">{@link strftime()}</span> 页面。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.strptime-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数组 或者在失败时返回 <strong><code>FALSE</code></strong>   </p>    <p class="para">    <table class="doctable table">     <caption><strong>数组中包含以下单元</strong></caption>           <thead>       <tr>        <th>键名</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>tm_sec</td>        <td>当前分钟内的秒数（0-61）</td>       </tr>        <tr>        <td>tm_min</td>        <td>当前小时内的分钟数（0-59）</td>       </tr>        <tr>        <td>tm_hour</td>        <td>午夜起的小时数（0-23）</td>       </tr>        <tr>        <td>tm_mday</td>        <td>月份中的第几天（1-31）</td>       </tr>        <tr>        <td>tm_mon</td>        <td>自一月起过了几个月（0-11）</td>       </tr>        <tr>        <td>tm_year</td>        <td>自 1900 年起过了几年</td>       </tr>        <tr>        <td>tm_wday</td>        <td>自星期天起过了几天（0-6）</td>       </tr>        <tr>        <td>tm_yday</td>        <td>本年自一月一日起过了多少天（0-365）</td>       </tr>        <tr>        <td>unparsed</td>        <td><code class="parameter">date</code> 中未能通过指定的        <code class="parameter">format</code> 识别的部分</td>       </tr>       </tbody>         </table>    </p>   </div>    <div class="refsect1 examples" id="refsect1-function.strptime-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2730">     <p><strong>Example #1 <span class="function"><strong>strptime()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$format&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'%d/%m/%Y&nbsp;%H:%M:%S'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$strf&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strftime</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$strf</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">strptime</span><span style="color: #007700">(</span><span style="color: #9876AA">$strf</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$format</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 03/10/2004 15:54:19  Array (     [tm_sec] =&gt; 19     [tm_min] =&gt; 54     [tm_hour] =&gt; 15     [tm_mday] =&gt; 3     [tm_mon] =&gt; 9     [tm_year] =&gt; 104     [tm_wday] =&gt; 0     [tm_yday] =&gt; 276     [unparsed] =&gt; ) </pre></div>     </div>    </div>   </p>  </div>       <div class="refsect1 notes" id="refsect1-function.strptime-notes">      <h3 class="title">注释</h3>      <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">此函数未在 Windows 平台下实现。</span></p></blockquote>      <blockquote class="note"><p><strong class="note">Note</strong>:        <p class="para">        Internally, this function calls the <em>strptime()</em>        function provided by the system&#039;s C library. This function can exhibit        noticeably different behaviour across different operating systems. The        use of <span class="function">{@link date_parse_from_format()}</span>, which does not        suffer from these issues, is recommended on PHP 5.3.0 and later.       </p>      </p></blockquote>      <blockquote class="note"><p><strong class="note">Note</strong>:        <p class="para">        <em>&quot;tm_sec&quot;</em> includes any leap seconds (currently upto 2        a year). For more information on leap seconds, see the <a href="http://en.wikipedia.org/wiki/Leap_second" class="link external">&raquo;&nbsp;Wikipedia article        on leap seconds</a>.       </p>      </p></blockquote>      <blockquote class="note"><p><strong class="note">Note</strong>:        <p class="para">        Prior to PHP 5.2.0, this function could return undefined behaviour. Notably,        the <em>&quot;tm_sec&quot;</em>, <em>&quot;tm_min&quot;</em> and <em>&quot;tm_hour&quot;</em>         entries would return undefined values.       </p>      </p></blockquote>     </div>     <div class="refsect1 seealso" id="refsect1-function.strptime-seealso">     <h3 class="title">参见</h3>     <p class="para">      <ul class="simplelist">       <li class="member"><span class="function">{@link checkdate()} - 验证一个格里高里日期</span></li>       <li class="member"><span class="function">{@link strftime()} - 根据区域设置格式化本地时间／日期</span></li>       <li class="member"><span class="function">{@link date_parse_from_format()} - Get info about given date formatted according to the specified format</span></li>       <li class="member"><span class="function">{@link DateTime::createFromFormat()} - 根据给定的格式解析日期时间字符串</span></li>      </ul>     </p>    </div>  <div class="up"><a href="http://php.net/manual/zh/ref.datetime.php">Date/Time 函数</a></div></div>
 * @return array|bool an array or false on failure.*/
function strptime ($date, $format) {}

/**
*<div id="function.flush" class="refentry">    <div class="refnamediv">     <h1 class="refname">flush</h1>      <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">flush</span> &mdash; <span class="dc-title">刷新输出缓冲</span></p>     </div>    <div class="refsect1 unknown-seealsp" id="refsect1-function.flush-unknown-seealsp">     <h3 class="title">说明</h3>      <div class="methodsynopsis dc-description">       <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>flush</strong></span>        ( <span class="methodparam">void</span>       )</div>      <p class="simpara">      刷新PHP程序的缓冲，而不论PHP执行在何种情况下（CGI ，web服务器等等）。该函数将当前为止程序的所有输出发送到用户的浏览器。     </p>     <p class="para">      <span class="function"><strong>flush()</strong></span> 函数不会对服务器或客户端浏览器的缓存模式产生影响。因此，必须同时使用 <span class="function">{@link ob_flush()}</span> 和<span class="function"><strong>flush()</strong></span> 函数来刷新输出缓冲。     </p>     <p class="para">      个别web服务器程序，特别是Win32下的web服务器程序，在发送结果到浏览器之前，仍然会缓存脚本的输出，直到程序结束为止。     </p>     <p class="para">      有些Apache的模块，比如mod_gzip，可能自己进行输出缓存，这将导致<span class="function"><strong>flush()</strong></span>函数产生的结果不会立即被发送到客户端浏览器。     </p>     <p class="para">      甚至浏览器也会在显示之前，缓存接收到的内容。例如 Netscape 浏览器会在接受到换行或 html 标记的开头之前缓存内容，并且在接受到 &lt;/table&gt; 标记之前，不会显示出整个表格。     </p>     <p class="para">      一些版本的 Microsoft Internet Explorer 只有当接受到的256个字节以后才开始显示该页面，所以必须发送一些额外的空格来让这些浏览器显示页面内容。     </p>    </div>    <div class="up"><a href="http://php.net/manual/zh/ref.outcontrol.php">Output Control 函数</a></div></div>
 * @return void */
function flush () {}

/**
*<div id="function.wordwrap" class="refentry">  <div class="refnamediv">   <h1 class="refname">wordwrap</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">wordwrap</span> &mdash; <span class="dc-title">打断字符串为指定数量的字串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.wordwrap-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>wordwrap</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code><span class="initializer"> = 75</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$break</code><span class="initializer"> = &quot;\n&quot;</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$cut</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ]]] )</div>    <p class="para rdfs-comment">    使用字符串断点将字符串打断为指定数量的字串。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.wordwrap-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        输入字符串。       </p>      </dd>                 <dt> <code class="parameter">width</code></dt>       <dd>        <p class="para">        列宽度。       </p>      </dd>                 <dt> <code class="parameter">break</code></dt>       <dd>        <p class="para">        使用可选的 <code class="parameter">break</code> 参数打断字符串。       </p>      </dd>                 <dt> <code class="parameter">cut</code></dt>       <dd>        <p class="para">        如果 <code class="parameter">cut</code> 设置为 <strong><code>TRUE</code></strong>，字符串总是在指定的 <code class="parameter">width</code> 或者之前位置被打断。因此，如果有的单词宽度超过了给定的宽度，它将被分隔开来。（参见第二个范例）。        当它是  <strong><code>FALSE</code></strong> ，函数不会分割单词，哪怕 <code class="parameter">width</code> 小于单词宽度。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.wordwrap-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回打断后的字符串。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.wordwrap-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6003">     <p><strong>Example #1 <span class="function"><strong>wordwrap()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$text&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"The&nbsp;quick&nbsp;brown&nbsp;fox&nbsp;jumped&nbsp;over&nbsp;the&nbsp;lazy&nbsp;dog."</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newtext&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">wordwrap</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">20</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"&lt;br&nbsp;/&gt;\n"</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$newtext</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> The quick brown fox&lt;br /&gt; jumped over the lazy&lt;br /&gt; dog. </pre></div>     </div>    </div>    <div class="example" id="example-6004">     <p><strong>Example #2 <span class="function"><strong>wordwrap()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$text&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"A&nbsp;very&nbsp;long&nbsp;woooooooooooord."</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newtext&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">wordwrap</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$newtext</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> A very long wooooooo ooooord. </pre></div>     </div>    </div>        <div class="example" id="example-6005">     <p><strong>Example #3 <span class="function"><strong>wordwrap()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$text&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"A&nbsp;very&nbsp;long&nbsp;woooooooooooooooooord.&nbsp;and&nbsp;something"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newtext&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">wordwrap</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$newtext</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> A very long woooooooooooooooooord. and something </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.wordwrap-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link nl2br()} - 在字符串所有新行之前插入 HTML 换行标记</span></li>     <li class="member"><span class="function">{@link chunk_split()} - 将字符串分割成小块</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the given string wrapped at the specified column.*/
function wordwrap ($str, $width = 75, $break = "\n", $cut = false) {}

/**
*<div id="function.htmlspecialchars" class="refentry">  <div class="refnamediv">   <h1 class="refname">htmlspecialchars</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">htmlspecialchars</span> &mdash; <span class="dc-title">将特殊字符转换为 HTML 实体</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.htmlspecialchars-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>htmlspecialchars</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = ENT_COMPAT | ENT_HTML401</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = ini_get(&quot;default_charset&quot;)</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$double_encode</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]]] )</div>    <p class="para rdfs-comment">    某类字符在 HTML 中有特殊用处，如需保持原意，需要用 HTML 实体来表达。    本函数会返回字符转义后的表达。    如需转换子字符串中所有关联的名称实体，使用 <span class="function">{@link htmlentities()}</span> 代替本函数。   </p>   <p class="para">    如果传入字符的字符编码和最终的文档是一致的，则用函数处理的输入适合绝大多数 HTML 文档环境。    然而，如果输入的字符编码和最终包含字符的文档是不一样的，    想要保留字符（以数字或名称实体的形式），本函数以及 <span class="function">{@link htmlentities()}</span>     （仅编码名称实体对应的子字符串）可能不够用。    这种情况可以使用 <span class="function">{@link mb_encode_numericentity()}</span> 代替。   </p>   <p class="para">    <table class="doctable table">     <caption><strong>执行转换</strong></caption>           <thead>       <tr>        <th>字符</th>        <th>替换后</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td><em>&amp;</em> (&amp; 符号)</td>        <td><em>&amp;amp;</em></td>       </tr>        <tr>        <td><em>&quot;</em> (双引号)</td>        <td><em>&amp;quot;</em>，除非设置了 <strong><code>ENT_NOQUOTES</code></strong></td>       </tr>        <tr>        <td><em>&#039;</em> (单引号)</td>        <td>          设置了 <strong><code>ENT_QUOTES</code></strong> 后，         <em>&amp;#039;</em>         (如果是 <strong><code>ENT_HTML401</code></strong>) ，或者 <em>&amp;apos;</em> (如果是         <strong><code>ENT_XML1</code></strong>、 <strong><code>ENT_XHTML</code></strong> 或         <strong><code>ENT_HTML5</code></strong>)。        </td>       </tr>        <tr>        <td><em>&lt;</em> (小于)</td>        <td><em>&amp;lt;</em></td>       </tr>        <tr>        <td><em>&gt;</em> (大于)</td>        <td><em>&amp;gt;</em></td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.htmlspecialchars-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        待转换的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。       </p>      </dd>                 <dt> <code class="parameter">flags</code></dt>       <dd>        <p class="para">        位掩码，由以下某个或多个标记组成，设置转义处理细节、无效单元序列、文档类型。        默认是        <em>ENT_COMPAT | ENT_HTML401</em>。        <table class="doctable table">         <caption><strong>有效的 <code class="parameter">flags</code> 常量</strong></caption>                   <thead>           <tr>            <th>常量名称</th>            <th>描述</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><strong><code>ENT_COMPAT</code></strong></td>            <td>会转换双引号，不转换单引号。</td>           </tr>            <tr>            <td><strong><code>ENT_QUOTES</code></strong></td>            <td>既转换双引号也转换单引号。</td>           </tr>            <tr>            <td><strong><code>ENT_NOQUOTES</code></strong></td>            <td>单/双引号都不转换</td>           </tr>            <tr>            <td><strong><code>ENT_IGNORE</code></strong></td>            <td>             静默丢弃无效的代码单元序列，而不是返回空字符串。             不建议使用此标记，             因为它<a href="http://unicode.org/reports/tr36/#Deletion_of_Noncharacters" class="link external">&raquo;&nbsp;可能有安全影响</a>。            </td>           </tr>            <tr>            <td><strong><code>ENT_SUBSTITUTE</code></strong></td>            <td>             替换无效的代码单元序列为 Unicode 代替符（Replacement Character），             U+FFFD (UTF-8) 或者 &amp;#xFFFD; (其他)，而不是返回空字符串。            </td>           </tr>            <tr>            <td><strong><code>ENT_DISALLOWED</code></strong></td>            <td>             为文档的无效代码点替换为  Unicode 代替符（Replacement Character）：             U+FFFD (UTF-8)，或 &amp;#xFFFD;（其他），而不是把它们留在原处。             比如以下情况下就很有用：要保证 XML 文档嵌入额外内容时格式合法。            </td>           </tr>            <tr>            <td><strong><code>ENT_HTML401</code></strong></td>            <td>             以 HTML 4.01 处理代码。            </td>           </tr>            <tr>            <td><strong><code>ENT_XML1</code></strong></td>            <td>             以 XML 1 处理代码。            </td>           </tr>            <tr>            <td><strong><code>ENT_XHTML</code></strong></td>            <td>             以 XHTML 处理代码。            </td>           </tr>            <tr>            <td><strong><code>ENT_HTML5</code></strong></td>            <td>             以 HTML 5 处理代码。            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>          <p class="para">   An optional argument defining the encoding used when converting characters.  </p>   <p class="para">   If omitted, the default value of the <code class="parameter">encoding</code> varies   depending on the PHP version in use. In PHP 5.6 and later, the   <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration   option is used as the default value. PHP 5.4 and 5.5 will use   <em>UTF-8</em> as the default. Earlier versions of PHP use   <em>ISO-8859-1</em>.  </p>   <p class="para">   Although this argument is technically optional, you are highly encouraged to   specify the correct value for your code if you are using PHP 5.5 or earlier,   or if your <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a>   configuration option may be set incorrectly for the given input.  </p>        <p class="para">        本函数使用效果上，如果 <code class="parameter">string</code> 对以下字符编码是有效的，        <em>ISO-8859-1</em>、 <em>ISO-8859-15</em>、        <em>UTF-8</em>、 <em>cp866</em>、        <em>cp1251</em>、 <em>cp1252</em>、        <em>KOI8-R</em> 将具有相同的效果。        也就是说，在这些编码里，        受 <span class="function"><strong>htmlspecialchars()</strong></span> 影响的字符会占据相同的位置。       </p>          <p class="para">  支持以下字符集：  <table class="doctable table">   <caption><strong>支持的字符集列表</strong></caption>       <thead>     <tr>      <th>字符集</th>      <th>别名</th>      <th>描述</th>     </tr>     </thead>     <tbody class="tbody">     <tr>      <td>ISO-8859-1</td>      <td>ISO8859-1</td>      <td>       西欧，Latin-1      </td>     </tr>      <tr>      <td>ISO-8859-5</td>      <td>ISO8859-5</td>      <td>       Little used cyrillic charset (Latin/Cyrillic).      </td>     </tr>      <tr>      <td>ISO-8859-15</td>      <td>ISO8859-15</td>      <td>       西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。      </td>     </tr>      <tr>      <td>UTF-8</td>      <td class="empty">&nbsp;</td>      <td>       ASCII 兼容的多字节 8 位 Unicode。      </td>     </tr>      <tr>      <td>cp866</td>      <td>ibm866, 866</td>      <td>       DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1251</td>      <td>Windows-1251, win-1251, 1251</td>      <td>       Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1252</td>      <td>Windows-1252, 1252</td>      <td>       Windows 特有的西欧编码。      </td>     </tr>      <tr>      <td>KOI8-R</td>      <td>koi8-ru, koi8r</td>      <td>       俄语。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>BIG5</td>      <td>950</td>      <td>       繁体中文，主要用于中国台湾省。      </td>     </tr>      <tr>      <td>GB2312</td>      <td>936</td>      <td>       简体中文，中国国家标准字符集。      </td>     </tr>      <tr>      <td>BIG5-HKSCS</td>      <td class="empty">&nbsp;</td>      <td>       繁体中文，附带香港扩展的 Big5 字符集。      </td>     </tr>      <tr>      <td>Shift_JIS</td>      <td>SJIS, 932</td>      <td>       日语      </td>     </tr>      <tr>      <td>EUC-JP</td>      <td>EUCJP</td>      <td>       日语      </td>     </tr>      <tr>      <td>MacRoman</td>      <td class="empty">&nbsp;</td>      <td>       Mac OS 使用的字符串。      </td>     </tr>      <tr>      <td><em>&#039;&#039;</em></td>      <td class="empty">&nbsp;</td>      <td>       An empty string activates detection from script encoding (Zend multibyte),       <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current       locale (see <span class="function">{@link nl_langinfo()}</span> and       <span class="function">{@link setlocale()}</span>), in this order. Not recommended.      </td>     </tr>     </tbody>     </table>   <blockquote class="note"><p><strong class="note">Note</strong>:    <span class="simpara">    其他字符集没有认可。将会使用默认编码并抛出异常。   </span>  </p></blockquote> </p>        </dd>                 <dt> <code class="parameter">double_encode</code></dt>       <dd>        <p class="para">        关闭 <code class="parameter">double_encode</code> 时，PHP 不会转换现有的 HTML 实体，        默认是全部转换。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.htmlspecialchars-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    转换后的 <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>。   </p>   <p class="para">    如果指定的编码 <code class="parameter">encoding</code> 里，    <code class="parameter">string</code> 包含了无效的代码单元序列，    没有设置 <strong><code>ENT_IGNORE</code></strong> 或者    <strong><code>ENT_SUBSTITUTE</code></strong> 标记的情况下，会返回空字符串。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.htmlspecialchars-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">         <tr>   <td>5.6.0</td>   <td>    The default value for the <code class="parameter">encoding</code> parameter was    changed to be the value of the    <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration    option.   </td>  </tr>         <tr>        <td>5.4.0</td>        <td>         <code class="parameter">encoding</code> 参数的默认值改成 UTF-8。        </td>       </tr>        <tr>        <td>5.4.0</td>        <td>         增加常量 <strong><code>ENT_SUBSTITUTE</code></strong>、 <strong><code>ENT_DISALLOWED</code></strong>、         <strong><code>ENT_HTML401</code></strong>、 <strong><code>ENT_XML1</code></strong>、         <strong><code>ENT_XHTML</code></strong>、 <strong><code>ENT_HTML5</code></strong>。        </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         增加常量 <strong><code>ENT_IGNORE</code></strong>。        </td>       </tr>        <tr>        <td>5.2.3</td>        <td>         增加参数 <code class="parameter">double_encode</code>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.htmlspecialchars-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5909">     <p><strong>Example #1 <span class="function"><strong>htmlspecialchars()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$new&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;a&nbsp;href='test'&gt;Test&lt;/a&gt;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ENT_QUOTES</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$new</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;&amp;lt;a&nbsp;href=&amp;#039;test&amp;#039;&amp;gt;Test&amp;lt;/a&amp;gt;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.htmlspecialchars-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     注意，本函数不会转换以上列表以外的实体。     完整转换请参见 <span class="function">{@link htmlentities()}</span>。    </p>   </p></blockquote>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     如果 <code class="parameter">flags</code> 的设置模糊易混淆，将遵循以下规则：    </p>    <p class="para">     <ul class="itemizedlist">      <li class="listitem">       <span class="simpara">        当 <strong><code>ENT_COMPAT</code></strong>、<strong><code>ENT_QUOTES</code></strong>、<strong><code>ENT_NOQUOTES</code></strong> 都没设置，        默认就是 <strong><code>ENT_COMPAT</code></strong>。       </span>      </li>      <li class="listitem">       <span class="simpara">        如果设置不止一个 <strong><code>ENT_COMPAT</code></strong>、 <strong><code>ENT_QUOTES</code></strong>、        <strong><code>ENT_NOQUOTES</code></strong> ，优先级最高的是 <strong><code>ENT_QUOTES</code></strong>，        其次是 <strong><code>ENT_COMPAT</code></strong>。       </span>      </li>      <li class="listitem">       <span class="simpara">        当 <strong><code>ENT_HTML401</code></strong>、 <strong><code>ENT_HTML5</code></strong>、        <strong><code>ENT_XHTML</code></strong>、 <strong><code>ENT_XML1</code></strong> 都没设置，默认是        <strong><code>ENT_HTML401</code></strong>。       </span>      </li>      <li class="listitem">       <span class="simpara">        如果设置不止一个 <strong><code>ENT_HTML401</code></strong>、 <strong><code>ENT_HTML5</code></strong>、        <strong><code>ENT_XHTML</code></strong>、 <strong><code>ENT_XML1</code></strong>，        优先级最高的是        <strong><code>ENT_HTML5</code></strong> 其次是 <strong><code>ENT_XHTML</code></strong> 和 <strong><code>ENT_HTML401</code></strong>。       </span>      </li>      <li class="listitem">       <span class="simpara">        如果设置不止一个 <strong><code>ENT_DISALLOWED</code></strong>、 <strong><code>ENT_IGNORE</code></strong>、        <strong><code>ENT_SUBSTITUTE</code></strong>，优先级最高的是 <strong><code>ENT_IGNORE</code></strong>，        其次是 <strong><code>ENT_SUBSTITUTE</code></strong>。       </span>      </li>     </ul>    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.htmlspecialchars-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>     <li class="member"><span class="function">{@link htmlspecialchars_decode()} - 将特殊的 HTML 实体转换回普通字符</span></li>     <li class="member"><span class="function">{@link strip_tags()} - 从字符串中去除 HTML 和 PHP 标记</span></li>     <li class="member"><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>     <li class="member"><span class="function">{@link nl2br()} - 在字符串所有新行之前插入 HTML 换行标记</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string The converted string.*/
function htmlspecialchars ($string, $flags = ENT_COMPAT | ENT_HTML401, $encoding = 'UTF-8', $double_encode = true) {}

/**
*<div id="function.htmlentities" class="refentry">  <div class="refnamediv">   <h1 class="refname">htmlentities</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">htmlentities</span> &mdash; <span class="dc-title">将字符转换为 HTML 转义字符</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.htmlentities-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>htmlentities</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = ENT_COMPAT | ENT_HTML401</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = ini_get(&quot;default_charset&quot;)</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$double_encode</code><span class="initializer"> = true</span></span>   ]]] )</div>    <p class="para rdfs-comment">    本函数各方面都和 <span class="function">{@link htmlspecialchars()}</span> 一样，    除了 <span class="function"><strong>htmlentities()</strong></span> 会转换所有具有 HTML 实体的字符。   </p>   <p class="para">    如果要解码（反向操作），可以使用 <span class="function">{@link html_entity_decode()}</span>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.htmlentities-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        输入字符。       </p>      </dd>                 <dt> <code class="parameter">flags</code></dt>       <dd>        <p class="para">        以下一组位掩码标记，用于设置如何处理引号、无效代码序列、使用文档的类型。        默认是        <em>ENT_COMPAT | ENT_HTML401</em>。        <table class="doctable table">         <caption><strong>有效 <code class="parameter">flags</code> 标记常量</strong></caption>                   <thead>           <tr>            <th>常量名</th>            <th>描述</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><strong><code>ENT_COMPAT</code></strong></td>            <td>会转换双引号，不转换单引号。</td>           </tr>            <tr>            <td><strong><code>ENT_QUOTES</code></strong></td>            <td>既转换双引号也转换单引号。</td>           </tr>            <tr>            <td><strong><code>ENT_NOQUOTES</code></strong></td>            <td>单/双引号都不转换</td>           </tr>            <tr>            <td><strong><code>ENT_IGNORE</code></strong></td>            <td>             静默丢弃无效的代码单元序列，而不是返回空字符串。             不建议使用此标记，             因为它<a href="http://unicode.org/reports/tr36/#Deletion_of_Noncharacters" class="link external">&raquo;&nbsp;可能有安全影响</a>。            </td>           </tr>            <tr>            <td><strong><code>ENT_SUBSTITUTE</code></strong></td>            <td>             替换无效的代码单元序列为 Unicode 代替符（Replacement Character），             U+FFFD (UTF-8) 或者 &amp;#xFFFD; (其他)，而不是返回空字符串。            </td>           </tr>            <tr>            <td><strong><code>ENT_DISALLOWED</code></strong></td>            <td>             为文档的无效代码点替换为  Unicode 代替符（Replacement Character）：             U+FFFD (UTF-8)，或 &amp;#xFFFD;（其他），而不是把它们留在原处。             比如以下情况下就很有用：要保证 XML 文档嵌入额外内容时格式合法。            </td>           </tr>            <tr>            <td><strong><code>ENT_HTML401</code></strong></td>            <td>             以 HTML 4.01 处理代码。            </td>           </tr>            <tr>            <td><strong><code>ENT_XML1</code></strong></td>            <td>             以 XML 1 处理代码。            </td>           </tr>            <tr>            <td><strong><code>ENT_XHTML</code></strong></td>            <td>             以 XHTML 处理代码。            </td>           </tr>            <tr>            <td><strong><code>ENT_HTML5</code></strong></td>            <td>             以 HTML 5 处理代码。            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>          <p class="para">   An optional argument defining the encoding used when converting characters.  </p>   <p class="para">   If omitted, the default value of the <code class="parameter">encoding</code> varies   depending on the PHP version in use. In PHP 5.6 and later, the   <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration   option is used as the default value. PHP 5.4 and 5.5 will use   <em>UTF-8</em> as the default. Earlier versions of PHP use   <em>ISO-8859-1</em>.  </p>   <p class="para">   Although this argument is technically optional, you are highly encouraged to   specify the correct value for your code if you are using PHP 5.5 or earlier,   or if your <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a>   configuration option may be set incorrectly for the given input.  </p>           <p class="para">  支持以下字符集：  <table class="doctable table">   <caption><strong>支持的字符集列表</strong></caption>       <thead>     <tr>      <th>字符集</th>      <th>别名</th>      <th>描述</th>     </tr>     </thead>     <tbody class="tbody">     <tr>      <td>ISO-8859-1</td>      <td>ISO8859-1</td>      <td>       西欧，Latin-1      </td>     </tr>      <tr>      <td>ISO-8859-5</td>      <td>ISO8859-5</td>      <td>       Little used cyrillic charset (Latin/Cyrillic).      </td>     </tr>      <tr>      <td>ISO-8859-15</td>      <td>ISO8859-15</td>      <td>       西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。      </td>     </tr>      <tr>      <td>UTF-8</td>      <td class="empty">&nbsp;</td>      <td>       ASCII 兼容的多字节 8 位 Unicode。      </td>     </tr>      <tr>      <td>cp866</td>      <td>ibm866, 866</td>      <td>       DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1251</td>      <td>Windows-1251, win-1251, 1251</td>      <td>       Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1252</td>      <td>Windows-1252, 1252</td>      <td>       Windows 特有的西欧编码。      </td>     </tr>      <tr>      <td>KOI8-R</td>      <td>koi8-ru, koi8r</td>      <td>       俄语。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>BIG5</td>      <td>950</td>      <td>       繁体中文，主要用于中国台湾省。      </td>     </tr>      <tr>      <td>GB2312</td>      <td>936</td>      <td>       简体中文，中国国家标准字符集。      </td>     </tr>      <tr>      <td>BIG5-HKSCS</td>      <td class="empty">&nbsp;</td>      <td>       繁体中文，附带香港扩展的 Big5 字符集。      </td>     </tr>      <tr>      <td>Shift_JIS</td>      <td>SJIS, 932</td>      <td>       日语      </td>     </tr>      <tr>      <td>EUC-JP</td>      <td>EUCJP</td>      <td>       日语      </td>     </tr>      <tr>      <td>MacRoman</td>      <td class="empty">&nbsp;</td>      <td>       Mac OS 使用的字符串。      </td>     </tr>      <tr>      <td><em>&#039;&#039;</em></td>      <td class="empty">&nbsp;</td>      <td>       An empty string activates detection from script encoding (Zend multibyte),       <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current       locale (see <span class="function">{@link nl_langinfo()}</span> and       <span class="function">{@link setlocale()}</span>), in this order. Not recommended.      </td>     </tr>     </tbody>     </table>   <blockquote class="note"><p><strong class="note">Note</strong>:    <span class="simpara">    其他字符集没有认可。将会使用默认编码并抛出异常。   </span>  </p></blockquote> </p>        </dd>                 <dt> <code class="parameter">double_encode</code></dt>       <dd>        <p class="para">        关闭 <code class="parameter">double_encode</code> 时，PHP 不会转换现有的 HTML 实体，        默认是全部转换。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.htmlentities-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回编码后的字符。   </p>   <p class="para">    如果指定的编码 <code class="parameter">encoding</code> 里，    <code class="parameter">string</code> 包含了无效的代码单元序列，    没有设置 <strong><code>ENT_IGNORE</code></strong> 或者    <strong><code>ENT_SUBSTITUTE</code></strong> 标记的情况下，会返回空字符串。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.htmlentities-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">         <tr>   <td>5.6.0</td>   <td>    The default value for the <code class="parameter">encoding</code> parameter was    changed to be the value of the    <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration    option.   </td>  </tr>         <tr>        <td>5.4.0</td>        <td>         <code class="parameter">encoding</code> 参数的默认值改成 UTF-8。        </td>       </tr>        <tr>        <td>5.4.0</td>        <td>         增加常量 <strong><code>ENT_SUBSTITUTE</code></strong>、 <strong><code>ENT_DISALLOWED</code></strong>、         <strong><code>ENT_HTML401</code></strong>、 <strong><code>ENT_XML1</code></strong>、         <strong><code>ENT_XHTML</code></strong>、 <strong><code>ENT_HTML5</code></strong>。        </td>       </tr>        <tr>        <td>5.3.0</td>        <td>         增加常量 <strong><code>ENT_IGNORE</code></strong>。        </td>       </tr>        <tr>        <td>5.2.3</td>        <td>         增加参数 <code class="parameter">double_encode</code>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.htmlentities-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5906">     <p><strong>Example #1 <span class="function"><strong>htmlentities()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"A&nbsp;'quote'&nbsp;is&nbsp;&lt;b&gt;bold&lt;/b&gt;"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;输出:&nbsp;A&nbsp;'quote'&nbsp;is&nbsp;&amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;输出:&nbsp;A&nbsp;&amp;#039;quote&amp;#039;&nbsp;is&nbsp;&amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ENT_QUOTES</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>      <p class="para">    <div class="example" id="example-5907">     <p><strong>Example #2 <strong><code>ENT_IGNORE</code></strong> 用法示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"\x8F!!!"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;输出空&nbsp;string<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ENT_QUOTES</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;输出&nbsp;"!!!"<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ENT_QUOTES&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">ENT_IGNORE</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.htmlentities-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link html_entity_decode()} - Convert HTML entities to their corresponding characters</span></li>     <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>     <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>     <li class="member"><span class="function">{@link nl2br()} - 在字符串所有新行之前插入 HTML 换行标记</span></li>     <li class="member"><span class="function">{@link urlencode()} - 编码 URL 字符串</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the encoded string.*/
function htmlentities ($string, $quote_style = null, $charset = null, $double_encode = true) {}

/**
*<div id="function.html-entity-decode" class="refentry">  <div class="refnamediv">   <h1 class="refname">html_entity_decode</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">html_entity_decode</span> &mdash; <span class="dc-title">Convert HTML entities to their corresponding characters</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.html-entity-decode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>html_entity_decode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = ENT_COMPAT | ENT_HTML401</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = ini_get(&quot;default_charset&quot;)</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>html_entity_decode()</strong></span> is the opposite of    <span class="function">{@link htmlentities()}</span> in that it converts HTML entities    in the <code class="parameter">string</code> to their corresponding characters.   </p>   <p class="para">    More precisely, this function decodes all the entities (including all numeric    entities) that a) are necessarily valid for the chosen document type — i.e.,    for XML, this function does not decode named entities that might be defined    in some DTD — and b) whose character or characters are in the coded character    set associated with the chosen encoding and are permitted in the chosen    document type. All other entities are left as is.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.html-entity-decode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        The input string.       </p>      </dd>                 <dt> <code class="parameter">flags</code></dt>       <dd>        <p class="para">        A bitmask of one or more of the following flags, which specify how to handle quotes and        which document type to use. The default is <em>ENT_COMPAT | ENT_HTML401</em>.        <table class="doctable table">         <caption><strong>Available <code class="parameter">flags</code> constants</strong></caption>                   <thead>           <tr>            <th>Constant Name</th>            <th>Description</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><strong><code>ENT_COMPAT</code></strong></td>            <td>Will convert double-quotes and leave single-quotes alone.</td>           </tr>            <tr>            <td><strong><code>ENT_QUOTES</code></strong></td>            <td>Will convert both double and single quotes.</td>           </tr>            <tr>            <td><strong><code>ENT_NOQUOTES</code></strong></td>            <td>Will leave both double and single quotes unconverted.</td>           </tr>            <tr>            <td><strong><code>ENT_HTML401</code></strong></td>            <td>             Handle code as HTML 4.01.            </td>           </tr>            <tr>            <td><strong><code>ENT_XML1</code></strong></td>            <td>             Handle code as XML 1.            </td>           </tr>            <tr>            <td><strong><code>ENT_XHTML</code></strong></td>            <td>             Handle code as XHTML.            </td>           </tr>            <tr>            <td><strong><code>ENT_HTML5</code></strong></td>            <td>             Handle code as HTML 5.            </td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>          <p class="para">   An optional argument defining the encoding used when converting characters.  </p>   <p class="para">   If omitted, the default value of the <code class="parameter">encoding</code> varies   depending on the PHP version in use. In PHP 5.6 and later, the   <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration   option is used as the default value. PHP 5.4 and 5.5 will use   <em>UTF-8</em> as the default. Earlier versions of PHP use   <em>ISO-8859-1</em>.  </p>   <p class="para">   Although this argument is technically optional, you are highly encouraged to   specify the correct value for your code if you are using PHP 5.5 or earlier,   or if your <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a>   configuration option may be set incorrectly for the given input.  </p>           <p class="para">  支持以下字符集：  <table class="doctable table">   <caption><strong>支持的字符集列表</strong></caption>       <thead>     <tr>      <th>字符集</th>      <th>别名</th>      <th>描述</th>     </tr>     </thead>     <tbody class="tbody">     <tr>      <td>ISO-8859-1</td>      <td>ISO8859-1</td>      <td>       西欧，Latin-1      </td>     </tr>      <tr>      <td>ISO-8859-5</td>      <td>ISO8859-5</td>      <td>       Little used cyrillic charset (Latin/Cyrillic).      </td>     </tr>      <tr>      <td>ISO-8859-15</td>      <td>ISO8859-15</td>      <td>       西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。      </td>     </tr>      <tr>      <td>UTF-8</td>      <td class="empty">&nbsp;</td>      <td>       ASCII 兼容的多字节 8 位 Unicode。      </td>     </tr>      <tr>      <td>cp866</td>      <td>ibm866, 866</td>      <td>       DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1251</td>      <td>Windows-1251, win-1251, 1251</td>      <td>       Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1252</td>      <td>Windows-1252, 1252</td>      <td>       Windows 特有的西欧编码。      </td>     </tr>      <tr>      <td>KOI8-R</td>      <td>koi8-ru, koi8r</td>      <td>       俄语。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>BIG5</td>      <td>950</td>      <td>       繁体中文，主要用于中国台湾省。      </td>     </tr>      <tr>      <td>GB2312</td>      <td>936</td>      <td>       简体中文，中国国家标准字符集。      </td>     </tr>      <tr>      <td>BIG5-HKSCS</td>      <td class="empty">&nbsp;</td>      <td>       繁体中文，附带香港扩展的 Big5 字符集。      </td>     </tr>      <tr>      <td>Shift_JIS</td>      <td>SJIS, 932</td>      <td>       日语      </td>     </tr>      <tr>      <td>EUC-JP</td>      <td>EUCJP</td>      <td>       日语      </td>     </tr>      <tr>      <td>MacRoman</td>      <td class="empty">&nbsp;</td>      <td>       Mac OS 使用的字符串。      </td>     </tr>      <tr>      <td><em>&#039;&#039;</em></td>      <td class="empty">&nbsp;</td>      <td>       An empty string activates detection from script encoding (Zend multibyte),       <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current       locale (see <span class="function">{@link nl_langinfo()}</span> and       <span class="function">{@link setlocale()}</span>), in this order. Not recommended.      </td>     </tr>     </tbody>     </table>   <blockquote class="note"><p><strong class="note">Note</strong>:    <span class="simpara">    其他字符集没有认可。将会使用默认编码并抛出异常。   </span>  </p></blockquote> </p>        </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.html-entity-decode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the decoded string.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.html-entity-decode-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">         <tr>   <td>5.6.0</td>   <td>    The default value for the <code class="parameter">encoding</code> parameter was    changed to be the value of the    <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration    option.   </td>  </tr>         <tr>        <td>5.4.0</td>        <td>         Default encoding changed from ISO-8859-1 to UTF-8.        </td>       </tr>        <tr>        <td>5.4.0</td>        <td>         The constants <strong><code>ENT_HTML401</code></strong>, <strong><code>ENT_XML1</code></strong>,         <strong><code>ENT_XHTML</code></strong> and <strong><code>ENT_HTML5</code></strong> were added.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.html-entity-decode-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5905">     <p><strong>Example #1 Decoding HTML entities</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$orig&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"I'll&nbsp;\"walk\"&nbsp;the&nbsp;&lt;b&gt;dog&lt;/b&gt;&nbsp;now"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$a&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$orig</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$b&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">html_entity_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;I'll&nbsp;&amp;quot;walk&amp;quot;&nbsp;the&nbsp;&amp;lt;b&amp;gt;dog&amp;lt;/b&amp;gt;&nbsp;now<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">$b</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;I'll&nbsp;"walk"&nbsp;the&nbsp;&lt;b&gt;dog&lt;/b&gt;&nbsp;now<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>      </p>  </div>    <div class="refsect1 notes" id="refsect1-function.html-entity-decode-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     You might wonder why trim(html_entity_decode(&#039;&amp;nbsp;&#039;)); doesn&#039;t     reduce the string to an empty string, that&#039;s because the &#039;&amp;nbsp;&#039;     entity is not ASCII code 32 (which is stripped by     <span class="function">{@link trim()}</span>) but ASCII code 160 (0xa0) in the default ISO     8859-1 encoding.    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.html-entity-decode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>     <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>     <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>     <li class="member"><span class="function">{@link urldecode()} - 解码已编码的 URL 字符串</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the decoded string.*/
function html_entity_decode ($string, $quote_style = null, $charset = null) {}

/**
*<div id="function.htmlspecialchars-decode" class="refentry">  <div class="refnamediv">   <h1 class="refname">htmlspecialchars_decode</h1>   <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7)</p><p class="refpurpose"><span class="refname">htmlspecialchars_decode</span> &mdash; <span class="dc-title">    将特殊的 HTML 实体转换回普通字符   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.htmlspecialchars-decode-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>htmlspecialchars_decode</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = ENT_COMPAT | ENT_HTML401</span></span>   ] )</div>     <p class="para rdfs-comment">    此函数的作用和 <span class="function">{@link htmlspecialchars()}</span> 刚好相反。它将特殊的HTML实体转换回普通字符。   </p>   <p class="para">    被转换的实体有： <em>&amp;amp;</em>，    <em>&amp;quot;</em> （没有设置<strong><code>ENT_NOQUOTES</code></strong> 时）,    <em>&amp;#039;</em> （设置了 <strong><code>ENT_QUOTES</code></strong> 时），    <em>&amp;lt;</em> 以及<em>&amp;gt;</em>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.htmlspecialchars-decode-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">string</code></dt>       <dd>        <p class="para">        要解码的字符串       </p>      </dd>                 <dt> <code class="parameter">flags</code></dt>       <dd>        <p class="para">        用下列标记中的一个或多个作为一个位掩码，来指定如何处理引号和使用哪种文档类型。默认为 <em>ENT_COMPAT | ENT_HTML401</em>。        <table class="doctable table">         <caption><strong>有效的 <code class="parameter">flags</code> 常量</strong></caption>                   <thead>           <tr>            <th>常量名</th>            <th>说明</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><strong><code>ENT_COMPAT</code></strong></td>            <td>转换双引号，不转换单引号。</td>           </tr>            <tr>            <td><strong><code>ENT_QUOTES</code></strong></td>            <td>单引号和双引号都转换。</td>           </tr>            <tr>            <td><strong><code>ENT_NOQUOTES</code></strong></td>            <td>单引号和双引号都不转换。</td>           </tr>            <tr>            <td><strong><code>ENT_HTML401</code></strong></td>            <td>             作为HTML 4.01编码处理。            </td>           </tr>            <tr>            <td><strong><code>ENT_XML1</code></strong></td>            <td>             作为XML 1编码处理。            </td>           </tr>            <tr>            <td><strong><code>ENT_XHTML</code></strong></td>            <td>             作为XHTML编码处理。            </td>           </tr>            <tr>            <td><strong><code>ENT_HTML5</code></strong></td>            <td>             作为HTML 5编码处理。            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.htmlspecialchars-decode-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回解码后的字符串。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.htmlspecialchars-decode-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.0</td>        <td>         增加了 <strong><code>ENT_HTML401</code></strong>、<strong><code>ENT_XML1</code></strong>、         <strong><code>ENT_XHTML</code></strong> 和 <strong><code>ENT_HTML5</code></strong> 等常量。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.htmlspecialchars-decode-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5908">     <p><strong>Example #1 一个 <span class="function"><strong>htmlspecialchars_decode()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"&lt;p&gt;this&nbsp;-&amp;gt;&nbsp;&amp;quot;&lt;/p&gt;\n"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #9876AA">htmlspecialchars_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;注意，这里的引号不会被转换<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">htmlspecialchars_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ENT_NOQUOTES</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> &lt;p&gt;this -&gt; &quot;&lt;/p&gt; &lt;p&gt;this -&gt; &amp;quot;&lt;/p&gt; </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.htmlspecialchars-decode-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>     <li class="member"><span class="function">{@link html_entity_decode()} - Convert HTML entities to their corresponding characters</span></li>     <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the decoded string.*/
function htmlspecialchars_decode ($string, $quote_style = null) {}

/**
*<div id="function.get-html-translation-table" class="refentry">  <div class="refnamediv">   <h1 class="refname">get_html_translation_table</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_html_translation_table</span> &mdash; <span class="dc-title">返回使用 <span class="function">{@link htmlspecialchars()}</span> 和 <span class="function">{@link htmlentities()}</span> 后的转换表</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.get-html-translation-table-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>get_html_translation_table</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$table</code><span class="initializer"> = HTML_SPECIALCHARS</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = ENT_COMPAT | ENT_HTML401</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer"> = &#039;UTF-8&#039;</span></span>   ]]] )</div>    <p class="para rdfs-comment">  <span class="function"><strong>get_html_translation_table()</strong></span> 将返回 <span class="function">{@link htmlspecialchars()}</span> 和    <span class="function">{@link htmlentities()}</span> 处理后的转换表。   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     特殊字符可以使用多种转换方式。 例如：     <em>&quot;</em> 可以被转换成 <em>&amp;quot;</em>,     <em>&amp;#34;</em> 或者 <em>&amp;#x22</em>.     <span class="function"><strong>get_html_translation_table()</strong></span> 返回其中最常用的。    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.get-html-translation-table-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">table</code></dt>       <dd>        <p class="para">        有两个新的常量 (<strong><code>HTML_ENTITIES</code></strong>,        <strong><code>HTML_SPECIALCHARS</code></strong>) 允许你指定你想要的表。       </p>      </dd>                 <dt> <code class="parameter">flags</code></dt>       <dd>        <p class="para">        A bitmask of one or more of the following flags, which specify which quotes the        table will contain as well as which document type the table is for. The default is        <em>ENT_COMPAT | ENT_HTML401</em>.        <table class="doctable table">         <caption><strong>Available <code class="parameter">flags</code> constants</strong></caption>                   <thead>           <tr>            <th>Constant Name</th>            <th>Description</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><strong><code>ENT_COMPAT</code></strong></td>            <td>Table will contain entities for double-quotes, but not for single-quotes.</td>           </tr>            <tr>            <td><strong><code>ENT_QUOTES</code></strong></td>            <td>Table will contain entities for both double and single quotes.</td>           </tr>            <tr>            <td><strong><code>ENT_NOQUOTES</code></strong></td>            <td>Table will neither contain entities for single quotes nor for double quotes.</td>           </tr>            <tr>            <td><strong><code>ENT_HTML401</code></strong></td>            <td>Table for HTML 4.01.</td>           </tr>            <tr>            <td><strong><code>ENT_XML1</code></strong></td>            <td>Table for XML 1.</td>           </tr>            <tr>            <td><strong><code>ENT_XHTML</code></strong></td>            <td>Table for XHTML.</td>           </tr>            <tr>            <td><strong><code>ENT_HTML5</code></strong></td>            <td>Table for HTML 5.</td>           </tr>           </tbody>                 </table>        </p>      </dd>                 <dt> <code class="parameter">encoding</code></dt>       <dd>        <p class="para">        Encoding to use.        If omitted, the default value for this argument is ISO-8859-1 in        versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards.       </p>          <p class="para">  支持以下字符集：  <table class="doctable table">   <caption><strong>支持的字符集列表</strong></caption>       <thead>     <tr>      <th>字符集</th>      <th>别名</th>      <th>描述</th>     </tr>     </thead>     <tbody class="tbody">     <tr>      <td>ISO-8859-1</td>      <td>ISO8859-1</td>      <td>       西欧，Latin-1      </td>     </tr>      <tr>      <td>ISO-8859-5</td>      <td>ISO8859-5</td>      <td>       Little used cyrillic charset (Latin/Cyrillic).      </td>     </tr>      <tr>      <td>ISO-8859-15</td>      <td>ISO8859-15</td>      <td>       西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。      </td>     </tr>      <tr>      <td>UTF-8</td>      <td class="empty">&nbsp;</td>      <td>       ASCII 兼容的多字节 8 位 Unicode。      </td>     </tr>      <tr>      <td>cp866</td>      <td>ibm866, 866</td>      <td>       DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1251</td>      <td>Windows-1251, win-1251, 1251</td>      <td>       Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>cp1252</td>      <td>Windows-1252, 1252</td>      <td>       Windows 特有的西欧编码。      </td>     </tr>      <tr>      <td>KOI8-R</td>      <td>koi8-ru, koi8r</td>      <td>       俄语。本字符集在 4.3.2 版本中得到支持。      </td>     </tr>      <tr>      <td>BIG5</td>      <td>950</td>      <td>       繁体中文，主要用于中国台湾省。      </td>     </tr>      <tr>      <td>GB2312</td>      <td>936</td>      <td>       简体中文，中国国家标准字符集。      </td>     </tr>      <tr>      <td>BIG5-HKSCS</td>      <td class="empty">&nbsp;</td>      <td>       繁体中文，附带香港扩展的 Big5 字符集。      </td>     </tr>      <tr>      <td>Shift_JIS</td>      <td>SJIS, 932</td>      <td>       日语      </td>     </tr>      <tr>      <td>EUC-JP</td>      <td>EUCJP</td>      <td>       日语      </td>     </tr>      <tr>      <td>MacRoman</td>      <td class="empty">&nbsp;</td>      <td>       Mac OS 使用的字符串。      </td>     </tr>      <tr>      <td><em>&#039;&#039;</em></td>      <td class="empty">&nbsp;</td>      <td>       An empty string activates detection from script encoding (Zend multibyte),       <a href="http://php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current       locale (see <span class="function">{@link nl_langinfo()}</span> and       <span class="function">{@link setlocale()}</span>), in this order. Not recommended.      </td>     </tr>     </tbody>     </table>   <blockquote class="note"><p><strong class="note">Note</strong>:    <span class="simpara">    其他字符集没有认可。将会使用默认编码并抛出异常。   </span>  </p></blockquote> </p>        </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.get-html-translation-table-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    将转换表作为一个数组返回。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.get-html-translation-table-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.4.0</td>        <td>         The default value for the <code class="parameter">encoding</code> parameter was         changed to UTF-8.        </td>       </tr>        <tr>        <td>5.4.0</td>        <td>         The constants <strong><code>ENT_HTML401</code></strong>, <strong><code>ENT_XML1</code></strong>,         <strong><code>ENT_XHTML</code></strong> and <strong><code>ENT_HTML5</code></strong> were added.        </td>       </tr>        <tr>        <td>5.3.4</td>        <td>         The <code class="parameter">encoding</code> parameter was added.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.get-html-translation-table-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5903">     <p><strong>Example #1 Translation Table Example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_html_translation_table</span><span style="color: #007700">(</span><span style="color: #9876AA">HTML_ENTITIES</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">ENT_QUOTES&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">ENT_HTML5</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> array(1510) {   [&quot; &quot;]=&gt;   string(9) &quot;&amp;NewLine;&quot;   [&quot;!&quot;]=&gt;   string(6) &quot;&amp;excl;&quot;   [&quot;&quot;&quot;]=&gt;   string(6) &quot;&amp;quot;&quot;   [&quot;#&quot;]=&gt;   string(5) &quot;&amp;num;&quot;   [&quot;$&quot;]=&gt;   string(8) &quot;&amp;dollar;&quot;   [&quot;%&quot;]=&gt;   string(8) &quot;&amp;percnt;&quot;   [&quot;&amp;&quot;]=&gt;   string(5) &quot;&amp;amp;&quot;   [&quot;&#039;&quot;]=&gt;   string(6) &quot;&amp;apos;&quot;   // ... } </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.get-html-translation-table-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>     <li class="member"><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>     <li class="member"><span class="function">{@link html_entity_decode()} - Convert HTML entities to their corresponding characters</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return array the translation table as an array.*/
function get_html_translation_table ($table = null, $quote_style = null, string $encoding = "UTF-8") {}

/**
*<div id="function.sha1" class="refentry">  <div class="refnamediv">   <h1 class="refname">sha1</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">sha1</span> &mdash; <span class="dc-title">计算字符串的 sha1 散列值</span></p>   </div>    <div id="function.sha1-refsynopsisdiv">    <div class="warning"><strong class="warning">Warning</strong>  <p class="para">   It is not recommended to use this function to secure passwords,   due to the fast nature of this hashing algorithm. See the   <a href="http://php.net/manual/zh/faq.passwords.php#faq.passwords.fasthash" class="link">Password Hashing FAQ</a>   for details and best practices.  </p> </div>   </div>    <div class="refsect1 description" id="refsect1-function.sha1-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sha1</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer"> = false</span></span>   ] )</div>    <p class="simpara">    利用<a href="http://www.faqs.org/rfcs/rfc3174" class="link external">&raquo;&nbsp;美国安全散列算法 1</a> 计算字符串的 sha1 散列值。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sha1-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        输入字符串。       </p>      </dd>                 <dt> <code class="parameter">raw_output</code></dt>       <dd>        <p class="para">        如果可选的 <code class="parameter">raw_output</code> 参数被设置为 <strong><code>TRUE</code></strong>，        那么 sha1 摘要将以 20 字符长度的原始格式返回，        否则返回值是一个 40 字符长度的十六进制数字。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sha1-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 sha1 散列值字符串。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sha1-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5933">     <p><strong>Example #1 <span class="function"><strong>sha1()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">;<br /><br />if&nbsp;(</span><span style="color: #9876AA">sha1</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #DD0000">'d0be2dc421be4fcd0172e5afceea3970e2f3d940'</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Would&nbsp;you&nbsp;like&nbsp;a&nbsp;green&nbsp;or&nbsp;red&nbsp;apple?"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sha1-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sha1_file()} - 计算文件的 sha1 散列值</span></li>     <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>     <li class="member"><span class="function">{@link md5()} - 计算字符串的 MD5 散列值</span></li>     <li class="member"><span class="function">{@link hash()} - 生成哈希值 （消息摘要）</span></li>     <li class="member"><span class="function">{@link crypt()} - 单向字符串散列</span></li>     <li class="member"><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the sha1 hash as a string.*/
function sha1 ($str, $raw_output = null) {}

/**
*<div id="function.sha1-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">sha1_file</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">sha1_file</span> &mdash; <span class="dc-title">计算文件的 sha1 散列值</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.sha1-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sha1_file</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <p class="simpara">    利用<a href="http://www.faqs.org/rfcs/rfc3174" class="link external">&raquo;&nbsp;美国安全散列算法 1</a>，计算并返回由 <code class="parameter">filename</code> 指定的文件的 sha1 散列值。该散列值是一个 40 字符长度的十六进制数字。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sha1-file-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        要散列的文件的文件名。       </p>      </dd>                 <dt> <code class="parameter">raw_output</code></dt>       <dd>        <p class="para">        如果被设置为 <strong><code>TRUE</code></strong>，sha1 摘要将以 20 字符长度的原始格式返回。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sha1-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功返回一个字符串，否则返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sha1-file-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5932">     <p><strong>Example #1 <span class="function"><strong>sha1_file()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">foreach(</span><span style="color: #9876AA">glob</span><span style="color: #007700">(</span><span style="color: #DD0000">'/home/Kalle/myproject//.php'</span><span style="color: #007700">)&nbsp;as&nbsp;</span><span style="color: #9876AA">$ent</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #9876AA">$ent</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$ent&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">'&nbsp;(SHA1:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">sha1_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$ent</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">')'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.sha1-file-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         改变函数以使用流 API。这意味着可以使用包装器，比如 <em>sha1_file(&#039;http://example.com/..&#039;)</em>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sha1-file-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sha1()} - 计算字符串的 sha1 散列值</span></li>     <li class="member"><span class="function">{@link md5_file()} - 计算指定文件的 MD5 散列值</span></li>     <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string a string on success, false otherwise.*/
function sha1_file ($filename, $raw_output = null) {}

/**
*<div id="function.md5" class="refentry">  <div class="refnamediv">   <h1 class="refname">md5</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">md5</span> &mdash; <span class="dc-title">计算字符串的 MD5 散列值</span></p>   </div>    <div id="function.md5-refsynopsisdiv">    <div class="warning"><strong class="warning">Warning</strong>  <p class="para">   It is not recommended to use this function to secure passwords,   due to the fast nature of this hashing algorithm. See the   <a href="http://php.net/manual/zh/faq.passwords.php#faq.passwords.fasthash" class="link">Password Hashing FAQ</a>   for details and best practices.  </p> </div>   </div>    <div class="refsect1 description" id="refsect1-function.md5-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>md5</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    使用 <a href="http://www.faqs.org/rfcs/rfc1321" class="link external">&raquo;&nbsp;RSA 数据安全公司的 MD5 报文算法</a>计算 <code class="parameter">str</code> 的 MD5 散列值。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.md5-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        原始字符串。       </p>      </dd>                 <dt> <code class="parameter">raw_output</code></dt>       <dd>        <p class="para">        如果可选的 <code class="parameter">raw_output</code> 被设置为 <strong><code>TRUE</code></strong>，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.md5-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    以 32 字符十六进制数字形式返回散列值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.md5-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5916">     <p><strong>Example #1 <span class="function"><strong>md5()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">;<br /><br />if&nbsp;(</span><span style="color: #9876AA">md5</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">)&nbsp;===&nbsp;</span><span style="color: #DD0000">'1f3870be274f6c49b3e31a0c6728957f'</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Would&nbsp;you&nbsp;like&nbsp;a&nbsp;green&nbsp;or&nbsp;red&nbsp;apple?"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.md5-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link md5_file()} - 计算指定文件的 MD5 散列值</span></li>     <li class="member"><span class="function">{@link sha1_file()} - 计算文件的 sha1 散列值</span></li>     <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>     <li class="member"><span class="function">{@link sha1()} - 计算字符串的 sha1 散列值</span></li>     <li class="member"><span class="function">{@link hash()} - 生成哈希值 （消息摘要）</span></li>     <li class="member"><span class="function">{@link crypt()} - 单向字符串散列</span></li>     <li class="member"><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string the hash as a 32-character hexadecimal number.*/
function md5 ($str, $raw_output = null) {}

/**
*<div id="function.md5-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">md5_file</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">md5_file</span> &mdash; <span class="dc-title">计算指定文件的 MD5 散列值</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.md5-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>md5_file</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    使用 <a href="http://www.faqs.org/rfcs/rfc1321" class="link external">&raquo;&nbsp;RSA 数据安全公司的 MD5 报文算法</a>计算 <code class="parameter">filename</code> 文件的 MD5 散列值并返回。该散列值为 32 字符的十六进制数字。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.md5-file-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        文件名       </p>      </dd>                 <dt> <code class="parameter">raw_output</code></dt>       <dd>        <p class="para">        如果被设置为 <strong><code>TRUE</code></strong>，那么报文摘要将以原始的 16 位二进制格式返回。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.md5-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功返回字符串，否则返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.md5-file-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         函数改用流 API。这意味着能够配合封装器使用该函数，比如 <em>md5_file(&#039;http://example.com/..&#039;)</em>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.md5-file-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5915">     <p><strong>Example #1 <span class="function"><strong>md5_file()</strong></span> 使用范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$file&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'php-5.3.0alpha2-Win32-VC9-x64.zip'</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">'MD5&nbsp;file&nbsp;hash&nbsp;of&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$file&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #DD0000">':&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">md5_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.md5-file-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link md5()} - 计算字符串的 MD5 散列值</span></li>     <li class="member"><span class="function">{@link sha1_file()} - 计算文件的 sha1 散列值</span></li>     <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string a string on success, false otherwise.*/
function md5_file ($filename, $raw_output = null) {}

/**
*<div id="function.crc32" class="refentry">  <div class="refnamediv">   <h1 class="refname">crc32</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.1, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">crc32</span> &mdash; <span class="dc-title">计算一个字符串的 crc32 多项式</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.crc32-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>crc32</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    )</div>    <p class="para rdfs-comment">    生成 <code class="parameter">str</code>    的 32 位循环冗余校验码多项式。这通常用于检查传输的数据是否完整。   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">     由于 PHP 的整数是带符号的，所以在 32 位系统上许多 crc32 校验码将返回负整数。     尽管在 64 位上所有 <span class="function"><strong>crc32()</strong></span> 的结果将都是正整数。    </p>    <p class="simpara">     因此你需要使用     <span class="function">{@link sprintf()}</span> 或 <span class="function">{@link printf()}</span>     的“%u”格式符来获取表示无符号 crc32 校验码的字符串。    </p>    <p class="simpara">     For a hexadecimal representation of the checksum you can either use the      &quot;%x&quot; formatter of <span class="function">{@link sprintf()}</span> or <span class="function">{@link printf()}</span>      or the <span class="function">{@link dechex()}</span> conversion functions, both of these     also take care of converting the <span class="function"><strong>crc32()</strong></span> result to     an unsigned integer.    </p>    <p class="simpara">     Having 64bit installations also return negative integers for higher     result values was considered but would break the hexadecimal conversion     as negatives would get an extra 0xFFFFFFFF######## offset then. As      hexadecimal representation seems to be the most common use case we     decided to not break this even if it breaks direct decimal comparisons     in about 50% of the cases when moving from 32 to 64bits.    </p>    <p class="simpara">     In retrospect having the function return an integer maybe wasn&#039;t the      best idea and returning a hex string representation right away (as      e.g. <span class="function">{@link md5()}</span> does) might have been a better plan to     begin with.    </p>    <p class="simpara">     For a more portable solution you may also consider the generic      <span class="function">{@link hash()}</span>. <code class="code">hash(&quot;crc32b&quot;, $str)</code> will      return the same string as <code class="code">dechex(crc32($str))</code>.    </p>   </div>  </div>     <div class="refsect1 parameters" id="refsect1-function.crc32-parameters">   <h3 class="title">参数</h3>    <p class="para">     <dl>              <dt> <code class="parameter">str</code></dt>        <dd>         <p class="para">         要校验的数据。        </p>       </dd>            </dl>     </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.crc32-returnvalues">   <h3 class="title">返回值</h3>    <p class="para">     返回 <code class="parameter">str</code> crc32 校验的整数。    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.crc32-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5893">     <p><strong>Example #1 显示一个 crc32 校验码</strong></p>     <div class="example-contents"><p>      示例中的第二行演示了如何使用 <span class="function">{@link printf()}</span>      函数转换校验码：     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$checksum&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">crc32</span><span style="color: #007700">(</span><span style="color: #DD0000">"The&nbsp;quick&nbsp;brown&nbsp;fox&nbsp;jumped&nbsp;over&nbsp;the&nbsp;lazy&nbsp;dog."</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%u\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$checksum</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.crc32-seealso">   <h3 class="title">参见</h3>    <p class="para">     <ul class="simplelist">      <li class="member"><span class="function">{@link hash()} - 生成哈希值 （消息摘要）</span></li>      <li class="member"><span class="function">{@link md5()} - 计算字符串的 MD5 散列值</span></li>      <li class="member"><span class="function">{@link sha1()} - 计算字符串的 sha1 散列值</span></li>     </ul>    </p>  </div>      <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return int the crc32 checksum of str as an integer.*/
function crc32 ($str) {}

/**
*<div id="function.iptcparse" class="refentry">    <div class="refnamediv">     <h1 class="refname">iptcparse</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">iptcparse</span> &mdash; <span class="dc-title">      将二进制 IPTC 块解析为单个标记     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.iptcparse-description">   <h3 class="title">说明</h3>     <div class="methodsynopsis dc-description">      <span class="type">array</span> <span class="methodname"><strong>iptcparse</strong></span>       ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$iptcblock</code></span>      )</div>      <p class="para rdfs-comment">      本函数将一个二进制的 <a href="http://www.iptc.org/" class="link external">&raquo;&nbsp;IPTC</a>      块解析为单个的标记。     </p>    </div>   <div class="refsect1 parameters" id="refsect1-function.iptcparse-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">iptcblock</code></dt>       <dd>        <p class="para">        二进制的 IPTC 块。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.iptcparse-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数组，用 tagmarker 作为索引，以其值为值。如果出错或未发现 IPTC 数据则返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.iptcparse-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3745">     <p><strong>Example #1 iptcparse() used together with <span class="function">{@link getimagesize()}</span></strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">'./test.jpg'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">);<br />if(isset(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'APP13'</span><span style="color: #007700">]))<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$iptc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">iptcparse</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'APP13'</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$iptc</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.iptcparse-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return array an array using the tagmarker as an index and the value as the*/
function iptcparse ($iptcblock) {}

/**
*<div id="function.iptcembed" class="refentry">    <div class="refnamediv">     <h1 class="refname">iptcembed</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">iptcembed</span> &mdash; <span class="dc-title">将二进制 IPTC 数据嵌入到一幅 JPEG 图像中</span></p>     </div> <div class="refsect1 description" id="refsect1-function.iptcembed-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>iptcembed</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$iptcdata</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$jpeg_file_name</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$spool</code></span>   ] )</div>    <p class="para rdfs-comment">    Embeds binary IPTC data into a JPEG image.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.iptcembed-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">iptcdata</code></dt>       <dd>        <p class="para">        The data to be written.       </p>      </dd>                 <dt> <code class="parameter">jpeg_file_name</code></dt>       <dd>        <p class="para">        Path to the JPEG image.       </p>      </dd>                 <dt> <code class="parameter">spool</code></dt>       <dd>        <p class="para">        Spool flag. If the spool flag is over 2 then the JPEG will be         returned as a string.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.iptcembed-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    If success and spool flag is lower than 2 then the JPEG will not be     returned as a string, <strong><code>FALSE</code></strong> on errors.   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.iptcembed-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3744">    <p><strong>Example #1 Embedding IPTC data into a JPEG</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;iptc_make_tag()&nbsp;function&nbsp;by&nbsp;Thies&nbsp;C.&nbsp;Arntzen<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">iptc_make_tag</span><span style="color: #007700">(</span><span style="color: #9876AA">$rec</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$data</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0x1C</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$rec</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">0x8000</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">&gt;&gt;&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">)&nbsp;.&nbsp;&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">&amp;&nbsp;</span><span style="color: #9876AA">0xFF</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0x80</span><span style="color: #007700">)&nbsp;.&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0x04</span><span style="color: #007700">)&nbsp;.&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">((</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">&gt;&gt;&nbsp;</span><span style="color: #9876AA">24</span><span style="color: #007700">)&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">0xFF</span><span style="color: #007700">)&nbsp;.&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">((</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">&gt;&gt;&nbsp;</span><span style="color: #9876AA">16</span><span style="color: #007700">)&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">0xFF</span><span style="color: #007700">)&nbsp;.&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">((</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">&gt;&gt;&nbsp;</span><span style="color: #9876AA">8</span><span style="color: #007700">)&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">0xFF</span><span style="color: #007700">)&nbsp;.&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$length&nbsp;</span><span style="color: #007700">&amp;&nbsp;</span><span style="color: #9876AA">0xFF</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$value</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Path&nbsp;to&nbsp;jpeg&nbsp;file<br /></span><span style="color: #9876AA">$path&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'./phplogo.jpg'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;We&nbsp;need&nbsp;to&nbsp;check&nbsp;if&nbsp;theres&nbsp;any&nbsp;IPTC&nbsp;data&nbsp;in&nbsp;the&nbsp;jpeg&nbsp;image.&nbsp;If&nbsp;there&nbsp;is&nbsp;then&nbsp;<br />//&nbsp;bail&nbsp;out&nbsp;because&nbsp;we&nbsp;cannot&nbsp;embed&nbsp;any&nbsp;image&nbsp;that&nbsp;already&nbsp;has&nbsp;some&nbsp;IPTC&nbsp;data!<br /></span><span style="color: #9876AA">$image&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">);<br /><br />if(isset(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'APP13'</span><span style="color: #007700">]))<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #DD0000">'Error:&nbsp;IPTC&nbsp;data&nbsp;found&nbsp;in&nbsp;source&nbsp;image,&nbsp;cannot&nbsp;continue'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Set&nbsp;the&nbsp;IPTC&nbsp;tags<br /></span><span style="color: #9876AA">$iptc&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'2#120'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Test&nbsp;image'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'2#116'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Copyright&nbsp;2008-2009,&nbsp;The&nbsp;PHP&nbsp;Group'<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Convert&nbsp;the&nbsp;IPTC&nbsp;tags&nbsp;into&nbsp;binary&nbsp;code<br /></span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br />foreach(</span><span style="color: #9876AA">$iptc&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$tag&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$string</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$tag&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$tag</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">.=&nbsp;</span><span style="color: #9876AA">iptc_make_tag</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$tag</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Embed&nbsp;the&nbsp;IPTC&nbsp;data<br /></span><span style="color: #9876AA">$content&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">iptcembed</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Write&nbsp;the&nbsp;new&nbsp;image&nbsp;data&nbsp;out&nbsp;to&nbsp;the&nbsp;file.<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"wb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$content</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 notes" id="refsect1-function.iptcembed-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return mixed If success and spool flag is lower than 2 then the JPEG will not be */
function iptcembed ($iptcdata, $jpeg_file_name, $spool = null) {}

/**
*<div id="function.getimagesize" class="refentry">   <div class="refnamediv">    <h1 class="refname">getimagesize</h1>    <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">getimagesize</span> &mdash; <span class="dc-title">取得图像大小</span></p>    </div>   <div class="refsect1 description" id="refsect1-function.getimagesize-description">    <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">array</span> <span class="methodname"><strong>getimagesize</strong></span>      ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>     [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$imageinfo</code></span>    ] )</div>     <p class="para rdfs-comment">     <span class="function"><strong>getimagesize()</strong></span> 函数将测定任何     <acronym title="Graphic Interchange Format">GIF</acronym>，<acronym>JPG</acronym>，<acronym title="Portable Network Graphics">PNG</acronym>，<acronym title="Shockwave Flash">SWF</acronym>，<acronym>SWC</acronym>，<acronym title="Photoshop Document">PSD</acronym>，<acronym title="Tagged Image File Format">TIFF</acronym>，<acronym title="Bitmap">BMP</acronym>，<acronym title="Interchange File Format">IFF</acronym>，<acronym title="JPEG-2000">JP2</acronym>，<acronym>JPX</acronym>，<acronym title="Joint Bilevel Image Experts Group">JB2</acronym>，<acronym title="Japan Picture">JPC</acronym>，<acronym title="X Bitmap">XBM</acronym>     或 <acronym title="Wireless Bitmap">WBMP</acronym> 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通     <acronym title="Hyper Text Markup Language">HTML</acronym> 文件中 <code class="tag">IMG</code> 标记中的     height/width 文本字符串。    </p>    <p class="para">     如果不能访问 <code class="parameter">filename</code>     指定的图像或者其不是有效的图像，<span class="function"><strong>getimagesize()</strong></span>     将返回 <strong><code>FALSE</code></strong> 并产生一条 <var class="varname"><var class="varname">E_WARNING</var></var> 级的错误。    </p>    <blockquote class="note"><p><strong class="note">Note</strong>:      <p class="para">      对 <acronym title="Japan Picture">JPC</acronym>，<acronym title="JPEG-2000">JP2</acronym>，<acronym>JPX</acronym>，<acronym title="Joint Bilevel Image Experts Group">JB2</acronym>，<acronym title="X Bitmap">XBM</acronym>      和 <acronym title="Wireless Bitmap">WBMP</acronym> 的支持自 PHP 4.3.2      起可用。对 <acronym>SWC</acronym> 的支持自 PHP 4.3.0 起可用。对      <acronym title="Tagged Image File Format">TIFF</acronym> 的支持是 PHP 4.2.0 添加的。     </p>    </p></blockquote>    <blockquote class="note"><p><strong class="note">Note</strong>:      <span class="simpara">      JPEG 2000 支持是 PHP 4.3.2 添加的。注意 JPC 和 JP2      可以有不同的色彩深度的成分。此情况下，“bits”的值是碰到的最高的位深度。此外，JP2      文件可能包含有多个 JPEG 2000 代码流，此情况下，<span class="function"><strong>getimagesize()</strong></span>      返回此文件顶层中碰到的第一个代码流的值。     </span>    </p></blockquote>    <blockquote class="note"><p><strong class="note">Note</strong>:      <span class="simpara">      本函数不需要 GD 图像库。     </span>    </p></blockquote>    <p class="para">     返回一个具有四个单元的数组。索引 0 包含图像宽度的像素值，索引 1     包含图像高度的像素值。索引 2 是图像类型的标记：1 = GIF，2 = JPG，3 =     PNG，4 = SWF，5 = PSD，6 = BMP，7 = TIFF(intel byte order)，8 =     TIFF(motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 =     JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM。这些标记与 PHP 4.3.0     新加的 IMAGETYPE 常量对应。索引 3 是文本字符串，内容为“height=&quot;yyy&quot;     width=&quot;xxx&quot;”，可直接用于 IMG 标记。     <div class="example" id="example-3637">      <p><strong>Example #1 getimagesize（文件）</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">list(</span><span style="color: #9876AA">$width</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$height</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$attr</span><span style="color: #007700">)&nbsp;=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"img/flag.jpg"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"&lt;img&nbsp;src=\"img/flag.jpg\"&nbsp;</span><span style="color: #9876AA">$attr</span><span style="color: #DD0000">&gt;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     URL 支持是 PHP 4.0.5 添加的。     <div class="example" id="example-3638">      <p><strong>Example #2 getimagesize（URL）</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/gifs/logo.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;if&nbsp;the&nbsp;file&nbsp;name&nbsp;has&nbsp;space&nbsp;in&nbsp;it,&nbsp;encode&nbsp;it&nbsp;properly<br /></span><span style="color: #9876AA">$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/gifs/lo%20go.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     对于 <acronym>JPG</acronym> 图像，还会多返回两个索引：<em>channels</em>     和 <em>bits</em>。<em>channels</em>     对于 RGB 图像其值为 3，对于 CMYK 图像其值为 4。<em>bits</em>     是每种颜色的位数。    </p>    <p class="para">     自 PHP 4.3.0 起，<em>bits</em> 和     <em>channels</em> 对于其它图像类型也存在。但是这些值可能会把人搞糊涂。例如，<acronym title="Graphic Interchange Format">GIF</acronym>     总是对每个像素使用 3 个 channel，但是对于动画 <acronym title="Graphic Interchange Format">GIF</acronym>     来说每个像素的位数无法通过全局颜色表计算出来。    </p>    <p class="para">     某些格式可能不包含图像或者包含多个图像。此种情况下，<span class="function"><strong>getimagesize()</strong></span>     可能不能用来准确测定图像的大小。此时 <span class="function"><strong>getimagesize()</strong></span>     将返回零作为宽度和高度。    </p>    <p class="para">     自 PHP 4.3.0 起，<span class="function"><strong>getimagesize()</strong></span> 还会返回额外的参数     <em>mime</em>，符合该图像的 MIME 类型。此信息可以用来在     HTTP Content-type 头信息中发送正确的信息：     <div class="example" id="example-3639">      <p><strong>Example #3 getimagesize() 和 MIME 类型</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$fp</span><span style="color: #007700">=</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$size&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-type:&nbsp;</span><span style="color: #007700">{</span><span style="color: #9876AA">$size</span><span style="color: #007700">[</span><span style="color: #DD0000">'mime'</span><span style="color: #007700">]}</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br />&nbsp;&nbsp;</span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />&nbsp;&nbsp;exit;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;error<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     可选的 <code class="parameter">imageinfo</code>     参数允许从图像文件中提取一些扩展信息。目前，这将以一个关联数组返回不同的     <acronym>JPG</acronym> APP 标识。某些程序用这些 APP     标识来在图像中嵌入文本信息。一个非常常见的是 APP13 标识中嵌入的     <acronym>IPTC</acronym> <a href="http://www.iptc.org/" class="link external">&raquo;&nbsp;http://www.iptc.org/</a>     信息。可以用 <span class="function">{@link iptcparse()}</span> 函数来将二进制的     APP13 标识解析为可读的信息。    </p>    <p class="para">     <div class="example" id="example-3640">      <p><strong>Example #4 getimagesize() 返回 IPTC</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"testimg.jpg"</span><span style="color: #007700">,&nbsp;&amp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">);<br />if&nbsp;(isset(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">"APP13"</span><span style="color: #007700">]))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$iptc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">iptcparse</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">"APP13"</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$iptc</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     参见 <span class="function">{@link image_type_to_mime_type()}</span>，<span class="function">{@link exif_imagetype()}</span>，<span class="function">{@link exif_read_data()}</span>     和 <span class="function">{@link exif_thumbnail()}</span>。    </p>   </div>     <div class="refsect1 parameters" id="refsect1-function.getimagesize-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">         This parameter specifies the file you wish to retrieve information         about. It can reference a local file or (configuration permitting) a         remote file using one of the supported streams.        </p>      </dd>                 <dt> <code class="parameter">imageinfo</code></dt>       <dd>        <p class="para">        This optional parameter allows you to extract some extended        information from the image file. Currently, this will return the        different <acronym>JPG</acronym> APP markers as an associative array.        Some programs use these APP markers to embed text information in         images. A very common one is to embed         <a href="http://www.iptc.org/" class="link external">&raquo;&nbsp;IPTC</a> information in the APP13 marker.        You can use the <span class="function">{@link iptcparse()}</span> function to parse the        binary APP13 marker into something readable.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.getimagesize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array with 7 elements.   </p>   <p class="para">    Index 0 and 1 contains respectively the width and the height of the image.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Some formats may contain no image or may contain multiple images. In these     cases, <span class="function"><strong>getimagesize()</strong></span> might not be able to properly     determine the image size. <span class="function"><strong>getimagesize()</strong></span> will return     zero for width and height in these cases.    </p>   </p></blockquote>   <p class="para">    Index 2 is one of the <em>IMAGETYPE_XXX</em> constants indicating     the type of the image.   </p>   <p class="para">    Index 3 is a text string with the correct     <em>height=&quot;yyy&quot; width=&quot;xxx&quot;</em> string that can be used    directly in an <acronym>IMG</acronym> tag.   </p>   <p class="para">    <em>mime</em> is the correspondant MIME type of the image.    This information can be used to deliver images with the correct HTTP     <em>Content-type</em> header:    <div class="example" id="example-3641">     <p><strong>Example #5 <span class="function"><strong>getimagesize()</strong></span> and MIME types</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$size&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-type:&nbsp;</span><span style="color: #007700">{</span><span style="color: #9876AA">$size</span><span style="color: #007700">[</span><span style="color: #DD0000">'mime'</span><span style="color: #007700">]}</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;error<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <em>channels</em> will be 3 for RGB pictures and 4 for CMYK    pictures.   </p>   <p class="para">    <em>bits</em> is the number of bits for each color.   </p>   <p class="para">    For some image types, the presence of <em>channels</em> and    <em>bits</em> values can be a bit    confusing. As an example, <acronym title="Graphic Interchange Format">GIF</acronym> always uses 3 channels    per pixel, but the number of bits per pixel cannot be calculated for an    animated <acronym title="Graphic Interchange Format">GIF</acronym> with a global color table.   </p>   <p class="para">    On failure, <strong><code>FALSE</code></strong> is returned.   </p>  </div>     <div class="refsect1 errors" id="refsect1-function.getimagesize-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    If accessing the <code class="parameter">filename</code> image is impossible, or    if it isn&#039;t a valid picture, <span class="function"><strong>getimagesize()</strong></span> will    generate an error of level <strong><code>E_WARNING</code></strong>. On read error,    <span class="function"><strong>getimagesize()</strong></span> will generate an error of level    <strong><code>E_NOTICE</code></strong>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.getimagesize-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.3.0</td>        <td>         Added icon support.        </td>       </tr>        <tr>        <td>5.2.3</td>        <td>         Read errors generated by this function downgraded to         <strong><code>E_NOTICE</code></strong> from <strong><code>E_WARNING</code></strong>.        </td>       </tr>        <tr>        <td>4.3.2</td>        <td>         Support for <acronym title="Japan Picture">JPC</acronym>, <acronym title="JPEG-2000">JP2</acronym>,         <acronym>JPX</acronym>, <acronym title="Joint Bilevel Image Experts Group">JB2</acronym>,          <acronym title="X Bitmap">XBM</acronym>, and <acronym title="Wireless Bitmap">WBMP</acronym> became available.        </td>       </tr>        <tr>        <td>4.3.2</td>        <td>         JPEG 2000 support was added for the <code class="parameter">imageinfo</code>         parameter.        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         <em>bits</em> and <em>channels</em> are present         for other image types, too.        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         <em>mime</em> was added.        </td>       </tr>        <tr>        <td>4.3.0</td>        <td>         Support for <acronym>SWC</acronym> and <acronym title="Interchange File Format">IFF</acronym> was         added.        </td>       </tr>        <tr>        <td>4.2.0</td>        <td>         Support for <acronym title="Tagged Image File Format">TIFF</acronym> was added.        </td>       </tr>        <tr>        <td>4.0.6</td>        <td>         Support for <acronym title="Bitmap">BMP</acronym> and <acronym title="Photoshop Document">PSD</acronym> was         added.        </td>       </tr>        <tr>        <td>4.0.5</td>        <td>         URL support was added.        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.getimagesize-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3642">     <p><strong>Example #6 <span class="function"><strong>getimagesize()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">list(</span><span style="color: #9876AA">$width</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$height</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$attr</span><span style="color: #007700">)&nbsp;=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"img/flag.jpg"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"&lt;img&nbsp;src=\"img/flag.jpg\"&nbsp;</span><span style="color: #9876AA">$attr</span><span style="color: #DD0000">&nbsp;alt=\"getimagesize()&nbsp;example\"&nbsp;/&gt;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>    <div class="example" id="example-3643">     <p><strong>Example #7 getimagesize (URL)</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/gifs/logo.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;if&nbsp;the&nbsp;file&nbsp;name&nbsp;has&nbsp;space&nbsp;in&nbsp;it,&nbsp;encode&nbsp;it&nbsp;properly<br /></span><span style="color: #9876AA">$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/gifs/lo%20go.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>    <div class="example" id="example-3644">     <p><strong>Example #8 getimagesize() returning IPTC</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"testimg.jpg"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">);<br />if&nbsp;(isset(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">"APP13"</span><span style="color: #007700">]))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$iptc&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">iptcparse</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">"APP13"</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$iptc</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 notes" id="refsect1-function.getimagesize-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote>  </div>     <div class="refsect1 seealso" id="refsect1-function.getimagesize-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link image_type_to_mime_type()} - 取得 getimagesize，exif_read_data，exif_thumbnail，exif_imagetype     所返回的图像类型的 MIME 类型</span></li>     <li class="member"><span class="function">{@link exif_imagetype()} - 判断一个图像的类型</span></li>     <li class="member"><span class="function">{@link exif_read_data()} - 从 JPEG 或 TIFF    文件中读取 EXIF 头信息</span></li>     <li class="member"><span class="function">{@link exif_thumbnail()} - 取得嵌入在 TIFF 或 JPEG 图像中的缩略图</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return array|bool an array with 7 elements.*/
function getimagesize ($filename, array &$imageinfo = null) {}

/**
*<div id="function.imageaffine" class="refentry">  <div class="refnamediv">   <h1 class="refname">imageaffine</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imageaffine</span> &mdash; <span class="dc-title">返回经过仿射变换后的图像，剪切区域可选</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.imageaffine-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>imageaffine</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$affine</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$clip</code></span>   ] )</div>    <p class="para rdfs-comment">    </p>    <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>    <div class="refsect1 parameters" id="refsect1-function.imageaffine-parameters">   <h3 class="title">参数</h3>   <dl>     <dt> <code class="parameter">image</code></dt>  <dd> <p class="para">由图象创建函数(例如<span class="function">{@link imagecreatetruecolor()}</span>)返回的图象资源。</p></dd>          <dt> <code class="parameter">affine</code></dt>      <dd>       <p class="para">       数组，其中键为 0 至 5 的数字。      </p>     </dd>              <dt> <code class="parameter">clip</code></dt>      <dd>       <p class="para">       数组，其中键为 &quot;x&quot;，&quot;y&quot;，&quot;width&quot; 和 &quot;height&quot;。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.imageaffine-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">     成功则返回仿射变换后的图像， 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return resource|bool Return affined image resource on success or FALSE on failure.*/
function imageaffine($image, $affine, $clip = null) {}

/**
*<div id="function.imageaffinematrixconcat" class="refentry">  <div class="refnamediv">   <h1 class="refname">imageaffinematrixconcat</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imageaffinematrixconcat</span> &mdash; <span class="dc-title">Concatenate two affine transformation matrices</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.imageaffinematrixconcat-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>imageaffinematrixconcat</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$m1</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$m2</code></span>    )</div>    <p class="para rdfs-comment">    Returns the concatenation of two affine transformation matrices,    what is useful if multiple transformations should be applied to the same    image in one go.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.imageaffinematrixconcat-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">m1</code></dt>      <dd>       <p class="para">       An affine transformation matrix (an array with keys       <em>0</em> to <em>5</em> and float values).      </p>     </dd>              <dt> <code class="parameter">m2</code></dt>      <dd>       <p class="para">       An affine transformation matrix (an array with keys       <em>0</em> to <em>5</em> and float values).      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.imageaffinematrixconcat-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    An affine transformation matrix (an array with keys    <em>0</em> to <em>5</em> and float values)     或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.imageaffinematrixconcat-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3649">     <p><strong>Example #1 <span class="function"><strong>imageaffinematrixconcat()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imageaffinematrixget</span><span style="color: #007700">(</span><span style="color: #9876AA">IMG_AFFINE_TRANSLATE</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'y'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$m2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imageaffinematrixget</span><span style="color: #007700">(</span><span style="color: #9876AA">IMG_AFFINE_SCALE</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'y'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$matrix&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imageaffinematrixconcat</span><span style="color: #007700">(</span><span style="color: #9876AA">$m1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$m2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Array (     [0] =&gt; 4     [1] =&gt; 0     [2] =&gt; 0     [3] =&gt; 5     [4] =&gt; 8     [5] =&gt; 15 ) </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.imageaffinematrixconcat-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link imageaffine()} - 返回经过仿射变换后的图像，剪切区域可选</span></li>     <li class="member"><span class="function">{@link imageaffinematrixget()} - Get an affine transformation matrix</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return array|bool Array with keys 0 to 5 and float values or <b>FALSE</b> on failure.*/
function imageaffinematrixconcat(array $m1, array $m2) {}

/**
 * Return an image containing the affine tramsformed src image, using an optional clipping area
 * @link http://www.php.net/manual/en/function.imageaffinematrixget.php
 * @param int $type <p> One of <b>IMG_AFFINE_*</b> constants.
 * @param mixed $options [optional]
 * @return array|bool Array with keys 0 to 5 and float values or <b>FALSE</b> on failure.
 * @since 5.5.0
 */

/**
*<div id="function.imageaffinematrixget" class="refentry">  <div class="refnamediv">   <h1 class="refname">imageaffinematrixget</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imageaffinematrixget</span> &mdash; <span class="dc-title">Get an affine transformation matrix</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.imageaffinematrixget-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>imageaffinematrixget</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$options</code></span>   ] )</div>    <p class="para rdfs-comment">    Returns an affine transformation matrix.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.imageaffinematrixget-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">type</code></dt>      <dd>       <p class="para">       One of the <strong><code>IMG_AFFINE_*</code></strong> constants.      </p>     </dd>              <dt> <code class="parameter">options</code></dt>      <dd>       <p class="para">       If <code class="parameter">type</code> is <strong><code>IMG_AFFINE_TRANSLATE</code></strong>       or <strong><code>IMG_AFFINE_SCALE</code></strong>,       <code class="parameter">options</code> has to be an <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> with keys <em>x</em>       and <em>y</em>, both having <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> values.      </p>      <p class="para">       If <code class="parameter">type</code> is <strong><code>IMG_AFFINE_ROTATE</code></strong>,       <strong><code>IMG_AFFINE_SHEAR_HORIZONTAL</code></strong> or <strong><code>IMG_AFFINE_SHEAR_VERTICAL</code></strong>,       <code class="parameter">options</code> has to be a <span class="type"><a href="http://php.net/manual/zh/language.types.float.php" class="type float">float</a></span> specifying the angle.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.imageaffinematrixget-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    An affine transformation matrix (an array with keys    <em>0</em> to <em>5</em> and float values)     或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.imageaffinematrixget-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3650">     <p><strong>Example #1 <span class="function"><strong>imageaffinematrixget()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$matrix&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imageaffinematrixget</span><span style="color: #007700">(</span><span style="color: #9876AA">IMG_AFFINE_TRANSLATE</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'y'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Array (     [0] =&gt; 1     [1] =&gt; 0     [2] =&gt; 0     [3] =&gt; 1     [4] =&gt; 2     [5] =&gt; 3 ) </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.imageaffinematrixget-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link imageaffine()} - 返回经过仿射变换后的图像，剪切区域可选</span></li>     <li class="member"><span class="function">{@link imageaffinematrixconcat()} - Concatenate two affine transformation matrices</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
*/
function imageaffinematrixget ($type, $options = null) {}

/**
*<div id="function.imagecrop" class="refentry">  <div class="refnamediv">   <h1 class="refname">imagecrop</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imagecrop</span> &mdash; <span class="dc-title">Crop an image to the given rectangle</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.imagecrop-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>imagecrop</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$rect</code></span>    )</div>    <p class="para rdfs-comment">    Crops an image to the given rectangular area and returns the resulting image.    The given <code class="parameter">image</code> is not modified.   </p>   </div>    <div class="refsect1 parameters" id="refsect1-function.imagecrop-parameters">   <h3 class="title">参数</h3>   <dl>     <dt> <code class="parameter">image</code></dt>  <dd> <p class="para">由图象创建函数(例如<span class="function">{@link imagecreatetruecolor()}</span>)返回的图象资源。</p></dd>          <dt> <code class="parameter">rect</code></dt>      <dd>       <p class="para">       The cropping rectangle as <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> with keys       <em>x</em>, <em>y</em>, <em>width</em> and       <em>height</em>.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.imagecrop-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Return cropped image resource on success 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.imagecrop-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-3686">    <p><strong>Example #1 <span class="function"><strong>imagecrop()</strong></span> example</strong></p>    <div class="example-contents"><p>      This example shows how to crop an image to a square area.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$im&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecreatefrompng</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.png'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$size&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">min</span><span style="color: #007700">(</span><span style="color: #9876AA">imagesx</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">imagesy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$im2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecrop</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">,&nbsp;[</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'y'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'width'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$size</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'height'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$size</span><span style="color: #007700">]);<br />if&nbsp;(</span><span style="color: #9876AA">$im2&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">imagepng</span><span style="color: #007700">(</span><span style="color: #9876AA">$im2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'example-cropped.png'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im2</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.imagecrop-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link imagecropauto()} - Crop an image automatically using one of the available modes</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return resource|bool Return cropped image resource on success or FALSE on failure.*/
function imagecrop ($image, $rect) {}

/**
*<div id="function.imagecropauto" class="refentry">  <div class="refnamediv">   <h1 class="refname">imagecropauto</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imagecropauto</span> &mdash; <span class="dc-title">Crop an image automatically using one of the available modes</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.imagecropauto-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>imagecropauto</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = <strong><code>IMG_CROP_DEFAULT</code></strong></span></span>    [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$threshold</code><span class="initializer"> = .5</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code><span class="initializer"> = -1</span></span>   ]]] )</div>    <p class="para rdfs-comment">    Automatically crops an image according to the given    <code class="parameter">mode</code>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.imagecropauto-parameters">   <h3 class="title">参数</h3>   <dl>     <dt> <code class="parameter">image</code></dt>  <dd> <p class="para">由图象创建函数(例如<span class="function">{@link imagecreatetruecolor()}</span>)返回的图象资源。</p></dd>          <dt> <code class="parameter">mode</code></dt>      <dd>       <p class="para">       One of the following constants:      </p>      <dl>                <dt> <strong><code>IMG_CROP_DEFAULT</code></strong></dt>         <dd>          <span class="simpara">          Same as <strong><code>IMG_CROP_TRANSPARENT</code></strong>.          Before PHP 7.4.0, the bundled libgd fell back to <strong><code>IMG_CROP_SIDES</code></strong>,          if the image had no transparent color.         </span>        </dd>                       <dt> <strong><code>IMG_CROP_TRANSPARENT</code></strong></dt>         <dd>          <span class="simpara">          Crops out a transparent background.         </span>        </dd>                       <dt> <strong><code>IMG_CROP_BLACK</code></strong></dt>         <dd>          <span class="simpara">          Crops out a black background.         </span>        </dd>                       <dt> <strong><code>IMG_CROP_WHITE</code></strong></dt>         <dd>          <span class="simpara">           Crops out a white background.         </span>        </dd>                       <dt> <strong><code>IMG_CROP_SIDES</code></strong></dt>         <dd>          <span class="simpara">          Uses the 4 corners of the image to attempt to detect the background to          crop.         </span>        </dd>                       <dt> <strong><code>IMG_CROP_THRESHOLD</code></strong></dt>         <dd>          <span class="simpara">          Crops an image using the given <code class="parameter">threshold</code> and          <code class="parameter">color</code>.         </span>        </dd>              </dl>      </dd>              <dt> <code class="parameter">threshold</code></dt>      <dd>       <p class="para">       Specifies the tolerance in percent to be used while comparing the image       color and the color to crop. The method used to calculate the color       difference is based on the color distance in the RGB(a) cube.      </p>      <p class="para">       Used only in <strong><code>IMG_CROP_THRESHOLD</code></strong> mode.      </p>      <blockquote class="note"><p><strong class="note">Note</strong>:        <span class="simpara">        Before PHP 7.4.0, the bundled libgd used a somewhat different algorithm,        so the same <code class="parameter">threshold</code> yielded different results        for system and bundled libgd.       </span>      </p></blockquote>     </dd>              <dt> <code class="parameter">color</code></dt>      <dd>       <p class="para">       Either an RGB color value or a palette index.      </p>      <p class="para">       Used only in <strong><code>IMG_CROP_THRESHOLD</code></strong> mode.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.imagecropauto-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a cropped image resource on success 或者在失败时返回 <strong><code>FALSE</code></strong>.    If the complete image was cropped, <span class="function">{@link imagecrop()}</span> returns <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.imagecropauto-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.4.0</td>       <td>        The behavior of imagecropauto() in the bundled libgd has been synced with        that of system libgd: <strong><code>IMG_CROP_DEFAULT</code></strong> no longer falls        back to <strong><code>IMG_CROP_SIDES</code></strong> and threshold-cropping now uses        the same algorithm as system libgd.       </td>      </tr>       <tr>       <td>7.4.0</td>       <td>        The default value of <code class="parameter">mode</code> has been changed to        <strong><code>IMG_CROP_AUTO</code></strong>. Formerly, the default value has been        <em>-1</em> which corresponds to <strong><code>IMG_CROP_DEFAULT</code></strong>,        but passing <em>-1</em> is now deprecated.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 examples" id="refsect1-function.imagecropauto-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3687">     <p><strong>Example #1 Proper handling of auto-cropping</strong></p>     <div class="example-contents"><p>      As noted in the return value section, <span class="function"><strong>imagecropauto()</strong></span>      returns <strong><code>FALSE</code></strong> if the whole image      was cropped. In this example we have an image resource      <em>$im</em> which should be automatically cropped only if there      is something to crop; otherwise we want to proceed with the original image.     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$cropped&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecropauto</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IMG_CROP_DEFAULT</span><span style="color: #007700">);<br />if&nbsp;(</span><span style="color: #9876AA">$cropped&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{&nbsp;</span><span style="color: #FF8000">//&nbsp;in&nbsp;case&nbsp;a&nbsp;new&nbsp;image&nbsp;resource&nbsp;was&nbsp;returned<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;we&nbsp;destroy&nbsp;the&nbsp;original&nbsp;image<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$im&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$cropped</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;and&nbsp;assign&nbsp;the&nbsp;cropped&nbsp;image&nbsp;to&nbsp;$im<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.imagecropauto-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link imagecrop()} - Crop an image to the given rectangle</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return resource|bool Return cropped image resource on success or <b>FALSE</b> on failure.*/
function imagecropauto ($image, $mode = -1, $threshold = .5, $color = -1) {}

/**
*<div id="function.imageflip" class="refentry">  <div class="refnamediv">   <h1 class="refname">imageflip</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imageflip</span> &mdash; <span class="dc-title">Flips an image using a given mode</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.imageflip-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>imageflip</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span>    )</div>    <p class="para rdfs-comment">    Flips the <code class="parameter">image</code> image using the given    <code class="parameter">mode</code>.    </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.imageflip-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">image</code></dt>  <dd> <p class="para">由图象创建函数(例如<span class="function">{@link imagecreatetruecolor()}</span>)返回的图象资源。</p></dd>            <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        Flip mode, this can be one of the <strong><code>IMG_FLIP_*</code></strong> constants:       </p>       <p class="para">        <table class="doctable informaltable">                   <thead>           <tr>            <th>Constant</th>            <th>Meaning</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td><strong><code>IMG_FLIP_HORIZONTAL</code></strong></td>            <td>             Flips the image horizontally.            </td>           </tr>            <tr>            <td><strong><code>IMG_FLIP_VERTICAL</code></strong></td>            <td>             Flips the image vertically.            </td>           </tr>            <tr>            <td><strong><code>IMG_FLIP_BOTH</code></strong></td>            <td>             Flips the image both horizontally and vertically.            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.imageflip-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.imageflip-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3701">     <p><strong>Example #1 Flips an image vertically</strong></p>     <div class="example-contents"><p>      This example uses the <strong><code>IMG_FLIP_VERTICAL</code></strong>       constant.     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;File<br /></span><span style="color: #9876AA">$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'phplogo.png'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Content&nbsp;type<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type:&nbsp;image/png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Load<br /></span><span style="color: #9876AA">$im&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecreatefrompng</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Flip&nbsp;it&nbsp;vertically<br /></span><span style="color: #9876AA">imageflip</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IMG_FLIP_VERTICAL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Output<br /></span><span style="color: #9876AA">imagejpeg</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="mediaobject">            <div class="imageobject">       <img src="images/21009b70229598c6a80eef8b45bf282b-imageflipvertical.png" alt="Output of example: Vertically flipped image" width="120" height="67" />      </div>     </div>    </div>   </p>   <p class="para">    <div class="example" id="example-3702">     <p><strong>Example #2 Flips the image horizontally</strong></p>     <div class="example-contents"><p>      This example uses the <strong><code>IMG_FLIP_HORIZONTAL</code></strong> constant.     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;File<br /></span><span style="color: #9876AA">$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'phplogo.png'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Content&nbsp;type<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type:&nbsp;image/png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Load<br /></span><span style="color: #9876AA">$im&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecreatefrompng</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Flip&nbsp;it&nbsp;horizontally<br /></span><span style="color: #9876AA">imageflip</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IMG_FLIP_HORIZONTAL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Output<br /></span><span style="color: #9876AA">imagejpeg</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="mediaobject">            <div class="imageobject">       <img src="images/21009b70229598c6a80eef8b45bf282b-imagefliphorizontal.png" alt="Output of example: Horizontally flipped image" width="120" height="67" />      </div>     </div>    </div>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return bool Returns <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function imageflip ($image, $mode) {}

/**
*<div id="function.imagepalettetotruecolor" class="refentry">  <div class="refnamediv">   <h1 class="refname">imagepalettetotruecolor</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imagepalettetotruecolor</span> &mdash; <span class="dc-title">Converts a palette based image to true color</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.imagepalettetotruecolor-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>imagepalettetotruecolor</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$src</code></span>    )</div>    <p class="para rdfs-comment">    Converts a palette based image, created by functions like     <span class="function">{@link imagecreate()}</span> to a true color image, like     <span class="function">{@link imagecreatetruecolor()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.imagepalettetotruecolor-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">image</code></dt>  <dd> <p class="para">由图象创建函数(例如<span class="function">{@link imagecreatetruecolor()}</span>)返回的图象资源。</p></dd>     </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.imagepalettetotruecolor-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if the convertion was complete, or if the source image already     is a true color image, otherwise <strong><code>FALSE</code></strong> is returned.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.imagepalettetotruecolor-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="imagegetclip.example.basic">     <p><strong>Example #1       Converts any image resource to true color     </strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Backwards&nbsp;compatiblity<br /></span><span style="color: #007700">if(!</span><span style="color: #9876AA">function_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'imagepalettetotruecolor'</span><span style="color: #007700">))<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;</span><span style="color: #9876AA">imagepalettetotruecolor</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$src</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #9876AA">imageistruecolor</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$dst&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecreatetruecolor</span><span style="color: #007700">(</span><span style="color: #9876AA">imagesx</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">imagesy</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">));<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">imagecopy</span><span style="color: #007700">(</span><span style="color: #9876AA">$dst</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$src</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">imagesx</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">imagesy</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$src</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$src&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dst</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Helper&nbsp;closure<br /></span><span style="color: #9876AA">$typeof&nbsp;</span><span style="color: #007700">=&nbsp;function()&nbsp;use(</span><span style="color: #9876AA">$im</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'typeof($im)&nbsp;=&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;(</span><span style="color: #9876AA">imageistruecolor</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'true&nbsp;color'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'palette'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />};<br /><br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;a&nbsp;palette&nbsp;based&nbsp;image<br /></span><span style="color: #9876AA">$im&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecreate</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$typeof</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Convert&nbsp;it&nbsp;to&nbsp;true&nbsp;color<br /></span><span style="color: #9876AA">imagepalettetotruecolor</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$typeof</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Free&nbsp;the&nbsp;memory<br /></span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> typeof($im) = palette typeof($im) = true color </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.imagepalettetotruecolor-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link imagecreatetruecolor()} - 新建一个真彩色图像</span></li>     <li class="member"><span class="function">{@link imageistruecolor()} - 检查图像是否为真彩色图像</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return bool Returns <b>TRUE</b> if the convertion was complete, or if the source image already is a true color image, otherwise <b>FALSE</b> is returned.*/
function imagepalettetotruecolor ($image) {}

/**
 * @since 5.5.0
 * Scale an image using the given new width and height
 * @link http://www.php.net/manual/en/function.imagescale.php
 * @param resource $image <p>
 * An image resource, returnd by one of the image creation functions, such as {@link http://www.php.net/manual/en/function.imagecreatetruecolor.php imagecreatetruecolor()}.
 * </p>
 * @param int $new_width
 * @param int $new_height [optional]
 * @param int $mode [optional] One of <b>IMG_NEAREST_NEIGHBOUR</b>, <b>IMG_BILINEAR_FIXED</b>, <b>IMG_BICUBIC</b>, <b>IMG_BICUBIC_FIXED</b> or anything else (will use two pass).
 * @return resource|bool Return scaled image resource on success or <b>FALSE</b> on failure.
 */

/**
*<div id="function.imagescale" class="refentry">  <div class="refnamediv">   <h1 class="refname">imagescale</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imagescale</span> &mdash; <span class="dc-title">Scale an image using the given new width and height</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.imagescale-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>imagescale</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$new_width</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$new_height</code><span class="initializer"> = -1</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = IMG_BILINEAR_FIXED</span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>imagescale()</strong></span> scales an image using the given    interpolation algorithm.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Unlike many of other image functions, <span class="function"><strong>imagescale()</strong></span> does     not modify the passed <code class="parameter">image</code>; instead, a     <em class="emphasis">new</em> image is returned.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.imagescale-parameters">   <h3 class="title">参数</h3>   <dl>     <dt> <code class="parameter">image</code></dt>  <dd> <p class="para">由图象创建函数(例如<span class="function">{@link imagecreatetruecolor()}</span>)返回的图象资源。</p></dd>          <dt> <code class="parameter">new_width</code></dt>      <dd>       <p class="para">       The width to scale the image to.      </p>     </dd>              <dt> <code class="parameter">new_height</code></dt>      <dd>       <p class="para">       The height to scale the image to. If omitted or negative, the aspect       ratio will be preserved.      </p>      <div class="caution"><strong class="caution">Caution</strong>       <p class="para">        You should always provide the height if using PHP 5.5.18 or earlier, or        PHP 5.6.2 or earlier, as the aspect ratio calculation was incorrect.       </p>      </div>     </dd>              <dt> <code class="parameter">mode</code></dt>      <dd>       <p class="para">       One of <strong><code>IMG_NEAREST_NEIGHBOUR</code></strong>,       <strong><code>IMG_BILINEAR_FIXED</code></strong>,       <strong><code>IMG_BICUBIC</code></strong>,       <strong><code>IMG_BICUBIC_FIXED</code></strong> or anything else (will use two       pass).       <blockquote class="note"><p><strong class="note">Note</strong>:         <span class="simpara">         <strong><code>IMG_WEIGHTED4</code></strong> is not yet supported.        </span>       </p></blockquote>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.imagescale-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Return the scaled image resource on success 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.imagescale-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.5.19/5.6.3</td>        <td>         The calculation of the height if <code class="parameter">new_height</code> was         negative or omitted was fixed; prior to these versions, the aspect         ratio was not maintained correctly.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.imagescale-seealso">   <h3 class="title">参见</h3>   <p class="para">    <span class="function">{@link imagecopyresized()} - 拷贝部分图像并调整大小</span>    <span class="function">{@link imagecopyresampled()} - 重采样拷贝部分图像并调整大小</span>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
*/
function imagescale ($image, $new_width, $new_height = -1, $mode = IMG_BILINEAR_FIXED) {}

/**
*<div id="function.imagesetinterpolation" class="refentry">  <div class="refnamediv">   <h1 class="refname">imagesetinterpolation</h1>   <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7)</p><p class="refpurpose"><span class="refname">imagesetinterpolation</span> &mdash; <span class="dc-title">Set the interpolation method</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.imagesetinterpolation-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>imagesetinterpolation</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$method</code><span class="initializer"> = IMG_BILINEAR_FIXED</span></span>   ] )</div>    <p class="para rdfs-comment">    Sets the interpolation method, setting an interpolation method affects the rendering     of various functions in GD, such as the <span class="function">{@link imagerotate()}</span> function.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.imagesetinterpolation-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>      <dt> <code class="parameter">image</code></dt>  <dd> <p class="para">由图象创建函数(例如<span class="function">{@link imagecreatetruecolor()}</span>)返回的图象资源。</p></dd>            <dt> <code class="parameter">method</code></dt>       <dd>        <p class="para">        The interpolation method, which can be one of the following:        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BELL</code></strong>: Bell filter.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BESSEL</code></strong>: Bessel filter.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BICUBIC</code></strong>: Bicubic interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BICUBIC_FIXED</code></strong>: Fixed point implementation of the bicubic interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BILINEAR_FIXED</code></strong>: Fixed point implementation of the  bilinear interpolation (<em>default (also on image creation)</em>).          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BLACKMAN</code></strong>: Blackman window function.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BOX</code></strong>: Box blur filter.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_BSPLINE</code></strong>: Spline interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_CATMULLROM</code></strong>: Cubic Hermite spline interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_GAUSSIAN</code></strong>: Gaussian function.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_GENERALIZED_CUBIC</code></strong>: Generalized cubic spline fractal interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_HERMITE</code></strong>: Hermite interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_HAMMING</code></strong>: Hamming filter.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_HANNING</code></strong>: Hanning filter.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_MITCHELL</code></strong>: Mitchell filter.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_POWER</code></strong>: Power interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_QUADRATIC</code></strong>: Inverse quadratic interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_SINC</code></strong>: Sinc function.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_NEAREST_NEIGHBOUR</code></strong>: Nearest neighbour interpolation.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_WEIGHTED4</code></strong>: Weighting filter.          </span>         </li>         <li class="listitem">          <span class="simpara">           <strong><code>IMG_TRIANGLE</code></strong>: Triangle interpolation.          </span>         </li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.imagesetinterpolation-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.imagesetinterpolation-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3732">     <p><strong>Example #1 <span class="function"><strong>imagesetinterpolation()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Load&nbsp;an&nbsp;image<br /></span><span style="color: #9876AA">$im&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecreate</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">500</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;By&nbsp;default&nbsp;interpolation&nbsp;is&nbsp;IMG_BILINEAR_FIXED,&nbsp;switch&nbsp;<br />//&nbsp;to&nbsp;use&nbsp;the&nbsp;'Mitchell'&nbsp;filter:<br /></span><span style="color: #9876AA">imagesetinterpolation</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">IMG_MITCHELL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Continue&nbsp;to&nbsp;work&nbsp;with&nbsp;$im&nbsp;...<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.imagesetinterpolation-notes">   <h3 class="title">注释</h3>   <p class="para">    Changing the interpolation method affects the following functions     when rendering:     <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       <span class="function">{@link imageaffine()}</span>      </span>     </li>     <li class="listitem">      <span class="simpara">       <span class="function">{@link imagerotate()}</span>      </span>     </li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return bool Returns TRUE on success or FALSE on failure.*/
function imagesetinterpolation ($image, $method = IMG_BILINEAR_FIXED) {}

/**
 * Get Mime-Type for image-type returned by getimagesize,
 * @since 4.3.0
 * @since 5.0
   exif_read_data, exif_thumbnail, exif_imagetype
/**
*<div id="function.image-type-to-mime-type" class="refentry">   <div class="refnamediv">    <h1 class="refname">image_type_to_mime_type</h1>    <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">image_type_to_mime_type</span> &mdash; <span class="dc-title">取得 getimagesize，exif_read_data，exif_thumbnail，exif_imagetype     所返回的图像类型的 MIME 类型</span></p>    </div>   <div class="refsect1 unknown-notet" id="refsect1-function.image-type-to-mime-type-unknown-notet">    <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="type">string</span> <span class="methodname"><strong>image_type_to_mime_type</strong></span>      ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$imagetype</code></span>     )</div>     <p class="para rdfs-comment">     <span class="function"><strong>image_type_to_mime_type()</strong></span> 函数可以判断一个 IMAGETYPE     常量的 MIME 类型。     <div class="example" id="example-3647">      <p><strong>Example #1 image_type_to_mime_type (file)</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-type:&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">image_type_to_mime_type</span><span style="color: #007700">(</span><span style="color: #9876AA">IMAGETYPE_PNG</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     返回值如下：     <table class="doctable table">     <caption><strong>返回值常量</strong></caption>             <thead>        <tr>         <th>图像类型（<code class="parameter">imagetype</code>）</th>         <th>返回值</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td><strong><code>IMAGETYPE_GIF</code></strong></td>         <td><em>image/gif</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_JPEG</code></strong></td>         <td><em>image/jpeg</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_PNG</code></strong></td>         <td><em>image/png</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_SWF</code></strong></td>         <td><em>application/x-shockwave-flash</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_PSD</code></strong></td>         <td><em>image/psd</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_BMP</code></strong></td>         <td><em>image/bmp</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_TIFF_II</code></strong> (intel byte order)</td>         <td><em>image/tiff</em></td>        </tr>         <tr>         <td>          <strong><code>IMAGETYPE_TIFF_MM</code></strong> (motorola byte order)         </td>         <td><em>image/tiff</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_JPC</code></strong></td>         <td><em>application/octet-stream</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_JP2</code></strong></td>         <td><em>image/jp2</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_JPX</code></strong></td>         <td><em>application/octet-stream</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_JB2</code></strong></td>         <td><em>application/octet-stream</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_SWC</code></strong></td>         <td><em>application/x-shockwave-flash</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_IFF</code></strong></td>         <td><em>image/iff</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_WBMP</code></strong></td>         <td><em>image/vnd.wap.wbmp</em></td>        </tr>         <tr>         <td><strong><code>IMAGETYPE_XBM</code></strong></td>         <td><em>image/xbm</em></td>        </tr>        </tbody>           </table>     </p>    <p class="para">     <blockquote class="note"><p><strong class="note">Note</strong>:       <span class="simpara">       本函数不需要 GD 库。      </span>     </p></blockquote>    </p>    <p class="para">     参见 <span class="function">{@link getimagesize()}</span>，<span class="function">{@link exif_imagetype()}</span>，<span class="function">{@link exif_read_data()}</span>     和 <span class="function">{@link exif_thumbnail()}</span>。    </p>   </div>   <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return string The returned values are as follows*/
function image_type_to_mime_type ($imagetype) {}

/**
*<div id="function.image-type-to-extension" class="refentry">  <div class="refnamediv">   <h1 class="refname">image_type_to_extension</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7)</p><p class="refpurpose"><span class="refname">image_type_to_extension</span> &mdash; <span class="dc-title">取得图像类型的文件后缀</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.image-type-to-extension-description">     <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>image_type_to_extension</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$imagetype</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$include_dot</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>      <p class="para rdfs-comment">      根据给定的常量 <em>IMAGETYPE_XXX</em> 返回后缀名。   </p>  </div>     <div class="refsect1 parameters" id="refsect1-function.image-type-to-extension-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">imagetype</code></dt>       <dd>        <p class="para">        <em>IMAGETYPE_XXX</em> 系列常量之一。       </p>      </dd>                 <dt> <code class="parameter">include_dot</code></dt>       <dd>        <p class="para">        是否在后缀名前加一个点。默认是 <strong><code>TRUE</code></strong>。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.image-type-to-extension-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    根据指定的图像类型返回对应的后缀名。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.image-type-to-extension-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-3646">     <p><strong>Example #1 <span class="function"><strong>image_type_to_extension()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;创建图像实例<br /></span><span style="color: #9876AA">$im&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">imagecreatetruecolor</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;保存图像<br /></span><span style="color: #9876AA">imagepng</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'./test'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">image_type_to_extension</span><span style="color: #007700">(</span><span style="color: #9876AA">IMAGETYPE_PNG</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.image-type-to-extension-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.image.php">GD 和图像处理 函数</a></div></div>
 * @return string A string with the extension corresponding to the given image type.*/
function image_type_to_extension ($imagetype, $include_dot = null) {}

/**
*<div id="function.phpinfo" class="refentry">  <div class="refnamediv">   <h1 class="refname">phpinfo</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">phpinfo</span> &mdash; <span class="dc-title">输出关于 PHP 配置的信息</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.phpinfo-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>phpinfo</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$what</code><span class="initializer"> = INFO_ALL</span></span>   ] )</div>    <p class="para rdfs-comment">   输出 PHP 当前状态的大量信息，包含了 PHP 编译选项、启用的扩展、PHP 版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP环境变量、操作系统版本信息、path 变量、配置选项的本地值和主值、HTTP 头和PHP授权信息(License)。   </p>   <p class="para">   因为每个系统安装得有所不同，<span class="function"><strong>phpinfo()</strong></span> 常用于在系统上检查 <a href="http://php.net/manual/zh/configuration.php" class="link">配置设置</a>和   <a href="http://php.net/manual/zh/language.variables.predefined.php" class="link">预定义变量</a>。   </p>   <p class="para">    <span class="function"><strong>phpinfo()</strong></span> 同时是个很有价值的、包含所有 EGPCS(Environment, GET, POST, Cookie, Server) 数据的调试工具。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.phpinfo-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">what</code></dt>       <dd>        <p class="para">        可以用以下的一个或多个 <em class="emphasis">constants</em> 用位运算传递给可选的 <code class="parameter">what</code> 参数来定制输出的信息。        该参数可以把常量相加或者用 <a href="http://php.net/manual/zh/language.operators.bitwise.php" class="link">or</a> 操作符按位运算。       </p>       <p class="para">        <table class="doctable table">         <caption><strong><span class="function"><strong>phpinfo()</strong></span> 选项</strong></caption>                   <thead>           <tr>            <th>Name (constant)</th>            <th>Value</th>            <th>Description</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td>INFO_GENERAL</td>            <td>1</td>            <td>             配置的命令行、 <var class="filename">php.ini</var> 的文件位置、建立的时间、Web 服务器、系统及更多其他信息。            </td>           </tr>            <tr>            <td>INFO_CREDITS</td>            <td>2</td>            <td>             PHP 贡献者名单。参加 <span class="function">{@link phpcredits()}</span>。            </td>           </tr>            <tr>            <td>INFO_CONFIGURATION</td>            <td>4</td>            <td>             当前PHP指令的本地值和主值。参见 <span class="function">{@link ini_get()}</span>。            </td>           </tr>            <tr>            <td>INFO_MODULES</td>            <td>8</td>            <td>             已加载的模块和模块相应的设置。参见             <span class="function">{@link get_loaded_extensions()}</span>。            </td>           </tr>            <tr>            <td>INFO_ENVIRONMENT</td>            <td>16</td>            <td>             环境变量信息也可以用 <var class="varname"><var class="varname"><a href="http://php.net/manual/zh/reserved.variables.environment.php" class="classname">$_ENV</a></var></var> 获取。            </td>           </tr>            <tr>            <td>INFO_VARIABLES</td>            <td>32</td>            <td>             显示所有来自 EGPCS (Environment, GET,             POST, Cookie, Server) 的 <a href="http://php.net/manual/zh/language.variables.predefined.php" class="link">             预定义变量</a>。            </td>           </tr>            <tr>            <td>INFO_LICENSE</td>            <td>64</td>            <td>             PHP许可证信息。参见 <a href="http://www.php.net/license/" class="link external">&raquo;&nbsp;license FAQ</a>。            </td>           </tr>            <tr>            <td>INFO_ALL</td>            <td>-1</td>            <td>             显示以上所有信息。            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.phpinfo-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.phpinfo-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>5.5.0</th>        <th>         Logo GUIDs were replaced with data URIs, and so turning off expose_php         now has no effect on the result of phpinfo(). Credits are also now         embedded within the output itself instead of linked.        </th>       </tr>        <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.2.2</td>        <td>         增加了“已加载的配置文件”信息，之前只存在“配置文件路径(php.ini)&quot;。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.phpinfo-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-526">     <p><strong>Example #1 <span class="function"><strong>phpinfo()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;显示所有信息，默认显示&nbsp;INFO_ALL<br /></span><span style="color: #9876AA">phpinfo</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Show&nbsp;just&nbsp;the&nbsp;module&nbsp;information.&nbsp;仅仅显示PHP模块信息，<br />//&nbsp;phpinfo(8)&nbsp;返回同样的结果。<br /></span><span style="color: #9876AA">phpinfo</span><span style="color: #007700">(</span><span style="color: #9876AA">INFO_MODULES</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.phpinfo-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     在 PHP 5.5 之前版本，当 <a href="http://php.net/manual/zh/ini.core.php#ini.expose-php" class="link">expose_php</a> 设置为 <em>off</em> 可以禁用一部分信息。     这包括了 PHP 和 Zend 的 logo，以及贡献者名单。    </p>   </p></blockquote>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     在命令行（CLI）模式下 <span class="function"><strong>phpinfo()</strong></span> 仅会输出纯文本，而不是HTML。    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.phpinfo-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link phpversion()} - 获取当前的PHP版本</span></li>     <li class="member"><span class="function">{@link phpcredits()} - 打印 PHP 贡献者名单</span></li>     <li class="member"><span class="function">{@link php_logo_guid()} - 获取 logo 的 guid</span></li>     <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>     <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>     <li class="member"><span class="function">{@link get_loaded_extensions()} - 返回所有编译并加载模块名的 array</span></li>     <li class="member"><a href="http://php.net/manual/zh/language.variables.predefined.php" class="link">Predefined Variables</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function phpinfo ($what = null) {}

/**
*<div id="function.phpversion" class="refentry">  <div class="refnamediv">   <h1 class="refname">phpversion</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">phpversion</span> &mdash; <span class="dc-title">获取当前的PHP版本</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.phpversion-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>phpversion</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$extension</code></span>   ] )</div>    <p class="para rdfs-comment">    返回了包含当前运行 PHP 解释器或扩展版本信息的 string。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.phpversion-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">extension</code></dt>       <dd>        <p class="para">        可选的扩展名。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.phpversion-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果指定了可选参数 <code class="parameter">extension</code>，<span class="function"><strong>phpversion()</strong></span>会返回该扩展的版本。    如果没有对应的版本信息，或者该扩展未启用，则返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.phpversion-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-527">     <p><strong>Example #1 <span class="function"><strong>phpversion()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;prints&nbsp;e.g.&nbsp;'Current&nbsp;PHP&nbsp;version:&nbsp;4.1.1'<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'Current&nbsp;PHP&nbsp;version:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">phpversion</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;prints&nbsp;e.g.&nbsp;'2.0'&nbsp;or&nbsp;nothing&nbsp;if&nbsp;the&nbsp;extension&nbsp;isn't&nbsp;enabled<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">phpversion</span><span style="color: #007700">(</span><span style="color: #DD0000">'tidy'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-528">     <p><strong>Example #2 <strong><code>PHP_VERSION_ID</code></strong> 范例和用法</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;PHP_VERSION_ID&nbsp;自&nbsp;PHP&nbsp;5.2.7&nbsp;起有效，<br />//&nbsp;如果我们的版本低于该版本，则用以下代码来模拟&nbsp;<br /></span><span style="color: #007700">if&nbsp;(!</span><span style="color: #9876AA">defined</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_VERSION_ID'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$version&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">'.'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_VERSION</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_VERSION_ID'</span><span style="color: #007700">,&nbsp;(</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]&nbsp;*&nbsp;</span><span style="color: #9876AA">10000&nbsp;</span><span style="color: #007700">+&nbsp;</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]&nbsp;*&nbsp;</span><span style="color: #9876AA">100&nbsp;</span><span style="color: #007700">+&nbsp;</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]));<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;PHP_VERSION_ID&nbsp;定义为一个数字，PHP&nbsp;版本越新，数字越大。<br />//&nbsp;它的定义是以下的表达式：<br />//<br />//&nbsp;$version_id&nbsp;=&nbsp;$major_version&nbsp;*&nbsp;10000&nbsp;+&nbsp;$minor_version&nbsp;*&nbsp;100&nbsp;+&nbsp;$release_version;<br />//<br />//&nbsp;现在我们可以通过&nbsp;PHP_VERSION_ID&nbsp;来检查&nbsp;PHP&nbsp;版本，<br />//&nbsp;而不用每次都必须用&nbsp;version_compare()&nbsp;来检查&nbsp;PHP&nbsp;是否支持某个功能。<br />//<br />//&nbsp;比如，我们在此可以定义一系列&nbsp;PHP_VERSION_*&nbsp;constants&nbsp;常量，<br />//&nbsp;而在&nbsp;5.2.7&nbsp;之前的版本并没有被定义。<br /><br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">PHP_VERSION_ID&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">50207</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_MAJOR_VERSION'</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_MINOR_VERSION'</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_RELEASE_VERSION'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;等等，&nbsp;...<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.phpversion-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     这些信息也存在于预定义常量 <strong><code>PHP_VERSION</code></strong>里。     更多版本的信息可以使用常量 <strong><code>PHP_VERSION_*</code></strong>。    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.phpversion-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/reserved.constants.php#reserved.constants.core" class="link">常量 PHP_VERSION</a></li>     <li class="member"><span class="function">{@link version_compare()} - 对比两个「PHP 规范化」的版本数字字符串</span></li>     <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>     <li class="member"><span class="function">{@link phpcredits()} - 打印 PHP 贡献者名单</span></li>     <li class="member"><span class="function">{@link php_logo_guid()} - 获取 logo 的 guid</span></li>     <li class="member"><span class="function">{@link zend_version()} - 获取当前 Zend 引擎的版本</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string If the optional extension parameter is*/
function phpversion ($extension = null) {}

/**
*<div id="function.phpcredits" class="refentry">  <div class="refnamediv">   <h1 class="refname">phpcredits</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">phpcredits</span> &mdash; <span class="dc-title">打印 PHP 贡献者名单</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.phpcredits-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>phpcredits</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$flag</code><span class="initializer"> = CREDITS_ALL</span></span>   ] )</div>    <p class="para rdfs-comment">    这个函数打印出了 PHP 开发者、模块等贡献者名单。    它生成了合适、可嵌入信息到页面中的 HTML 代码。   </p>     </div>    <div class="refsect1 parameters" id="refsect1-function.phpcredits-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">flag</code></dt>       <dd>        <p class="para">        生成自定义的贡献者页面，你也许想要使用 <code class="parameter">flag</code> 参数。       </p>       <p class="para">        <table class="doctable table">         <caption><strong>预定义的 <span class="function"><strong>phpcredits()</strong></span> flags</strong></caption>                   <thead>           <tr>            <th>名称</th>            <th>描述</th>           </tr>           </thead>           <tbody class="tbody">           <tr>            <td>CREDITS_ALL</td>            <td>             所有贡献者，等同于使用： <strong><code>CREDITS_DOCS</code></strong> +             <strong><code>CREDITS_GENERAL</code></strong> + <strong><code>CREDITS_GROUP</code></strong> +             <strong><code>CREDITS_MODULES</code></strong> + <strong><code>CREDITS_FULLPAGE</code></strong>。             它以适当的标签产生了完整独立的 HTML 页面。            </td>           </tr>            <tr>            <td>CREDITS_DOCS</td>            <td>文档组贡献名单</td>           </tr>            <tr>            <td>CREDITS_FULLPAGE</td>            <td>             常用于和其他标志进行组合。             表示需要打印包含其他标志表示信息的独立 HTML 页面。            </td>           </tr>            <tr>            <td>CREDITS_GENERAL</td>            <td>             普遍名单：语言设计与理念、PHP作者以及 SAPI 模块。            </td>           </tr>            <tr>            <td>CREDITS_GROUP</td>            <td>核心开发者名单</td>           </tr>            <tr>            <td>CREDITS_MODULES</td>            <td>             PHP 扩展模块以及它们的作者的清单            </td>           </tr>            <tr>            <td>CREDITS_SAPI</td>            <td>             PHP 的服务器 API 模块以及他们的作者的清单            </td>           </tr>           </tbody>                 </table>        </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.phpcredits-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.phpcredits-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-523">     <p><strong>Example #1 打印普遍名单</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />phpcredits</span><span style="color: #007700">(</span><span style="color: #9876AA">CREDITS_GENERAL</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-524">     <p><strong>Example #2 打印核心开发者和文档组</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />phpcredits</span><span style="color: #007700">(</span><span style="color: #9876AA">CREDITS_GROUP&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">CREDITS_DOCS&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">CREDITS_FULLPAGE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-525">     <p><strong>Example #3 打印所有贡献者</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> &lt;html&gt;<br />&nbsp;&lt;head&gt;<br />&nbsp;&nbsp;&lt;title&gt;My&nbsp;credits&nbsp;page&lt;/title&gt;<br />&nbsp;&lt;/head&gt;<br />&nbsp;&lt;body&gt;<br /><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;一些你自己的代码<br /></span><span style="color: #9876AA">phpcredits</span><span style="color: #007700">(</span><span style="color: #9876AA">CREDITS_ALL&nbsp;</span><span style="color: #007700">-&nbsp;</span><span style="color: #9876AA">CREDITS_FULLPAGE</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;一些其他的代码<br /></span><span style="color: #9876AA">?&gt;<br /></span>&nbsp;&lt;/body&gt;<br />&lt;/html&gt;</span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.phpcredits-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     在 CLI 模式下 <span class="function"><strong>phpcredits()</strong></span> 输出明文而不是 HTML。    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.phpcredits-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link phpversion()} - 获取当前的PHP版本</span></li>     <li class="member"><span class="function">{@link php_logo_guid()} - 获取 logo 的 guid</span></li>     <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return bool true on success or false on failure.*/
function phpcredits ($flag = null) {}

/**
*<div id="function.php-logo-guid" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_logo_guid</h1>   <p class="verinfo">(PHP 4, PHP 5 &lt; 5.5.0)</p><p class="refpurpose"><span class="refname">php_logo_guid</span> &mdash; <span class="dc-title">获取 logo 的 guid</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.php-logo-guid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>php_logo_guid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    此函数能够返回用于显示 PHP logo 内置图像的 ID。    图像仅在 <a href="http://php.net/manual/zh/ini.core.php#ini.expose-php" class="link">expose_php</a> 启用时显示。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">自 PHP 5.5.0 起，已经<em class="emphasis">废弃</em>并<em class="emphasis">移除</em>此函数。</p></div>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.php-logo-guid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <em>PHPE9568F34-D428-11d2-A769-00AA001ACF42</em>.   </p>  </div>     <div class="refsect1 changelog" id="refsect1-function.php-logo-guid-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.5.0</td>        <td>         <span class="function"><strong>php_logo_guid()</strong></span> 从 PHP 中移除。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.php-logo-guid-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="getopt.examples-1">     <p><strong>Example #1 <span class="function"><strong>php_logo_guid()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'&lt;img&nbsp;src="'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'PHP_SELF'</span><span style="color: #007700">]&nbsp;.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'?='&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">php_logo_guid</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">'"&nbsp;alt="PHP&nbsp;Logo&nbsp;!"&nbsp;/&gt;'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.php-logo-guid-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>     <li class="member"><span class="function">{@link phpversion()} - 获取当前的PHP版本</span></li>     <li class="member"><span class="function">{@link phpcredits()} - 打印 PHP 贡献者名单</span></li>     <li class="member"><span class="function">{@link zend_logo_guid()} - 获取 Zend guid</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string PHPE9568F34-D428-11d2-A769-00AA001ACF42.*/
function php_logo_guid () {}

/**
 * @deprecated 5.5 Removed in PHP 5.5
 * @since 4.0
 * @since 5.0
 */
function php_real_logo_guid () {}

/**
 * @deprecated 5.5 Removed in PHP 5.5
 * @since 4.0
 * @since 5.0
 */
function php_egg_logo_guid () {}

/**
*<div id="function.zend-logo-guid" class="refentry">  <div class="refnamediv">   <h1 class="refname">zend_logo_guid</h1>   <p class="verinfo">(PHP 4, PHP &lt; 5.5.0)</p><p class="refpurpose"><span class="refname">zend_logo_guid</span> &mdash; <span class="dc-title">获取 Zend guid</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.zend-logo-guid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>zend_logo_guid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    该函数返回了一个 ID，能够使用内置的图像来显示 Zend logo。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">自 PHP 5.5.0 起，已经<em class="emphasis">废弃</em>并<em class="emphasis">移除</em>此函数。</p></div>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.zend-logo-guid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <em>PHPE9568F35-D428-11d2-A769-00AA001ACF42</em>.   </p>  </div>  <div class="refsect1 changelog" id="refsect1-function.zend-logo-guid-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.5.0</td>        <td>         <span class="function"><strong>zend_logo_guid()</strong></span> 从 PHP 中移除了。        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.zend-logo-guid-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-536">     <p><strong>Example #1 <span class="function"><strong>zend_logo_guid()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">'&lt;img&nbsp;src="'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'PHP_SELF'</span><span style="color: #007700">]&nbsp;.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'?='&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">zend_logo_guid</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">'"&nbsp;alt="Zend&nbsp;Logo&nbsp;!"&nbsp;/&gt;'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.zend-logo-guid-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link php_logo_guid()} - 获取 logo 的 guid</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string PHPE9568F35-D428-11d2-A769-00AA001ACF42.*/
function zend_logo_guid () {}

/**
*<div id="function.php-sapi-name" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_sapi_name</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.1, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">php_sapi_name</span> &mdash; <span class="dc-title">返回 web 服务器和 PHP 之间的接口类型</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.php-sapi-name-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>php_sapi_name</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="simpara">    返回描述 PHP 所使用的接口类型（the Server API, SAPI）的小写字符串。    例如，CLI 的 PHP 下这个字符串会是 &quot;cli&quot;，Apache 下可能会有几个不同的值，取决于具体使用的 SAPI。    以下列出了可能的值。   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.php-sapi-name-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回接口类型的小写字符串。   </p>   <p class="para">    尽管不够全面，可能返回的值包括了    <em>aolserver</em>、<em>apache</em>、    <em>apache2filter</em>、<em>apache2handler</em>、    <em>caudium</em>、<em>cgi</em> （直到 PHP 5.3）,     <em>cgi-fcgi</em>、<em>cli</em>、 <em>cli-server</em>、    <em>continuity</em>、<em>embed</em>、<em>fpm-fcgi</em>、    <em>isapi</em>、<em>litespeed</em>、    <em>milter</em>、<em>nsapi</em>、    <em>phttpd</em>、<em>pi3web</em>、<em>roxen</em>、    <em>thttpd</em>、<em>tux</em> 和 <em>webjames</em>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.php-sapi-name-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="getopt.examples-2">     <p><strong>Example #1 <span class="function"><strong>php_sapi_name()</strong></span> 例子</strong></p>     <div class="example-contents"><p>      以下例子检测了子字符串 <em>cgi</em>，因为它也有可能会是 <em>cgi-fcgi</em>。     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$sapi_type&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">php_sapi_name</span><span style="color: #007700">();<br />if&nbsp;(</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$sapi_type</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">)&nbsp;==&nbsp;</span><span style="color: #DD0000">'cgi'</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"You&nbsp;are&nbsp;using&nbsp;CGI&nbsp;PHP\n"</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"You&nbsp;are&nbsp;not&nbsp;using&nbsp;CGI&nbsp;PHP\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.php-sapi-name-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <strong>另一种方法</strong><br />    <p class="para">     PHP 常量 <strong><code>PHP_SAPI</code></strong> 具有和 <span class="function"><strong>php_sapi_name()</strong></span> 相同的值。    </p>   </p></blockquote>   <div class="tip"><strong class="tip">Tip</strong>    <h1 class="title">一个潜在的疑难问题</h1>    <p class="para">     定义的 <acronym title="Server Application Programming Interface">SAPI</acronym> 可能不够明显，比如它可能定义为 <em>apache2handler</em> 或 <em>apache2filter</em>，而不是 <em>apache</em>    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.php-sapi-name-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/reserved.constants.php#reserved.constants.core" class="link">PHP_SAPI</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string the interface type, as a lowercase string.*/
function php_sapi_name () {}

/**
*<div id="function.php-uname" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_uname</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">php_uname</span> &mdash; <span class="dc-title">返回运行 PHP 的系统的有关信息</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.php-uname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>php_uname</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code><span class="initializer"> = &quot;a&quot;</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>php_uname()</strong></span> 返回了运行 PHP 的操作系统的描述。    这和 <span class="function">{@link phpinfo()}</span> 最顶端上输出的是同一个字符串。    如果仅仅要获取操作系统的名称。可以考虑使用常量 <strong><code>PHP_OS</code></strong>，不过要注意该常量会包含 PHP 构建（<em class="emphasis">built</em>）时的操作系统名。   </p>   <p class="para">    在一些旧的 UNIX 平台，它有可能无法检测到当前系统的信息，然后会还原显示成构建 PHP 时的系统信息。    这仅仅在你的 uname() 函数库不存在或无法运行时发生。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.php-uname-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        <code class="parameter">mode</code> 是单个字符，用于定义要返回什么信息：        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">           <em>&#039;a&#039;</em>：此为默认。包含序列 <em>&quot;s n r v m&quot;</em> 里的所有模式。          </span>         </li>         <li class="listitem">          <span class="simpara">           <em>&#039;s&#039;</em>：操作系统名称。例如：            <em>FreeBSD</em>。          </span>         </li>         <li class="listitem">          <span class="simpara">           <em>&#039;n&#039;</em>：主机名。例如：           <em>localhost.example.com</em>。          </span>         </li>         <li class="listitem">          <span class="simpara">           <em>&#039;r&#039;</em>：版本名称，例如：           <em>5.1.2-RELEASE</em>。          </span>         </li>         <li class="listitem">          <span class="simpara">           <em>&#039;v&#039;</em>：版本信息。操作系统之间有很大的不同。          </span>         </li>         <li class="listitem">          <span class="simpara">           <em>&#039;m&#039;</em>：机器类型。例如：<em>i386</em>。          </span>         </li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.php-uname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回描述字符串。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.php-uname-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="getopt.examples-3">     <p><strong>Example #1 一些 <span class="function"><strong>php_uname()</strong></span> 的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">php_uname</span><span style="color: #007700">();<br />echo&nbsp;</span><span style="color: #9876AA">PHP_OS</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;比如有些会输出：<br />Linux&nbsp;localhost&nbsp;2.4.21-0.13mdk&nbsp;#1&nbsp;Fri&nbsp;Mar&nbsp;14&nbsp;15:08:06&nbsp;EST&nbsp;2003&nbsp;i686<br />Linux<br /><br />FreeBSD&nbsp;localhost&nbsp;3.2-RELEASE&nbsp;#15:&nbsp;Mon&nbsp;Dec&nbsp;17&nbsp;08:46:02&nbsp;GMT&nbsp;2001<br />FreeBSD<br /><br />Windows&nbsp;NT&nbsp;XN1&nbsp;5.1&nbsp;build&nbsp;2600<br />WINNT<br /><br /><br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_OS</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">))&nbsp;===&nbsp;</span><span style="color: #DD0000">'WIN'</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'This&nbsp;is&nbsp;a&nbsp;server&nbsp;using&nbsp;Windows!'</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'This&nbsp;is&nbsp;a&nbsp;server&nbsp;not&nbsp;using&nbsp;Windows!'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    同样可以方便地使用一些相关的 <a href="http://php.net/manual/zh/language.constants.predefined.php" class="link">PHP 预定义常量</a>，例如：    <div class="example" id="getopt.examples-4">     <p><strong>Example #2 一些系统相关常量的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;*nix<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">DIRECTORY_SEPARATOR</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;/<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">PHP_SHLIB_SUFFIX</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;so<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">PATH_SEPARATOR</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;:<br /><br />//&nbsp;Win*<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">DIRECTORY_SEPARATOR</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;\<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">PHP_SHLIB_SUFFIX</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;dll<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">PATH_SEPARATOR</span><span style="color: #007700">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.php-uname-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link phpversion()} - 获取当前的PHP版本</span></li>     <li class="member"><span class="function">{@link php_sapi_name()} - 返回 web 服务器和 PHP 之间的接口类型</span></li>     <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string the description, as a string.*/
function php_uname ($mode = null) {}

/**
*<div id="function.php-ini-scanned-files" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_ini_scanned_files</h1>   <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">php_ini_scanned_files</span> &mdash; <span class="dc-title">返回从额外 ini 目录里解析的 .ini 文件列表</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.php-ini-scanned-files-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>php_ini_scanned_files</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>php_ini_scanned_files()</strong></span> 返回解析的 <var class="filename">php.ini</var> 后逗号分隔的配置文件列表。    这些文件从编译时 <strong class="option configure">--with-config-file-scan-dir</strong>  选项里指定的目录里找到。   </p>   <p class="para">    这些返回的配置文件也包括了 <strong class="option configure">--with-config-file-scan-dir</strong>  选项里声明的路径。   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.php-ini-scanned-files-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回逗号分隔的 .ini 文件字符串。    每个逗号后紧跟新的一行。    如果未设置指令 <strong class="option configure">--with-config-file-scan-dir</strong>  将会返回 <strong><code>FALSE</code></strong>。    如果它设置了，并且目录是空的，将会返回一个空字符串。    如果有未识别的文件，此文件也会进入返回的字符串，但是会导致一个 PHP 错误。    此 PHP 错误即会在编译时出现也会在使用 <span class="function"><strong>php_ini_scanned_files()</strong></span> 函数时出现。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.php-ini-scanned-files-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-518">     <p><strong>Example #1 列出返回的 ini 文件的简单例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">$filelist&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">php_ini_scanned_files</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filelist</span><span style="color: #007700">)&nbsp;&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$files&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$filelist</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style="color: #9876AA">$files&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$file</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"&lt;li&gt;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #DD0000">"&lt;/li&gt;\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.php-ini-scanned-files-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>     <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>     <li class="member"><span class="function">{@link php_ini_loaded_file()} - 取得已加载的 php.ini 文件的路径</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string a comma-separated string of .ini files on success. Each comma is*/
function php_ini_scanned_files () {}

/**
*<div id="function.php-ini-loaded-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">php_ini_loaded_file</h1>   <p class="verinfo">(PHP 5 &gt;= 5.2.4, PHP 7)</p><p class="refpurpose"><span class="refname">php_ini_loaded_file</span> &mdash; <span class="dc-title">取得已加载的 php.ini 文件的路径</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.php-ini-loaded-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>php_ini_loaded_file</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    检查是否有加载的 <var class="filename">php.ini</var> 文件，并取回它的路径。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.php-ini-loaded-file-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.php-ini-loaded-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    已加载的 <var class="filename">php.ini</var> 路径，或在没有时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.php-ini-loaded-file-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-517">     <p><strong>Example #1 <span class="function"><strong>php_ini_loaded_file()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$inipath&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">php_ini_loaded_file</span><span style="color: #007700">();<br /><br />if&nbsp;(</span><span style="color: #9876AA">$inipath</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Loaded&nbsp;php.ini:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$inipath</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'A&nbsp;php.ini&nbsp;file&nbsp;is&nbsp;not&nbsp;loaded'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Loaded php.ini: /usr/local/php/php.ini </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.php-ini-loaded-file-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link php_ini_scanned_files()} - 返回从额外 ini 目录里解析的 .ini 文件列表</span></li>     <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>     <li class="member"><a href="http://php.net/manual/zh/configuration.file.php" class="link">配置文件</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.info.php">PHP 选项/信息 函数</a></div></div>
 * @return string The loaded &php.ini; path, or false if one is not loaded.*/
function php_ini_loaded_file () {}

/**
*<div id="function.strnatcmp" class="refentry">  <div class="refnamediv">   <h1 class="refname">strnatcmp</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">strnatcmp</span> &mdash; <span class="dc-title">使用自然排序算法比较字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.strnatcmp-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>strnatcmp</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span>    )</div>    <p class="para rdfs-comment">    该函数实现了以人类习惯对数字型字符串进行排序的比较算法，这就是“自然顺序”。注意该比较区分大小写。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.strnatcmp-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str1</code></dt>       <dd>        <p class="para">        第一个字符串。       </p>      </dd>                 <dt> <code class="parameter">str2</code></dt>       <dd>        <p class="para">        第二个字符串。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.strnatcmp-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    与其他字符串比较函数类似，如果 <code class="parameter">str1</code> 小于    <code class="parameter">str2</code> 返回 &lt; 0；    如果 <code class="parameter">str1</code>    大于 <code class="parameter">str2</code>    返回 &gt; 0；如果两者相等，返回 0。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.strnatcmp-examples">   <h3 class="title">范例</h3>   <p class="para">    下面的例子展示了该算法与计算机常规字符串比较算法（ <span class="function">{@link strcmp()}</span> 所使用的）的区别：    <div class="informalexample">     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$arr1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$arr2&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"img12.png"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"img10.png"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"img2.png"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"img1.png"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Standard&nbsp;string&nbsp;comparison\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">usort</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"strcmp"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr1</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"\nNatural&nbsp;order&nbsp;string&nbsp;comparison\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">usort</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"strnatcmp"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <p class="para">以上例程会输出：</p>     <div class="example-contents screen"> <div class="cdata"><pre> Standard string comparison Array (     [0] =&gt; img1.png     [1] =&gt; img10.png     [2] =&gt; img12.png     [3] =&gt; img2.png )  Natural order string comparison Array (     [0] =&gt; img1.png     [1] =&gt; img2.png     [2] =&gt; img10.png     [3] =&gt; img12.png ) </pre></div>     </div>    </div>    更多信息，参见：Martin Pool 的<a href="http://sourcefrog.net/projects/natsort/" class="link external">&raquo;&nbsp;自然顺序的字符串比较</a>    page.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.strnatcmp-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link preg_match()} - 执行匹配正则表达式</span></li>     <li class="member"><span class="function">{@link strcasecmp()} - 二进制安全比较字符串（不区分大小写）</span></li>     <li class="member"><span class="function">{@link substr()} - 返回字符串的子串</span></li>     <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>     <li class="member"><span class="function">{@link strcmp()} - 二进制安全字符串比较</span></li>     <li class="member"><span class="function">{@link strncmp()} - 二进制安全比较字符串开头的若干个字符</span></li>     <li class="member"><span class="function">{@link strncasecmp()} - 二进制安全比较字符串开头的若干个字符（不区分大小写）</span></li>     <li class="member"><span class="function">{@link strnatcasecmp()} - 使用&ldquo;自然顺序&rdquo;算法比较字符串（不区分大小写）</span></li>     <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>     <li class="member"><span class="function">{@link natsort()} - 用&ldquo;自然排序&rdquo;算法对数组排序</span></li>     <li class="member"><span class="function">{@link natcasesort()} - 用&ldquo;自然排序&rdquo;算法对数组进行不区分大小写字母的排序</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return int Similar to other string comparison functions, this one returns &lt; 0 if*/
function strnatcmp ($str1, $str2) {}

/**
*<div id="function.strnatcasecmp" class="refentry">  <div class="refnamediv">   <h1 class="refname">strnatcasecmp</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">strnatcasecmp</span> &mdash; <span class="dc-title">使用“自然顺序”算法比较字符串（不区分大小写）</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.strnatcasecmp-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>strnatcasecmp</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span>    )</div>    <p class="para rdfs-comment">    该函数实现了以人类习惯对数字型字符串进行排序的比较算法。除了不区分大小写，该函数的行为与 <span class="function">{@link strnatcmp()}</span> 类似。更多信息，参见：Martin Pool 的<a href="http://sourcefrog.net/projects/natsort/" class="link external">&raquo;&nbsp;自然顺序的字符串比较</a>页面。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.strnatcasecmp-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str1</code></dt>       <dd>        <p class="para">        第一个字符串。       </p>      </dd>                 <dt> <code class="parameter">str2</code></dt>       <dd>        <p class="para">        第二个字符串。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.strnatcasecmp-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    与其他字符串比较函数类似，如果 <code class="parameter">str1</code> 小于    <code class="parameter">str2</code> 返回 &lt; 0；    如果 <code class="parameter">str1</code>    大于 <code class="parameter">str2</code>    返回 &gt; 0；如果两者相等，返回 0。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.strnatcasecmp-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link preg_match()} - 执行匹配正则表达式</span></li>     <li class="member"><span class="function">{@link strcmp()} - 二进制安全字符串比较</span></li>     <li class="member"><span class="function">{@link strcasecmp()} - 二进制安全比较字符串（不区分大小写）</span></li>     <li class="member"><span class="function">{@link substr()} - 返回字符串的子串</span></li>     <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>     <li class="member"><span class="function">{@link strncasecmp()} - 二进制安全比较字符串开头的若干个字符（不区分大小写）</span></li>     <li class="member"><span class="function">{@link strncmp()} - 二进制安全比较字符串开头的若干个字符</span></li>     <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>     <li class="member"><span class="function">{@link setlocale()} - 设置地区信息</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return int Similar to other string comparison functions, this one returns &lt; 0 if*/
function strnatcasecmp ($str1, $str2) {}

/**
*<div id="function.substr-count" class="refentry">  <div class="refnamediv">   <h1 class="refname">substr_count</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">substr_count</span> &mdash; <span class="dc-title">计算字串出现的次数</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.substr-count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>substr_count</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>substr_count()</strong></span> 返回子字符串<code class="parameter">needle</code> 在字符串 <code class="parameter">haystack</code> 中出现的次数。注意 <code class="parameter">needle</code> 区分大小写。   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     该函数不会计算重叠字符串。参见下面的例子。    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.substr-count-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">haystack</code></dt>       <dd>        <p class="para">        在此字符串中进行搜索。       </p>      </dd>                 <dt> <code class="parameter">needle</code></dt>       <dd>        <p class="para">        要搜索的字符串。       </p>      </dd>                 <dt> <code class="parameter">offset</code></dt>       <dd>        <p class="para">        开始计数的偏移位置。如果是负数，就从字符的末尾开始统计。       </p>      </dd>                 <dt> <code class="parameter">length</code></dt>       <dd>        <p class="para">        指定偏移位置之后的最大搜索长度。如果偏移量加上这个长度的和大于 <code class="parameter">haystack</code> 的总长度，则打印警告信息。        负数的长度 length 是从 <code class="parameter">haystack</code> 的末尾开始统计的。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.substr-count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">   该函数返回<span class="type"><span class="type 整型">整型</span></span>。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.substr-count-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.1.0</td>        <td>         开始支持负数的 <code class="parameter">offset</code> 和 <code class="parameter">length</code>。        </td>       </tr>        <tr>        <td>5.1.0</td>        <td>         新增 <code class="parameter">offset</code> 和 <code class="parameter">length</code> 参数。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.substr-count-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5987">     <p><strong>Example #1 <span class="function"><strong>substr_count()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$text&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'This&nbsp;is&nbsp;a&nbsp;test'</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;14<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'is'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;2<br /><br />//&nbsp;字符串被简化为&nbsp;'s&nbsp;is&nbsp;a&nbsp;test'，因此输出&nbsp;1<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'is'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;字符串被简化为&nbsp;'s&nbsp;i'，所以输出&nbsp;0<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'is'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;因为&nbsp;5+10&nbsp;&gt;&nbsp;14，所以生成警告<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'is'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br /><br /></span><span style="color: #FF8000">//&nbsp;输出&nbsp;1，因为该函数不计算重叠字符串<br /></span><span style="color: #9876AA">$text2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'gcdgcdgcd'</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'gcdgcd'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.substr-count-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link count_chars()} - 返回字符串所用字符的信息</span></li>     <li class="member"><span class="function">{@link strpos()} - 查找字符串首次出现的位置</span></li>     <li class="member"><span class="function">{@link substr()} - 返回字符串的子串</span></li>     <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return int This functions returns an integer.*/
function substr_count ($haystack, $needle, $offset = null, $length = null) {}

/**
 * Finds the length of the first segment of a string consisting
 * @since 4.0
 * @since 5.0
   entirely of characters contained within a given mask.
/**
*<div id="function.strspn" class="refentry">  <div class="refnamediv">   <h1 class="refname">strspn</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">strspn</span> &mdash; <span class="dc-title">    计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。   </span></p>   </div>    <div class="refsect1 description" id="refsect1-function.strspn-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>strspn</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mask</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span>   ]] )</div>    <p class="para rdfs-comment">    返回 <code class="parameter">subject</code> 中全部字符<em class="emphasis">仅</em>存在于 <code class="parameter">mask</code> 中的第一组连续字符(子字符串)的长度。   </p>   <p class="para">    如果省略了 <code class="parameter">start</code> 和 <code class="parameter">length</code> 参数，则检查整个 <code class="parameter">subject</code> 字符串；如果指定了这两个参数，则效果等同于调用 <em>strspn(substr($subject, $start, $length), $mask)</em>（更多信息，参见 {@link substr} ）。   </p>   <p class="para">    代码行：    <div class="informalexample">     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$var&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strspn</span><span style="color: #007700">(</span><span style="color: #DD0000">"42&nbsp;is&nbsp;the&nbsp;answer&nbsp;to&nbsp;the&nbsp;128th&nbsp;question."</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"1234567890"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>    <var class="varname"><var class="varname">$var</var></var> 将被指派为 2，因为 &#039;42&#039; 是 <code class="parameter">subject</code> 中第一段全部字符都存在于 &#039;1234567890&#039; 的连续字符。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.strspn-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">subject</code></dt>       <dd>        <p class="para">        待检查的字符串。       </p>      </dd>                 <dt> <code class="parameter">mask</code></dt>       <dd>        <p class="para">        检查字符列表。       </p>      </dd>                 <dt> <code class="parameter">start</code></dt>       <dd>        <p class="para">        <code class="parameter">subject</code> 的开始检查位置。       </p>       <p class="para">        如果 <code class="parameter">start</code> 被设置并且是非负的，<span class="function"><strong>strspn()</strong></span> 将从 <code class="parameter">subject</code> 的第 <code class="parameter">start</code> 个位置开始检查。例如，在字符串 &#039;<em>abcdef</em>&#039; 中，第 <em>0</em> 个位置的字符是 &#039;<em>a</em>&#039;，第二个位置的字符是 &#039;<em>c</em>&#039;，等等。       </p>       <p class="para">        如果 <code class="parameter">start</code> 被设置并且为负数，<span class="function"><strong>strspn()</strong></span> 将从 <code class="parameter">subject</code> 的尾部倒数第 <code class="parameter">start</code> 个位置开始检查 <code class="parameter">subject</code>。       </p>      </dd>                 <dt> <code class="parameter">length</code></dt>       <dd>        <p class="para">        <code class="parameter">subject</code> 中检查的长度。       </p>       <p class="para">        如果 <code class="parameter">length</code> 被设置并且为非负数，那么将从起始位置开始，检查 <code class="parameter">subject</code> 的 <code class="parameter">length</code> 个长度的字符。       </p>       <p class="para">        如果 <code class="parameter">length</code> 被设置并且为负数，那么将从起始位置开始，直到从 <code class="parameter">subject</code> 尾部开始第 <code class="parameter">length</code> 个位置，对 <code class="parameter">subject</code> 进行检查。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.strspn-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">str1</code> 中第一段全部字符都存在于 <code class="parameter">str2</code> 范围的字符串的长度。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.strspn-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>4.3.0</td>        <td>         新增 <code class="parameter">start</code> 和 <code class="parameter">length</code> 参数。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.strspn-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5977">     <p><strong>Example #1 <span class="function"><strong>strspn()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">strspn</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"o"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;打印:&nbsp;2<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> int(0) int(2) int(1) </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.strspn-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.strspn-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link strcspn()} - 获取不匹配遮罩的起始子字符串的长度</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return int the length of the initial segment of str1*/
function strspn ($subject, $mask, $start = null, $length = null) {}

/**
*<div id="function.strcspn" class="refentry">  <div class="refnamediv">   <h1 class="refname">strcspn</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">strcspn</span> &mdash; <span class="dc-title">获取不匹配遮罩的起始子字符串的长度</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.strcspn-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>strcspn</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span>   ]] )</div>    <p class="para rdfs-comment">    返回 <code class="parameter">str1</code> 中，所有字符都<em class="emphasis">不</em>存在于 <code class="parameter">str2</code> 范围的起始子字符串的长度。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.strcspn-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str1</code></dt>       <dd>        <p class="para">        第一个字符串。       </p>      </dd>                 <dt> <code class="parameter">str2</code></dt>       <dd>        <p class="para">        第二个字符串。       </p>      </dd>                 <dt> <code class="parameter">start</code></dt>       <dd>        <p class="para">        查找的起始位置。       </p>      </dd>                 <dt> <code class="parameter">length</code></dt>       <dd>        <p class="para">        查找的长度。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.strcspn-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    以整型数返回子串的长度。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.strcspn-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-5959">    <p><strong>Example #1 <span class="function"><strong>strcspn()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$a&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'abcd'</span><span style="color: #007700">,&nbsp;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$b&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'abcd'</span><span style="color: #007700">,&nbsp;&nbsp;</span><span style="color: #DD0000">'banana'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'l'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$d&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'world'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$d</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> int(0) int(0) int(2) int(2) </pre></div>    </div>   </div>  </div>    <div class="refsect1 notes" id="refsect1-function.strcspn-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.strcspn-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link strspn()} - 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return int the length of the segment as an integer.*/
function strcspn ($str1, $str2, $start = null, $length = null) {}

/**
*<div id="function.strtok" class="refentry">  <div class="refnamediv">   <h1 class="refname">strtok</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">strtok</span> &mdash; <span class="dc-title">标记分割字符串</span></p>   </div>    <div class="refsect1 description" id="refsect1-function.strtok-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>strtok</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$token</code></span>    )</div>    <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>strtok</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$token</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>strtok()</strong></span> 将字符串 <code class="parameter">str</code> 分割为若干子字符串，每个子字符串以 <code class="parameter">token</code> 中的字符分割。这也就意味着，如果有个字符串是 &quot;This is an example string&quot;，你可以使用空格字符将这句话分割成独立的单词。   </p>   <p class="para">    注意仅第一次调用 strtok 函数时使用 string 参数。后来每次调用 strtok，都将只使用 token 参数，因为它会记住它在字符串 string 中的位置。如果要重新开始分割一个新的字符串，你需要再次使用 string 来调用 strtok 函数，以便完成初始化工作。注意可以在 token 参数中使用多个字符。字符串将被该参数中任何一个字符分割。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.strtok-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">str</code></dt>       <dd>        <p class="para">        被分成若干子字符串的原始<span class="type"><span class="type 字符串">字符串</span></span>。       </p>      </dd>                 <dt> <code class="parameter">token</code></dt>       <dd>        <p class="para">        分割 <code class="parameter">str</code> 时使用的分界字符。       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.strtok-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    标记后的<span class="type"><span class="type 字符串">字符串</span></span>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.strtok-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-5979">     <p><strong>Example #1 <span class="function"><strong>strtok()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$string&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"This&nbsp;is\tan&nbsp;example\nstring"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;使用制表符和换行符作为分界符&nbsp;<br /></span><span style="color: #9876AA">$tok&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"&nbsp;\n\t"</span><span style="color: #007700">);<br /><br />while&nbsp;(</span><span style="color: #9876AA">$tok&nbsp;</span><span style="color: #007700">!==&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Word=</span><span style="color: #9876AA">$tok</span><span style="color: #DD0000">&lt;br&nbsp;/&gt;"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$tok&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #DD0000">"&nbsp;\n\t"</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-5980">     <p><strong>Example #2 当存在空的部分时 <span class="function"><strong>strtok()</strong></span> 的反应</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$first_token&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #DD0000">'/something'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$second_token&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #DD0000">'/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$first_token</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$second_token</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre>     string(9) &quot;something&quot;     bool(false) </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.strtok-notes">   <h3 class="title">注释</h3>      <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>     <div class="refsect1 seealso" id="refsect1-function.strtok-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link split()} - 用正则表达式将字符串分割到数组中</span></li>     <li class="member"><span class="function">{@link explode()} - 使用一个字符串分割另一个字符串</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.strings.php">字符串 函数</a></div></div>
 * @return string A string token.*/
function strtok ($str = null, $token) {}
