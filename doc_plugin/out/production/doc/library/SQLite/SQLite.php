<?php

// Start of SQLite v.2.0-dev

/**
 * @link http://php.net/manual/en/ref.sqlite.php
 */
class SQLiteDatabase  {

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * @link http://php.net/manual/en/function.sqlite-open.php
	 * @param $filename <p>The filename of the SQLite database. If the file does not exist, SQLite will attempt to create it. PHP must have write permissions to the file if data is inserted, the database schema is modified or to create the database if it does not exist.</p>
	 * @param $mode [optional] <p>The mode of the file. Intended to be used to open the database in read-only mode. Presently, this parameter is ignored by the sqlite library. The default value for mode is the octal value 0666 and this is the recommended value.</p>
	 * @param $error_message [optional] <p>Passed by reference and is set to hold a descriptive error message explaining why the database could not be opened if there was an error.</p>
	 */
	final public function __construct ($filename, $mode = 0666, &$error_message) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * @link http://php.net/manual/en/function.sqlite-query.php
	 * @param $query <p>
	 * The query to be executed.
	 * </p>
	 * <p>
	 * Data inside the query should be {@link http://php.net/manual/en/function.sqlite-escape-string.php properly escaped}.
	 * </p>
	 * @param $result_type [optional]
	 * <p>The optional <i>result_type</i> parameter accepts a constant and determines how the returned array will be indexed. Using <b>SQLITE_ASSOC</b> will return only associative indices (named fields) while <b>SQLITE_NUM</b> will return only numerical indices (ordinal field numbers). <b>SQLITE_BOTH</b> will return both associative and numerical indices. <b>SQLITE_BOTH</b> is the default for this function.</p>
	 * @param $error_message [optional] <p>The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can't be fetched using the {@see sqlite_last_error()} function.</p>
	 * @return resource|bool <p>
	 * This function will return a result handle or <b>FALSE</b> on failure.
	 * For queries that return rows, the result handle can then be used with
	 * functions such as {@see sqlite_fetch_array()} and
	 * {@see sqlite_seek()}.
	 * </p>
	 * <p>
	 * Regardless of the query type, this function will return <b>FALSE</b> if the
	 * query failed.
	 * </p>
	 * <p>
	 * {@see sqlite_query()} returns a buffered, seekable result
	 * handle.  This is useful for reasonably small queries where you need to
	 * be able to randomly access the rows.  Buffered result handles will
	 * allocate memory to hold the entire result and will not return until it
	 * has been fetched.  If you only need sequential access to the data, it is
	 * recommended that you use the much higher performance
	 * {@see sqlite_unbuffered_query()} instead.
	 * </p>
	 */
	public function query ($query, $result_type, &$error_message) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * @link http://php.net/manual/en/function.sqlite-exec.php
	 * @param string $query <p>
	 * The query to be executed.
	 * </p>
	 * <p>
	 * Data inside the query should be {@link http://php.net/manual/en/function.sqlite-escape-string.php properly escaped}.
	 * </p>
	 * @param string $error_message [optional] <p>The specified variable will be filled if an error occurs. This is specially important because SQL syntax errors can't be fetched using the
	 * {@see sqlite_last_error()} function.</p>
	 * @return boolean <p>
	 * This function will return a boolean result; <b>TRUE</b> for success or <b>FALSE</b> for failure.
	 * If you need to run a query that returns rows, see {@see sqlite_query()}.
	 * </p>
	 * <p>The column names returned by
	 * <b>SQLITE_ASSOC</b> and <b>SQLITE_BOTH</b> will be
	 * case-folded according to the value of the
	 * {@see sqlite.assoc_case} configuration
	 * option.</p>
	 */
	public function queryExec ($query, &$error_message) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Execute a query against a given database and returns an array
	 * @link http://php.net/manual/en/function.sqlite-array-query.php
	 * @param $query <p>
	 * The query to be executed.
	 * </p>
	 * <p>
	 * Data inside the query should be {@link http://php.net/manual/en/function.sqlite-escape-string.php properly escaped}.
	 * </p>
	 * @param $result_type [optional] <p>The optional <i>result_type</i>
	 * parameter accepts a constant and determines how the returned array will be
	 * indexed. Using <b>SQLITE_ASSOC</b> will return only associative
	 * indices (named fields) while <b>SQLITE_NUM</b> will return
	 * only numerical indices (ordinal field numbers). <b>SQLITE_BOTH</b>
	 * will return both associative and numerical indices.
	 * <b>SQLITE_BOTH</b> is the default for this function.</p>
	 * @param $decode_binary [optional] <p>When the <i>decode_binary</i>
	 * parameter is set to <b>TRUE</b> (the default), PHP will decode the binary encoding
	 * it applied to the data if it was encoded using the
	 * {@see sqlite_escape_string()}.  You should normally leave this
	 * value at its default, unless you are interoperating with databases created by
	 * other sqlite capable applications.</p>
	 * <p>
	 * Returns an array of the entire result set; <b>FALSE</b> otherwise.
	 * </p>
	 * <p>The column names returned by
	 * <b>SQLITE_ASSOC</b> and <b>SQLITE_BOTH</b> will be
	 * case-folded according to the value of the
	 * {@link http://php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case sqlite.assoc_case} configuration
	 * option.</p>
	 */
	public function arrayQuery ($query, $result_type, $decode_binary) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.1)
	 * Executes a query and returns either an array for one single column or the value of the first row
	 * @link http://php.net/manual/en/function.sqlite-single-query.php
	 * @param string $query
	 * @param bool $first_row_only [optional]
	 * @param bool $decode_binary [optional]
	 * @return array
	 */
	public function singleQuery ($query, $first_row_only, $decode_binary) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Execute a query that does not prefetch and buffer all data
	 * @link http://php.net/manual/en/function.sqlite-unbuffered-query.php
	 * @param $query  <p>
	 * The query to be executed.
	 * </p>
	 * <p>
	 * Data inside the query should be {@link http://php.net/manual/en/function.sqlite-escape-string.php properly escaped}.
	 * </p>
	 * @param $result_type [optional] <p>The optional <i>result_type</i> parameter accepts a constant and determines how the returned array will be indexed.
	 * Using <b>SQLITE_ASSOC</b> will return only associative indices (named fields) while <b>SQLITE_NUM</b> will return only numerical indices (ordinal field numbers).
	 * <b>SQLITE_BOTH</b> will return both associative and numerical indices. <b>SQLITE_BOTH</b> is the default for this function.
	 * @param $error_message [optional]
	 * @return resource Returns a result handle or <b>FALSE</b> on failure.
	 * {@see sqlite_unbuffered_query()} returns a sequential forward-only result set that can only be used to read each row, one after the other.
	 */
	public function unbufferedQuery ($query, $result_type = SQLITE_BOTH, &$error_message) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Returns the rowid of the most recently inserted row
	 * @link http://php.net/manual/en/function.sqlite-last-insert-rowid.php
	 * @return int Returns the row id, as an integer.
	 */
	public function lastInsertRowid () {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Returns the number of rows that were changed by the most recent SQL statement
	 * @link http://php.net/manual/en/function.sqlite-changes.php
	 * @return int Returns the number of changed rows.
	 */
	public function changes () {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Register an aggregating UDF for use in SQL statements
	 * @link http://php.net/manual/en/function.sqlite-create-aggregate.php
	 * @param $function_name <p>The name of the function used in SQL statements.</p>
	 * @param $step_func <p>Callback function called for each row of the result set. Function parameters are &$context, $value, ....</p>
	 * @param $finalize_func <p>Callback function to aggregate the "stepped" data from each row. Function parameter is &$context and the function should return the final result of aggregation.</p>
	 * @param $num_args [optional] <p>Hint to the SQLite parser if the callback function accepts a predetermined number of arguments.</p>
	 */
	public function createAggregate ($function_name, $step_func, $finalize_func, $num_args = -1) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Registers a "regular" User Defined Function for use in SQL statements
	 * @link http://php.net/manual/en/function.sqlite-create-function.php
	 * @param $function_name <p>The name of the function used in SQL statements.</p>
	 * @param $callback <p>
	 * Callback function to handle the defined SQL function.
	 * </p>
	 * <blockquote><p><b>Note</b>:
	 * Callback functions should return a type understood by SQLite (i.e.
	 * {@link http://php.net/manual/en/language.types.intro.php scalar type}).
	 * </p></blockquote>
	 * @param $num_args [optional]   <blockquote><p><b>Note</b>: Two alternative syntaxes are
	 * supported for compatibility with other database extensions (such as MySQL).
	 * The preferred form is the first, where the <i>dbhandle</i>
	 * parameter is the first parameter to the function.</p></blockquote>
	 */
	public function createFunction ($function_name, $callback, $num_args = -1) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Set busy timeout duration, or disable busy handlers
	 * @link http://php.net/manual/en/function.sqlite-busy-timeout.php
	 * @param $milliseconds <p> The number of milliseconds. When set to 0, busy handlers will be disabled and SQLite will return immediately with a <b>SQLITE_BUSY</b> status code if another process/thread has the database locked for an update.
	 * PHP sets the default busy timeout to be 60 seconds when the database is opened.</p>
	 * @return int <p>Returns an error code, or 0 if no error occurred.</p>
	 */
	public function busyTimeout ($milliseconds) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Returns the error code of the last error for a database
	 * @link http://php.net/manual/en/function.sqlite-last-error.php
	 * @return int Returns an error code, or 0 if no error occurred.
	 */
	public function lastError () {}

	/**
	 * (PHP 5 &lt; 5.4.0)
	 * Return an array of column types from a particular table
	 * @link http://php.net/manual/en/function.sqlite-fetch-column-types.php
	 * @param $table_name <p>The table name to query.</p>
	 * @param $result_type [optional] <p>
	 * The optional <i>result_type</i> parameter accepts a
	 * constant and determines how the returned array will be indexed. Using
	 * <b>SQLITE_ASSOC</b> will return only associative indices
	 * (named fields) while <b>SQLITE_NUM</b> will return only
	 * numerical indices (ordinal field numbers).
	 * <b>SQLITE_ASSOC</b> is the default for
	 * this function.
	 * </p>
	 * @return array <p>
	 * Returns an array of column data types; <b>FALSE</b> on error.
	 * </p>
	 * <p>The column names returned by
	 * <b>SQLITE_ASSOC</b> and <b>SQLITE_BOTH</b> will be
	 * case-folded according to the value of the
	 * {@link http://php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case sqlite.assoc_case} configuration
	 * option.</p>
	 */
	public function fetchColumnTypes ($table_name, $result_type = SQLITE_ASSOC) {}

}

/**
 * @link http://php.net/manual/en/ref.sqlite.php
 */
final class SQLiteResult implements Iterator, Countable {

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Fetches the next row from a result set as an array
	 * @link http://php.net/manual/en/function.sqlite-fetch-array.php
	 * @param $result_type [optional]
	 * <p>
	 * The optional <i>result_type</i>
	 * parameter accepts a constant and determines how the returned array will be
	 * indexed. Using <b>SQLITE_ASSOC</b> will return only associative
	 * indices (named fields) while <b>SQLITE_NUM</b> will return
	 * only numerical indices (ordinal field numbers). <b>SQLITE_BOTH</b>
	 * will return both associative and numerical indices.
	 * <b>SQLITE_BOTH</b> is the default for this function.
	 * @param $decode_binary [optional] <p>When the <i>decode_binary</i>
	 * parameter is set to <b>TRUE</b> (the default), PHP will decode the binary encoding
	 * it applied to the data if it was encoded using the
	 *{@link http://php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case sqlite.assoc_case}. You should normally leave this
	 * value at its default, unless you are interoperating with databases created by
	 * other sqlite capable applications.</p>
	 * @return array <p>
	 * Returns an array of the next row from a result set; <b>FALSE</b> if the
	 * next position is beyond the final row.
	 * </p>
	 * <p>The column names returned by
	 * <b>SQLITE_ASSOC</b> and <b>SQLITE_BOTH</b> will be
	 * case-folded according to the value of the
	 * {@link http://php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case sqlite.assoc_case}  configuration
	 * option.</p>
	 */
	public function fetch ($result_type = SQLITE_BOTH, $decode_binary =  true) {}

	/**
	 * (PHP 5 &lt; 5.4.0)
	 * Fetches the next row from a result set as an object
	 * @link http://php.net/manual/en/function.sqlite-fetch-object.php
	 * @param string $class_name [optional]
	 * @param array $ctor_params [optional]
	 * @param bool $decode_binary [optional]
	 * @return object
	 */
	public function fetchObject ($class_name, $ctor_params, $decode_binary = true) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.1)
	 * Fetches the first column of a result set as a string
	 * @link http://php.net/manual/en/function.sqlite-fetch-single.php
	 * @param bool $decode_binary [optional]
	 * @return string <p>Returns the first column value, as a string.</p>
	 */
	public function fetchSingle ($decode_binary = true) {}

	/**
	 * (PHP 5 &lt; 5.4.0)
	 * Fetches the next row from a result set as an object
	 * @link http://php.net/manual/en/function.sqlite-fetch-object.php
	 * @param resource $result_type [optional]
	 * @param array $ctor_params [optional]
	 * @param bool $decode_binary [optional]
	 * @return object
	 */
	public function fetchAll ($result_type, array $ctor_params,  $decode_binary = true) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Fetches a column from the current row of a result set
	 * @link http://php.net/manual/en/function.sqlite-column.php
	 * @param $index_or_name
	 * @param $decode_binary [optional] <p>When the <i>decode_binary</i>
	 * parameter is set to <b>TRUE</b> (the default), PHP will decode the binary encoding
	 * it applied to the data if it was encoded using the
	 * {@see sqlite_escape_string()}.  You should normally leave this
	 * value at its default, unless you are interoperating with databases created by
	 * other sqlite capable applications.</p>
	 * @return mixed <p>Returns the column value</p>
	 */
	public function column ($index_or_name, $decode_binary = true) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Returns the number of fields in a result set
	 * @link http://php.net/manual/en/function.sqlite-num-fields.php
	 * @return int <p>Returns the number of fields, as an integer.</p>
	 */
	public function numFields () {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Returns the name of a particular field
	 * @link http://php.net/manual/en/function.sqlite-field-name.php
	 * @param $field_index <p>The ordinal column number in the result set.</p>
	 * @return string <p>
	 * Returns the name of a field in an SQLite result set, given the ordinal
	 * column number; <b>FALSE</b> on error.
	 * </p>
	 * <p>The column names returned by
	 * <b>SQLITE_ASSOC</b> and <b>SQLITE_BOTH</b> will be
	 * case-folded according to the value of the
	 * {@link http://php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case sqlite.assoc_case}configuration
	 * option.</p>
	 *
	 */
	public function fieldName ($field_index) {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Fetches the current row from a result set as an array
	 * @link http://php.net/manual/en/function.sqlite-current.php
	 * @param $result_type [optional] <p>The optional <i>result_type</i>
	 * parameter accepts a constant and determines how the returned array will be
	 * indexed. Using <b>SQLITE_ASSOC</b> will return only associative
	 * indices (named fields) while <b>SQLITE_NUM</b> will return
	 * only numerical indices (ordinal field numbers). <b>SQLITE_BOTH</b>
	 * will return both associative and numerical indices.
	 * <b>SQLITE_BOTH</b> is the default for this function.</p>
	 * @param $decode_binary [optional] <p>When the <i>decode_binary</i>
	 * parameter is set to <b>TRUE</b> (the default), PHP will decode the binary encoding
	 * it applied to the data if it was encoded using the
	 * {@see sqlite_escape_string()}.  You should normally leave this
	 * value at its default, unless you are interoperating with databases created by
	 * other sqlite capable applications.</p>
	 * @return array <p>
	 * Returns an array of the current row from a result set; <b>FALSE</b> if the
	 * current position is beyond the final row.
	 * </p>
	 * <p>The column names returned by
	 * <b>SQLITE_ASSOC</b> and <b>SQLITE_BOTH</b> will be
	 * case-folded according to the value of the
	 * {@link http://php.net/manual/en/sqlite.configuration.php#ini.sqlite.assoc-case sqlite.assoc_case} configuration
	 * option.</p>
	 */
/**
*<div id="function.current" class="refentry">    <div class="refnamediv">     <h1 class="refname">current</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">current</span> &mdash; <span class="dc-title">返回数组中的当前单元</span></p>     </div>      <div class="refsect1 description" id="refsect1-function.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>current</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span>    )</div>      <p class="para rdfs-comment">      每个数组中都有一个内部的指针指向它“当前的”单元，初始指向插入到数组中的第一个单元。     </p>    </div>       <div class="refsect1 parameters" id="refsect1-function.current-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        这个数组。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong>current()</strong></span> 函数返回当前被内部指针指向的数组单元的值，并不移动指针。如果内部指针指向超出了单元列表的末端，<span class="function"><strong>current()</strong></span>      返回 <strong><code>FALSE</code></strong>。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>   <div class="refsect1 examples" id="refsect1-function.current-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6087">     <p><strong>Example #1 使用  <span class="function"><strong>current()</strong></span> 系列函数的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$transport&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bike'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'car'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /><br /></span><span style="color: #9876AA">$arr&nbsp;</span><span style="color: #007700">=&nbsp;array();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;bool(false)<br /><br /></span><span style="color: #9876AA">$arr&nbsp;</span><span style="color: #007700">=&nbsp;array(array());<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;array(0)&nbsp;{&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 notes" id="refsect1-function.current-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     如果数组包含 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span> <strong><code>FALSE</code></strong> 的单元则本函数在碰到这个单元时也返回        <strong><code>FALSE</code></strong>，使得不可能判断是否到了此数组列表的末端。     要正确遍历可能含有空单元的数组，用 <span class="function">{@link each()}</span> 函数。    </span>   </p></blockquote>  </div>   <div class="refsect1 seealso" id="refsect1-function.current-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>     <li class="member"><span class="function">{@link key()} - 从关联数组中取得键名</span></li>     <li class="member"><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>     <li class="member"><span class="function">{@link prev()} - 将数组的内部指针倒回一位</span></li>     <li class="member"><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>     <li class="member"><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>    </ul>   </p>  </div>         <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function current ($result_type = SQLITE_BOTH , $decode_binary = true) {}
	/**
	 * Return the key of the current element
	 * @link http://php.net/manual/en/iterator.key.php
	 * @return mixed scalar on success, or null on failure.
	 * @since 5.0.0
	 */
/**
*<div id="function.key" class="refentry">    <div class="refnamediv">     <h1 class="refname">key</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">key</span> &mdash; <span class="dc-title">从关联数组中取得键名</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>key</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span>    )</div>      <p class="para rdfs-comment">      <span class="function"><strong>key()</strong></span> 返回数组中当前单元的键名。     </p>    </div>    <div class="refsect1 parameters" id="refsect1-function.key-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        该数组。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong>key()</strong></span> 函数返回数组中内部指针指向的当前单元的键名。    但它不会移动指针。如果内部指针超过了元素列表尾部，或者数组是空的，<span class="function"><strong>key()</strong></span> 会返回 <strong><code>NULL</code></strong>。   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.key-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.0.0</td>        <td>         <code class="parameter">array</code> 现在总是会传值。          在此之前，它会尽可能传引用，否则就传值。        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 examples" id="refsect1-function.key-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6095">     <p><strong>Example #1 <span class="function"><strong>key()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$array&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'orange'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit3'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'grape'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit4'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit5'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;this&nbsp;cycle&nbsp;echoes&nbsp;all&nbsp;associative&nbsp;array<br />//&nbsp;key&nbsp;where&nbsp;value&nbsp;equals&nbsp;"apple"<br /></span><span style="color: #007700">while&nbsp;(</span><span style="color: #9876AA">$fruit_name&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$fruit_name&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">key</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">).</span><span style="color: #DD0000">'&lt;br&nbsp;/&gt;'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> fruit1&lt;br /&gt; fruit4&lt;br /&gt; fruit5&lt;br /&gt; </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.key-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link current()} - 返回数组中的当前单元</span></li>     <li class="member"><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>     <li class="member"><a href="http://php.net/manual/zh/control-structures.foreach.php" class="link">foreach</a></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function key () {}
	/**
	 * Seek to the next row number
	 * @link http://php.net/manual/en/function.sqlite-next.php
	 * @return bool Returns <b>TRUE</b> on success, or <b>FALSE</b> if there are no more rows.
	 * @since 5.0.0
	 */
/**
*<div id="function.next" class="refentry">    <div class="refnamediv">     <h1 class="refname">next</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">next</span> &mdash; <span class="dc-title">      将数组中的内部指针向前移动一位     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>next</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span>    )</div>     <p class="para rdfs-comment">      <span class="function"><strong>next()</strong></span> 和 <span class="function">{@link current()}</span>      的行为类似，只有一点区别，在返回值之前将内部指针向前移动一位。这意味着它返回的是下一个数组单元的值并将数组指针向前移动了一位。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.next-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        受影响的 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数组内部指针指向的下一个单元的值，或当没有更多单元时返回 <strong><code>FALSE</code></strong>。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>    <div class="refsect1 examples" id="refsect1-function.next-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6107">     <p><strong>Example #1  <span class="function"><strong>next()</strong></span> 及相关函数的用法示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$transport&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bike'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'car'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'car';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.next-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">      你将无法区别包含数组尾以及 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span> <strong><code>FALSE</code></strong> 单元的数组。要正确遍历可能含有空单元或者单元值为 0 的数组，参见    <span class="function">{@link each()}</span> 函数。    </span>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.next-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link current()} - 返回数组中的当前单元</span></li>     <li class="member"><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>     <li class="member"><span class="function">{@link prev()} - 将数组的内部指针倒回一位</span></li>     <li class="member"><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>     <li class="member"><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function next () {}
	/**
	 * Checks if current position is valid
	 * @link http://php.net/manual/en/iterator.valid.php
	 * @return boolean <p>
	 * Returns <b>TRUE</b> if there are more rows available from the
	 * <i>result</i> handle, or <b>FALSE</b> otherwise.
	 * </p>
	 * @since 5.0.0
	 */
	public function valid () {}
	/**
	 * Rewind the Iterator to the first element
	 * @link http://php.net/manual/en/iterator.rewind.php
	 * @return void Any returned value is ignored.
	 * @since 5.0.0
	 */
/**
*<div id="function.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">rewind</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">rewind</span> &mdash; <span class="dc-title">倒回文件指针的位置</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>rewind</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    将 <code class="parameter">handle</code> 的文件位置指针设为文件流的开头。   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     如果将文件以附加（&quot;a&quot; 或者 &quot;a+&quot;）模式打开，写入文件的任何数据总是会被附加在后面，不管文件指针的位置。    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.rewind-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        文件指针必须合法，并且指向由 <span class="function">{@link fopen()}</span>    成功打开的文件。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.rewind-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2838">     <p><strong>Example #1 <span class="function"><strong>rewind()</strong></span> overwriting example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Really&nbsp;long&nbsp;sentence.'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Foolly long sentence. </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.rewind-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>     <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
*/
	public function rewind () {}

	/**
	 * Count elements of an object
	 * @link http://php.net/manual/en/countable.count.php
	 * @return int <p>The custom count as an integer.
	 * </p>
	 * <p>
	 * The return value is cast to an integer.
	 * </p>
	 * @since 5.1.0
	 */
/**
*<div id="function.count" class="refentry">    <div class="refnamediv">     <h1 class="refname">count</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">count</span> &mdash; <span class="dc-title">计算数组中的单元数目，或对象中的属性个数</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>count</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$array_or_countable</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = COUNT_NORMAL</span></span>   ] )</div>    <p class="para rdfs-comment">    统计出数组里的所有元素的数量，或者对象里的东西。   </p>     <p class="para">      对于对象，如果安装了 <a href="http://php.net/manual/zh/ref.spl.php" class="link">SPL</a>，可以通过实现      <em>Countable</em> 接口对 <span class="function"><strong>count()</strong></span>挂钩（hook）      。该接口只有一个方法      <span class="methodname">{@link Countable::count()}</span>，此方法为 <span class="function"><strong>count()</strong></span>      函数返回值。     </p>     <p class="para">      关于 PHP 中如何实现和使用数组可以参考手册中<a href="http://php.net/manual/zh/language.types.array.php" class="link">数组</a>章节中的详细描述。   </p>  </div>      <div class="refsect1 parameters" id="refsect1-function.count-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array_or_countable</code></dt>       <dd>        <p class="para">        数组或者 <a href="http://php.net/manual/zh/class.countable.php" class="classname">Countable</a>  对象。       </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        如果可选的 <code class="parameter">mode</code> 参数设为      <strong><code>COUNT_RECURSIVE</code></strong>（或 1），<span class="function"><strong>count()</strong></span>      将递归地对数组计数。对计算多维数组的所有单元尤其有用。       </p>       <div class="caution"><strong class="caution">Caution</strong>        <p class="para">         <span class="function"><strong>count()</strong></span> 能检测递归来避免无限循环，但每次出现时会产生 <strong><code>E_WARNING</code></strong> 错误         （如果 array 不止一次包含了自身）并返回大于预期的统计数字。        </p>       </div>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <code class="parameter">array_or_countable</code> 中的单元数目。        如果参数既不是数组，也不是实现      <em>Countable</em> 接口的对象，将返回      <em>1</em>。    有个例外：如果      <code class="parameter">array_or_countable</code> 是 <strong><code>NULL</code></strong> 则结果是 <em>0</em>。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.count-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6085">     <p><strong>Example #1 <span class="function"><strong>count()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$a</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$a</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$a</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$b</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]&nbsp;&nbsp;=&nbsp;</span><span style="color: #9876AA">7</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$b</span><span style="color: #007700">[</span><span style="color: #9876AA">5</span><span style="color: #007700">]&nbsp;&nbsp;=&nbsp;</span><span style="color: #9876AA">9</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$b</span><span style="color: #007700">[</span><span style="color: #9876AA">10</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">11</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> int(3) int(3)  Warning: count(): Parameter must be an array or an object that implements Countable in … on line 12 // PHP 7.2 起 int(0)  Warning: count(): Parameter must be an array or an object that implements Countable in … on line 14 // PHP 7.2 起 int(1) </pre></div>     </div>    </div>   </p>   <p class="para">    <div class="example" id="example-6086">     <p><strong>Example #2 递归 <span class="function"><strong>count()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$food&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'fruits'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'orange'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'banana'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'veggie'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'carrot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'collard'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'pea'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;recursive&nbsp;count<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$food</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">COUNT_RECURSIVE</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;output&nbsp;8<br /><br />//&nbsp;normal&nbsp;count<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$food</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;output&nbsp;2<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.count-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>7.2.0</td>       <td>        当无效的 countable 类型传递给 <code class="parameter">array_or_countable</code> 参数时，<span class="function"><strong>count()</strong></span> 会产生警告。       </td>      </tr>      </tbody>       </table>   </div>      <div class="refsect1 seealso" id="refsect1-function.count-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>     <li class="member"><span class="function">{@link isset()} - 检测变量是否已设置并且非 NULL</span></li>     <li class="member"><span class="function">{@link empty()} - 检查一个变量是否为空</span></li>     <li class="member"><span class="function">{@link strlen()} - 获取字符串长度</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function count () {}

	/**
	 * Seek to the previous row number of a result set
	 * @link http://php.net/manual/en/function.sqlite-prev.php
	 * @return boolean <p> Returns <b>TRUE</b> on success, or <b>FALSE</b> if there are no more previous rows.
	 * </p>
	 * @since 5.4.0
	 */
/**
*<div id="function.prev" class="refentry">    <div class="refnamediv">     <h1 class="refname">prev</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">prev</span> &mdash; <span class="dc-title">将数组的内部指针倒回一位</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.prev-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>prev</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span>    )</div>    <p class="para rdfs-comment">    将数组的内部指针倒回一位。   </p>   <p class="para">      <span class="function"><strong>prev()</strong></span> 和      <span class="function">{@link next()}</span> 的行为类似，只除了它将内部指针倒回一位而不是前移一位。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.prev-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        The input array.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.prev-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数组内部指针指向的前一个单元的值，或当没有更多单元时返回 <strong><code>FALSE</code></strong>。   </p>  </div>   <div class="refsect1 examples" id="refsect1-function.prev-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6108">     <p><strong>Example #1 <span class="function"><strong>prev()</strong></span> 及相关函数用法示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$transport&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bike'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'car'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'car';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 notes" id="refsect1-function.prev-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     你会无法区分包含 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span> <strong><code>FALSE</code></strong> 单元的数组开头。要正确遍历可能含有空单元或者单元值为 0 的数组，参见        <span class="function">{@link each()}</span> 函数。    </span>   </p></blockquote>  </div>   <div class="refsect1 seealso" id="refsect1-function.prev-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link current()} - 返回数组中的当前单元</span></li>     <li class="member"><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>     <li class="member"><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>     <li class="member"><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>     <li class="member"><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function prev () {}

	/**
	 *@since 5.4.0
	 * Returns whether or not a previous row is available
	 * @link http://php.net/manual/en/function.sqlite-has-prev.php
	 * @return bool <p>
	 * Returns <b>TRUE</b> if there are more previous rows available from the
	 * <i>result</i> handle, or <b>FALSE</b> otherwise.
	 * </p>
	 */
	public function hasPrev () {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Returns the number of rows in a buffered result set
	 * @link http://php.net/manual/en/function.sqlite-num-rows.php
	 * @return int Returns the number of rows, as an integer.
	 */
	public function numRows () {}

	/**
	 * (PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)
	 * Seek to a particular row number of a buffered result set
	 * @link http://php.net/manual/en/function.sqlite-seek.php
	 * @param $row
	 * <p>
	 * The ordinal row number to seek to.  The row number is zero-based (0 is
	 * the first row).
	 * </p>
	 * <blockquote><p><b>Note</b>: </p><p>This function cannot be used with
	 * unbuffered result handles.</p></blockquote>
	 */
	public function seek ($row) {}

}

/**
 * Represents an unbuffered SQLite result set. Unbuffered results sets are sequential, forward-seeking only.
 * @link http://php.net/manual/en/ref.sqlite.php
 */
final class SQLiteUnbuffered  {

	/**
	 * @param $result_type [optional]
	 * @param $decode_binary [optional]
	 */
	public function fetch ($result_type, $decode_binary) {}

	/**
	 * @param $class_name [optional]
	 * @param $ctor_params [optional]
	 * @param $decode_binary [optional]
	 */
	public function fetchObject ($class_name, $ctor_params, $decode_binary) {}

	/**
	 * @param $decode_binary [optional]
	 */
	public function fetchSingle ($decode_binary) {}

	/**
	 * @param $result_type [optional]
	 * @param $decode_binary [optional]
	 */
	public function fetchAll ($result_type, $decode_binary) {}

	/**
	 * @param $index_or_name
	 * @param $decode_binary [optional]
	 */
	public function column ($index_or_name, $decode_binary) {}

	public function numFields () {}

	/**
	 * @param $field_index
	 */
	public function fieldName ($field_index) {}

	/**
	 * @param $result_type [optional]
	 * @param $decode_binary [optional]
	 */
/**
*<div id="function.current" class="refentry">    <div class="refnamediv">     <h1 class="refname">current</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">current</span> &mdash; <span class="dc-title">返回数组中的当前单元</span></p>     </div>      <div class="refsect1 description" id="refsect1-function.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>current</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span>    )</div>      <p class="para rdfs-comment">      每个数组中都有一个内部的指针指向它“当前的”单元，初始指向插入到数组中的第一个单元。     </p>    </div>       <div class="refsect1 parameters" id="refsect1-function.current-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        这个数组。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong>current()</strong></span> 函数返回当前被内部指针指向的数组单元的值，并不移动指针。如果内部指针指向超出了单元列表的末端，<span class="function"><strong>current()</strong></span>      返回 <strong><code>FALSE</code></strong>。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>   <div class="refsect1 examples" id="refsect1-function.current-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6087">     <p><strong>Example #1 使用  <span class="function"><strong>current()</strong></span> 系列函数的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$transport&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bike'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'car'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /><br /></span><span style="color: #9876AA">$arr&nbsp;</span><span style="color: #007700">=&nbsp;array();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;bool(false)<br /><br /></span><span style="color: #9876AA">$arr&nbsp;</span><span style="color: #007700">=&nbsp;array(array());<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;array(0)&nbsp;{&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 notes" id="refsect1-function.current-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     如果数组包含 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span> <strong><code>FALSE</code></strong> 的单元则本函数在碰到这个单元时也返回        <strong><code>FALSE</code></strong>，使得不可能判断是否到了此数组列表的末端。     要正确遍历可能含有空单元的数组，用 <span class="function">{@link each()}</span> 函数。    </span>   </p></blockquote>  </div>   <div class="refsect1 seealso" id="refsect1-function.current-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>     <li class="member"><span class="function">{@link key()} - 从关联数组中取得键名</span></li>     <li class="member"><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>     <li class="member"><span class="function">{@link prev()} - 将数组的内部指针倒回一位</span></li>     <li class="member"><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>     <li class="member"><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>    </ul>   </p>  </div>         <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function current ($result_type, $decode_binary) {}

/**
*<div id="function.next" class="refentry">    <div class="refnamediv">     <h1 class="refname">next</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">next</span> &mdash; <span class="dc-title">      将数组中的内部指针向前移动一位     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>next</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span>    )</div>     <p class="para rdfs-comment">      <span class="function"><strong>next()</strong></span> 和 <span class="function">{@link current()}</span>      的行为类似，只有一点区别，在返回值之前将内部指针向前移动一位。这意味着它返回的是下一个数组单元的值并将数组指针向前移动了一位。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.next-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        受影响的 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数组内部指针指向的下一个单元的值，或当没有更多单元时返回 <strong><code>FALSE</code></strong>。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>    <div class="refsect1 examples" id="refsect1-function.next-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6107">     <p><strong>Example #1  <span class="function"><strong>next()</strong></span> 及相关函数的用法示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$transport&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bike'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'car'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'car';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.next-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">      你将无法区别包含数组尾以及 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span> <strong><code>FALSE</code></strong> 单元的数组。要正确遍历可能含有空单元或者单元值为 0 的数组，参见    <span class="function">{@link each()}</span> 函数。    </span>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.next-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link current()} - 返回数组中的当前单元</span></li>     <li class="member"><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>     <li class="member"><span class="function">{@link prev()} - 将数组的内部指针倒回一位</span></li>     <li class="member"><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>     <li class="member"><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function next () {}

	public function valid () {}

}

final class SQLiteException extends RuntimeException  {
	protected $message;
	protected $code;
	protected $file;
	protected $line;


	/**
	 * Clone the exception
	 * @link http://php.net/manual/en/exception.clone.php
	 * @return void 
	 * @since 5.1.0
	 */
	final private function __clone () {}

	/**
	 * Construct the exception
	 * @link http://php.net/manual/en/exception.construct.php
	 * @param $message [optional]
	 * @param $code [optional]
	 * @param $previous [optional]
	 * @since 5.1.0
	 */
	public function __construct ($message, $code, $previous) {}

	/**
	 * String representation of the exception
	 * @link http://php.net/manual/en/exception.tostring.php
	 * @return string the string representation of the exception.
	 * @since 5.1.0
	 */
	public function __toString () {}

}

/**
*<div id="function.sqlite-open" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_open</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_open</span> &mdash; <span class="dc-title">Opens an SQLite database and create the database if it does not exist</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-open-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>sqlite_open</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = 0666</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span>   ]] )</div>    <p class="para rdfs-comment">面向对象风格 (constructor):</p>   <div class="constructorsynopsis dc-description">    <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname"><strong>SQLiteDatabase::__construct</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = 0666</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span>   ]] )</div>    <p class="para rdfs-comment">    Opens an SQLite database or creates the database if it does not exist.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-open-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        The filename of the SQLite database.  If the file does not exist, SQLite        will attempt to create it.  PHP must have write permissions to the file        if data is inserted, the database schema is modified or to create the        database if it does not exist.       </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        The mode of the file. Intended to be used to open the database in        read-only mode.  Presently, this parameter is ignored by the sqlite        library.  The default value for mode is the octal value        <em>0666</em> and this is the recommended value.       </p>      </dd>                 <dt> <code class="parameter">error_message</code></dt>       <dd>        <p class="para">        Passed by reference and is set to hold a descriptive error message        explaining why the database could not be opened if there was an error.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-open-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a resource (database handle) on success, <strong><code>FALSE</code></strong> on error.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-open-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2541">     <p><strong>Example #1 <span class="function"><strong>sqlite_open()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0666</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sqliteerror</span><span style="color: #007700">))&nbsp;{&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'CREATE&nbsp;TABLE&nbsp;foo&nbsp;(bar&nbsp;varchar(10))'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"INSERT&nbsp;INTO&nbsp;foo&nbsp;VALUES&nbsp;('fnord')"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'select&nbsp;bar&nbsp;from&nbsp;foo'</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sqlite_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">));&nbsp;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;die(</span><span style="color: #9876AA">$sqliteerror</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.sqlite-open-notes">   <h3 class="title">注释</h3>   <div class="tip"><strong class="tip">Tip</strong>    <p class="simpara">     On Unix platforms, SQLite is sensitive to scripts that use the fork() system call.  If you     do have such a script, it is recommended that you close the handle prior     to forking and then re-open it in the child and/or parent.     For more information on this issue, see      <a href="http://sqlite.org/c_interface.html" class="link external">&raquo;&nbsp;The C language interface     to the SQLite library</a> in the section entitled     <em>Multi-Threading And SQLite</em>.     </p>   </div>   <div class="tip"><strong class="tip">Tip</strong>    <p class="simpara">     It is not recommended to work with SQLite databases mounted on NFS     partitions.  Since NFS is notoriously bad when it comes to locking you     may find that you cannot even open the database at all, and if it     succeeds, the locking behaviour may be undefined.    </p>   </div>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     Starting with SQLite library version 2.8.2, you can specify     <em>:memory:</em> as the <code class="parameter">filename</code> to     create a database that lives only in the memory of the computer.     This is useful mostly for temporary processing, as the in-memory     database will be destroyed when the process ends.  It can also be     useful when coupled with the <em>ATTACH DATABASE</em> SQL     statement to load other databases and move and query data between them.    </span>   </p></blockquote>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     SQLite is <a href="http://php.net/manual/zh/ini.sect.safe-mode.php#ini.safe-mode" class="link">安全模式</a> and open_basedir aware.    </span>   </p></blockquote>  </div>     <div class="refsect1 seealso" id="refsect1-function.sqlite-open-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_popen()} - Opens a persistent handle to an SQLite database and create the database if it does not exist</span></li>     <li class="member"><span class="function">{@link sqlite_close()} - Closes an open SQLite database</span></li>     <li class="member"><span class="function">{@link sqlite_factory()} - Opens an SQLite database and returns an SQLiteDatabase object</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return resource a resource (database handle) on success, false on error.*/
function sqlite_open ($filename, $mode = null, &$error_message = null) {}

/**
*<div id="function.sqlite-popen" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_popen</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_popen</span> &mdash; <span class="dc-title">    Opens a persistent handle to an SQLite database and create the database if it does not exist   </span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-popen-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>sqlite_popen</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = 0666</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span>   ]] )</div>    <p class="simpara">    This function behaves identically to <span class="function">{@link sqlite_open()}</span>    except that is uses the persistent resource mechanism of PHP.    For information about the meaning of the parameters, read the    <span class="function">{@link sqlite_open()}</span> manual page.   </p>   <p class="para">    <span class="function"><strong>sqlite_popen()</strong></span> will first check to see if a persistent    handle has already been opened for the given    <code class="parameter">filename</code>.  If it finds one, it returns that handle    to your script, otherwise it opens a fresh handle to the database.   </p>   <p class="para">    The benefit of this approach is that you don&#039;t incur the performance    cost of re-reading the database and index schema on each page hit served    by persistent web server SAPI&#039;s (any SAPI except for regular CGI or CLI).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     If you use persistent handles and have the database updated by a     background process (perhaps via a crontab), and that process re-creates     the database by overwriting it (either by unlinking and rebuilding, or     moving the updated version to replace the current version),     you may experience undefined behaviour when a persistent handle on the     old version of the database is recycled.    </span>    <span class="simpara">     To avoid this situation, have your background processes open the same     database file and perform their updates in a transaction.    </span>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-popen-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        The filename of the SQLite database.  If the file does not exist, SQLite        will attempt to create it.  PHP must have write permissions to the file        if data is inserted, the database schema is modified or to create the        database if it does not exist.       </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        The mode of the file. Intended to be used to open the database in        read-only mode.  Presently, this parameter is ignored by the sqlite        library.  The default value for mode is the octal value        <em>0666</em> and this is the recommended value.       </p>      </dd>                 <dt> <code class="parameter">error_message</code></dt>       <dd>        <p class="para">        Passed by reference and is set to hold a descriptive error message        explaining why the database could not be opened if there was an error.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-popen-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a resource (database handle) on success, <strong><code>FALSE</code></strong> on error.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-popen-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_open()} - Opens an SQLite database and create the database if it does not exist</span></li>     <li class="member"><span class="function">{@link sqlite_close()} - Closes an open SQLite database</span></li>     <li class="member"><span class="function">{@link sqlite_factory()} - Opens an SQLite database and returns an SQLiteDatabase object</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return resource <p>a resource (database handle) on success, false on error.</p>*/
function sqlite_popen ($filename, $mode = null, &$error_message = null) {}

/**
*<div id="function.sqlite-close" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_close</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_close</span> &mdash; <span class="dc-title">Closes an open SQLite database</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>sqlite_close</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    )</div>    <p class="para rdfs-comment">    Closes the given <code class="parameter">db_handle</code> database handle.    If the database was persistent, it will be closed and removed from the    persistent list.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-close-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-close-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-close-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2525">     <p><strong>Example #1 <span class="function"><strong>sqlite_close()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">sqlite_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-close-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_open()} - Opens an SQLite database and create the database if it does not exist</span></li>     <li class="member"><span class="function">{@link sqlite_popen()} - Opens a persistent handle to an SQLite database and create the database if it does not exist</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return void*/
function sqlite_close ($dbhandle) {}

/**
*<div id="function.sqlite-query" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_query</h1>   <h1 class="refname">SQLiteDatabase::query</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_query</span> -- <span class="refname">SQLiteDatabase::query</span> &mdash; <span class="dc-title">Executes a query against a given database and returns a result handle</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-query-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>sqlite_query</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>   ]] )</div>    <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>sqlite_query</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>   ]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type SQLiteResult">SQLiteResult</span></span> <span class="methodname"><strong>SQLiteDatabase::query</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>   ]] )</div>    <p class="para rdfs-comment">    Executes an SQL statement given by the <code class="parameter">query</code> against    a given database handle.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-query-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from        <span class="function">{@link sqlite_open()}</span> when used procedurally. This parameter        is not required when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">query</code></dt>       <dd>        <p class="para">        The query to be executed.       </p>       <p class="para">        Data inside the query should be {@link properly escaped}.       </p>      </dd>                 <dt> <code class="parameter">result_type</code></dt>       <dd>        <p class="para">可选的 <code class="parameter">result_type</code> 参数接受常量，且决定返回的数组如何被索引。使用 <strong><code>SQLITE_ASSOC</code></strong> 会仅返回关联索引（已命名字段），而 <strong><code>SQLITE_NUM</code></strong> 会仅返回数值索引。<strong><code>SQLITE_BOTH</code></strong> 会同时返回关联和数值索引。<strong><code>SQLITE_BOTH</code></strong> 是此函数的默认值。</p>      </dd>                 <dt> <code class="parameter">error_msg</code></dt>       <dd>        <p class="para">        The specified variable will be filled if an error occurs. This is        specially important because SQL syntax errors can&#039;t be fetched using        the <span class="function">{@link sqlite_last_error()}</span> function.       </p>      </dd>           </dl>    </p>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">为兼容其他数据库扩展(比如 MySQL)，支持两种可替代的语法。推荐第一种格式，函数的第一个参数是<code class="parameter">dbhandle</code>。</span></p></blockquote>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-query-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    This function will return a result handle 或者在失败时返回 <strong><code>FALSE</code></strong>.    For queries that return rows, the result handle can then be used with    functions such as <span class="function">{@link sqlite_fetch_array()}</span> and    <span class="function">{@link sqlite_seek()}</span>.   </p>   <p class="para">    Regardless of the query type, this function will return <strong><code>FALSE</code></strong> if the    query failed.   </p>   <p class="para">    <span class="function"><strong>sqlite_query()</strong></span> returns a buffered, seekable result    handle.  This is useful for reasonably small queries where you need to    be able to randomly access the rows.  Buffered result handles will    allocate memory to hold the entire result and will not return until it    has been fetched.  If you only need sequential access to the data, it is    recommended that you use the much higher performance    <span class="function">{@link sqlite_unbuffered_query()}</span> instead.   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.sqlite-query-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         Added the <code class="parameter">error_msg</code> parameter        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 notes" id="refsect1-function.sqlite-query-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">     SQLite <em class="emphasis">will</em> execute multiple queries separated by     semicolons, so you can use it to execute a batch of SQL that you have     loaded from a file or have embedded in a script. However, this works only     when the result of the function is not used - if it is used,      only the first SQL statement would be executed. Function     <span class="function">{@link sqlite_exec()}</span> will always execute multiple SQL      statements.    </p>    <p class="simpara">     When executing multiple queries, the return value of this function     will be <strong><code>FALSE</code></strong> if there was an error, but undefined otherwise (it might     be <strong><code>TRUE</code></strong> for success or it might return a result handle).    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-query-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_unbuffered_query()} - Execute a query that does not prefetch and buffer all data</span></li>     <li class="member"><span class="function">{@link sqlite_array_query()} - Execute a query against a given database and returns an array</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return resource  This function will return a result handle or <b>FALSE</b> on failure.*/
function sqlite_query ($query, $dbhandle, $result_type = null, &$error_msg = SQLITE_BOTH) {}

/**
*<div id="function.sqlite-exec" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_exec</h1>   <h1 class="refname">SQLiteDatabase::exec</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.3)</p><p class="refpurpose"><span class="refname">sqlite_exec</span> -- <span class="refname">SQLiteDatabase::exec</span> &mdash; <span class="dc-title">Executes a result-less query against a given database</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-exec-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_exec</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_exec</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>SQLiteDatabase::queryExec</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>   ] )</div>    <p class="para rdfs-comment">    Executes an SQL statement given by the <code class="parameter">query</code> against    a given database handle (specified by the <code class="parameter">dbhandle</code>     parameter).   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">     SQLite <em class="emphasis">will</em> execute multiple queries separated by     semicolons, so you can use it to execute a batch of SQL that you have     loaded from a file or have embedded in a script.    </p>   </div>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-exec-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from        <span class="function">{@link sqlite_open()}</span> when used procedurally. This parameter        is not required when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">query</code></dt>       <dd>        <p class="para">        The query to be executed.       </p>       <p class="para">        Data inside the query should be {@link properly escaped}.       </p>      </dd>                 <dt> <code class="parameter">error_msg</code></dt>       <dd>        <p class="para">        The specified variable will be filled if an error occurs. This is        specially important because SQL syntax errors can&#039;t be fetched using        the <span class="function">{@link sqlite_last_error()}</span> function.       </p>      </dd>          </dl>    </p>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">为兼容其他数据库扩展(比如 MySQL)，支持两种可替代的语法。推荐第一种格式，函数的第一个参数是<code class="parameter">dbhandle</code>。</span></p></blockquote>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-exec-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    This function will return a boolean result; <strong><code>TRUE</code></strong> for success or <strong><code>FALSE</code></strong> for failure.    If you need to run a query that returns rows, see <span class="function">{@link sqlite_query()}</span>.   </p>   <p class="para">由 <strong><code>SQLITE_ASSOC</code></strong> 与 <strong><code>SQLITE_BOTH</code></strong> 返回的列名会依照 <a href="http://php.net/manual/zh/sqlite.configuration.php#ini.sqlite.assoc-case" class="link">sqlite.assoc_case</a> 配置选项的值决定大小写。</p>  </div>    <div class="refsect1 changelog" id="refsect1-function.sqlite-exec-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         Added the <code class="parameter">error_msg</code> parameter        </td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.sqlite-exec-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2529">     <p><strong>Example #1 Procedural example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_exec</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UPDATE&nbsp;users&nbsp;SET&nbsp;email='jDoe@example.com'&nbsp;WHERE&nbsp;username='jDoe'"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$error</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$query</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;exit(</span><span style="color: #DD0000">"Error&nbsp;in&nbsp;query:&nbsp;'</span><span style="color: #9876AA">$error</span><span style="color: #DD0000">'"</span><span style="color: #007700">);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Number&nbsp;of&nbsp;rows&nbsp;modified:&nbsp;'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">sqlite_changes</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2530">     <p><strong>Example #2 Object-oriented example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">queryExec</span><span style="color: #007700">(</span><span style="color: #DD0000">"UPDATE&nbsp;users&nbsp;SET&nbsp;email='jDoe@example.com'&nbsp;WHERE&nbsp;username='jDoe'"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$error</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$query</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;exit(</span><span style="color: #DD0000">"Error&nbsp;in&nbsp;query:&nbsp;'</span><span style="color: #9876AA">$error</span><span style="color: #DD0000">'"</span><span style="color: #007700">);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Number&nbsp;of&nbsp;rows&nbsp;modified:&nbsp;'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">changes</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.sqlite-exec-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_query()} - Executes a query against a given database and returns a result handle</span></li>     <li class="member"><span class="function">{@link sqlite_unbuffered_query()} - Execute a query that does not prefetch and buffer all data</span></li>     <li class="member"><span class="function">{@link sqlite_array_query()} - Execute a query against a given database and returns an array</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool <p>This function will return a boolean result; true for success or false for failure.*/
function sqlite_exec ($dbhandle, $query, &$error_msg = null) {}

/**
*<div id="function.sqlite-array-query" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_array_query</h1>   <h1 class="refname">SQLiteDatabase::arrayQuery</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_array_query</span> -- <span class="refname">SQLiteDatabase::arrayQuery</span> &mdash; <span class="dc-title">Execute a query against a given database and returns an array</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-array-query-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sqlite_array_query</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sqlite_array_query</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>SQLiteDatabase::arrayQuery</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_array_query()</strong></span> executes the given query and returns    an array of the entire result set.  It is similar to calling    <span class="function">{@link sqlite_query()}</span> and then <span class="function">{@link sqlite_fetch_array()}</span>    for each row in the result set.  <span class="function"><strong>sqlite_array_query()</strong></span> is    significantly faster than the aforementioned.   </p>   <div class="tip"><strong class="tip">Tip</strong>    <p class="para">     <span class="function"><strong>sqlite_array_query()</strong></span> is best suited to queries     returning 45 rows or less.  If you have more data than that, it is     recommended that you write your scripts to use     <span class="function">{@link sqlite_unbuffered_query()}</span> instead for more optimal     performance.    </p>   </div>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-array-query-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">query</code></dt>       <dd>        <p class="para">        The query to be executed.       </p>       <p class="para">        Data inside the query should be {@link properly escaped}.       </p>      </dd>                 <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">result_type</code></dt>       <dd>        <p class="para">可选的 <code class="parameter">result_type</code> 参数接受常量，且决定返回的数组如何被索引。使用 <strong><code>SQLITE_ASSOC</code></strong> 会仅返回关联索引（已命名字段），而 <strong><code>SQLITE_NUM</code></strong> 会仅返回数值索引。<strong><code>SQLITE_BOTH</code></strong> 会同时返回关联和数值索引。<strong><code>SQLITE_BOTH</code></strong> 是此函数的默认值。</p>      </dd>                 <dt> <code class="parameter">decode_binary</code></dt>       <dd>        <p class="para">当 <code class="parameter">decode_binary</code> 参数设置为 <strong><code>TRUE</code></strong>（默认值）时，PHP 会解码那些由 <span class="function">{@link sqlite_escape_string()}</span> 编码后的二进制数据。通常应保留此值为其默认值，除非要与其他使用 SQLlite 的应用程序建立的数据交互。</p>      </dd>          </dl>    </p>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">为兼容其他数据库扩展(比如 MySQL)，支持两种可替代的语法。推荐第一种格式，函数的第一个参数是<code class="parameter">dbhandle</code>。</span></p></blockquote>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-array-query-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of the entire result set; <strong><code>FALSE</code></strong> otherwise.   </p>   <p class="para">由 <strong><code>SQLITE_ASSOC</code></strong> 与 <strong><code>SQLITE_BOTH</code></strong> 返回的列名会依照 <a href="http://php.net/manual/zh/sqlite.configuration.php#ini.sqlite.assoc-case" class="link">sqlite.assoc_case</a> 配置选项的值决定大小写。</p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-array-query-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2519">     <p><strong>Example #1 过程化风格</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_array_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Name:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">'&nbsp;&nbsp;E-mail:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'email'</span><span style="color: #007700">];<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2520">     <p><strong>Example #2 Object-oriented style</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">arrayQuery</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Name:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">'&nbsp;&nbsp;E-mail:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'email'</span><span style="color: #007700">];<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-array-query-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_query()} - Executes a query against a given database and returns a result handle</span></li>     <li class="member"><span class="function">{@link sqlite_fetch_array()} - Fetches the next row from a result set as an array</span></li>     <li class="member"><span class="function">{@link sqlite_fetch_string()} - 别名 sqlite_fetch_single</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return array an array of the entire result set; false otherwise.*/
function sqlite_array_query ($dbhandle, $query, $result_type = null, $decode_binary = null) {}

/**
*<div id="function.sqlite-single-query" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_single_query</h1>   <h1 class="refname">SQLiteDatabase::singleQuery</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.1)</p><p class="refpurpose"><span class="refname">sqlite_single_query</span> -- <span class="refname">SQLiteDatabase::singleQuery</span> &mdash; <span class="dc-title">    Executes a query and returns either an array for one single column or the value of the first row   </span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-single-query-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sqlite_single_query</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$db</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$first_row_only</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code></span>   ]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>SQLiteDatabase::singleQuery</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$first_row_only</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code></span>   ]] )</div>       <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return array*/
function sqlite_single_query ($db, $query, $first_row_only = null, $decode_binary = null) {}

/**
*<div id="function.sqlite-fetch-array" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_fetch_array</h1>   <h1 class="refname">SQLiteResult::fetch</h1>   <h1 class="refname">SQLiteUnbuffered::fetch</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_fetch_array</span> -- <span class="refname">SQLiteResult::fetch</span> -- <span class="refname">SQLiteUnbuffered::fetch</span> &mdash; <span class="dc-title">Fetches the next row from a result set as an array</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-fetch-array-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sqlite_fetch_array</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>SQLiteResult::fetch</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>SQLiteUnbuffered::fetch</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">    Fetches the next row from the given <code class="parameter">result</code> handle.    If there are no more rows, returns <strong><code>FALSE</code></strong>, otherwise returns an    associative array representing the row data.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-fetch-array-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">result_type</code></dt>       <dd>        <p class="para">可选的 <code class="parameter">result_type</code> 参数接受常量，且决定返回的数组如何被索引。使用 <strong><code>SQLITE_ASSOC</code></strong> 会仅返回关联索引（已命名字段），而 <strong><code>SQLITE_NUM</code></strong> 会仅返回数值索引。<strong><code>SQLITE_BOTH</code></strong> 会同时返回关联和数值索引。<strong><code>SQLITE_BOTH</code></strong> 是此函数的默认值。</p>      </dd>                 <dt> <code class="parameter">decode_binary</code></dt>       <dd>        <p class="para">当 <code class="parameter">decode_binary</code> 参数设置为 <strong><code>TRUE</code></strong>（默认值）时，PHP 会解码那些由 <span class="function">{@link sqlite_escape_string()}</span> 编码后的二进制数据。通常应保留此值为其默认值，除非要与其他使用 SQLlite 的应用程序建立的数据交互。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-fetch-array-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of the next row from a result set; <strong><code>FALSE</code></strong> if the    next position is beyond the final row.   </p>   <p class="para">由 <strong><code>SQLITE_ASSOC</code></strong> 与 <strong><code>SQLITE_BOTH</code></strong> 返回的列名会依照 <a href="http://php.net/manual/zh/sqlite.configuration.php#ini.sqlite.assoc-case" class="link">sqlite.assoc_case</a> 配置选项的值决定大小写。</p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-fetch-array-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2534">     <p><strong>Example #1 Procedural example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">);<br />while&nbsp;(</span><span style="color: #9876AA">$entry&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$query</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Name:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">'&nbsp;&nbsp;E-mail:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'email'</span><span style="color: #007700">];<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2535">     <p><strong>Example #2 Object-oriented example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;buffered&nbsp;result&nbsp;set<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unbufferedQuery</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;unbuffered&nbsp;result&nbsp;set<br /><br /></span><span style="color: #007700">while&nbsp;(</span><span style="color: #9876AA">$entry&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$query</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Name:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">'&nbsp;&nbsp;E-mail:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'email'</span><span style="color: #007700">];<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-fetch-array-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_array_query()} - Execute a query against a given database and returns an array</span></li>     <li class="member"><span class="function">{@link sqlite_fetch_string()} - 别名 sqlite_fetch_single</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return array <p>an array of the next row from a result set; false if the*/
function sqlite_fetch_array ($result, $result_type = SQLITE_BOTH, $decode_binary = null) {}

/**
*<div id="function.sqlite-fetch-object" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_fetch_object</h1>   <h1 class="refname">SQLiteResult::fetchObject</h1>   <h1 class="refname">SQLiteUnbuffered::fetchObject</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0)</p><p class="refpurpose"><span class="refname">sqlite_fetch_object</span> -- <span class="refname">SQLiteResult::fetchObject</span> -- <span class="refname">SQLiteUnbuffered::fetchObject</span> &mdash; <span class="dc-title">Fetches the next row from a result set as an object</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-fetch-object-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">object</span> <span class="methodname"><strong>sqlite_fetch_object</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$ctor_params</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">object</span> <span class="methodname"><strong>SQLiteResult::fetchObject</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$ctor_params</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]]] )</div>    <div class="methodsynopsis dc-description">    <span class="type">object</span> <span class="methodname"><strong>SQLiteUnbuffered::fetchObject</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$ctor_params</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]]] )</div>     <div class="warning"><strong class="warning">Warning</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>   </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return object*/
function sqlite_fetch_object ($result, $class_name = null, array $ctor_params = null, $decode_binary = null) {}

/**
*<div id="function.sqlite-fetch-single" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_fetch_single</h1>   <h1 class="refname">SQLiteResult::fetchSingle</h1>   <h1 class="refname">SQLiteUnbuffered::fetchSingle</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.1)</p><p class="refpurpose"><span class="refname">sqlite_fetch_single</span> -- <span class="refname">SQLiteResult::fetchSingle</span> -- <span class="refname">SQLiteUnbuffered::fetchSingle</span> &mdash; <span class="dc-title">Fetches the first column of a result set as a string</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-fetch-single-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_fetch_single</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>SQLiteResult::fetchSingle</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>SQLiteUnbuffered::fetchSingle</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_fetch_single()</strong></span> is identical to    <span class="function">{@link sqlite_fetch_array()}</span> except that it returns the value    of the first column of the rowset.   </p>   <p class="para">    This is the most optimal way to retrieve data when you are only    interested in the values from a single column of data.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-fetch-single-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">decode_binary</code></dt>       <dd>        <p class="para">当 <code class="parameter">decode_binary</code> 参数设置为 <strong><code>TRUE</code></strong>（默认值）时，PHP 会解码那些由 <span class="function">{@link sqlite_escape_string()}</span> 编码后的二进制数据。通常应保留此值为其默认值，除非要与其他使用 SQLlite 的应用程序建立的数据交互。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-fetch-single-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the first column value, as a string.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-fetch-single-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2538">     <p><strong>Example #1 A <span class="function"><strong>sqlite_fetch_single()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0666</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sqliteerror</span><span style="color: #007700">))&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$sql&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"SELECT&nbsp;id&nbsp;FROM&nbsp;sometable&nbsp;WHERE&nbsp;id&nbsp;=&nbsp;42"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$res&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sql</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">sqlite_num_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">)&nbsp;&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">sqlite_fetch_single</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;42<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sqlite_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-fetch-single-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_fetch_array()} - Fetches the next row from a result set as an array</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string <p>the first column value, as a string.</p>*/
function sqlite_fetch_single ($result, $decode_binary = null) {}

/**
*<div id="function.sqlite-fetch-string" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_fetch_string</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_fetch_string</span> &mdash; <span class="dc-title">别名 <span class="function">{@link sqlite_fetch_single()}</span></span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-fetch-string-description">   <h3 class="title">说明</h3>   <p class="simpara">    此函数是该函数的别名：    <span class="function">{@link sqlite_fetch_single()}</span>.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string <p>the first column value, as a string.</p>*/
function sqlite_fetch_string ($result, $decode_binary) {}

/**
*<div id="function.sqlite-fetch-all" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_fetch_all</h1>   <h1 class="refname">SQLiteResult::fetchAll</h1>   <h1 class="refname">SQLiteUnbuffered::fetchAll</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_fetch_all</span> -- <span class="refname">SQLiteResult::fetchAll</span> -- <span class="refname">SQLiteUnbuffered::fetchAll</span> &mdash; <span class="dc-title">Fetches all rows from a result set as an array of arrays</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-fetch-all-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sqlite_fetch_all</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>SQLiteResult::fetchAll</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>SQLiteUnbuffered::fetchAll</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_fetch_all()</strong></span> returns an array of the entire result    set from the <code class="parameter">result</code> resource.  It is similar to calling    <span class="function">{@link sqlite_query()}</span> (or    <span class="function">{@link sqlite_unbuffered_query()}</span>) and then    <span class="function">{@link sqlite_fetch_array()}</span> for each row in the result set.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-fetch-all-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">result_type</code></dt>       <dd>        <p class="para">可选的 <code class="parameter">result_type</code> 参数接受常量，且决定返回的数组如何被索引。使用 <strong><code>SQLITE_ASSOC</code></strong> 会仅返回关联索引（已命名字段），而 <strong><code>SQLITE_NUM</code></strong> 会仅返回数值索引。<strong><code>SQLITE_BOTH</code></strong> 会同时返回关联和数值索引。<strong><code>SQLITE_BOTH</code></strong> 是此函数的默认值。</p>      </dd>                 <dt> <code class="parameter">decode_binary</code></dt>       <dd>        <p class="para">当 <code class="parameter">decode_binary</code> 参数设置为 <strong><code>TRUE</code></strong>（默认值）时，PHP 会解码那些由 <span class="function">{@link sqlite_escape_string()}</span> 编码后的二进制数据。通常应保留此值为其默认值，除非要与其他使用 SQLlite 的应用程序建立的数据交互。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-fetch-all-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of the remaining rows in a result set. If called right    after <span class="function">{@link sqlite_query()}</span>, it returns all rows. If called    after <span class="function">{@link sqlite_fetch_array()}</span>, it returns the rest. If    there are no rows in a result set, it returns an empty array.   </p>   <p class="para">由 <strong><code>SQLITE_ASSOC</code></strong> 与 <strong><code>SQLITE_BOTH</code></strong> 返回的列名会依照 <a href="http://php.net/manual/zh/sqlite.configuration.php#ini.sqlite.assoc-case" class="link">sqlite.assoc_case</a> 配置选项的值决定大小写。</p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-fetch-all-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2532">     <p><strong>Example #1 Procedural example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_fetch_all</span><span style="color: #007700">(</span><span style="color: #9876AA">$query</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Name:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">'&nbsp;&nbsp;E-mail:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'email'</span><span style="color: #007700">];<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2533">     <p><strong>Example #2 Object-oriented example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;buffered&nbsp;result&nbsp;set<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unbufferedQuery</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT&nbsp;name,&nbsp;email&nbsp;FROM&nbsp;users&nbsp;LIMIT&nbsp;25'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;unbuffered&nbsp;result&nbsp;set<br /><br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$query</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchAll</span><span style="color: #007700">(</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Name:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">'&nbsp;&nbsp;E-mail:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$entry</span><span style="color: #007700">[</span><span style="color: #DD0000">'email'</span><span style="color: #007700">];<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-fetch-all-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_fetch_array()} - Fetches the next row from a result set as an array</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return array <p>an array of the remaining rows in a result set. If called right*/
function sqlite_fetch_all ($result_type = null, $decode_binary = null) {}

/**
*<div id="function.sqlite-current" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_current</h1>   <h1 class="refname">SQLiteResult::current</h1>   <h1 class="refname">SQLiteUnbuffered::current</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_current</span> -- <span class="refname">SQLiteResult::current</span> -- <span class="refname">SQLiteUnbuffered::current</span> &mdash; <span class="dc-title">Fetches the current row from a result set as an array</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sqlite_current</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>SQLiteResult::current</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>SQLiteUnbuffered::current</strong></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_current()</strong></span> is identical to    <span class="function">{@link sqlite_fetch_array()}</span> except that it does not advance    to the next row prior to returning the data; it returns the data from the    current position only.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-current-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">result_type</code></dt>       <dd>        <p class="para">可选的 <code class="parameter">result_type</code> 参数接受常量，且决定返回的数组如何被索引。使用 <strong><code>SQLITE_ASSOC</code></strong> 会仅返回关联索引（已命名字段），而 <strong><code>SQLITE_NUM</code></strong> 会仅返回数值索引。<strong><code>SQLITE_BOTH</code></strong> 会同时返回关联和数值索引。<strong><code>SQLITE_BOTH</code></strong> 是此函数的默认值。</p>      </dd>                 <dt> <code class="parameter">decode_binary</code></dt>       <dd>        <p class="para">当 <code class="parameter">decode_binary</code> 参数设置为 <strong><code>TRUE</code></strong>（默认值）时，PHP 会解码那些由 <span class="function">{@link sqlite_escape_string()}</span> 编码后的二进制数据。通常应保留此值为其默认值，除非要与其他使用 SQLlite 的应用程序建立的数据交互。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of the current row from a result set; <strong><code>FALSE</code></strong> if the    current position is beyond the final row.   </p>   <p class="para">由 <strong><code>SQLITE_ASSOC</code></strong> 与 <strong><code>SQLITE_BOTH</code></strong> 返回的列名会依照 <a href="http://php.net/manual/zh/sqlite.configuration.php#ini.sqlite.assoc-case" class="link">sqlite.assoc_case</a> 配置选项的值决定大小写。</p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-current-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_seek()} - Seek to a particular row number of a buffered result set</span></li>     <li class="member"><span class="function">{@link sqlite_next()} - Seek to the next row number</span></li>     <li class="member"><span class="function">{@link sqlite_fetch_array()} - Fetches the next row from a result set as an array</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return array an array of the current row from a result set; false if the*/
function sqlite_current ($result, $result_type = null, $decode_binary = null) {}

/**
*<div id="function.sqlite-column" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_column</h1>   <h1 class="refname">SQLiteResult::column</h1>   <h1 class="refname">SQLiteUnbuffered::column</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_column</span> -- <span class="refname">SQLiteResult::column</span> -- <span class="refname">SQLiteUnbuffered::column</span> &mdash; <span class="dc-title">Fetches a column from the current row of a result set</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-column-description">   <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>sqlite_column</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$index_or_name</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>SQLiteResult::column</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$index_or_name</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>SQLiteUnbuffered::column</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$index_or_name</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Fetches the value of a column named <code class="parameter">index_or_name</code>    (if it is a string), or of the ordinal column numbered    <code class="parameter">index_or_name</code> (if it is an integer) from the    current row of the query result handle <code class="parameter">result</code>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-column-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">index_or_name</code></dt>       <dd>        <p class="para">        The column index or name to fetch.       </p>      </dd>                 <dt> <code class="parameter">decode_binary</code></dt>       <dd>        <p class="para">当 <code class="parameter">decode_binary</code> 参数设置为 <strong><code>TRUE</code></strong>（默认值）时，PHP 会解码那些由 <span class="function">{@link sqlite_escape_string()}</span> 编码后的二进制数据。通常应保留此值为其默认值，除非要与其他使用 SQLlite 的应用程序建立的数据交互。</p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-column-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the column value.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.sqlite-column-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Use this function when you are iterating a large result set with many     columns, or with columns that contain large amounts of data.    </p>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-column-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_fetch_string()} - 别名 sqlite_fetch_single</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return mixed the column value.*/
function sqlite_column ($result, $index_or_name, $decode_binary = null) {}

/**
*<div id="function.sqlite-libversion" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_libversion</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_libversion</span> &mdash; <span class="dc-title">Returns the version of the linked SQLite library</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-libversion-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_libversion</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the version of the linked SQLite library.   </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.sqlite-libversion-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the library version, as a string.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-libversion-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_libencoding()} - Returns the encoding of the linked SQLite library</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string the library version, as a string.*/
function sqlite_libversion () {}

/**
*<div id="function.sqlite-libencoding" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_libencoding</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_libencoding</span> &mdash; <span class="dc-title">Returns the encoding of the linked SQLite library</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-libencoding-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_libencoding</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    The SQLite library may be compiled in either <em>ISO-8859-1</em>    or <em>UTF-8</em> compatible modes. This function allows you to    determine which encoding scheme is used by your version of the library.   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     The default PHP distribution builds <var class="filename">libsqlite</var> in     <em>ISO-8859-1</em> encoding     mode.  However, this is a misnomer; rather than handling     <em>ISO-8859-1</em>, it operates according to your current     locale settings for string comparisons and sort ordering. So, rather     than <em>ISO-8859-1</em>, you should think of it as being     &#039;<em>8-bit</em>&#039; instead.    </p>   </div>   <p class="para">    When compiled with <em>UTF-8</em> support, sqlite handles encoding and decoding    of <em>UTF-8</em> multi-byte character sequences, but does not yet do a complete    job when working with the data (no normalization is performed for    example), and some comparison operations may still not be carried out    correctly.   </p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     It is not recommended that you use PHP in a web-server configuration     with a version of the SQLite library compiled with <em>UTF-8</em> support, since     <var class="filename">libsqlite</var> will abort the process if it detects a problem with the     <em>UTF-8</em> encoding.    </p>   </div>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-libencoding-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the library encoding.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-libencoding-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function"><strong>sqlite_lib_version()</strong></span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string the library encoding.*/
function sqlite_libencoding () {}

/**
*<div id="function.sqlite-changes" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_changes</h1>   <h1 class="refname">SQLiteDatabase::changes</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_changes</span> -- <span class="refname">SQLiteDatabase::changes</span> &mdash; <span class="dc-title">    Returns the number of rows that were changed by the most    recent SQL statement   </span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-changes-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>sqlite_changes</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>SQLiteDatabase::changes</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the numbers of rows that were changed by the most recent SQL    statement executed against the <code class="parameter">dbhandle</code> database    handle.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-changes-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-changes-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of changed rows.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-changes-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2523">     <p><strong>Example #1 过程化风格</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"UPDATE&nbsp;users&nbsp;SET&nbsp;email='jDoe@example.com'&nbsp;WHERE&nbsp;username='jDoe'"</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$query</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;exit(</span><span style="color: #DD0000">'Error&nbsp;in&nbsp;query.'</span><span style="color: #007700">);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Number&nbsp;of&nbsp;rows&nbsp;modified:&nbsp;'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">sqlite_changes</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2524">     <p><strong>Example #2 面向对象风格</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$query&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">"UPDATE&nbsp;users&nbsp;SET&nbsp;email='jDoe@example.com'&nbsp;WHERE&nbsp;username='jDoe'"</span><span style="color: #007700">);<br />if&nbsp;(!</span><span style="color: #9876AA">$query</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;exit(</span><span style="color: #DD0000">'Error&nbsp;in&nbsp;query.'</span><span style="color: #007700">);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Number&nbsp;of&nbsp;rows&nbsp;modified:&nbsp;'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">changes</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-changes-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_open()} - Opens an SQLite database and create the database if it does not exist</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return int the number of changed rows.*/
function sqlite_changes ($db) {}

/**
*<div id="function.sqlite-last-insert-rowid" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_last_insert_rowid</h1>   <h1 class="refname">SQLiteDatabase::lastInsertRowid</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_last_insert_rowid</span> -- <span class="refname">SQLiteDatabase::lastInsertRowid</span> &mdash; <span class="dc-title">Returns the rowid of the most recently inserted row</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-last-insert-rowid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>sqlite_last_insert_rowid</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>SQLiteDatabase::lastInsertRowid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the rowid of the row that was most recently inserted into the    database <code class="parameter">dbhandle</code>, if it was created as an    auto-increment field.   </p>   <div class="tip"><strong class="tip">Tip</strong>    <p class="para">     You can create auto-increment fields in SQLite by declaring them as     <em>INTEGER PRIMARY KEY</em> in your table schema.    </p>   </div>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-last-insert-rowid-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-last-insert-rowid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the row id, as an integer.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return int the row id, as an integer.*/
function sqlite_last_insert_rowid ($dbhandle) {}

/**
*<div id="function.sqlite-num-rows" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_num_rows</h1>   <h1 class="refname">SQLiteResult::numRows</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_num_rows</span> -- <span class="refname">SQLiteResult::numRows</span> &mdash; <span class="dc-title">Returns the number of rows in a buffered result set</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-num-rows-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>sqlite_num_rows</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>SQLiteResult::numRows</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the number of rows in the buffered <code class="parameter">result</code>    set.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-num-rows-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不能用于未缓冲的结果句柄。</p></p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-num-rows-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of rows, as an integer.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-num-rows-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2539">     <p><strong>Example #1 Procedural example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"SELECT&nbsp;*&nbsp;FROM&nbsp;mytable&nbsp;WHERE&nbsp;name='John&nbsp;Doe'"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$rows&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_num_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Number&nbsp;of&nbsp;rows:&nbsp;</span><span style="color: #9876AA">$rows</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2540">     <p><strong>Example #2 Object-oriented example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$db&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">"SELECT&nbsp;*&nbsp;FROM&nbsp;mytable&nbsp;WHERE&nbsp;name='John&nbsp;Doe'"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$rows&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$result</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">numRows</span><span style="color: #007700">();<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Number&nbsp;of&nbsp;rows:&nbsp;</span><span style="color: #9876AA">$rows</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-num-rows-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_changes()} - Returns the number of rows that were changed by the most    recent SQL statement</span></li>     <li class="member"><span class="function">{@link sqlite_query()} - Executes a query against a given database and returns a result handle</span></li>     <li class="member"><span class="function">{@link sqlite_num_fields()} - Returns the number of fields in a result set</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return int the number of rows, as an integer.*/
function sqlite_num_rows ($result) {}

/**
*<div id="function.sqlite-num-fields" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_num_fields</h1>   <h1 class="refname">SQLiteResult::numFields</h1>   <h1 class="refname">SQLiteUnbuffered::numFields</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_num_fields</span> -- <span class="refname">SQLiteResult::numFields</span> -- <span class="refname">SQLiteUnbuffered::numFields</span> &mdash; <span class="dc-title">Returns the number of fields in a result set</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-num-fields-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>sqlite_num_fields</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>SQLiteResult::numFields</strong></span>     ( <span class="methodparam">void</span>    )</div>    <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>SQLiteUnbuffered::numFields</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the number of fields in the <code class="parameter">result</code> set.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-num-fields-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-num-fields-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of fields, as an integer.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-num-fields-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_changes()} - Returns the number of rows that were changed by the most    recent SQL statement</span></li>     <li class="member"><span class="function">{@link sqlite_num_rows()} - Returns the number of rows in a buffered result set</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return int the number of fields, as an integer.*/
function sqlite_num_fields ($result) {}

/**
*<div id="function.sqlite-field-name" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_field_name</h1>   <h1 class="refname">SQLiteResult::fieldName</h1>   <h1 class="refname">SQLiteUnbuffered::fieldName</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_field_name</span> -- <span class="refname">SQLiteResult::fieldName</span> -- <span class="refname">SQLiteUnbuffered::fieldName</span> &mdash; <span class="dc-title">Returns the name of a particular field</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-field-name-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_field_name</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_index</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>SQLiteResult::fieldName</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_index</code></span>    )</div>    <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>SQLiteUnbuffered::fieldName</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_index</code></span>    )</div>    <p class="para rdfs-comment">    Given the ordinal column number, <code class="parameter">field_index</code>,    <span class="function"><strong>sqlite_field_name()</strong></span> returns the name of that field in    the result set <code class="parameter">result</code>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-field-name-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">field_index</code></dt>       <dd>        <p class="para">        The ordinal column number in the result set.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-field-name-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the name of a field in an SQLite result set, given the ordinal    column number; <strong><code>FALSE</code></strong> on error.   </p>   <p class="para">由 <strong><code>SQLITE_ASSOC</code></strong> 与 <strong><code>SQLITE_BOTH</code></strong> 返回的列名会依照 <a href="http://php.net/manual/zh/sqlite.configuration.php#ini.sqlite.assoc-case" class="link">sqlite.assoc_case</a> 配置选项的值决定大小写。</p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string the name of a field in an SQLite result set, given the ordinal*/
function sqlite_field_name ($result, $field_index) {}

/**
*<div id="function.sqlite-seek" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_seek</h1>   <h1 class="refname">SQLiteResult::seek</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_seek</span> -- <span class="refname">SQLiteResult::seek</span> &mdash; <span class="dc-title">Seek to a particular row number of a buffered result set</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-seek-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_seek</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownum</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteResult::seek</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownum</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_seek()</strong></span> seeks to the row given by the parameter    <code class="parameter">rownum</code>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-seek-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不能用于未缓冲的结果句柄。</p></p></blockquote>      </dd>                 <dt> <code class="parameter">rownum</code></dt>       <dd>        <p class="para">        The ordinal row number to seek to.  The row number is zero-based (0 is        the first row).       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不能用于未缓冲的结果句柄。</p></p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-seek-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>FALSE</code></strong> if the row does not exist, <strong><code>TRUE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-seek-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_next()} - Seek to the next row number</span></li>     <li class="member"><span class="function">{@link sqlite_current()} - Fetches the current row from a result set as an array</span></li>     <li class="member"><span class="function">{@link sqlite_rewind()} - Seek to the first row number</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool false if the row does not exist, true otherwise.*/
function sqlite_seek ($result, $rownum) {}

/**
*<div id="function.sqlite-rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_rewind</h1>   <h1 class="refname">SQLiteResult::rewind</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_rewind</span> -- <span class="refname">SQLiteResult::rewind</span> &mdash; <span class="dc-title">Seek to the first row number</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_rewind</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteResult::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_rewind()</strong></span> seeks back to the first row in the    given result set.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-rewind-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不能用于未缓冲的结果句柄。</p></p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>FALSE</code></strong> if there are no rows in the result set, <strong><code>TRUE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-rewind-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_next()} - Seek to the next row number</span></li>     <li class="member"><span class="function">{@link sqlite_current()} - Fetches the current row from a result set as an array</span></li>     <li class="member"><span class="function">{@link sqlite_seek()} - Seek to a particular row number of a buffered result set</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool false if there are no rows in the result set, true otherwise.*/
function sqlite_rewind ($result) {}

/**
*<div id="function.sqlite-next" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_next</h1>   <h1 class="refname">SQLiteResult::next</h1>   <h1 class="refname">SQLiteUnbuffered::next</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_next</span> -- <span class="refname">SQLiteResult::next</span> -- <span class="refname">SQLiteUnbuffered::next</span> &mdash; <span class="dc-title">Seek to the next row number</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_next</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteResult::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteUnbuffered::next</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_next()</strong></span> advances the result handle    <code class="parameter">result</code> to the next row.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-next-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> if there are no more rows.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-next-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_seek()} - Seek to a particular row number of a buffered result set</span></li>     <li class="member"><span class="function">{@link sqlite_current()} - Fetches the current row from a result set as an array</span></li>     <li class="member"><span class="function">{@link sqlite_rewind()} - Seek to the first row number</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool <b>TRUE</b> on success, or <b>FALSE</b> if there are no more rows.*/
function sqlite_next ($result) {}

/**
*<div id="function.sqlite-prev" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_prev</h1>   <h1 class="refname">SQLiteResult::prev</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0)</p><p class="refpurpose"><span class="refname">sqlite_prev</span> -- <span class="refname">SQLiteResult::prev</span> &mdash; <span class="dc-title">Seek to the previous row number of a result set</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-prev-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_prev</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteResult::prev</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_prev()</strong></span> seeks back the     <code class="parameter">result</code> handle to the previous row.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-prev-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不能用于未缓冲的结果句柄。</p></p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-prev-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> if there are no more previous rows.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-prev-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_has_prev()} - Returns whether or not a previous row is available</span></li>     <li class="member"><span class="function">{@link sqlite_rewind()} - Seek to the first row number</span></li>     <li class="member"><span class="function">{@link sqlite_next()} - Seek to the next row number</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool true on success, or false if there are no more previous rows.*/
function sqlite_prev ($result) {}

/**
*<div id="function.sqlite-valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_valid</h1>   <h1 class="refname">SQLiteResult::valid</h1>   <h1 class="refname">SQLiteUnbuffered::valid</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0)</p><p class="refpurpose"><span class="refname">sqlite_valid</span> -- <span class="refname">SQLiteResult::valid</span> -- <span class="refname">SQLiteUnbuffered::valid</span> &mdash; <span class="dc-title">Returns whether more rows are available</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_valid</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteResult::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteUnbuffered::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Finds whether more rows are available from the given result handle.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-valid-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不能用于未缓冲的结果句柄。</p></p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if there are more rows available from the    <code class="parameter">result</code> handle, or <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-valid-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_num_rows()} - Returns the number of rows in a buffered result set</span></li>     <li class="member"><span class="function">{@link sqlite_changes()} - Returns the number of rows that were changed by the most    recent SQL statement</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool <b>TRUE</b> if there are more rows available from the*/
function sqlite_valid ($result) {}

/**
*<div id="function.sqlite-has-more" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_has_more</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_has_more</span> &mdash; <span class="dc-title">Finds whether or not more rows are available</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-has-more-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_has_more</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">    Finds whether more rows are available from the given result set.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-has-more-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-has-more-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if there are more rows available from the    <code class="parameter">result</code> handle, or <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-has-more-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_num_rows()} - Returns the number of rows in a buffered result set</span></li>     <li class="member"><span class="function">{@link sqlite_changes()} - Returns the number of rows that were changed by the most    recent SQL statement</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool <b>TRUE</b> if there are more rows available from the*/
function sqlite_has_more ($result) {}

/**
*<div id="function.sqlite-has-prev" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_has_prev</h1>   <h1 class="refname">SQLiteResult::hasPrev</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0)</p><p class="refpurpose"><span class="refname">sqlite_has_prev</span> -- <span class="refname">SQLiteResult::hasPrev</span> &mdash; <span class="dc-title">Returns whether or not a previous row is available</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-has-prev-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>sqlite_has_prev</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>SQLiteResult::hasPrev</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Find whether there are more previous rows from the given result handle.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-has-prev-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">result</code></dt>       <dd>        <p class="para">        The SQLite result resource.  This parameter is not required when using        the object-oriented method.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">此函数不能用于未缓冲的结果句柄。</p></p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-has-prev-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if there are more previous rows available from the    <code class="parameter">result</code> handle, or <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-has-prev-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_prev()} - Seek to the previous row number of a result set</span></li>     <li class="member"><span class="function">{@link sqlite_has_more()} - Finds whether or not more rows are available</span></li>     <li class="member"><span class="function">{@link sqlite_num_rows()} - Returns the number of rows in a buffered result set</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return bool <b>TRUE</b> if there are more previous rows available from the*/
function sqlite_has_prev ($result) {}

/**
*<div id="function.sqlite-escape-string" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_escape_string</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_escape_string</span> &mdash; <span class="dc-title">Escapes a string for use as a query parameter</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-escape-string-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_escape_string</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$item</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_escape_string()</strong></span> will correctly quote the string    specified by <code class="parameter">item</code>    for use in an SQLite SQL statement.  This includes doubling up    single-quote characters (<em>&#039;</em>) and checking for    binary-unsafe characters in the query string.   </p>   <p class="para">    Although the encoding makes it safe to insert the data, it will render    simple text comparisons and <em>LIKE</em> clauses in your    queries unusable for the columns that contain the binary data.  In    practice, this shouldn&#039;t be a problem, as your schema should be such that    you don&#039;t use such things on binary columns (in fact, it might be better to    store binary data using other means, such as in files).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-escape-string-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">item</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being quoted.       </p>       <p class="para">        If the <code class="parameter">item</code> contains a <em>NUL</em>        character, or if it begins with a character whose ordinal value is        <em>0x01</em>, PHP will apply a binary encoding scheme so that        you can safely store and retrieve binary data.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.sqlite-escape-string-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an escaped <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> for use in an SQLite SQL statement.   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.sqlite-escape-string-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     Do not use this function to encode the return values from UDF&#039;s created     using <span class="function">{@link sqlite_create_function()}</span> or     <span class="function">{@link sqlite_create_aggregate()}</span> - use     <span class="function">{@link sqlite_udf_encode_binary()}</span> instead.    </span>   </p></blockquote>   <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">     <span class="function">{@link addslashes()}</span> should <em class="emphasis">NOT</em> be used to     quote your strings for SQLite queries; it will lead to strange results     when retrieving your data.    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-escape-string-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_udf_encode_binary()} - Encode binary data before returning it from an UDF</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string an escaped string for use in an SQLite SQL statement.*/
function sqlite_escape_string ($item) {}

/**
*<div id="function.sqlite-busy-timeout" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_busy_timeout</h1>   <h1 class="refname">SQLiteDatabase::busyTimeout</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_busy_timeout</span> -- <span class="refname">SQLiteDatabase::busyTimeout</span> &mdash; <span class="dc-title">Set busy timeout duration, or disable busy handlers</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-busy-timeout-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>sqlite_busy_timeout</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>SQLiteDatabase::busyTimeout</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span>    )</div>    <p class="para rdfs-comment">    Set the maximum time, in milliseconds, that SQLite will wait for a    <code class="parameter">dbhandle</code> to become ready for use.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-busy-timeout-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">milliseconds</code></dt>       <dd>        <p class="para">        The number of milliseconds.  When set to        <em>0</em>, busy handlers will be disabled and SQLite will        return immediately with a <em>SQLITE_BUSY</em> status code        if another process/thread has the database locked for an update.       </p>       <p class="para">        PHP sets the default busy timeout to be 60 seconds when the database is        opened.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         There are one thousand (1000) milliseconds in one second.        </p>       </p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-busy-timeout-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-busy-timeout-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2521">     <p><strong>Example #1 过程化风格</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">sqlite_busy_timeout</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10000</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;set&nbsp;timeout&nbsp;to&nbsp;10&nbsp;seconds<br /></span><span style="color: #9876AA">sqlite_busy_timeout</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;disable&nbsp;busy&nbsp;handler<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2522">     <p><strong>Example #2 面向对象风格</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">busyTimeout</span><span style="color: #007700">(</span><span style="color: #9876AA">10000</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;10&nbsp;seconds<br /></span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">busyTimeout</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;disable<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-busy-timeout-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_open()} - Opens an SQLite database and create the database if it does not exist</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return void*/
function sqlite_busy_timeout ($dbhandle, $milliseconds) {}

/**
*<div id="function.sqlite-last-error" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_last_error</h1>   <h1 class="refname">SQLiteDatabase::lastError</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_last_error</span> -- <span class="refname">SQLiteDatabase::lastError</span> &mdash; <span class="dc-title">Returns the error code of the last error for a database</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-last-error-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>sqlite_last_error</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>SQLiteDatabase::lastError</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the error code from the last operation performed on    <code class="parameter">dbhandle</code> (the database handle), or <em>0</em>    when no error occurred. A human readable    description of the error code can be retrieved using    <span class="function">{@link sqlite_error_string()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-last-error-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-last-error-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an error code, or 0 if no error occurred.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-last-error-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_error_string()} - Returns the textual description of an error code</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return int an error code, or 0 if no error occurred.*/
function sqlite_last_error ($dbhandle) {}

/**
*<div id="function.sqlite-error-string" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_error_string</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_error_string</span> &mdash; <span class="dc-title">Returns the textual description of an error code</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-error-string-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_error_string</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_code</code></span>    )</div>    <p class="para rdfs-comment">    Returns a human readable description of the    <code class="parameter">error_code</code> returned from    <span class="function">{@link sqlite_last_error()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-error-string-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">error_code</code></dt>       <dd>        <p class="para">        The error code being used, which might be passed in from        <span class="function">{@link sqlite_last_error()}</span>.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.sqlite-error-string-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a human readable description of the <code class="parameter">error_code</code>,    as a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-error-string-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_last_error()} - Returns the error code of the last error for a database</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string a human readable description of the error_code,*/
function sqlite_error_string ($error_code) {}

/**
*<div id="function.sqlite-unbuffered-query" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_unbuffered_query</h1>   <h1 class="refname">SQLiteDatabase::unbufferedQuery</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_unbuffered_query</span> -- <span class="refname">SQLiteDatabase::unbufferedQuery</span> &mdash; <span class="dc-title">Execute a query that does not prefetch and buffer all data</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-unbuffered-query-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>sqlite_unbuffered_query</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>   ]] )</div>    <div class="methodsynopsis dc-description">    <span class="type">resource</span> <span class="methodname"><strong>sqlite_unbuffered_query</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>      ]] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type SQLiteUnbuffered">SQLiteUnbuffered</span></span> <span class="methodname"><strong>SQLiteDatabase::unbufferedQuery</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_BOTH</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_unbuffered_query()</strong></span> is identical to    <span class="function">{@link sqlite_query()}</span> except that the result that is returned    is a sequential forward-only result set that can only be used to read    each row, one after the other.   </p>   <p class="para">    This function is ideal for generating things such as HTML tables where    you only need to process one row at a time and don&#039;t need to randomly    access the row data.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Functions such as <span class="function">{@link sqlite_seek()}</span>,      <span class="function">{@link sqlite_rewind()}</span>, <span class="function">{@link sqlite_next()}</span>,     <span class="function">{@link sqlite_current()}</span>, and     <span class="function">{@link sqlite_num_rows()}</span> do not work on result handles     returned from <span class="function"><strong>sqlite_unbuffered_query()</strong></span>.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-unbuffered-query-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from        <span class="function">{@link sqlite_open()}</span> when used procedurally. This parameter        is not required when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">query</code></dt>       <dd>        <p class="para">        The query to be executed.       </p>       <p class="para">        Data inside the query should be {@link properly escaped}.       </p>      </dd>                 <dt> <code class="parameter">result_type</code></dt>       <dd>        <p class="para">可选的 <code class="parameter">result_type</code> 参数接受常量，且决定返回的数组如何被索引。使用 <strong><code>SQLITE_ASSOC</code></strong> 会仅返回关联索引（已命名字段），而 <strong><code>SQLITE_NUM</code></strong> 会仅返回数值索引。<strong><code>SQLITE_BOTH</code></strong> 会同时返回关联和数值索引。<strong><code>SQLITE_BOTH</code></strong> 是此函数的默认值。</p>      </dd>                 <dt> <code class="parameter">error_msg</code></dt>       <dd>        <p class="para">        The specified variable will be filled if an error occurs. This is        specially important because SQL syntax errors can&#039;t be fetched using        the <span class="function">{@link sqlite_last_error()}</span> function.       </p>      </dd>          </dl>    </p>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">为兼容其他数据库扩展(比如 MySQL)，支持两种可替代的语法。推荐第一种格式，函数的第一个参数是<code class="parameter">dbhandle</code>。</span></p></blockquote>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-unbuffered-query-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a result handle 或者在失败时返回 <strong><code>FALSE</code></strong>.   </p>   <p class="para">    <span class="function"><strong>sqlite_unbuffered_query()</strong></span> returns a sequential    forward-only result set that can only be used to read each row, one after    the other.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.sqlite-unbuffered-query-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>         Added the <code class="parameter">error_msg</code> parameter        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-unbuffered-query-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_query()} - Executes a query against a given database and returns a result handle</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return SQLiteUnbuffered a result handle or false on failure.*/
function sqlite_unbuffered_query ($dbhandle, $query, $result_type = SQLITE_BOTH, &$error_msg = null) {}

/**
*<div id="function.sqlite-create-aggregate" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_create_aggregate</h1>   <h1 class="refname">SQLiteDatabase::createAggregate</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_create_aggregate</span> -- <span class="refname">SQLiteDatabase::createAggregate</span> &mdash; <span class="dc-title">Register an aggregating UDF for use in SQL statements</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-create-aggregate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>sqlite_create_aggregate</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$step_func</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$finalize_func</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>SQLiteDatabase::createAggregate</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$step_func</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$finalize_func</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_create_aggregate()</strong></span> is similar to    <span class="function">{@link sqlite_create_function()}</span> except that it registers    functions that can be used to calculate a result aggregated across all the    rows of a query.   </p>   <p class="para">    The key difference between this function and    <span class="function">{@link sqlite_create_function()}</span> is that two functions are    required to manage the aggregate; <code class="parameter">step_func</code> is    called for each row of the result set.  Your PHP function should    accumulate the result and store it into the aggregation context.    Once all the rows have been processed,    <code class="parameter">finalize_func</code> will be called and it should then    take the data from the aggregation context and return the result.    Callback functions should return a type understood by SQLite (i.e.    <a href="http://php.net/manual/zh/language.types.intro.php" class="link">scalar type</a>).   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-create-aggregate-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">function_name</code></dt>       <dd>        <p class="para">        The name of the function used in SQL statements.       </p>      </dd>                 <dt> <code class="parameter">step_func</code></dt>       <dd>        <p class="para">        Callback function called for each row of the result set.        Function parameters are <em>&amp;$context, $value, ...</em>.       </p>      </dd>                 <dt> <code class="parameter">finalize_func</code></dt>       <dd>        <p class="para">        Callback function to aggregate the &quot;stepped&quot; data from each row.        Function parameter is <em>&amp;$context</em> and the function        should return the final result of aggregation.       </p>      </dd>                 <dt> <code class="parameter">num_args</code></dt>       <dd>        <p class="para">        Hint to the SQLite parser if the callback function accepts a        predetermined number of arguments.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-create-aggregate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-create-aggregate-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2526">     <p><strong>Example #1 max_length aggregation function example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$data&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'one'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'two'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'three'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'four'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'five'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'six'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'seven'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'eight'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'nine'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'ten'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;);<br /></span><span style="color: #9876AA">$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"CREATE&nbsp;TABLE&nbsp;strings(a)"</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_escape_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"INSERT&nbsp;INTO&nbsp;strings&nbsp;VALUES&nbsp;('</span><span style="color: #9876AA">$str</span><span style="color: #DD0000">')"</span><span style="color: #007700">);<br />}<br /><br />function&nbsp;</span><span style="color: #9876AA">max_len_step</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$string</span><span style="color: #007700">)&nbsp;<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">)&nbsp;&gt;&nbsp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$context&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />function&nbsp;</span><span style="color: #9876AA">max_len_finalize</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">)&nbsp;<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">sqlite_create_aggregate</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'max_len'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'max_len_step'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'max_len_finalize'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sqlite_array_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'SELECT&nbsp;max_len(a)&nbsp;from&nbsp;strings'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    In this example, we are creating an aggregating function that will    calculate the length of the longest string in one of the columns of the    table.  For each row, the <em>max_len_step</em> function is    called and passed a <code class="parameter">context</code> parameter.  The context    parameter is just like any other PHP variable and be set to hold an array    or even an object value.  In this example, we are simply using it to hold    the maximum length we have seen so far; if the    <code class="parameter">string</code> has a length longer than the current    maximum, we update the context to hold this new maximum length.   </p>   <p class="para">    After all of the rows have been processed, SQLite calls the    <em>max_len_finalize</em> function to determine the aggregate    result.  Here, we could perform some kind of calculation based on the    data found in the <code class="parameter">context</code>.  In our simple example    though, we have been calculating the result as the query progressed, so we    simply need to return the context value.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     The example above will not work correctly if the column contains binary     data.  Take a look at the manual page for     <span class="function">{@link sqlite_udf_decode_binary()}</span> for an explanation of why     this is so, and an example of how to make it respect the binary encoding.    </p>   </p></blockquote>   <div class="tip"><strong class="tip">Tip</strong>    <p class="para">     It is NOT recommended for you to store a copy of the values in the context     and then process them at the end, as you would cause SQLite to use a lot of     memory to process the query - just think of how much memory you would need     if a million rows were stored in memory, each containing a string 32 bytes     in length.    </p>   </div>   <div class="tip"><strong class="tip">Tip</strong>    <p class="para">     You can use <span class="function">{@link sqlite_create_function()}</span> and     <span class="function"><strong>sqlite_create_aggregate()</strong></span> to override SQLite native     SQL functions.    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-create-aggregate-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_create_function()} - Registers a &quot;regular&quot; User Defined Function for use in SQL statements</span></li>     <li class="member"><span class="function">{@link sqlite_udf_encode_binary()} - Encode binary data before returning it from an UDF</span></li>     <li class="member"><span class="function">{@link sqlite_udf_decode_binary()} - Decode binary data passed as parameters to an UDF</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return void*/
function sqlite_create_aggregate ($dbhandle, $function_name, $step_func, $finalize_func, $num_args = null) {}

/**
*<div id="function.sqlite-create-function" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_create_function</h1>   <h1 class="refname">SQLiteDatabase::createFunction</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_create_function</span> -- <span class="refname">SQLiteDatabase::createFunction</span> &mdash; <span class="dc-title">    Registers a &quot;regular&quot; User Defined Function for use in SQL statements   </span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-create-function-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>sqlite_create_function</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>SQLiteDatabase::createFunction</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$callback</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer"> = -1</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_create_function()</strong></span> allows you to register a PHP    function with SQLite as an <acronym title="User Defined Functions">UDF</acronym> (User Defined    Function), so that it can be called from within your SQL statements.   </p>   <p class="para">    The UDF can be used in any SQL statement that can call functions, such as    SELECT and UPDATE statements and also in triggers.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-create-function-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">function_name</code></dt>       <dd>        <p class="para">        The name of the function used in SQL statements.       </p>      </dd>                 <dt> <code class="parameter">callback</code></dt>       <dd>        <p class="para">        Callback function to handle the defined SQL function.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <span class="simpara">         Callback functions should return a type understood by SQLite (i.e.         <a href="http://php.net/manual/zh/language.types.intro.php" class="link">scalar type</a>).        </span>       </p></blockquote>      </dd>                 <dt> <code class="parameter">num_args</code></dt>       <dd>        <p class="para">        Hint to the SQLite parser if the callback function accepts a        predetermined number of arguments.       </p>      </dd>          </dl>    </p>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">为兼容其他数据库扩展(比如 MySQL)，支持两种可替代的语法。推荐第一种格式，函数的第一个参数是<code class="parameter">dbhandle</code>。</span></p></blockquote>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-create-function-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    没有返回值。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-create-function-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2527">     <p><strong>Example #1 <span class="function"><strong>sqlite_create_function()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">md5_and_reverse</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">)&nbsp;<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">strrev</span><span style="color: #007700">(</span><span style="color: #9876AA">md5</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">));<br />}<br /><br />if&nbsp;(</span><span style="color: #9876AA">$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">0666</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sqliteerror</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sqlite_create_function</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'md5rev'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'md5_and_reverse'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$sql&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'SELECT&nbsp;md5rev(filename)&nbsp;FROM&nbsp;files'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$rows&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_array_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$sql</span><span style="color: #007700">);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">'Error&nbsp;opening&nbsp;sqlite&nbsp;db:&nbsp;'&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$sqliteerror</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    In this example, we have a function that calculates the md5 sum of a    string, and then reverses it.  When the SQL statement executes, it    returns the value of the filename transformed by our function.  The data    returned in <code class="parameter">$rows</code> contains the processed result.   </p>   <p class="para">    The beauty of this technique is that you do not need to process the    result using a <a href="http://php.net/manual/zh/control-structures.foreach.php" class="link">foreach</a> loop after you have queried for the data.   </p>   <p class="para">    PHP registers a special function named <em>php</em> when the    database is first opened.  The php function can be used to call any PHP    function without having to register it first.   </p>   <p class="para">    <div class="example" id="example-2528">     <p><strong>Example #2 Example of using the PHP function</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$rows&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_array_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"SELECT&nbsp;php('md5',&nbsp;filename)&nbsp;from&nbsp;files"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>      This example will call the <span class="function">{@link md5()}</span> on each      <em>filename</em> column in the database and return the result      into <code class="parameter">$rows</code>     </p></div>    </div>   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     For performance reasons, PHP will not automatically encode/decode binary     data passed to and from your UDF&#039;s.  You need to manually encode/decode     the parameters and return values if you need to process binary data in     this way.  Take a look at <span class="function">{@link sqlite_udf_encode_binary()}</span>     and <span class="function">{@link sqlite_udf_decode_binary()}</span> for more details.    </p>   </p></blockquote>   <div class="tip"><strong class="tip">Tip</strong>    <p class="para">     It is not recommended to use UDF&#039;s to handle processing of     binary data, unless high performance is not a key requirement of your     application.    </p>   </div>   <div class="tip"><strong class="tip">Tip</strong>    <p class="para">     You can use <span class="function"><strong>sqlite_create_function()</strong></span> and     <span class="function">{@link sqlite_create_aggregate()}</span> to override SQLite native     SQL functions.    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-create-function-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_create_aggregate()} - Register an aggregating UDF for use in SQL statements</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return void*/
function sqlite_create_function ($dbhandle, $function_name, $callback, $num_args = null) {}

/**
*<div id="function.sqlite-factory" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_factory</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0)</p><p class="refpurpose"><span class="refname">sqlite_factory</span> &mdash; <span class="dc-title">Opens an SQLite database and returns an SQLiteDatabase object</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-factory-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><span class="type SQLiteDatabase">SQLiteDatabase</span></span> <span class="methodname"><strong>sqlite_factory</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer"> = 0666</span></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span>   ]] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_factory()</strong></span> behaves similarly to    <span class="function">{@link sqlite_open()}</span> in that it opens an SQLite database or    attempts to create it if it does not exist.  However, a    <a href="http://php.net/manual/zh/ref.sqlite.php#sqlite.class.sqlitedatabase" class="link">SQLiteDatabase</a> object is    returned rather than a resource.  Please see the    <span class="function">{@link sqlite_open()}</span> reference page for further usage and caveats.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-factory-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        The filename of the SQLite database.       </p>      </dd>                 <dt> <code class="parameter">mode</code></dt>       <dd>        <p class="para">        The mode of the file. Intended to be used to open the database in        read-only mode.  Presently, this parameter is ignored by the sqlite        library.  The default value for mode is the octal value        <em>0666</em> and this is the recommended value.       </p>      </dd>                 <dt> <code class="parameter">error_message</code></dt>       <dd>        <p class="para">        Passed by reference and is set to hold a descriptive error message        explaining why the database could not be opened if there was an error.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-factory-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an SQLiteDatabase object on success, <strong><code>NULL</code></strong> on error.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-factory-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2531">     <p><strong>Example #1 <span class="function"><strong>sqlite_factory()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_factory</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT&nbsp;user_id,&nbsp;username&nbsp;FROM&nbsp;users'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;functionally&nbsp;equivalent&nbsp;to:&nbsp;<br /><br /></span><span style="color: #9876AA">$dbhandle&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'sqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$dbhandle</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT&nbsp;user_id,&nbsp;username&nbsp;FROM&nbsp;users'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.sqlite-factory-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_open()} - Opens an SQLite database and create the database if it does not exist</span></li>     <li class="member"><span class="function">{@link sqlite_popen()} - Opens a persistent handle to an SQLite database and create the database if it does not exist</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return SQLiteDatabase a SQLiteDatabase object on success, &null; on error.*/
function sqlite_factory ($filename, $mode = null, &$error_message = null) {}

/**
*<div id="function.sqlite-udf-encode-binary" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_udf_encode_binary</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_udf_encode_binary</span> &mdash; <span class="dc-title">Encode binary data before returning it from an UDF</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-udf-encode-binary-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_udf_encode_binary</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_udf_encode_binary()</strong></span> applies a binary encoding    to the <code class="parameter">data</code> so that it can be safely returned from    queries (since the underlying <var class="filename">libsqlite</var> API is not binary safe).   </p>   <p class="para">    If there is a chance that your data might be binary unsafe (e.g.: it    contains a NUL byte in the middle rather than at the end, or if it has and    <em>0x01</em> byte as the first character) then you must    call this function to encode the return value from your UDF.   </p>   <p class="para">    PHP does not perform this encode/decode operation automatically as it would    severely impact performance if it did.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     Do not use <span class="function">{@link sqlite_escape_string()}</span> to quote strings     returned from UDF&#039;s as it will lead to double-quoting of the data.  Use     <span class="function"><strong>sqlite_udf_encode_binary()</strong></span> instead!    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-udf-encode-binary-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">data</code></dt>       <dd>        <p class="para">        The <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span> being encoded.       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.sqlite-udf-encode-binary-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The encoded <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-udf-encode-binary-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_udf_decode_binary()} - Decode binary data passed as parameters to an UDF</span></li>     <li class="member"><span class="function">{@link sqlite_escape_string()} - Escapes a string for use as a query parameter</span></li>     <li class="member"><span class="function">{@link sqlite_create_function()} - Registers a &quot;regular&quot; User Defined Function for use in SQL statements</span></li>     <li class="member"><span class="function">{@link sqlite_create_aggregate()} - Register an aggregating UDF for use in SQL statements</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string The encoded string.*/
function sqlite_udf_encode_binary ($data) {}

/**
*<div id="function.sqlite-udf-decode-binary" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_udf_decode_binary</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0, PECL sqlite &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">sqlite_udf_decode_binary</span> &mdash; <span class="dc-title">Decode binary data passed as parameters to an <acronym title="User Defined Functions">UDF</acronym></span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-udf-decode-binary-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>sqlite_udf_decode_binary</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    )</div>    <p class="para rdfs-comment">    Decodes binary data passed as parameters to a <acronym title="User Defined Functions">UDF</acronym>.   </p>   <p class="para">    You must call this function on parameters passed to your UDF if you need    them to handle binary data, as the binary encoding employed by PHP will    obscure the content and of the parameter in its natural, non-coded form.   </p>   <p class="para">    PHP does not perform this encode/decode operation automatically as it would    severely impact performance if it did.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-udf-decode-binary-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">data</code></dt>       <dd>        <p class="para">        The encoded data that will be decoded, data that was applied by either        <span class="function">{@link sqlite_udf_encode_binary()}</span> or        <span class="function">{@link sqlite_escape_string()}</span>.              </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-function.sqlite-udf-decode-binary-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The decoded <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.sqlite-udf-decode-binary-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2542">     <p><strong>Example #1 binary-safe max_length aggregation function example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$data&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'one'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'two'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'three'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'four'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'five'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'six'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'seven'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'eight'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'nine'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'ten'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;);<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"CREATE&nbsp;TABLE&nbsp;strings(a)"</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$str</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_escape_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"INSERT&nbsp;INTO&nbsp;strings&nbsp;VALUES&nbsp;('</span><span style="color: #9876AA">$str</span><span style="color: #DD0000">')"</span><span style="color: #007700">);<br />}<br /><br />function&nbsp;</span><span style="color: #9876AA">max_len_step</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$string</span><span style="color: #007700">)&nbsp;<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$string&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_udf_decode_binary</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">)&nbsp;&gt;&nbsp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$context&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />function&nbsp;</span><span style="color: #9876AA">max_len_finalize</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">)&nbsp;<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$context</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">sqlite_create_aggregate</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'max_len'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'max_len_step'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'max_len_finalize'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sqlite_array_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'SELECT&nbsp;max_len(a)&nbsp;from&nbsp;strings'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.sqlite-udf-decode-binary-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link sqlite_udf_encode_binary()} - Encode binary data before returning it from an UDF</span></li>     <li class="member"><span class="function">{@link sqlite_create_function()} - Registers a &quot;regular&quot; User Defined Function for use in SQL statements</span></li>     <li class="member"><span class="function">{@link sqlite_create_aggregate()} - Register an aggregating UDF for use in SQL statements</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return string The decoded string.*/
function sqlite_udf_decode_binary ($data) {}

/**
*<div id="function.sqlite-fetch-column-types" class="refentry">  <div class="refnamediv">   <h1 class="refname">sqlite_fetch_column_types</h1>   <h1 class="refname">SQLiteDatabase::fetchColumnTypes</h1>   <p class="verinfo">(PHP 5 &lt; 5.4.0)</p><p class="refpurpose"><span class="refname">sqlite_fetch_column_types</span> -- <span class="refname">SQLiteDatabase::fetchColumnTypes</span> &mdash; <span class="dc-title">    Return an array of column types from a particular table   </span></p>   </div>   <div class="refsect1 description" id="refsect1-function.sqlite-fetch-column-types-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>sqlite_fetch_column_types</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_ASSOC</span></span>   ] )</div>    <p class="para rdfs-comment">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>SQLiteDatabase::fetchColumnTypes</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer"> = SQLITE_ASSOC</span></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>sqlite_fetch_column_types()</strong></span> returns an array of column    data types from the specified <code class="parameter">table_name</code> table.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.sqlite-fetch-column-types-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">table_name</code></dt>       <dd>        <p class="para">        The table name to query.       </p>      </dd>                 <dt> <code class="parameter">dbhandle</code></dt>       <dd>        <p class="para">        The SQLite Database resource; returned from <span class="function">{@link sqlite_open()}</span>        when used procedurally.  This parameter is not required        when using the object-oriented method.       </p>      </dd>                 <dt> <code class="parameter">result_type</code></dt>       <dd>        <p class="para">        The optional <code class="parameter">result_type</code> parameter accepts a        constant and determines how the returned array will be indexed. Using        <strong><code>SQLITE_ASSOC</code></strong> will return only associative indices        (named fields) while <strong><code>SQLITE_NUM</code></strong> will return only        numerical indices (ordinal field numbers).        <strong><code>SQLITE_ASSOC</code></strong> is the default for        this function.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.sqlite-fetch-column-types-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of column data types; <strong><code>FALSE</code></strong> on error.   </p>   <p class="para">由 <strong><code>SQLITE_ASSOC</code></strong> 与 <strong><code>SQLITE_BOTH</code></strong> 返回的列名会依照 <a href="http://php.net/manual/zh/sqlite.configuration.php#ini.sqlite.assoc-case" class="link">sqlite.assoc_case</a> 配置选项的值决定大小写。</p>  </div>    <div class="refsect1 changelog" id="refsect1-function.sqlite-fetch-column-types-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>5.1.0</td>        <td>Added <code class="parameter">result_type</code></td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-function.sqlite-fetch-column-types-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2536">     <p><strong>Example #1 Procedural example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">sqlite_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'CREATE&nbsp;TABLE&nbsp;foo&nbsp;(bar&nbsp;varchar(10),&nbsp;arf&nbsp;text)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$cols&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">sqlite_fetch_column_types</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cols&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$column&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Column:&nbsp;</span><span style="color: #9876AA">$column</span><span style="color: #DD0000">&nbsp;&nbsp;Type:&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>   <p class="para">    <div class="example" id="example-2537">     <p><strong>Example #2 Object-oriented example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$db&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">SQLiteDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE&nbsp;TABLE&nbsp;foo&nbsp;(bar&nbsp;varchar(10),&nbsp;arf&nbsp;text)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$cols&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchColumnTypes</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">SQLITE_ASSOC</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cols&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$column&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Column:&nbsp;</span><span style="color: #9876AA">$column</span><span style="color: #DD0000">&nbsp;&nbsp;Type:&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Column: bar  Type: VARCHAR Column: arf  Type: TEXT </pre></div>     </div>    </div>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.sqlite.php">SQLite 函数</a></div></div>
 * @return array an array of column data types; false on error.*/
function sqlite_fetch_column_types ($dbhandle, $table_name, $result_type = null) {}


/**
*      Columns are returned into the array having both a numerical index      and the field name as the array index.     
*/
define ('SQLITE_BOTH', 3);

/**
*      Columns are returned into the array having a numerical index to the      fields. This index starts with 0, the first field in the result.     
*/
define ('SQLITE_NUM', 2);

/**
*      Columns are returned into the array having the field name as the array      index.     
*/
define ('SQLITE_ASSOC', 1);

/**
*      Successful result.     
*/
define ('SQLITE_OK', 0);

/**
*      SQL error or missing database.     
*/
define ('SQLITE_ERROR', 1);

/**
*      An internal logic error in SQLite.     
*/
define ('SQLITE_INTERNAL', 2);

/**
*      Access permission denied.     
*/
define ('SQLITE_PERM', 3);

/**
*      Callback routine requested an abort.     
*/
define ('SQLITE_ABORT', 4);

/**
*      The database file is locked.     
*/
define ('SQLITE_BUSY', 5);

/**
*      A table in the database is locked.     
*/
define ('SQLITE_LOCKED', 6);

/**
*      Memory allocation failed.     
*/
define ('SQLITE_NOMEM', 7);

/**
*      Attempt to write a readonly database.     
*/
define ('SQLITE_READONLY', 8);

/**
*      Operation terminated internally.     
*/
define ('SQLITE_INTERRUPT', 9);

/**
*      Disk I/O error occurred.     
*/
define ('SQLITE_IOERR', 10);

/**
*      The database disk image is malformed.     
*/
define ('SQLITE_CORRUPT', 11);

/**
*      (Internal) Table or record not found.     
*/
define ('SQLITE_NOTFOUND', 12);

/**
*      Insertion failed because database is full.     
*/
define ('SQLITE_FULL', 13);

/**
*      Unable to open the database file.     
*/
define ('SQLITE_CANTOPEN', 14);

/**
*      Database lock protocol error.     
*/
define ('SQLITE_PROTOCOL', 15);

/**
*      (Internal) Database table is empty.     
*/
define ('SQLITE_EMPTY', 16);

/**
*      The database schema changed.     
*/
define ('SQLITE_SCHEMA', 17);

/**
*      Too much data for one row of a table.     
*/
define ('SQLITE_TOOBIG', 18);

/**
*      Abort due to constraint violation.     
*/
define ('SQLITE_CONSTRAINT', 19);

/**
*      Data type mismatch.     
*/
define ('SQLITE_MISMATCH', 20);

/**
*      Library used incorrectly.     
*/
define ('SQLITE_MISUSE', 21);

/**
*      Uses of OS features not supported on host.     
*/
define ('SQLITE_NOLFS', 22);

/**
*      Authorized failed.     
*/
define ('SQLITE_AUTH', 23);

/**
*      File opened that is not a database file.     
*/
define ('SQLITE_NOTADB', 26);

/**
*      Auxiliary database format error.     
*/
define ('SQLITE_FORMAT', 24);

/**
*      Internal process has another row ready.     
*/
define ('SQLITE_ROW', 100);

/**
*      Internal process has finished executing.     
*/
define ('SQLITE_DONE', 101);

/**
 * Specifies that a function created with {@see SQLite3::createFunction()} is deterministic,
 * i.e. it always returns the same result given the same inputs within a single SQL statement.
 * @since 7.1.4
 * @link http://php.net/manual/en/sqlite.constants.php
 */
define('SQLITE3_DETERMINISTIC', 2048);

