<?php
/*
 * Mongo extension stubs
 * Gathered from http://www.php.net/manual/en/book.mongo.php
 * Maintainer: Alexander Makarov, sam@rmcreative.ru, max@upgradeyour.com
 *
 * MongoClient: https://github.com/djsipe/PHP-Stubs
 */

/**
*<div id="class.mongoclient" class="reference">   <h1 class="title">MongoClient 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=1.3.0)</p>       <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this class include:</p>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongodb-driver-manager.php" class="classname">MongoDB\Driver\Manager</a></li>    </ul>   </div>      <div class="section" id="mongoclient.intro">    <h2 class="title">简介</h2>    <p class="para">     PHP 和 MongoDB 的连接管理器。    </p>    <p class="para">     这个类用于创建和管理连接。典型的用法：     <div class="example" id="mongo.connecting.mongos-example">      <p><strong>Example #1 <strong class="classname">MongoClient</strong> 基本用法</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;连接<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">foo</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;获取名称为&nbsp;"foo"&nbsp;的数据库<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     关于创建连接的更多信息，参见 <span class="function">{@link MongoClient::__construct()}</span> 和 <a href="http://php.net/manual/zh/mongo.connecting.php" class="link">connecting</a> 的章节。    </p>   </div>       <div class="section" id="mongoclient.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoClient</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.version"><var class="varname">VERSION</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.defaulthost"><var class="varname">DEFAULT_HOST</var></a></var>      <span class="initializer"> = &quot;localhost&quot;</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.defaultport"><var class="varname">DEFAULT_PORT</var></a></var>      <span class="initializer"> = 27017</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.rpprimary"><var class="varname">RP_PRIMARY</var></a></var>      <span class="initializer"> = &quot;primary&quot;</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.rpprimarypreferred"><var class="varname">RP_PRIMARY_PREFERRED</var></a></var>      <span class="initializer"> = &quot;primaryPreferred&quot;</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.rpsecondary"><var class="varname">RP_SECONDARY</var></a></var>      <span class="initializer"> = &quot;secondary&quot;</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.rpsecondary"><var class="varname">RP_SECONDARY_PREFERRED</var></a></var>      <span class="initializer"> = &quot;secondaryPreferred&quot;</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">string</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.constants.rpsecondary"><var class="varname">RP_NEAREST</var></a></var>      <span class="initializer"> = &quot;nearest&quot;</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">boolean</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.props.connected">$<var class="varname">connected</var></a></var>      <span class="initializer"> = <strong><code>FALSE</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongoclient.php#mongoclient.props.status">$<var class="varname">status</var></a></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname">$<var class="varname">server</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">boolean</span>       <var class="varname">$<var class="varname">persistent</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="constructorsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$server</code><span class="initializer"> = &quot;mongodb://localhost:27017&quot;</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array(&quot;connect&quot; =&gt; <strong><code>TRUE</code></strong>)</span></span>   ]] )</div>      <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.close.php" class="methodname">close</a></span>     ([ <span class="methodparam"><span class="type"><span class="type boolean|string">boolean|string</span></span> <code class="parameter">$connection</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.connect.php" class="methodname">connect</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.dropdb.php" class="methodname">dropDB</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$db</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoDB</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.get.php" class="methodname">__get</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.getconnections.php" class="methodname">getConnections</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.gethosts.php" class="methodname">getHosts</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.getreadpreference.php" class="methodname">getReadPreference</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.getwriteconcern.php" class="methodname">getWriteConcern</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.killcursor.php" class="methodname">killCursor</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$server_hash</code></span>    , <span class="methodparam"><span class="type"><span class="type int|MongoInt64">int|MongoInt64</span></span> <code class="parameter">$id</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.listdbs.php" class="methodname">listDBs</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCollection</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.selectcollection.php" class="methodname">selectCollection</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$db</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$collection</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoDB</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.selectdb.php" class="methodname">selectDB</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.setreadpreference.php" class="methodname">setReadPreference</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.setwriteconcern.php" class="methodname">setWriteConcern</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$w</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$wtimeout</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoclient.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>        </div>     <div class="section" id="mongoclient.constants">    <h2 class="title">预定义常量</h2>    <div class="section" id="mongoclient.constants.types">     <h2 class="title">MongoClient 常量</h2>     <dl>              <dt id="mongoclient.constants.version"><strong><code>MongoClient::VERSION</code></strong></dt>        <dd>         <span class="simpara">         PHP 驱动版本。有可能附加 &quot;dev&quot;，&quot;+&quot; 或 &quot;-&quot; 如果是在两个版本之间。        </span>       </dd>                    <dt id="mongoclient.constants.defaulthost"><strong><code>MongoClient::DEFAULT_HOST</code></strong></dt>        <dt> <strong><code>&quot;localhost&quot;</code></strong></dt>        <dd>         <span class="simpara">         如果没有指定主机，默认连接该主机。        </span>       </dd>                    <dt id="mongoclient.constants.defaultport"><strong><code>MongoClient::DEFAULT_PORT</code></strong></dt>        <dt> <strong><code>27017</code></strong></dt>        <dd>         <span class="simpara">         如果没有指定端口，默认连接该端口。        </span>       </dd>                    <dt id="mongoclient.constants.rpprimary"><strong><code>MongoClient::RP_PRIMARY</code></strong></dt>        <dt> <strong><code>&quot;primary&quot;</code></strong></dt>        <dd>         <span class="simpara">         副本集活跃节点的<a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">读取选项</a>。        </span>       </dd>                    <dt id="mongoclient.constants.rpprimarypreferred"><strong><code>MongoClient::RP_PRIMARY_PREFERRED</code></strong></dt>        <dt> <strong><code>&quot;primaryPreferred&quot;</code></strong></dt>        <dd>         <span class="simpara">         副本集活跃节点的<a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">读取选项</a>。        </span>       </dd>                    <dt id="mongoclient.constants.rpsecondary"><strong><code>MongoClient::RP_SECONDARY</code></strong></dt>        <dt> <strong><code>&quot;secondary&quot;</code></strong></dt>        <dd>         <span class="simpara">         副本集备份节点的<a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">读取选项</a>。        </span>       </dd>                    <dt id="mongoclient.constants.rpsecondarypreferred"><strong><code>MongoClient::RP_SECONDARY_PREFERRED</code></strong></dt>        <dt> <strong><code>&quot;secondaryPreferred&quot;</code></strong></dt>        <dd>         <span class="simpara">         副本集备份节点的<a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">读取选项</a>。        </span>       </dd>                    <dt id="mongoclient.constants.rpnearest"><strong><code>MongoClient::RP_NEAREST</code></strong></dt>        <dt> <strong><code>&quot;nearest&quot;</code></strong></dt>        <dd>         <span class="simpara">         副本集最近节点的<a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">读取选项</a>。        </span>       </dd>            </dl>     </div>   </div>    <div class="section" id="mongoclient.fields">    <h2 class="title">字段属性</h2>    <dl>            <dt id="mongoclient.props.connected"><var class="varname"><var class="varname">connected</var></var></dt>       <dd>        <p class="para">        如果我们有一个打开的数据库连接，将会被设置为 <strong><code>TRUE</code></strong>，否则是 <strong><code>FALSE</code></strong>。        如果连接副本集（replica set）里一个节点并匹配当前的读取选项 ，该属性仅会是 <strong><code>TRUE</code></strong>。        这个属性不考虑账户是否已认证。       </p>       <p class="para">        版本 1.5.0 后该属性已经废弃（ <em class="emphasis">deprecated</em>）。       </p>      </dd>                 <dt id="mongoclient.props.status"><var class="varname"><var class="varname">status</var></var></dt>       <dd>        <p class="para">        这个属性不会再被使用，将会被设置为 <strong><code>NULL</code></strong> 在驱动版本 1.1.x 及更早版本中，使用持久连接时这可能会被设置为字符串的值(比如 <em>&quot;recycled&quot;</em>， <em>&quot;new&quot;</em>)。       </p>       <p class="para">        版本 1.5.0 后该属性已经废弃（ <em class="emphasis">deprecated</em>）。       </p>      </dd>          </dl>    </div>    <div class="section" id="mongoclient.seealso">    <h2 class="title">参见</h2>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a></li>     <li class="member"><a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="xref">Write Concerns</a></li>     <li class="member"><a href="http://php.net/manual/zh/mongo.connecting.php" class="xref">链接服务器</a></li>     <li class="member">关于 <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/connection-string/" class="link external">&raquo;&nbsp;connecting</a> 的 MongoDB 核心文档 </li>    </ul>   </div>    </div>                                                                                                                                             <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoClient::close} — 关闭连接</li><li>{@link MongoClient::connect} — 连接到数据库服务器</li><li>{@link MongoClient::__construct} — 创建一个新的数据库连接对象</li><li>{@link MongoClient::dropDB} — 删除一个数据库 [已废弃]</li><li>{@link MongoClient::__get} — 取得一个数据库</li><li>{@link MongoClient::getConnections} — 返回所有已打开连接的信息</li><li>{@link MongoClient::getHosts} — 更新所有关联主机的状态信息</li><li>{@link MongoClient::getReadPreference} — 获取此连接的读取首选项</li><li>{@link MongoClient::getWriteConcern} — Get the write concern for this connection</li><li>{@link MongoClient::killCursor} — Kills a specific cursor on the server</li><li>{@link MongoClient::listDBs} — 列出所有有效数据库</li><li>{@link MongoClient::selectCollection} — 获取数据库的文档集</li><li>{@link MongoClient::selectDB} — 获取一个数据库</li><li>{@link MongoClient::setReadPreference} — 为该连接设置读取选项</li><li>{@link MongoClient::setWriteConcern} — Set the write concern for this connection</li><li>{@link MongoClient::__toString} — 该连接的字符串表达方式</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.core.php">核心类</a></div></div>
*/
class MongoClient
{
    const VERSION = '3.x';
    const DEFAULT_HOST = "localhost" ;
    const DEFAULT_PORT = 27017 ;
    const RP_PRIMARY = "primary" ;
    const RP_PRIMARY_PREFERRED = "primaryPreferred" ;
    const RP_SECONDARY = "secondary" ;
    const RP_SECONDARY_PREFERRED = "secondaryPreferred" ;
    const RP_NEAREST = "nearest" ;

    /* Properties */
    public $connected = FALSE ;
    public $status = NULL ;
    protected $server = NULL ;
    protected $persistent = NULL ;

    /* Methods */
    /**
     * Creates a new database connection object
     * @link http://php.net/manual/en/mongo.construct.php
     * @param string $server [optional] The server name.
     * @param array $options [optional] An array of options for the connection. Currently
     *        available options include: "connect" If the constructor should connect before
     *        returning. Default is true. "timeout" For how long the driver should try to
     *        connect to the database (in milliseconds). "replicaSet" The name of the replica
     *        set to connect to. If this is given, the master will be determined by using the
     *        ismaster database command on the seeds, so the driver may end up connecting to a
     *        server that was not even listed. See the replica set example below for details.
     *        "username" The username can be specified here, instead of including it in the
     *        host list. This is especially useful if a username has a ":" in it. This
     *        overrides a username set in the host list. "password" The password can be
     *        specified here, instead of including it in the host list. This is especially
     *        useful if a password has a "@" in it. This overrides a password set in the host
     *        list. "db" The database to authenticate against can be specified here, instead
     *        of including it in the host list. This overrides a database given in the host
     *        list  "fsync" When "fsync" is set, all write operations will block until the database has flushed the changes to disk. This makes the write operations slower, but it guarantees that writes have succeeded and that the operations can be recovered in case of total system failure.
     *        If the MongoDB server has journaling enabled, this option is identical to "journal". If journaling is not enabled, this option ensures that write operations will be synced to database files on disk.
     *        "journal"
     *        When "journal" is set, all write operations will block until the database has flushed the changes to the journal on disk. This makes the write operations slower, but it guarantees that writes have succeeded and that the operations can be recovered in case of total system failure.
     *        Note: If this option is used and journaling is disabled, MongoDB 2.6+ will raise an error and the write will fail; older server versions will simply ignore the option.
     *        "gssapiServiceName"
     *        Sets the » Kerberos service principal. Only applicable when authMechanism=GSSAPI. Defaults to "mongodb".
     *        "password"
     *        The password can be specified here, instead of including it in the host list. This is especially useful if a password has a "@" in it. This overrides a password set in the host list.
     *        "readPreference"
     *        Specifies the read preference type. Read preferences provide you with control from which secondaries data can be read from.
     *        Allowed values are: MongoClient::RP_PRIMARY, MongoClient::RP_PRIMARY_PREFERRED, MongoClient::RP_SECONDARY, MongoClient::RP_SECONDARY_PREFERRED and MongoClient::RP_NEAREST.
     *        See the documentation on read preferences for more information.
     *        "readPreferenceTags"
     *        Specifies the read preference tags as an array of strings. Tags can be used in combination with the readPreference option to further control which secondaries data might be read from.
     *        See the documentation on read preferences for more information.
     *        "replicaSet"
     *        The name of the replica set to connect to. If this is given, the primary will be automatically be determined. This means that the driver may end up connecting to a server that was not even listed. See the replica set example below for details.
     *        "secondaryAcceptableLatencyMS"
     *        When reading from a secondary (using ReadPreferences), do not read from secondaries known to be more then secondaryAcceptableLatencyMS away from us. Defaults to 15
     *        "socketTimeoutMS"
     *        How long a socket operation (read or write) can take before timing out in milliseconds. Defaults to 30000 (30 seconds).
     *        If -1 is specified, socket operations may block indefinitely. This option may also be set on a per-operation basis using MongoCursor::timeout() for queries or the "socketTimeoutMS" option for write methods.
     *        Note: This is a client-side timeout. If a write operation times out, there is no way to know if the server actually handled the write or not, as a MongoCursorTimeoutException will be thrown in lieu of returning a write result.
     *        "ssl"
     *        A boolean to specify whether you want to enable SSL for the connections to MongoDB. Extra options such as certificates can be set with SSL context options.
     *        "username"
     *        The username can be specified here, instead of including it in the host list. This is especially useful if a username has a ":" in it. This overrides a username set in the host list.
     *        "w"
     *        The w option specifies the Write Concern for the driver, which determines how long the driver blocks when writing. The default value is 1.
     *        This option is applicable when connecting to both single servers and replica sets. A positive value controls how many nodes must acknowledge the write instruction before the driver continues. A value of 1 would require the single server or primary (in a replica set) to acknowledge the write operation. A value of 3 would cause the driver to block until the write has been applied to the primary as well as two secondary servers (in a replica set).
     *        A string value is used to control which tag sets are taken into account for write concerns. "majority" is special and ensures that the write operation has been applied to the majority (more than 50%) of the participating nodes.
     *        "wTimeoutMS" This option specifies the time limit, in milliseconds, for write concern acknowledgement. It is only applicable for write operations where "w" is greater than 1, as the timeout pertains to replication. If the write concern is not satisfied within the time limit, a MongoCursorException will be thrown. A value of 0 may be specified to block indefinitely. The default value is 10000 (ten seconds).
     * @param array $driver_options [optional] <p>
     *         An array of options for the MongoDB driver. Options include setting
     *         connection {@link http://php.net/manual/en/mongo.connecting.ssl.php#mongo.connecting.context.ssl context options for SSL}
     *         or {@link http://php.net/manual/en/context.mongodb.php logging callbacks}.
     *         </p><ul>
     *         <li>
     *         <p>
     *         <em>"context"</em>
     *         </p>
     *         <p>
     *         The Stream Context to attach to all new connections. This allows you
     *         for example to configure SSL certificates and are described at
     *         {@link http://php.net/manual/en/context.ssl.php SSL context options}. See the
     *         {@link http://php.net/manual/en/mongo.connecting.ssl.php#mongo.connecting.context.ssl Connecting over SSL} tutorial.
     *         </p>
     *         </li>
     *         </ul>
     * @return MongoClient
     * Returns a new database connection object*
     * @throws MongoConnectionException
     */
    public function __construct($server = "mongodb://localhost:27017", array $options = array("connect" => TRUE), $driver_options) {}

/**
*<div id="mongoclient.close" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::close</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::close</span> &mdash; <span class="dc-title">关闭连接</span></p>   </div>   <div id="mongoclient.close-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>   </blockquote>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.close-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoClient::close</strong></span>     ([ <span class="methodparam"><span class="type"><span class="type boolean|string">boolean|string</span></span> <code class="parameter">$connection</code></span>   ] )</div>    <p class="para rdfs-comment">    <span class="function"><strong>MongoClient::close()</strong></span> 方法强制关闭一个数据库连接，哪怕使用的是持久连接。    在正常情况下，你<em class="emphasis">绝不</em>需要这么做。   </p>   <p class="para">   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.close-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">connection</code>      </dt>       <dd>        <p class="para">        如果没有指定 connection，或者是 <strong><code>FALSE</code></strong>，将会选择关闭写作操作的连接。        如果配置为单节点，将会关闭整个连接，但是如果你连接到一个集群，        close() 会<em class="emphasis">仅仅</em>关闭 primary 节点的连接。       </p>       <p class="para">        如果 connection 是 <strong><code>TRUE</code></strong>，连接管理器将会关闭所有由它管理的连接。        这也会包括创建对象时所引用的连接字符串之外的连接。       </p>       <p class="para">        如果 connection 是一个字符串参数，它将仅仅关闭由该 hash 标识的连接。        Hash 是调用 <span class="function">{@link MongoClient::getConnections()}</span> 所返回，能够表示一个连接。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.close-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回连接是否成功关闭。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongoclient.close-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.connecting.uds-example">    <p><strong>Example #1 <span class="function"><strong>MongoClient::close()</strong></span> 例子</strong></p>    <div class="example-contents"><p>这个例子演示了如何选择性地仅关闭备份节点的所有连接。</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;连接到集群<br /></span><span style="color: #9876AA">$a&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">"mongodb://whisky:13000/?replicaset=seta"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$connections&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getConnections</span><span style="color: #007700">();<br /><br />foreach&nbsp;(&nbsp;</span><span style="color: #9876AA">$connections&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$con&nbsp;</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;遍历所有连接，如果类型是&nbsp;"SECONDARY"&nbsp;则关闭连接<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if&nbsp;(&nbsp;</span><span style="color: #9876AA">$con</span><span style="color: #007700">[</span><span style="color: #DD0000">'connection'</span><span style="color: #007700">][</span><span style="color: #DD0000">'connection_type_desc'</span><span style="color: #007700">]&nbsp;==&nbsp;</span><span style="color: #DD0000">"SECONDARY"&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Closing&nbsp;'</span><span style="color: #007700">{</span><span style="color: #9876AA">$con</span><span style="color: #007700">[</span><span style="color: #DD0000">'hash'</span><span style="color: #007700">]}</span><span style="color: #DD0000">':&nbsp;"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$closed&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$a</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">$con</span><span style="color: #007700">[</span><span style="color: #DD0000">'hash'</span><span style="color: #007700">]&nbsp;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$closed&nbsp;</span><span style="color: #007700">?&nbsp;</span><span style="color: #DD0000">"ok"&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">"failed"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Closing &#039;whisky:13001;X;4948&#039;: ok </pre></div>    </div>   </div>  </div>    <div class="refsect1 changelog" id="refsect1-mongoclient.close-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.3.0</td>        <td>         <p class="para">          在 1.3.0 版本中，为这个函数添加了 <code class="parameter">connection</code> 参数。          在此之前，直邮写入连接才会被这个方法关闭。         </p>        </td>       </tr>        <tr>        <td>1.2.0</td>        <td>         <p class="para">          在版本 1.2.0 之前，这个驱动默认不会使用持久连接，所有连接会在作用域结束时关闭。          由于版本 1.2.0 情况不再如此，所以调用 close 会是一个坏主意，在服务器有较高负载时可能会造成更高的压力。         </p>        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongoclient.close-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoClient::getConnections()} - 返回所有已打开连接的信息</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return boolean If the connection was successfully closed.*/
    public function close($connection) {}
/**
*<div id="mongoclient.connect" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::connect</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::connect</span> &mdash; <span class="dc-title">连接到数据库服务器</span></p>   </div>   <div id="mongoclient.connect-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>   </blockquote>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.connect-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoClient::connect</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.connect-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.connect-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    连接是否成功。   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongoclient.connect-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果连接失败将会抛出 <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a> 的异常。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return boolean If the connection was successful.*/
    public function connect() {}

/**
*<div id="mongoclient.dropdb" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::dropDB</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::dropDB</span> &mdash; <span class="dc-title">删除一个数据库 [已废弃]</span></p>   </div>   <div id="mongoclient.dropdb-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension, but there is an alternative in the <a href="http://php.net/manual/zh/mongodb.overview.php" class="link">PHP library</a>:</p>   <ul class="simplelist">    <li class="member">{@link &raquo;&nbsp;MongoDB\Client::dropDatabase()}</li>   </ul>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.dropdb-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoClient::dropDB</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$db</code></span>    )</div>     <div class="warning"><strong class="warning">Warning</strong>    <h1 class="title">已废弃</h1>    <p class="para">     请使用 <span class="function">{@link MongoDB::drop()}</span> 作为替代。    </p>   </div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.dropdb-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">db</code>      </dt>       <dd>        <p class="para">        要函数的数据库。可以是一个 MongoDB对象，或者是数据库名。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.dropdb-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数据库的回应。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return array The database response.*/
    public function dropDB($db) {}

    /**
     * (PECL mongo &gt;= 1.3.0)<br/>
     * Gets a database
     * @link http://php.net/manual/en/mongoclient.get.php
     * @param string $dbname The database name.
     * @return MongoDB The database name.
     */
    public function __get ($dbname)
    {}

/**
*<div id="mongoclient.getconnections" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::getConnections</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::getConnections</span> &mdash; <span class="dc-title">返回所有已打开连接的信息</span></p>   </div>   <div id="mongoclient.getconnections-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.getconnections-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><strong>MongoClient::getConnections</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回所有已打开连接的数组，并且每个服务器的信息   </p>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.getconnections-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.getconnections-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    打开连接的一个 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongoclient.getconnections-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.queries.choosing.secondary-example">    <p><strong>Example #1 <span class="methodname"><strong>MongoClient::getConnections()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getConnections</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(1) {   [0]=&gt;   array(3) {     [&quot;hash&quot;]=&gt;     string(26) &quot;localhost:27017;-;X;56052&quot;     [&quot;server&quot;]=&gt;     array(3) {       [&quot;host&quot;]=&gt;       string(10) &quot;localhost&quot;       [&quot;port&quot;]=&gt;       int(27017)       [&quot;pid&quot;]=&gt;       int(56052)     }     [&quot;connection&quot;]=&gt;     array(8) {       [&quot;last_ping&quot;]=&gt;       int(1354076401)       [&quot;last_ismaster&quot;]=&gt;       int(0)       [&quot;ping_ms&quot;]=&gt;       int(0)       [&quot;connection_type&quot;]=&gt;       int(1)       [&quot;connection_type_desc&quot;]=&gt;       string(10) &quot;STANDALONE&quot;       [&quot;max_bson_size&quot;]=&gt;       int(16777216)       [&quot;tag_count&quot;]=&gt;       int(0)       [&quot;tags&quot;]=&gt;       array(0) {       }     }   } } </pre></div>    </div>   </div>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return array*/
    static public function getConnections ()
    {}

/**
*<div id="mongoclient.gethosts" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::getHosts</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::getHosts</span> &mdash; <span class="dc-title">更新所有关联主机的状态信息</span></p>   </div>   <div id="mongoclient.gethosts-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this method include:</p>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoDB\Driver\Manager::getServers()}</span></li>   </ul>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.gethosts-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoClient::getHosts</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    此方法仅在连接到副本集时有用。    它返回了集群里所有主机的状态。如果没有副本集，它只返回一个元素的数组，包含你当前连接的主机。   </p>    <p class="para">    参见手册中<a href="http://php.net/manual/zh/mongo.queries.php" class="link">查询一节</a>关于分布式查询备份节点的信息。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.gethosts-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.gethosts-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回集群中主机的信息数组。    包含了每个主机的主机名，它的健康程度（1 是很健康），它的状态（1 是活跃节点，2 是备用节点，0 是其他），ping 服务器所需的时间，以及最后一次 ping 的时间。    例如，在具有三个成员的集群中，它看上去可能是这样的：   </p>   <div class="example-contents screen"> <div class="returnvaluescode"><pre class="returnvaluescode">array(3) {   [&quot;A:27017&quot;]=&gt;   array(4) {     [&quot;host&quot;]=&gt;     &quot;A&quot;     [&quot;port&quot;]=&gt;     27017     [&quot;health&quot;]=&gt;     int(1)     [&quot;state&quot;]=&gt;     int(2)     [&quot;ping&quot;]=&gt;     int(369)     [&quot;lastPing&quot;]=&gt;     int(1309470644)   }   [&quot;B:27017&quot;]=&gt;   array(4) {     [&quot;host&quot;]=&gt;     &quot;B&quot;     [&quot;port&quot;]=&gt;     27017     [&quot;health&quot;]=&gt;     int(1)     [&quot;state&quot;]=&gt;     int(1)     [&quot;ping&quot;]=&gt;     int(139)     [&quot;lastPing&quot;]=&gt;     int(1309470644)   }   [&quot;C:27017&quot;]=&gt;   array(4) {     [&quot;host&quot;]=&gt;     &quot;C&quot;     [&quot;port&quot;]=&gt;     27017     [&quot;health&quot;]=&gt;     int(1)     [&quot;state&quot;]=&gt;     int(2)     [&quot;ping&quot;]=&gt;     int(1012)     [&quot;lastPing&quot;]=&gt;     int(1309470644)   } }</pre> </div>   </div>  </div>    <div class="refsect1 changelog" id="refsect1-mongoclient.gethosts-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.10</td>        <td>         <p class="para">          对非集群的支持。         </p>         <p class="para">          返回的数组元素现在也包括了          <em>hostname</em> 和 <em>port</em>。         </p>        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongoclient.gethosts-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoClient::getConnections()} - 返回所有已打开连接的信息</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return array*/
    public function getHosts ()
    {}

/**
*<div id="mongoclient.getreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::getReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::getReadPreference</span> &mdash; <span class="dc-title">获取此连接的读取首选项</span></p>   </div>   <div id="mongoclient.getreadpreference-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.getreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoClient::getReadPreference</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.getreadpreference-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.getreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the read preference. The array contains the values <em>type</em> for the string read preference mode (corresponding to the <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> constants), and <em>tagsets</em> containing a list of all tag set criteria. If no tag sets were specified, <em>tagsets</em> will not be present in the array.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongoclient.getreadpreference-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.3.3</td>        <td>         返回的值修改为兼容         <span class="methodname">{@link MongoClient::setReadPreference()}</span>。         <em>type</em> 的值从数组改成字符串，删除了         <em>type_string</em>，并且         <em>tagsets</em> 现在以键值表示的标签而不是冒号分隔的字符串。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongoclient.getreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.queries.querying-example">    <p><strong>Example #1 <span class="methodname"><strong>MongoClient::getReadPreference()</strong></span> 返回值例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_SECONDARY</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(),<br />));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getReadPreference</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;type&quot;]=&gt;   string(9) &quot;secondary&quot;   [&quot;tagsets&quot;]=&gt;   array(3) {     [0]=&gt;     array(2) {       [&quot;dc&quot;]=&gt;       string(4) &quot;east&quot;       [&quot;use&quot;]=&gt;       string(9) &quot;reporting&quot;     }     [1]=&gt;     array(1) {       [&quot;dc&quot;]=&gt;       string(7) &quot;west&quot;     }     [2]=&gt;     array(0) {     }   } } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongoclient.getreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">读取首选项</a>的文档。</li>       <li class="member"><span class="function">{@link MongoClient::setReadPreference()} - 为该连接设置读取选项</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return array*/
    public function getReadPreference ()
    {}

/**
*<div id="mongoclient.getwriteconcern" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::getWriteConcern</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoClient::getWriteConcern</span> &mdash; <span class="dc-title">Get the write concern for this connection</span></p>   </div>   <div id="mongoclient.getwriteconcern-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.getwriteconcern-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoClient::getWriteConcern</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.getwriteconcern-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.getwriteconcern-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the write concern. The array contains the values <em>w</em> for an integer acknowledgement level or string mode, and <em>wtimeout</em> denoting the maximum number of milliseconds to wait for the server to satisfy the write concern.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongoclient.getwriteconcern-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.queries.querying.wrong">    <p><strong>Example #1 <span class="methodname"><strong>MongoClient::getWriteConcern()</strong></span> return value example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$mc&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongodb://localhost:27017'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'wTimeoutMS'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">500</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getWriteConcern</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setWriteConcern</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getWriteConcern</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;w&quot;]=&gt;   int(1)   [&quot;wtimeout&quot;]=&gt;   int(500) } array(2) {   [&quot;w&quot;]=&gt;   int(1)   [&quot;wtimeout&quot;]=&gt;   int(1000) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongoclient.getwriteconcern-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> documentation.</li>    <li class="member"><span class="function">{@link MongoClient::setWriteConcern()} - Set the write concern for this connection</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return array <p>This function returns an array describing the write concern.*/
    public function getWriteConcern () {}


/**
*<div id="mongoclient.killcursor" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::killCursor</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoClient::killCursor</span> &mdash; <span class="dc-title">Kills a specific cursor on the server</span></p>   </div>   <div id="mongoclient.killcursor-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.killcursor-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoClient::killCursor</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$server_hash</code></span>    , <span class="methodparam"><span class="type"><span class="type int|MongoInt64">int|MongoInt64</span></span> <code class="parameter">$id</code></span>    )</div>    <p class="para rdfs-comment">    In certain situations it might be needed to kill a cursor on the server.    Usually cursors time out after 10 minutes of inactivity, but it is possible    to create an immortal cursor with    <span class="methodname">{@link MongoCursor::immortal()}</span> that never times out. In    order to be able to kill such an immortal cursor, you can call this    method with the information supplied by    <span class="methodname">{@link MongoCursor::info()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.killcursor-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">server_hash</code>      </dt>       <dd>        <p class="para">        The server hash that has the cursor. This can be obtained through        <span class="methodname">{@link MongoCursor::info()}</span>.       </p>      </dd>                 <dt>        <code class="parameter">id</code>      </dt>       <dd>        <p class="para">        The ID of the cursor to kill. You can either supply an <span class="type"><a href="http://php.net/manual/zh/language.types.integer.php" class="type int">int</a></span>        containing the 64 bit cursor ID, or an object of the        <a href="http://php.net/manual/zh/class.mongoint64.php" class="classname">MongoInt64</a> class. The latter is necessary on 32        bit platforms (and Windows).       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.killcursor-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if the method attempted to kill a cursor, and <strong><code>FALSE</code></strong> if    there was something wrong with the arguments (such as a wrong    <code class="parameter">server_hash</code>). The return status does <em class="emphasis">not    reflect</em> where the cursor was actually killed as the server does    not provide that information.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongoclient.killcursor-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    This method displays a warning if the supplied    <code class="parameter">server_hash</code> does not match up with an existing    connection. No attempt to kill a cursor is attempted in that case either.   </p>  </div>    <div class="refsect1 examples" id="mongo.mongoclient.killcursor.examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.queries.arrays-example">    <p><strong>Example #1 <span class="function"><strong>MongoClient::killCursor()</strong></span> example</strong></p>    <div class="example-contents"><p>     This example shows how to connect, do a query, obtain the cursor     information and then kill the cursor.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">testdb</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">collection</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">next</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Now&nbsp;the&nbsp;cursor&nbsp;is&nbsp;valid,&nbsp;so&nbsp;we&nbsp;can&nbsp;get&nbsp;the&nbsp;hash&nbsp;and&nbsp;ID&nbsp;out:<br /></span><span style="color: #9876AA">$info&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">info</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Kill&nbsp;the&nbsp;cursor<br /></span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">killCursor</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'server'</span><span style="color: #007700">],&nbsp;</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'id'</span><span style="color: #007700">]&nbsp;);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
*/
    public function killCursor ( $server_hash , $id) {}

/**
*<div id="mongoclient.listdbs" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::listDBs</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::listDBs</span> &mdash; <span class="dc-title">列出所有有效数据库</span></p>   </div>   <div id="mongoclient.listdbs-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension, but there is an alternative in the <a href="http://php.net/manual/zh/mongodb.overview.php" class="link">PHP library</a>:</p>   <ul class="simplelist">    <li class="member">{@link &raquo;&nbsp;MongoDB\Client::listDatabases()}</li>   </ul>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.listdbs-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoClient::listDBs</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.listdbs-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.listdbs-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回的关联数组包括了三个字段。    第一个字段是 <em>databases</em>，里面包含了一个数组。每个元素对应一个数据库，给出数据库名称、尺寸以及是否为空。    另外两个字段是    <em>totalSize</em>（单位为字节 bytes）和 <em>ok</em>，如果方法成功运行，它会是 1。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongoclient.listdbs-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.queries.arrays-example-2">    <p><strong>Example #1 <span class="methodname"><strong>MongoClient::listDBs()</strong></span> 例子</strong></p>    <div class="example-contents"><p>     例子演示了如何列出数据库，并返回数据的结构。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$mongo&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$dbs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">listDBs</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$dbs</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [databases] =&gt; Array         (             [0] =&gt; Array                 (                     [name] =&gt; doctrine                     [sizeOnDisk] =&gt; 218103808                     [empty] =&gt;                 )         )      [totalSize] =&gt; 218103808     [ok] =&gt; 1 )  </pre></div>    </div>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return array Returns an associative array containing three fields. The first field is databases, which in turn contains an array. Each element of the array is an associative array corresponding to a database, giving the database's name, size, and if it's empty. The other two fields are totalSize (in bytes) and ok, which is 1 if this method ran successfully.*/
    public function listDBs() {}


/**
*<div id="mongoclient.selectcollection" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::selectCollection</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::selectCollection</span> &mdash; <span class="dc-title">获取数据库的文档集</span></p>   </div>   <div id="mongoclient.selectcollection-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension, but there is an alternative in the <a href="http://php.net/manual/zh/mongodb.overview.php" class="link">PHP library</a>:</p>   <ul class="simplelist">    <li class="member">{@link &raquo;&nbsp;MongoDB\Client::selectCollection()}</li>   </ul>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.selectcollection-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocollection.php" class="type MongoCollection">MongoCollection</a></span> <span class="methodname"><strong>MongoClient::selectCollection</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$db</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$collection</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.selectcollection-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">db</code>      </dt>       <dd>        <p class="para">        数据库名       </p>      </dd>                 <dt>        <code class="parameter">collection</code>      </dt>       <dd>        <p class="para">        文档集名。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.selectcollection-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个新的文档集对象。   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongoclient.selectcollection-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果数据库或文档集名称是无效的，抛出 <a href="http://php.net/manual/zh/class.exception.php" class="classname">Exception</a>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongoclient.selectcollection-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.queries.querying-arrays-nested">    <p><strong>Example #1 <span class="function"><strong>MongoClient::selectCollection()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$c1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"bar.baz"</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;就等于<br /></span><span style="color: #9876AA">$c2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"bar.baz"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;$c1&nbsp;和&nbsp;$c2&nbsp;现在表示的是同一个文档集<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return MongoCollection Returns a new collection object.*/
    public function selectCollection($db, $collection) {}

/**
*<div id="mongoclient.selectdb" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::selectDB</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::selectDB</span> &mdash; <span class="dc-title">获取一个数据库</span></p>   </div>   <div id="mongoclient.selectdb-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension, but there is an alternative in the <a href="http://php.net/manual/zh/mongodb.overview.php" class="link">PHP library</a>:</p>   <ul class="simplelist">    <li class="member">{@link &raquo;&nbsp;MongoDB\Client::selectDatabase()}</li>   </ul>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.selectdb-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongodb.php" class="type MongoDB">MongoDB</a></span> <span class="methodname"><strong>MongoClient::selectDB</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.selectdb-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">name</code>      </dt>       <dd>        <p class="para">        数据库名。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.selectdb-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个新的数据库对象。   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongoclient.selectdb-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果数据库名无效，将会抛出 <a href="http://php.net/manual/zh/class.exception.php" class="classname">Exception</a>。   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return MongoDB Returns a new db object.*/
    public function selectDB($name) {}

/**
*<div id="mongoclient.setreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoClient::setReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoClient::setReadPreference</span> &mdash; <span class="dc-title">为该连接设置读取选项</span></p>   </div>   <div id="mongoclient.setreadpreference-soft-deprecation-notice" class="soft-deprecation-notice">   <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>  </div>   <div class="refsect1 description" id="refsect1-mongoclient.setreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoClient::setReadPreference</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoclient.setreadpreference-parameters">   <h3 class="title">参数</h3>   <dl> <dt> <code class="parameter">read_preference</code></dt> <dd> <p class="para">The read preference mode: <strong><code>MongoClient::RP_PRIMARY</code></strong>, <strong><code>MongoClient::RP_PRIMARY_PREFERRED</code></strong>, <strong><code>MongoClient::RP_SECONDARY</code></strong>, <strong><code>MongoClient::RP_SECONDARY_PREFERRED</code></strong>, or <strong><code>MongoClient::RP_NEAREST</code></strong>.</p></dd> <dt> <code class="parameter">tags</code></dt> <dd> <p class="para">An array of zero or more tag sets, where each tag set is itself an array of criteria used to match tags on replica set members.</p></dd> </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongoclient.setreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>  </div>    <div class="refsect1 errors" id="refsect1-mongoclient.setreadpreference-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Emits <strong><code>E_WARNING</code></strong> if either parameter is invalid, or if one or more tag sets are provided with the <strong><code>MongoClient::RP_PRIMARY</code></strong> read preference mode.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongoclient.setreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongo.queries.querying-arrays-in">    <p><strong>Example #1 <span class="methodname"><strong>MongoClient::setReadPreference()</strong></span> 标签集数组语法的例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;首选最近的&nbsp;"east"&nbsp;数据中心的服务器，也用于报告，<br />//&nbsp;失败时调用&nbsp;"west"&nbsp;数据中心的服务器<br /></span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_NEAREST</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongoclient.setreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">读取选修</a>的文档。</li>    <li class="member"><span class="function">{@link MongoClient::getReadPreference()} - 获取此连接的读取首选项</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongoclient.php">MongoClient</a></div></div>
     * @return bool*/
    public function setReadPreference ($readPreference, $tags=null)
    {}

    /**
     * (PECL mongo &gt;= 1.1.0)<br/>
     * Choose a new secondary for slaveOkay reads
     * @link www.php.net/manual/en/mongo.switchslave.php
     * @return string The address of the secondary this connection is using for reads. This may be the same as the previous address as addresses are randomly chosen. It may return only one address if only one secondary (or only the primary) is available.
     * For example, if we had a three member replica set with a primary, secondary, and arbiter this method would always return the address of the secondary. If the secondary became unavailable, this method would always return the address of the primary. If the primary also became unavailable, this method would throw an exception, as an arbiter cannot handle reads.
     * @throws MongoException (error code 15) if it is called on a non-replica-set connection. It will also throw MongoExceptions if it cannot find anyone (primary or secondary) to read from (error code 16).
     *
     */
    public function switchSlave()  {}

    /**
     * String representation of this connection
     * @link http://www.php.net/manual/en/mongoclient.tostring.php
     * @return string Returns hostname and port for this connection.
     */
    public function __toString() {}
}

/**
*<div id="class.mongo" class="reference">   <h1 class="title">The Mongo class [deprecated]</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>      <div class="section" id="mongo.intro">    <h2 class="title">简介</h2>    <p class="para">     A connection between PHP and MongoDB.    </p>    <p class="para">     This class extends <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> and provides access to     several deprecated methods.    </p>    <p class="para">     For backwards compatibility, it also defaults the <em>&quot;w&quot;</em>     option of its constructor argument to <em>0</em>, which does not     require write operations to be acknowledged by the server. See     <span class="function">{@link MongoClient::__construct()}</span> for more information.    </p>      <div class="warning"><strong class="warning">Warning</strong>      <p class="simpara">       This class has been <em class="emphasis">DEPRECATED</em> as of version       1.3.0. Relying on this feature is highly discouraged. Please use       <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> instead.      </p>     </div>   </div>       <div class="section" id="mongo.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">Mongo</strong>      </span>      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.connectutil.php" class="methodname">connectUtil</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.getpoolsize.php" class="methodname">getPoolSize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.getslave.php" class="methodname">getSlave</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.getslaveokay.php" class="methodname">getSlaveOkay</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.pooldebug.php" class="methodname">poolDebug</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.setpoolsize.php" class="methodname">setPoolSize</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.setslaveokay.php" class="methodname">setSlaveOkay</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$ok</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongo.switchslave.php" class="methodname">switchSlave</a></span>     ( <span class="methodparam">void</span>    )</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link MongoClient::close}</span>     ([ <span class="methodparam"><span class="type"><span class="type boolean|string">boolean|string</span></span> <code class="parameter">$connection</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link MongoClient::connect}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link MongoClient::dropDB}</span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$db</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoDB</span> <span class="methodname">{@link MongoClient::__get}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname">{@link MongoClient::getConnections}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link MongoClient::getHosts}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link MongoClient::getReadPreference}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link MongoClient::getWriteConcern}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link MongoClient::killCursor}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$server_hash</code></span>    , <span class="methodparam"><span class="type"><span class="type int|MongoInt64">int|MongoInt64</span></span> <code class="parameter">$id</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link MongoClient::listDBs}</span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCollection</span> <span class="methodname">{@link MongoClient::selectCollection}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$db</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$collection</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoDB</span> <span class="methodname">{@link MongoClient::selectDB}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link MongoClient::setReadPreference}</span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">{@link MongoClient::setWriteConcern}</span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$w</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$wtimeout</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link MongoClient::__toString}</span>     ( <span class="methodparam">void</span>    )</div>     }</div>        </div>    </div>                                                                <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link Mongo::connectUtil} — Connects with a database server</li><li>{@link Mongo::__construct} — The __construct purpose</li><li>{@link Mongo::getPoolSize} — Get pool size for connection pools</li><li>{@link Mongo::getSlave} — Returns the address being used by this for slaveOkay reads</li><li>{@link Mongo::getSlaveOkay} — Get slaveOkay setting for this connection</li><li>{@link Mongo::poolDebug} — Returns information about all connection pools</li><li>{@link Mongo::setPoolSize} — Set the size for future connection pools</li><li>{@link Mongo::setSlaveOkay} — Change slaveOkay setting for this connection</li><li>{@link Mongo::switchSlave} — Choose a new secondary for slaveOkay reads</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.miscellaneous.php">Miscellaneous</a></div></div>
*/
class Mongo extends MongoClient {
/**
*<div id="mongo.getpoolsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">Mongo::getPoolSize</h1>   <p class="verinfo">(PECL mongo &gt;=1.2.0)</p><p class="refpurpose"><span class="refname">Mongo::getPoolSize</span> &mdash; <span class="dc-title">Get pool size for connection pools</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongo.getpoolsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>Mongo::getPoolSize</strong></span>     ( <span class="methodparam">void</span>    )</div>     <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">This feature has been <em class="emphasis">DEPRECATED</em> as of version     1.2.3. Relying on this feature is highly discouraged.  Please use     <span class="function">{@link MongoPool::getSize()}</span> instead.    </p>   </div>   </div>    <div class="refsect1 parameters" id="refsect1-mongo.getpoolsize-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongo.getpoolsize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the current pool size.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongo.getpoolsize-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongo.getpoolsize-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1623">    <p><strong>Example #1 Changing pool size</strong></p>    <div class="example-contents"><p>     This returns the default pool size, sets a new pool size, then prints the     new pool size and the pool debugging information.  Note that changing the     pool size only affects new connection pools, it does not change old ones.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$connection&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">(</span><span style="color: #DD0000">"host1"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;pool&nbsp;size&nbsp;is&nbsp;-1<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"pool&nbsp;size&nbsp;is:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">::</span><span style="color: #9876AA">getPoolSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">"setting&nbsp;pool&nbsp;size&nbsp;to&nbsp;200\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">Mongo</span><span style="color: #007700">::</span><span style="color: #9876AA">setPoolSize</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;pool&nbsp;size&nbsp;is&nbsp;200<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"pool&nbsp;size&nbsp;is:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">::</span><span style="color: #9876AA">getPoolSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$conn2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">(</span><span style="color: #DD0000">"host2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;remaining&nbsp;for&nbsp;host1&nbsp;is&nbsp;-2<br />//&nbsp;remaining&nbsp;for&nbsp;host2&nbsp;is&nbsp;199<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">::</span><span style="color: #9876AA">poolDebug</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongo.getpoolsize-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link Mongo::setPoolSize()} - Set the size for future connection pools</span></li>     <li class="member"><span class="function">{@link Mongo::poolDebug()} - Returns information about all connection pools</span></li>     <li class="member">The <a href="http://php.net/manual/zh/mongo.connecting.php" class="link">connection</a> documentation.</li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongo.php">Mongo</a></div></div>
     * @return int Returns the current pool size.*/
    public function getPoolSize() {}
/**
*<div id="mongo.getslave" class="refentry">  <div class="refnamediv">   <h1 class="refname">Mongo::getSlave</h1>   <p class="verinfo">(PECL mongo &gt;=1.1.0)</p><p class="refpurpose"><span class="refname">Mongo::getSlave</span> &mdash; <span class="dc-title">Returns the address being used by this for slaveOkay reads</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongo.getslave-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>Mongo::getSlave</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    This finds the address of the secondary currently being used for reads. It is    a read-only method: it does not change anything about the internal state of    the object.   </p>    <p class="para">    When you create a connection to the database, the driver will not immediately    decide on a secondary to use. Thus, after you connect, this function will    return <strong><code>NULL</code></strong> even if there are secondaries available. When you first do a    query with slaveOkay set, at that point the driver will choose a secondary    for this connection. At that point, this function will return the chosen    secondary.   </p>    <p class="para">    See <a href="http://php.net/manual/zh/mongo.queries.php" class="link">the query section</a> of this manual for    information on distributing reads to secondaries.   </p>   </div>    <div class="refsect1 parameters" id="refsect1-mongo.getslave-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongo.getslave-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The address of the secondary this connection is using for reads.   </p>   <p class="para">    This returns <strong><code>NULL</code></strong> if this is not connected to a replica set or not yet    initialized.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongo.getslave-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Issues <strong><code>E_DEPRECATED</code></strong> warning</p>   <p class="para">    The returned results aren&#039;t really useful as the secondary selection    process is done on each query and database command execution.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongo.getslave-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongo.getslave-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCursor::info()} - Gets information about the cursor's creation and iteration</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongo.php">Mongo</a></div></div>
     * @return bool <p>The address of the secondary this connection is using for reads.*/
    public function getSlave() {}
/**
*<div id="mongo.getslaveokay" class="refentry">  <div class="refnamediv">   <h1 class="refname">Mongo::getSlaveOkay</h1>   <p class="verinfo">(PECL mongo &gt;=1.1.0)</p><p class="refpurpose"><span class="refname">Mongo::getSlaveOkay</span> &mdash; <span class="dc-title">Get slaveOkay setting for this connection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongo.getslaveokay-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Mongo::getSlaveOkay</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    See <a href="http://php.net/manual/zh/mongo.queries.php" class="link">the query section</a> of this manual for    information on distributing reads to secondaries.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongo.getslaveokay-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongo.getslaveokay-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the value of slaveOkay for this instance.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongo.getslaveokay-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Issues <strong><code>E_DEPRECATED</code></strong> warning</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongo.getslaveokay-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongo.getslaveokay-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a></li>    <li class="member"><span class="methodname">{@link MongoClient::getReadPreference()} - 获取此连接的读取首选项</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongo.php">Mongo</a></div></div>
     * @return bool Returns the value of slaveOkay for this instance.*/
    public function getSlaveOkay() {}
    /**
	* Connects to paired database server
	* @deprecated Pass a string of the form "mongodb://server1,server2" to the constructor instead of using this method.
	* @link http://www.php.net/manual/en/mongo.pairconnect.php
	* @throws MongoConnectionException
    * @return boolean
    */
    public function pairConnect() {}

/**
*<div id="mongo.pooldebug" class="refentry">  <div class="refnamediv">   <h1 class="refname">Mongo::poolDebug</h1>   <p class="verinfo">(PECL mongo &gt;=1.2.0)</p><p class="refpurpose"><span class="refname">Mongo::poolDebug</span> &mdash; <span class="dc-title">Returns information about all connection pools</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongo.pooldebug-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>Mongo::poolDebug</strong></span>     ( <span class="methodparam">void</span>    )</div>     <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">This feature has been <em class="emphasis">DEPRECATED</em> as of version     1.2.3. Relying on this feature is highly discouraged.  Please use     <span class="function">{@link MongoPool::info()}</span> instead.    </p>   </div>    <p class="para">    Returns an array of information about all connection pools.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongo.pooldebug-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongo.pooldebug-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Each connection pool has an identifier, which starts with the host. For each    pool, this function shows the following fields:    <dl>            <dt>        <code class="parameter">in use</code>      </dt>       <dd>        <p class="para">        The number of connections currently being used by        <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> instances.       </p>      </dd>                 <dt>        <code class="parameter">in pool</code>      </dt>       <dd>        <p class="para">        The number of connections currently in the pool (not being used).       </p>      </dd>                 <dt>        <code class="parameter">remaining</code>      </dt>       <dd>        <p class="para">        The number of connections that could be created by this pool. For        example, suppose a pool had 5 connections remaining and 3 connections in        the pool.  We could create 8 new instances of        <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> before we exhausted this pool        (assuming no instances of <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> went out of        scope, returning their connections to the pool).       </p>       <p class="para">        A negative number means that this pool will spawn unlimited connections.       </p>       <p class="para">        Before a pool is created, you can change the max number of connections by        calling <span class="function">{@link Mongo::setPoolSize()}</span>. Once a pool is showing        up in the output of this function, its size cannot be changed.       </p>      </dd>                 <dt>        <code class="parameter">timeout</code>      </dt>       <dd>        <p class="para">        The socket timeout for connections in this pool. This is how long        connections in this pool will attempt to connect to a server before        giving up.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongo.pooldebug-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongo.php">Mongo</a></div></div>
     * @return array  Each connection pool has an identifier, which starts with the host. For each pool, this function shows the following fields:*/
    public function poolDebug() {}

/**
*<div id="mongo.setslaveokay" class="refentry">  <div class="refnamediv">   <h1 class="refname">Mongo::setSlaveOkay</h1>   <p class="verinfo">(PECL mongo &gt;=1.1.0)</p><p class="refpurpose"><span class="refname">Mongo::setSlaveOkay</span> &mdash; <span class="dc-title">Change slaveOkay setting for this connection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongo.setslaveokay-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>Mongo::setSlaveOkay</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$ok</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>     <p class="para rdfs-comment">    See <a href="http://php.net/manual/zh/mongo.queries.php" class="link">the query section</a> of this manual for    information on distributing reads to secondaries.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongo.setslaveokay-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">ok</code>      </dt>       <dd>        <p class="para">        If reads should be sent to secondary members of a replica set for all        possible queries using this <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> instance.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongo.setslaveokay-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the former value of slaveOkay for this instance.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongo.setslaveokay-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongo.setslaveokay-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a></li>    <li class="member"><span class="methodname">{@link MongoClient::setReadPreference()} - 为该连接设置读取选项</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongo.php">Mongo</a></div></div>
     * @return bool returns the former value of slaveOkay for this instance.*/
    public function setSlaveOkay ($ok) {}
/**
*<div id="mongo.setpoolsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">Mongo::setPoolSize</h1>   <p class="verinfo">(PECL mongo &gt;=1.2.0)</p><p class="refpurpose"><span class="refname">Mongo::setPoolSize</span> &mdash; <span class="dc-title">Set the size for future connection pools</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongo.setpoolsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>Mongo::setPoolSize</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span>    )</div>     <div class="warning"><strong class="warning">Warning</strong>    <p class="simpara">This method has been <em class="emphasis">DEPRECATED</em> as of version     1.2.3. Relying on this feature is highly discouraged.  Please use     <span class="function">{@link MongoPool::setSize()}</span> instead.    </p>   </div>    <p class="para">    Sets the max number of connections new pools will be able to create.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongo.setpoolsize-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">size</code>      </dt>       <dd>        <p class="para">        The max number of connections future pools will be able to create.        Negative numbers mean that the pool will spawn an infinite number of        connections.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongo.setpoolsize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the former value of pool size.   </p>  </div>     <div class="refsect1 examples" id="refsect1-mongo.setpoolsize-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-1624">     <p><strong>Example #1 <span class="function"><strong>Mongo::setPoolSize()</strong></span> example</strong></p>     <div class="example-contents"><p>      If you set the pool size to <em>n</em> and then create      <em>n</em> connections, attempting to create an      <em>n+1</em>st connection will throw a      <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a>.     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;only&nbsp;allow&nbsp;one&nbsp;connection&nbsp;to&nbsp;a&nbsp;server<br /></span><span style="color: #9876AA">Mongo</span><span style="color: #007700">::</span><span style="color: #9876AA">setPoolSize</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;creates&nbsp;one&nbsp;connection&nbsp;to&nbsp;localhost:27017<br /></span><span style="color: #9876AA">$m1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;attempt&nbsp;to&nbsp;create&nbsp;a&nbsp;second&nbsp;connection&nbsp;to&nbsp;localhost:27017<br />//&nbsp;only&nbsp;one&nbsp;connection&nbsp;is&nbsp;allowed,&nbsp;so&nbsp;this&nbsp;will&nbsp;throw&nbsp;an&nbsp;exception<br /></span><span style="color: #9876AA">$m2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Fatal error: Uncaught exception &#039;MongoConnectionException&#039; with message &#039;no more connections in pool&#039; in /path/to/php/script.php:10 Stack trace: #0 /path/to/php/script.php(10): Mongo-&gt;__construct() #1 {main}   thrown in /path/to/php/script.php on line 10 </pre></div>     </div>    </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-mongo.setpoolsize-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link Mongo::getPoolSize()} - Get pool size for connection pools</span></li>     <li class="member"><span class="function">{@link Mongo::poolDebug()} - Returns information about all connection pools</span></li>     <li class="member">The <a href="http://php.net/manual/zh/mongo.connecting.php" class="link">connection</a> documentation.</li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongo.php">Mongo</a></div></div>
     * @return bool Returns the former value of pool size.*/
    public function setPoolSize($size) {}
    /**
	 * Creates a persistent connection with a database server
	 * @link http://www.php.net/manual/en/mongo.persistconnect.php
	 * @deprecated Pass array("persist" => $id) to the constructor instead of using this method.
	 * @param string $username A username used to identify the connection.
	 * @param string $password A password used to identify the connection.
	 * @throws MongoConnectionException
	 * @return boolean If the connection was successful.
	 */
    public function persistConnect($username = "", $password = "") {}

    /**
	 * Creates a persistent connection with paired database servers
	 * @deprecated Pass "mongodb://server1,server2" and array("persist" => $id) to the constructor instead of using this method.
	 * @link http://www.php.net/manual/en/mongo.pairpersistconnect.php
	 * @param string $username A username used to identify the connection.
	 * @param string $password A password used to identify the connection.
	 * @throws MongoConnectionException
	 * @return boolean If the connection was successful.
	 */
    public function pairPersistConnect($username = "", $password = "") {}

   /**
	* Connects with a database server
	*
	* @link http://www.php.net/manual/en/mongo.connectutil.php
	* @throws MongoConnectionException
/**
*<div id="mongo.connectutil" class="refentry">  <div class="refnamediv">   <h1 class="refname">Mongo::connectUtil</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">Mongo::connectUtil</span> &mdash; <span class="dc-title">Connects with a database server</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongo.connectutil-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">bool</span> <span class="methodname"><strong>Mongo::connectUtil</strong></span>     ( <span class="methodparam">void</span>    )</div>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     This is an internal function that you should <em class="emphasis">never</em>     call yourself.    </p>   </div>  </div>    <div class="refsect1 parameters" id="refsect1-mongo.connectutil-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongo.connectutil-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    If the connection was successful.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongo.connectutil-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a> if it fails to connect    to the databases.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongo.php">Mongo</a></div></div>
    * @return boolean If the connection was successful.*/
    protected function connectUtil() {}

   /**
	* Check if there was an error on the most recent db operation performed
	* @deprecated Use MongoDB::lastError() instead.
	* @link http://www.php.net/manual/en/mongo.lasterror.php
    * @return array|null Returns the error, if there was one, or NULL.
    */
    public function lastError() {}

   /**
	* Checks for the last error thrown during a database operation
	* @deprecated Use MongoDB::prevError() instead.
	* @link http://www.php.net/manual/en/mongo.preverror.php
    * @return array Returns the error and the number of operations ago it occurred.
    */
    public function prevError() {}

   /**
	* Clears any flagged errors on the connection
	* @deprecated Use MongoDB::resetError() instead.
	* @link http://www.php.net/manual/en/mongo.reseterror.php
    * @return array Returns the database response.
    */
    public function resetError() {}

   /**
	* Creates a database error on the database.
	* @deprecated Use MongoDB::forceError() instead.
	* @link http://www.php.net/manual/en/mongo.forceerror.php
    * @return boolean The database response.
    */
    public function forceError() {}
}

/**
*<div id="class.mongodb" class="reference">   <h1 class="title">MongoDB 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>     <div class="section" id="mongodb.intro">    <h2 class="title">简介</h2>    <p class="para">     该类的实例用于和数据库进行交互。要获取一个数据库：     <div class="example" id="example-1493">      <p><strong>Example #1 选择一个数据库</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();&nbsp;</span><span style="color: #FF8000">//&nbsp;连接<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"example"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>     数据库名可以用 ASCII 范围内的几乎任何字符。     但是，它们不能包括 &quot; &quot;、&quot;.&quot;，或者是空字符串。     名称 &quot;system&quot; 也是被保留的。    </p>    <p class="para">     个别特殊但有效的数据库名：&quot;null&quot;、&quot;[x,y]&quot;、&quot;3&quot;、&quot;\&quot;&quot;、 &quot;/&quot;。    </p>    <p class="para">     不像集合名，数据库名是可以包含 &quot;$&quot; 的。    </p>   </div>     <div class="section" id="mongodb.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoDB</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongodb.php#mongodb.constants.profilingoff"><var class="varname">PROFILING_OFF</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongodb.php#mongodb.constants.profilingslow"><var class="varname">PROFILING_SLOW</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongodb.php#mongodb.constants.profilingon"><var class="varname">PROFILING_ON</var></a></var>      <span class="initializer"> = 2</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">integer</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongodb.php#mongodb.props.w">$<var class="varname">w</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">integer</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongodb.php#mongodb.props.wtimeout">$<var class="varname">wtimeout</var></a></var>      <span class="initializer"> = 10000</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.authenticate.php" class="methodname">authenticate</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.command.php" class="methodname">command</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$command</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongoclient.php" class="type MongoClient">MongoClient</a></span> <code class="parameter">$conn</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCollection</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.createcollection.php" class="methodname">createCollection</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.createdbref.php" class="methodname">createDBRef</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$collection</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$document_or_id</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.drop.php" class="methodname">drop</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.dropcollection.php" class="methodname">dropCollection</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$coll</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.execute.php" class="methodname">execute</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$code</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.forceerror.php" class="methodname">forceError</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCollection</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.get.php" class="methodname">__get</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getcollectioninfo.php" class="methodname">getCollectionInfo</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getcollectionnames.php" class="methodname">getCollectionNames</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getdbref.php" class="methodname">getDBRef</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$ref</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoGridFS</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getgridfs.php" class="methodname">getGridFS</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code><span class="initializer"> = &quot;fs&quot;</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getprofilinglevel.php" class="methodname">getProfilingLevel</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getreadpreference.php" class="methodname">getReadPreference</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getslaveokay.php" class="methodname">getSlaveOkay</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.getwriteconcern.php" class="methodname">getWriteConcern</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.lasterror.php" class="methodname">lastError</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.listcollections.php" class="methodname">listCollections</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.preverror.php" class="methodname">prevError</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.repair.php" class="methodname">repair</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$preserve_cloned_files</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$backup_original_files</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.reseterror.php" class="methodname">resetError</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCollection</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.selectcollection.php" class="methodname">selectCollection</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.setprofilinglevel.php" class="methodname">setProfilingLevel</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.setreadpreference.php" class="methodname">setReadPreference</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.setslaveokay.php" class="methodname">setSlaveOkay</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$ok</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.setwriteconcern.php" class="methodname">setWriteConcern</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$w</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$wtimeout</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodb.--tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>    <div class="section">    <h2 class="title">预定义常量</h2>    <div class="section" id="mongodb.constants.types">     <h2 class="title">MongoDB 日志级别</h2>     <dl>               <dt id="mongodb.constants.profilingoff"><strong><code>MongoDB::PROFILING_OFF</code></strong></dt>        <dt> <strong><code>0</code></strong></dt>        <dd>         <span class="simpara">         关闭了分析器。        </span>       </dd>                    <dt id="mongodb.constants.profilingslow"><strong><code>MongoDB::PROFILING_SLOW</code></strong></dt>        <dt> <strong><code>1</code></strong></dt>        <dd>         <span class="simpara">         为慢操作开启了分析器（&gt;100 ms）。        </span>       </dd>                    <dt id="mongodb.constants.profilingon"><strong><code>MongoDB::PROFILING_ON</code></strong></dt>        <dt> <strong><code>2</code></strong></dt>        <dd>         <span class="simpara">         为所有操作开启了分析器。        </span>       </dd>            </dl>     </div>   </div>    <div class="section">    <h2 class="title">字段</h2>    <dl>            <dt id="mongodb.props.w"><var class="varname"><var class="varname">w</var></var></dt>       <dt> 1</dt>       <dd>        <p class="para">        在返回成功之前，复制修改到此数量的服务器。        <a href="http://php.net/manual/zh/class.mongocollection.php" class="classname">MongoCollection</a> 实例的设置从这里继承。        <em>w</em> 仅仅在 MongoDB 服务器版本 1.5.1+ 以及本驱动 1.0.8+ 有效。       </p>       <p class="para">        <em>w</em> 用于你需要调整确认级别时        （<span class="function">{@link MongoCollection::insert()}</span>、        <span class="function">{@link MongoCollection::update()}</span>、        <span class="function">{@link MongoCollection::remove()}</span>、        <span class="function">{@link MongoCollection::save()}</span> 和        <span class="function">{@link MongoCollection::ensureIndex()}</span> 都支持这个选项）。                 默认值（1）情况下，只要数据库有操作就会确认。        如果在复制到从服务器前服务器宕机了，它将可能永久丢失本次操作。        所以，你可以为 <em>w</em> 指定一个比一更高的数字，        在返回成功之前确保至少一个从服务器完成了操作。       </p>       <p class="para">        例如，如果 <em>w</em> 是 2，主服务器和一个从服务必须记录了本次操作，        否则驱动会抛出        <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a>。        它尝试写入总计        <em>w</em> 个从服务器 + 主服务器，但是如果其中一个从服务器宕机了，        操作也会失败，并会抛出异常，所以通常 <em>w=2</em> 是最安全的（主服务器和一个从服务器）。       </p>      </dd>                 <dt id="mongodb.props.wtimeout"><var class="varname"><var class="varname">wtimeout</var></var></dt>       <dt> 10000</dt>       <dd>        <p class="para">        等待 <em>MongoDB::$w</em> 复制生效的毫秒数。        <a href="http://php.net/manual/zh/class.mongocollection.php" class="classname">MongoCollection</a> 实例的设置从这里继承。        <em>w</em> 仅仅在 MongoDB 服务器版本 1.5.1+ 并且驱动版本 1.0.8+ 有效。       </p>       <p class="para">        除非设置了 <em>wtimeout</em>，服务器会永久等待复制到 <em>w</em> 个服务器。        这个驱动默认会等待 10 秒，你可以修改这个值来改变它的行为。       </p>      </dd>          </dl>    </div>    <div class="section">    <h2 class="title">参见</h2>    <p class="para">     MongoDB 关于 <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/glossary/#term-database" class="link external">&raquo;&nbsp;databases</a> 的核心文档。    </p>   </div>  </div>                                                                                                                                                                                                                              <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoDB::authenticate} — 登录到数据库</li><li>{@link MongoDB::command} — 执行一条 Mongo 指令</li><li>{@link MongoDB::__construct} — 选择一个数据库</li><li>{@link MongoDB::createCollection} — 创建一个集合</li><li>{@link MongoDB::createDBRef} — 创建数据库引用</li><li>{@link MongoDB::drop} — 删除数据库</li><li>{@link MongoDB::dropCollection} — Drops a collection [deprecated]</li><li>{@link MongoDB::execute} — 在数据库服务器上运行JavaScript</li><li>{@link MongoDB::forceError} — Creates a database error</li><li>{@link MongoDB::__get} — Gets a collection</li><li>{@link MongoDB::getCollectionInfo} — Returns information about collections in this database</li><li>{@link MongoDB::getCollectionNames} — Gets an array of names for all collections in this database</li><li>{@link MongoDB::getDBRef} — Fetches the document pointed to by a database reference</li><li>{@link MongoDB::getGridFS} — Fetches toolkit for dealing with files stored in this database</li><li>{@link MongoDB::getProfilingLevel} — Gets this database's profiling level</li><li>{@link MongoDB::getReadPreference} — Get the read preference for this database</li><li>{@link MongoDB::getSlaveOkay} — Get slaveOkay setting for this database</li><li>{@link MongoDB::getWriteConcern} — Get the write concern for this database</li><li>{@link MongoDB::lastError} — Check if there was an error on the most recent db operation performed</li><li>{@link MongoDB::listCollections} — Gets an array of MongoCollection objects for all collections in this database</li><li>{@link MongoDB::prevError} — Checks for the last error thrown during a database operation</li><li>{@link MongoDB::repair} — Repairs and compacts this database</li><li>{@link MongoDB::resetError} — Clears any flagged errors on the database</li><li>{@link MongoDB::selectCollection} — Gets a collection</li><li>{@link MongoDB::setProfilingLevel} — Sets this database's profiling level</li><li>{@link MongoDB::setReadPreference} — Set the read preference for this database</li><li>{@link MongoDB::setSlaveOkay} — Change slaveOkay setting for this database</li><li>{@link MongoDB::setWriteConcern} — Set the write concern for this database</li><li>{@link MongoDB::__toString} — The name of this database</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.core.php">核心类</a></div></div>
*/
class MongoDB {
	/**
	 * Profiling is off.
     * @link http://php.net/manual/en/class.mongodb.php#mongodb.constants.profiling-off
	 */
    const PROFILING_OFF = 0;

	/**
	 * Profiling is on for slow operations (>100 ms).
     * @link http://php.net/manual/en/class.mongodb.php#mongodb.constants.profiling-slow
	 */
    const PROFILING_SLOW = 1;

	/**
	 * Profiling is on for all operations.
     * @link http://php.net/manual/en/class.mongodb.php#mongodb.constants.profiling-on
	 */
    const PROFILING_ON = 2;

    /**
     * @var int
     * <p>
     * The number of servers to replicate a change to before returning success.
     * Inherited by instances of {@link http://php.net/manual/en/class.mongocollection.php MongoCollection} derived
     * from this.  <em>w</em> functionality is only available in
     * version 1.5.1+ of the MongoDB server and 1.0.8+ of the driver.
     * </p>
     * <p>
     * <em>w</em> is used whenever you need to adjust the
     * acknowledgement level
     * ( {@link http://php.net/manual/en/mongocollection.insert.php MongoCollection::insert()},
     * {@link http://php.net/manual/en/mongocollection.update.php MongoCollection::update()},
     * {@link http://php.net/manual/en/mongocollection.remove.php MongoCollection::remove()},
     * {@link http://php.net/manual/en/mongocollection.save.php MongoCollection::save()}, and
     * {@link http://php.net/manual/en/mongocollection.ensureindex.php MongoCollection::ensureIndex()} all support this
     * option). With the default value (1), an acknowledged operation will return once
     * the database server has the operation. If the server goes down before
     * the operation has been replicated to a secondary, it is possible to lose
     * the operation forever. Thus, you can specify <em>w</em> to be
     * higher than one and guarantee that at least one secondary has the
     * operation before it is considered successful.
     * </p>
     * <p>
     * For example, if <em>w</em> is 2, the primary and one secondary
     * must have a record of the operation or the driver will throw a
     * {@link http://php.net/manual/en/class.mongocursorexception.php MongoCursorException}. It is tempting to set
     * <em>w</em> to the total number of secondaries + primary, but
     * then if one secondary is down the operation will fail and an exception
     * will be thrown, so usually <em>w=2</em> is safest (primary and
     * one secondary).
     * </p>
     */
    public $w = 1;

    /**
     * @var int <p>
     * T he number of milliseconds to wait for <em>MongoDB::$w</em>
     * replications to take place.  Inherited by instances of
     * {@link http://www.php.net/manual/en/class.mongocollection.php MongoCollection} derived from this.
     * <em>w</em> functionality is only available in version 1.5.1+ of
     * the MongoDB server and 1.0.8+ of the driver.
     * </p>
     * <p>
     * Unless <em>wtimeout</em> is set, the server waits forever for
     * replicating to <em>w</em> servers to finish.  The driver
     * defaults to waiting for 10 seconds, you can change this value to alter
     * its behavior.
     * </p>
     */
    public $wtimeout = 10000;

	/**
     * (PECL mongo &gt;= 0.9.0)<br/>
	 * Creates a new database
	 * This method is not meant to be called directly. The preferred way to create an instance of MongoDB is through {@see Mongo::__get()} or {@see Mongo::selectDB()}.
	 * @link http://www.php.net/manual/en/mongodb.construct.php
	 * @param MongoClient $conn Database connection.
	 * @param string $name Database name.
	 * @throws Exception
	 * @return MongoDB Returns the database.
     */
    public function __construct($conn, $name) {}

   /**
	* The name of this database
	* @link http://www.php.net/manual/en/mongodb.--tostring.php
/**
*<div id="mongodb.--tostring" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::__toString</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::__toString</span> &mdash; <span class="dc-title">The name of this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.--tostring-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>MongoDB::__toString</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>     <div class="refsect1 parameters" id="refsect1-mongodb.--tostring-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.--tostring-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns this database&#039;s name.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
    * @return string Returns this database's name.*/
    public function __toString() {}

    /**
    * (PECL mongo &gt;= 1.0.2)<br/>
	* Gets a collection
	* @link http://www.php.net/manual/en/mongodb.get.php
    * @param string $name The name of the collection.
    * @return MongoCollection
    */
    public function __get($name) {}

/**
*<div id="mongodb.getcollectionnames" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::getCollectionNames</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoDB::getCollectionNames</span> &mdash; <span class="dc-title">Gets an array of names for all collections in this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.getcollectionnames-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::getCollectionNames</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>    <p class="para rdfs-comment">    Gets a list of all collections in the database and returns their names as an    array of strings.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">This method will use the <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/listCollections" class="link external">&raquo;&nbsp;listCollections</a> database command when communicating with MongoDB 2.8+. For previous database versions, the method will query the special <em>system.namespaces</em> collection.</span></p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.getcollectionnames-parameters">   <h3 class="title">参数</h3>   <dl>          <dt>       <code class="parameter">options</code>     </dt>      <dd>       <p class="para">       An array of options for listing the collections. Currently available       options include:       <ul class="itemizedlist">        <li class="listitem"><p class="para"><em>&quot;filter&quot;</em></p><p class="para">Optional query criteria. If provided, this criteria will be used to filter the collections included in the result.</p><p class="para">Relevant fields that may be queried include <em>&quot;name&quot;</em> (collection name as a string, without the database name prefix) and <em>&quot;options&quot; (object containing options used to create the collection).</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">MongoDB 2.6 and earlier versions require the <em>&quot;name&quot;</em> criteria, if specified, to be a string value (i.e. equality match). This is because the driver must prefix the value with the database name in order to query the <em>system.namespaces</em> collection. Later versions of MongoDB do not have this limitation, as the driver will use the listCollections command.</span></p></blockquote></li>        <li class="listitem"><p class="para"><em>&quot;includeSystemCollections&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Determines whether system collections should be included in the result.</p></li>       </ul>      </p>      <p class="para">       The following option may be used with MongoDB 2.8+:       <ul class="itemizedlist">        <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>       </ul>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.getcollectionnames-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the collection names as an array of strings.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongodb.getcollectionnames-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    For MongoDB 2.6 and earlier, <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> will be    thrown if a non-string value was specified for the    <em>&quot;filter&quot;</em> option&#039;s <em>&quot;name&quot;</em> criteria.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.getcollectionnames-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>1.6.0</td>       <td>        Changed first parameter to be an array of options. Pre-1.6.0, the        first parameter was a boolean indicating the        <em>&quot;includeSystemCollections&quot;</em> option.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 examples" id="refsect1-mongodb.getcollectionnames-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1507">    <p><strong>Example #1 <span class="function"><strong>MongoDB::getCollectionNames()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"demo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collections&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCollectionNames</span><span style="color: #007700">();<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$collections&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$collectionName</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Found&nbsp;collection:&nbsp;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$collectionName</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> ... Found collection: img Found collection: beer Found collection: collation ... </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.getcollectionnames-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link MongoDB::listCollections()} - Gets an array of MongoCollection objects for all collections in this database</span></li>     <li class="member"><span class="function">{@link MongoDB::getCollectionInfo()} - Returns information about collections in this database</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
     * @return array Returns the names of the all the collections in the database as an*/
    public function getCollectionNames($includeSystemCollections = false) {}

    /**
     * (PECL mongo &gt;= 0.9.0)<br/>
	 * Fetches toolkit for dealing with files stored in this database
	 * @link http://www.php.net/manual/en/mongodb.getgridfs.php
	 * @param string $prefix [optional] The prefix for the files and chunks collections.
	 * @return MongoGridFS Returns a new gridfs object for this database.
	 */
/**
*<div id="mongodb.getgridfs" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::getGridFS</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::getGridFS</span> &mdash; <span class="dc-title">Fetches toolkit for dealing with files stored in this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.getgridfs-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongogridfs.php" class="type MongoGridFS">MongoGridFS</a></span> <span class="methodname"><strong>MongoDB::getGridFS</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code><span class="initializer"> = &quot;fs&quot;</span></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodb.getgridfs-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">prefix</code>      </dt>       <dd>        <p class="para">        The prefix for the files and chunks collections.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.getgridfs-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns a new gridfs object for this database.   </p>  </div>     <div class="refsect1 examples" id="refsect1-mongodb.getgridfs-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1509">    <p><strong>Example #1 <span class="function"><strong>MongoDB::getGridFS()</strong></span> example</strong></p>    <div class="example-contents"><p>This example demonstrates how get a MongoGridFS instance.</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$prefix&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'files'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">(</span><span style="color: #9876AA">$prefix</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>     Read more about the <a href="http://php.net/manual/zh/class.mongogridfs.php" class="classname">MongoGridFS</a> to learn how to store files with MongoDB.    </p></div>   </div>    </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function getGridFS($prefix = "fs") {}

   /**
    * (PECL mongo &gt;= 0.9.0)<br/>
	* Gets this database's profiling level
	* @link http://www.php.net/manual/en/mongodb.getprofilinglevel.php
/**
*<div id="mongodb.getprofilinglevel" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::getProfilingLevel</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::getProfilingLevel</span> &mdash; <span class="dc-title">Gets this database&#039;s profiling level</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.getprofilinglevel-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoDB::getProfilingLevel</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This returns the current database profiling level.   </p>   <p class="para">    The database profiler tracks query execution times.  If you turn it on (say,    using <span class="function">{@link MongoDB::setProfilingLevel()}</span> or the shell), you can    see how many queries took longer than a given number of milliseconds or the    timing for all queries.   </p>   <p class="para">    Note that profiling slows down queries, so it is better to use in development    or testing than in a time-sensitive application.   </p>   <p class="para">    This function is equivalent to running:    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">getProfilingLevel</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'profile'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.getprofilinglevel-parameters">   <h3 class="title">参数</h3>     <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.getprofilinglevel-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the profiling level.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.getprofilinglevel-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/manage-the-database-profiler/" class="link external">&raquo;&nbsp;profiling</a></li>    <li class="member"><span class="methodname">{@link MongoDB::setProfilingLevel()} - Sets this database's profiling level</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
    * @return int Returns the profiling level.*/
    public function getProfilingLevel() {}

/**
*<div id="mongodb.getslaveokay" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::getSlaveOkay</h1>   <p class="verinfo">(PECL mongo &gt;=1.1.0)</p><p class="refpurpose"><span class="refname">MongoDB::getSlaveOkay</span> &mdash; <span class="dc-title">Get slaveOkay setting for this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.getslaveokay-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoDB::getSlaveOkay</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    See <a href="http://php.net/manual/zh/mongo.queries.php" class="link">the query section</a> of this manual for    information on distributing reads to secondaries.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.getslaveokay-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.getslaveokay-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the value of slaveOkay for this instance.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.getslaveokay-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.getslaveokay-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a></li>    <li class="member"><span class="methodname">{@link MongoDB::getReadPreference()} - Get the read preference for this database</span></li>    <li class="member"><span class="methodname">{@link MongoDB::setReadPreference()} - Set the read preference for this database</span></li>   </ul>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
     * @return bool Returns the value of slaveOkay for this instance.*/
    public function getSlaveOkay () {}
    /**
     * (PECL mongo &gt;= 0.9.0)<br/>
	 * Sets this database's profiling level
	 * @link http://www.php.net/manual/en/mongodb.setprofilinglevel.php
	 * @param int $level Profiling level.
	 * @return int Returns the previous profiling level.
	 */
/**
*<div id="mongodb.setprofilinglevel" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::setProfilingLevel</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::setProfilingLevel</span> &mdash; <span class="dc-title">Sets this database&#039;s profiling level</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.setprofilinglevel-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoDB::setProfilingLevel</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span>    )</div>    <p class="para rdfs-comment">    This changes the current database profiling level.   </p>   <p class="para">    This function is equivalent to running:    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">setProfilingLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">$level</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'profile'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$level</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>   <p class="para">    The options for level are 0 (off), 1 (queries &gt; 100ms), and 2 (all queries).    If you would like to profile queries that take longer than another time     period, use the database command and pass it a second option, the number of    milliseconds.  For example, to profile all queries that take longer than one    second, run:    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'profile'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'slowms'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>   <p class="para">    Profiled queries will appear in the <em>system.profile</em>     collection of this database.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.setprofilinglevel-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">level</code>      </dt>       <dd>        <p class="para">        Profiling level.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.setprofilinglevel-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns the previous profiling level.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.setprofilinglevel-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/manage-the-database-profiler/" class="link external">&raquo;&nbsp;profiling</a></li>    <li class="member"><span class="methodname">{@link MongoDB::getProfilingLevel()} - Gets this database's profiling level</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function setProfilingLevel($level) {}

   /**
    * (PECL mongo &gt;= 0.9.0)<br/>
	* Drops this database
	* @link http://www.php.net/manual/en/mongodb.drop.php
/**
*<div id="mongodb.drop" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::drop</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::drop</span> &mdash; <span class="dc-title">删除数据库</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.drop-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::drop</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    这个方法删除 (drop) 当前使用的整个数据库。   </p>   <p class="para">    这相当于执行：    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">drop</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"dropDatabase"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.drop-parameters">   <h3 class="title">参数</h3>       <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.drop-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数据库响应   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.drop-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1502">    <p><strong>Example #1 <span class="function"><strong>MongoDB::drop()</strong></span> 例子</strong></p>    <div class="example-contents"><p>这个实例演示如何删除一个数据库，以及通常的响应。</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">foo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drop</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [dropped] =&gt; foo.$cmd     [ok] =&gt; 1 ) </pre></div>    </div>   </div>    </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
    * @return array Returns the database response.*/
    public function drop() {}

    /**
	 * Repairs and compacts this database
	 * @link http://www.php.net/manual/en/mongodb.repair.php
	 * @param bool $preserve_cloned_files [optional] <p>If cloned files should be kept if the repair fails.</p>
	 * @param bool $backup_original_files [optional] <p>If original files should be backed up.</p>
	 * @return array <p>Returns db response.</p>
	 */
/**
*<div id="mongodb.repair" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::repair</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::repair</span> &mdash; <span class="dc-title">Repairs and compacts this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.repair-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::repair</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$preserve_cloned_files</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$backup_original_files</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">    This creates a fresh copy of all database data.  It will remove any corrupt     data and compact and large stretches of free space it finds.  This is a very    slow operation on a large database.   </p>   <p class="para">    This is usually run from the shell or the command line, not the driver.   </p>   <p class="para">      It is equivalent to the function:    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">repair</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'repairDatabase'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.repair-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">preserve_cloned_files</code>      </dt>       <dd>        <p class="para">        If cloned files should be kept if the repair fails.       </p>      </dd>                    <dt>        <code class="parameter">backup_original_files</code>      </dt>       <dd>        <p class="para">        If original files should be backed up.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.repair-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns db response.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.repair-seealso">   <h3 class="title">参见</h3>   <p class="para">    MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/repairDatabase" class="link external">&raquo;&nbsp;repairDatabase</a>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.repair-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1515">    <p><strong>Example #1 <span class="function"><strong>MongoDB::repair()</strong></span> example</strong></p>    <div class="example-contents"><p>This example demonstrates how to repare and compact a database.</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">foo</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">repair</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [ok] =&gt; 1 ) </pre></div>    </div>   </div>    </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function repair($preserve_cloned_files = FALSE, $backup_original_files = FALSE) {}

    /**
     * (PECL mongo &gt;= 0.9.0)<br/>
	 * Gets a collection
	 * @link http://www.php.net/manual/en/mongodb.selectcollection.php
	 * @param string $name <b>The collection name.</b>
     * @throws Exception if the collection name is invalid.
     * @return MongoCollection <p>
     * Returns a new collection object.
     * </p>
	 */
/**
*<div id="mongodb.selectcollection" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::selectCollection</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::selectCollection</span> &mdash; <span class="dc-title">Gets a collection</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongodb.selectcollection-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocollection.php" class="type MongoCollection">MongoCollection</a></span> <span class="methodname"><strong>MongoDB::selectCollection</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodb.selectcollection-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">name</code>      </dt>       <dd>        <p class="para">        The collection name.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.selectcollection-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns a new collection object.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongodb.selectcollection-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.exception.php" class="classname">Exception</a> if the collection name is invalid.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function selectCollection($name) {}

/**
*<div id="mongodb.setslaveokay" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::setSlaveOkay</h1>   <p class="verinfo">(PECL mongo &gt;=1.1.0)</p><p class="refpurpose"><span class="refname">MongoDB::setSlaveOkay</span> &mdash; <span class="dc-title">Change slaveOkay setting for this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.setslaveokay-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoDB::setSlaveOkay</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$ok</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>     <p class="para rdfs-comment">    See <a href="http://php.net/manual/zh/mongo.queries.php" class="link">the query section</a> of this manual for    information on distributing reads to secondaries.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.setslaveokay-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">ok</code>      </dt>       <dd>        <p class="para">        If reads should be sent to secondary members of a replica set for all         possible queries using this <a href="http://php.net/manual/zh/class.mongodb.php" class="classname">MongoDB</a> instance.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.setslaveokay-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the former value of slaveOkay for this instance.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.setslaveokay-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.setslaveokay-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a></li>    <li class="member"><span class="methodname">{@link MongoDB::setReadPreference()} - Set the read preference for this database</span></li>    <li class="member"><span class="methodname">{@link MongoDB::getReadPreference()} - Get the read preference for this database</span></li>   </ul>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
     * @return bool Returns the former value of slaveOkay for this instance.*/
    public function setSlaveOkay ($ok = true) {}

	/**
	 * Creates a collection
	 * @link http://www.php.net/manual/en/mongodb.createcollection.php
	 * @param string $name The name of the collection.
     * @param array $options [optional] <p>
     * <p>
     * An array containing options for the collections. Each option is its own
     * element in the options array, with the option name listed below being
     * the key of the element. The supported options depend on the MongoDB
     * server version. At the moment, the following options are supported:
     * </p>
     * <p>
     * <b>capped</b>
     * <p>
     * If the collection should be a fixed size.
     * </p>
     * </p>
     * <p>
     * <b>size</b>
     * <p>
     * If the collection is fixed size, its size in bytes.</p></p>
     * <p><b>max</b>
     * <p>If the collection is fixed size, the maximum number of elements to store in the collection.</p></p>
     * <i>autoIndexId</i>
     *
     * <p>
     * If capped is <b>TRUE</b> you can specify <b>FALSE</b> to disable the
     * automatic index created on the <em>_id</em> field.
     * Before MongoDB 2.2, the default value for
     * <em>autoIndexId</em> was <b>FALSE</b>.
     * </p>
     * </p>
	 * @return MongoCollection <p>Returns a collection object representing the new collection.</p>
/**
*<div id="mongodb.createcollection" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::createCollection</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::createCollection</span> &mdash; <span class="dc-title">创建一个集合</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongodb.createcollection-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocollection.php" class="type MongoCollection">MongoCollection</a></span> <span class="methodname"><strong>MongoDB::createCollection</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div>       <p class="para rdfs-comment">    这个方法用于创建一个“有限集合”之类需要特殊参数的集合。它相当于执行    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"create"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$name</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"capped"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$options</span><span style="color: #007700">[</span><span style="color: #DD0000">"capped"</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"size"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$options</span><span style="color: #007700">[</span><span style="color: #DD0000">"size"</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"max"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$options</span><span style="color: #007700">[</span><span style="color: #DD0000">"max"</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"autoIndexId"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$options</span><span style="color: #007700">[</span><span style="color: #DD0000">"autoIndexId"</span><span style="color: #007700">],<br />));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     参考 <span class="function">{@link MongoDB::command()}</span>    了解更多关于数据库指令的信息   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.createcollection-parameters">   <h3 class="title">参数</h3>    <p class="para">    <dl>            <dt>        <code class="parameter">name</code>      </dt>       <dd>        <p class="para">        集合的名字       </p>      </dd>                     <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        一个数组，包含集合的选项，具有以下形式：        <em>array(&quot;optionname&quot; =&gt; &quot;optionvalue&quot;, ...)</em>        。支持的选项跟MongoDB服务器的版本有关。目前支持的选项有：       </p>       <p class="para">        <dl>                    <dt>            <code class="parameter">capped</code>          </dt>           <dd>            <p class="para">            这个集合是否是固定大小的。           </p>          </dd>                                <dt>            <code class="parameter">size</code>          </dt>           <dd>            <p class="para">            如果是固定大小的，指定它的大小（字节）。           </p>          </dd>                                <dt>            <code class="parameter">max</code>          </dt>           <dd>            <p class="para">            如果是固定大小的，指定集合中最多存储多少个文档。           </p>          </dd>                                <dt>            <code class="parameter">autoIndexId</code>          </dt>           <dd>            <p class="para">            如果 capped 是 <strong><code>TRUE</code></strong> 你可以显式定义为 <strong><code>FALSE</code></strong> 来禁用 自增<em>_id</em> 特性。MongoDB 2.2以前，            <em>autoIndexId</em>            的默认值是<strong><code>FALSE</code></strong>。           </p>          </dd>                     </dl>        </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.createcollection-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回新建的集合对象。   </p>  </div>   <div class="refsect1 examples" id="refsect1-mongodb.createcollection-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1499">    <p><strong>Example #1 <span class="function"><strong>MongoDB::createCollection()</strong></span> 固定大小集合 实例</strong></p>    <div class="example-contents"><p>     固定大小（capped）集合是一种磁盘容量或者文档数量固定的特殊集合。当集合“满了”的时候，最老的文档就会被新文档代替。固定大小集合在类似日志记录的应用中非常有用，比如你需要保留一定量的日志，不用担心它们占用过多的空间。    </p></div>    <div class="example-contents"><p>     这个例子建立了一个非常小的日志集合，保存10条日志。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$log&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createCollection</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"logger"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'capped'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'size'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">*</span><span style="color: #9876AA">1024</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'max'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">10<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">)<br />);<br /><br />for&nbsp;(</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #9876AA">100</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$log</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"level"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">WARN</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"msg"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"sample&nbsp;log&nbsp;message&nbsp;#</span><span style="color: #9876AA">$i</span><span style="color: #DD0000">"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"ts"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">()));<br />}<br /><br /></span><span style="color: #9876AA">$msgs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$log</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$msgs&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$msg</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$msg</span><span style="color: #007700">[</span><span style="color: #DD0000">'msg'</span><span style="color: #007700">].</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> sample log message #90<br /> sample log message #91<br /> sample log message #92<br /> sample log message #93<br /> sample log message #94<br /> sample log message #95<br /> sample log message #96<br /> sample log message #97<br /> sample log message #98<br /> sample log message #99<br />    </div>   </div>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.createcollection-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.4.0</td>        <td>         <p class="para">          1.4.0以前的版本里，所有选项都是这个方法的参数。之前版本这个方法的签名是这样的：         </p>         <p class="para">          <div class="methodsynopsis dc-description">           <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocollection.php" class="type MongoCollection">MongoCollection</a></span> <span class="methodname"><strong>MongoDB::createCollection</strong></span>            ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>           [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$capped</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>           [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code><span class="initializer"> = 0</span></span>           [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$max</code><span class="initializer"> = 0</span></span>          ]]] )</div>          </p>         <p class="para">          参数的意义与现在版本的          <code class="parameter">options</code>          参数相同。         </p>        </td>       </tr>       </tbody>         </table>    </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function createCollection($name, $options) {}

    /**
     * (PECL mongo &gt;= 0.9.0)<br/>
     * @deprecated Use MongoCollection::drop() instead.
     * Drops a collection
	 * @link http://www.php.net/manual/en/mongodb.dropcollection.php
	 * @param MongoCollection|string $coll MongoCollection or name of collection to drop.
	 * @return array Returns the database response.
	 */
/**
*<div id="mongodb.dropcollection" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::dropCollection</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::dropCollection</span> &mdash; <span class="dc-title">Drops a collection [deprecated]</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongodb.dropcollection-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::dropCollection</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$coll</code></span>    )</div>     <div class="warning"><strong class="warning">Warning</strong>    <h1 class="title">Deprecated</h1>    <p class="para">     Use <span class="function">{@link MongoCollection::drop()}</span> instead.    </p>    <p class="para">     <em class="emphasis">      This function leaks memory in version 1.0.7 and earlier!     </em>    </p>   </div>   </div>   <div class="refsect1 parameters" id="refsect1-mongodb.dropcollection-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">coll</code>      </dt>       <dd>        <p class="para">        MongoCollection or name of collection to drop.       </p>      </dd>             </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-mongodb.dropcollection-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns the database response.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function dropCollection($coll) {}

   /**
    * (PECL mongo &gt;= 0.9.0)<br/>
	* Get a list of collections in this database
	* @link http://www.php.net/manual/en/mongodb.listcollections.php
/**
*<div id="mongodb.listcollections" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::listCollections</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::listCollections</span> &mdash; <span class="dc-title">Gets an array of MongoCollection objects for all collections in this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.listcollections-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::listCollections</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>    <p class="para rdfs-comment">    Gets a list of all collections in the database and returns them as an array    of <a href="http://php.net/manual/zh/class.mongocollection.php" class="classname">MongoCollection</a> objects.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">This method will use the <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/listCollections" class="link external">&raquo;&nbsp;listCollections</a> database command when communicating with MongoDB 2.8+. For previous database versions, the method will query the special <em>system.namespaces</em> collection.</span></p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.listcollections-parameters">   <h3 class="title">参数</h3>   <dl>          <dt>       <code class="parameter">options</code>     </dt>      <dd>       <p class="para">       An array of options for listing the collections. Currently available       options include:       <ul class="itemizedlist">        <li class="listitem"><p class="para"><em>&quot;filter&quot;</em></p><p class="para">Optional query criteria. If provided, this criteria will be used to filter the collections included in the result.</p><p class="para">Relevant fields that may be queried include <em>&quot;name&quot;</em> (collection name as a string, without the database name prefix) and <em>&quot;options&quot; (object containing options used to create the collection).</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">MongoDB 2.6 and earlier versions require the <em>&quot;name&quot;</em> criteria, if specified, to be a string value (i.e. equality match). This is because the driver must prefix the value with the database name in order to query the <em>system.namespaces</em> collection. Later versions of MongoDB do not have this limitation, as the driver will use the listCollections command.</span></p></blockquote></li>        <li class="listitem"><p class="para"><em>&quot;includeSystemCollections&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Determines whether system collections should be included in the result.</p></li>       </ul>      </p>      <p class="para">       The following option may be used with MongoDB 2.8+:       <ul class="itemizedlist">        <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>       </ul>      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.listcollections-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array of MongoCollection objects.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongodb.listcollections-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    For MongoDB 2.6 and earlier, <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> will be    thrown if a non-string value was specified for the    <em>&quot;filter&quot;</em> option&#039;s <em>&quot;name&quot;</em> criteria.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.listcollections-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>1.6.0</td>       <td>        Changed first parameter to be an array of options. Pre-1.6.0, the        first parameter was a boolean indicating the        <em>&quot;includeSystemCollections&quot;</em> option.       </td>      </tr>       <tr>       <td>1.3.0</td>       <td>        Added the <code class="parameter">includeSystemCollections</code> parameter.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 examples" id="refsect1-mongodb.listcollections-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1514">    <p><strong>Example #1 <span class="function"><strong>MongoDB::listCollections()</strong></span> example</strong></p>    <div class="example-contents"><p>     The following example demonstrates running count on each collection in a database.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"demo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collections&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">listCollections</span><span style="color: #007700">();<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$collections&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"amount&nbsp;of&nbsp;documents&nbsp;in&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #DD0000">:&nbsp;"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> ... amount of documents in demo.pubs: 4 amount of documents in demo.elephpants: 3 amount of documents in demo.cities: 22840 ... </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.listcollections-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link MongoDB::getCollectionNames()} - Gets an array of names for all collections in this database</span></li>     <li class="member"><span class="function">{@link MongoDB::getCollectionInfo()} - Returns information about collections in this database</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
    * @return array Returns a list of MongoCollections.*/
    public function listCollections($includeSystemCollections = false) {}

    /**
     * (PECL mongo &gt;= 0.9.0)<br/>
     * Creates a database reference
	 * @link http://www.php.net/manual/en/mongodb.createdbref.php
	 * @param string $collection The collection to which the database reference will point.
	 * @param mixed $document_or_id <p>
     * If an array or object is given, its <em>_id</em> field will be
     * used as the reference ID. If a {@see MongoId} or scalar
     * is given, it will be used as the reference ID.
     * </p>
	 * @return array <p>Returns a database reference array.</p>
     * <p>
     * If an array without an <em>_id</em> field was provided as the
     * <em>document_or_id</em> parameter, <b>NULL</b> will be returned.
     * </p>
	 */
/**
*<div id="mongodb.createdbref" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::createDBRef</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::createDBRef</span> &mdash; <span class="dc-title">创建数据库引用</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.createdbref-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::createDBRef</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$collection</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$document_or_id</code></span>    )</div>    <p class="para rdfs-comment">    这个方法是一个创建数据库引用的扩展接口（参考<a href="http://php.net/manual/zh/class.mongodbref.php" class="classname">MongoDBRef</a>）   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.createdbref-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">collection</code>      </dt>       <dd>        <p class="para">        数据库引用指向的集合       </p>      </dd>                    <dt>        <code class="parameter">document_or_id</code>      </dt>       <dd>        <p class="para">        如果是一个数组或对象，它的        <em>_id</em>        字段将被用做引用ID，如果是一个        <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a>        对象或简单变量，它本身将作为引用ID。       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.createdbref-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数据库引用数组。   </p>   <p class="para">    如果一个没有    <em>_id</em>    字段的数组作为    <em>document_or_id</em>    参数，<strong><code>NULL</code></strong>会被返回。   </p>  </div>   <div class="refsect1 examples" id="refsect1-mongodb.createdbref-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1500">    <p><strong>Example #1 <span class="function"><strong>MongoDB::createDBRef()</strong></span>实例</strong></p>    <div class="example-contents"><p>     演示如何从程序中创建文档的数据库引用。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$articles&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">articles</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$article&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;</span><span style="color: #DD0000">'title'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Test&nbsp;article'</span><span style="color: #007700">,<br />&nbsp;</span><span style="color: #DD0000">'description'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Test&nbsp;article&nbsp;description'<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$articles</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$article</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$ref&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDBRef</span><span style="color: #007700">(</span><span style="color: #DD0000">'articles'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$article</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$article</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$ref</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen">      <div class="cdata"><pre>      Array      (          [title] =&gt; Test article          [description] =&gt; Test article description          [_id] =&gt; MongoId Object              (              )       )      Array      (          [$ref] =&gt; articles          [$id] =&gt; MongoId Object              (              )       )      </pre></div>    </div>    <div class="example-contents"><p>      现在$ref可以被保存到另一个文档中，并在之后通过      <span class="methodname">{@link MongoDB::getDBRef()}</span>或<span class="methodname">{@link MongoCollection::getDBRef()}</span>      方法取回。    </p></div>   </div>   <div class="example" id="example-1501">    <p><strong>Example #2 <span class="function"><strong>MongoDB::createDBRef()</strong></span>实例</strong></p>    <div class="example-contents"><p>     演示如何在程序中值通过一个id创建数据库引用。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$id&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoId</span><span style="color: #007700">(</span><span style="color: #DD0000">'47cc67093475061e3d9536d2'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$ref&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDBRef</span><span style="color: #007700">(</span><span style="color: #DD0000">'articles'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$id</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function createDBRef($collection, $document_or_id) {}


	/**
     * (PECL mongo &gt;= 0.9.0)<br/>
	 * Fetches the document pointed to by a database reference
	 * @link http://www.php.net/manual/en/mongodb.getdbref.php
	 * @param array $ref A database reference.
	 * @return array Returns the document pointed to by the reference.
	 */
/**
*<div id="mongodb.getdbref" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::getDBRef</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoDB::getDBRef</span> &mdash; <span class="dc-title">Fetches the document pointed to by a database reference</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.getdbref-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::getDBRef</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$ref</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodb.getdbref-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">ref</code>      </dt>       <dd>        <p class="para">        A database reference.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.getdbref-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the document pointed to by the reference.   </p>  </div>   <div class="refsect1 examples" id="refsect1-mongodb.getdbref-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1508">    <p><strong>Example #1 <span class="function"><strong>MongoDB::getDBRef()</strong></span> example</strong></p>    <div class="example-contents"><p>     Example demonstrating how to get a database reference and what the expected     input is.    </p></div>    <div class="example-contents">  <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />&nbsp;$ref&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$ref'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'profiles'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoId</span><span style="color: #007700">(</span><span style="color: #DD0000">'47cc67093475061e3d9536d2'</span><span style="color: #007700">)<br />&nbsp;);<br />&nbsp;<br />&nbsp;</span><span style="color: #9876AA">$profile&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDBRef</span><span style="color: #007700">(</span><span style="color: #9876AA">$ref</span><span style="color: #007700">);<br />&nbsp;</span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>     See <span class="function">{@link MongoDB::createDBRef()}</span> for more information about how to programatically create DB references.    </p></div>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function getDBRef(array $ref) {}

/**
*<div id="mongodb.getwriteconcern" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::getWriteConcern</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoDB::getWriteConcern</span> &mdash; <span class="dc-title">Get the write concern for this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.getwriteconcern-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::getWriteConcern</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodb.getwriteconcern-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.getwriteconcern-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the write concern. The array contains the values <em>w</em> for an integer acknowledgement level or string mode, and <em>wtimeout</em> denoting the maximum number of milliseconds to wait for the server to satisfy the write concern.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.getwriteconcern-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1511">    <p><strong>Example #1 <span class="methodname"><strong>MongoDB::getWriteConcern()</strong></span> return value example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$mc&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongodb://localhost:27017'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'wTimeoutMS'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">500</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getWriteConcern</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setWriteConcern</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getWriteConcern</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;w&quot;]=&gt;   int(1)   [&quot;wtimeout&quot;]=&gt;   int(500) } array(2) {   [&quot;w&quot;]=&gt;   int(1)   [&quot;wtimeout&quot;]=&gt;   int(1000) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.getwriteconcern-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> documentation.</li>    <li class="member"><span class="function">{@link MongoDB::setWriteConcern()} - Set the write concern for this database</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
     * @return array <p>This function returns an array describing the write concern.*/
    public function getWriteConcern() {}
    /**
     * (PECL mongo &gt;= 0.9.3)<br/>
	 * Runs JavaScript code on the database server.
	 * @link http://www.php.net/manual/en/mongodb.execute.php
	 * @param MongoCode|string $code Code to execute.
	 * @param array $args [optional] Arguments to be passed to code.
	 * @return array Returns the result of the evaluation.
	 */
/**
*<div id="mongodb.execute" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::execute</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.3)</p><p class="refpurpose"><span class="refname">MongoDB::execute</span> &mdash; <span class="dc-title">在数据库服务器上运行JavaScript</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.execute-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::execute</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$code</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code><span class="initializer"> = array()</span></span>   ] )</div>    <p class="para rdfs-comment">    MongoDB服务器运行着一个JavaScript引擎。这个方法允许在服务器上执行任意JavaScript代码。如果你想要利用较少资源处理大量集合，或者在服务器上处理一些结果集以减少网络传输，那么这个方法会有用。   </p>   <p class="para">    在服务器运行JavaScript代码会创建一个写锁定，这意味着它锁定了其他操作的执行。在运行一段耗时较长的代码之前，请考虑到这一点。   </p>   <p class="para">    这是一个数据库指令的包装，它简单的说相当于：    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$code</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$args</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'$eval'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$code</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'args'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$args</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>   <p class="para">    如果所执行的代码只有一个语句，且只有一行，MongoDB隐含一个return语句。这允许一些直观的行为，比如下面的例子返回&quot;foo&quot;：   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">'"foo";'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    <p class="para">    但是下面这两个例子返回<strong><code>NULL</code></strong>:   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">'"bar";&nbsp;"foo";'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;多个语句<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">'db.foo.count(<br />);'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;多行<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    <p class="para">    为了防止意外的行为，最好不要依赖MongoDB决定你的返回值。而是明确的提供一个return语句。上面的例子中，可以把代码改为：   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">'"bar";&nbsp;return&nbsp;"foo";'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">'return&nbsp;db.foo.count(<br />);'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    <p class="para">    这样第一个语句会返回&quot;foo&quot;，第二个语句会返回&quot;foo&quot;集合的长度。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.execute-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">code</code>      </dt>       <dd>        <p class="para">        <a href="http://php.net/manual/zh/class.mongocode.php" class="classname">MongoCode</a>或要执行的字符串       </p>      </dd>                    <dt>        <code class="parameter">args</code>      </dt>       <dd>        <p class="para">        给<em>code</em>的参数。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.execute-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回执行结果   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.execute-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1503">    <p><strong>Example #1 简单的 <span class="function"><strong>MongoDB::execute()</strong></span> 实例</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">"function()&nbsp;{&nbsp;return&nbsp;'Hello,&nbsp;world!';&nbsp;}"</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$response</span><span style="color: #007700">[</span><span style="color: #DD0000">'retval'</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> Hello, world!<br />    </div>   </div>   <div class="example" id="example-1504">    <p><strong>Example #2 带参数的 <span class="function"><strong>MongoDB::execute()</strong></span> 实例</strong></p>    <div class="example-contents"><p>     可选的参数将被传递给JavaScrip函数    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">"function(greeting,&nbsp;name)&nbsp;{&nbsp;return&nbsp;greeting+',&nbsp;'+name+'!';&nbsp;}"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"Good&nbsp;bye"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">));<br />echo&nbsp;</span><span style="color: #9876AA">$response</span><span style="color: #007700">[</span><span style="color: #DD0000">'retval'</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> Good bye, Joe!<br />    </div>   </div>   <div class="example" id="example-1505">    <p><strong>Example #3 作用域实例</strong></p>    <div class="example-contents"><p>     如果使用     <a href="http://php.net/manual/zh/class.mongocode.php" class="classname">MongoCode</a>     对象代替字符串作为第一个参数。可以传递一个作用域到将要执行的JavaScript中。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$func&nbsp;</span><span style="color: #007700">=&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"function(greeting,&nbsp;name)&nbsp;{&nbsp;"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"return&nbsp;greeting+',&nbsp;'+name+',&nbsp;says&nbsp;'+greeter;"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"}"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$scope&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"greeter"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Fred"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$code&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCode</span><span style="color: #007700">(</span><span style="color: #9876AA">$func</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$scope</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$code</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"Goodbye"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">));<br />echo&nbsp;</span><span style="color: #9876AA">$response</span><span style="color: #007700">[</span><span style="color: #DD0000">'retval'</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> Goodbye, Joe, says Fred <br />    </div>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function execute($code, array $args = array()) {}

    /**
	 * Execute a database command
	 * @link http://www.php.net/manual/en/mongodb.command.php
	 * @param array $data The query to send.
     * @param array $options [optional] <p>
     * This parameter is an associative array of the form
     * <em>array("optionname" =&gt; &lt;boolean&gt;, ...)</em>. Currently
     * supported options are:
     * </p><ul>
     * <li><p><em>"timeout"</em></p><p>Deprecated alias for <em>"socketTimeoutMS"</em>.</p></li>
     * </ul>
	 * @return array Returns database response.
/**
*<div id="mongodb.command" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::command</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.2)</p><p class="refpurpose"><span class="refname">MongoDB::command</span> &mdash; <span class="dc-title">执行一条 Mongo 指令</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongodb.command-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::command</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$command</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>    <p class="para rdfs-comment">    几乎所有不属于CRUD操作的事情都可以通过一条“数据库指令”完成。需要知道数据库的版本？有一条指令可以实现。需要进行一次聚合？有一条指令可以实现。想要提高日志级别？有一条指令可以实现。我想你已经领会到了。   </p>   <p class="para">    该方法等同于：    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">command</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'$cmd'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>   <div class="refsect1 parameters" id="refsect1-mongodb.command-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">command</code>      </dt>       <dd>        <p class="para">        要发送的指令       </p>      </dd>                    <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        该参数是一个具有以下形式的关联数组：        <em>array(&quot;optionname&quot; =&gt; &lt;boolean&gt;, ...)</em>，现在支持的选项有：        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.command-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.0</td>        <td>         添加 <em>options</em> 参数，和一个选项:<em>&quot;timeout&quot;</em>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.command-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    返回数据库响应。每个响应都不会超过一个文档的大小，也就是不会超过16MB。    结果文档的结构与执行的指令有关,但大部分结果都有    <em>ok</em> 字段来表示成功还是失败。以及    <em>results</em> 字段包含一个结果文档数组。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.command-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1494">    <p><strong>Example #1 <span class="function"><strong>MongoDB::command()</strong></span> &quot;distinct&quot;实例</strong></p>    <div class="example-contents"><p>     查找一个键的所有不重复值    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$people&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">people</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Sally"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Dave"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Molly"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">87</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$ages&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"distinct"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"people"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"key"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"age"</span><span style="color: #007700">));<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$ages</span><span style="color: #007700">[</span><span style="color: #DD0000">'values'</span><span style="color: #007700">]&nbsp;as&nbsp;</span><span style="color: #9876AA">$age</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$age</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> 4<br /> 22<br /> 87<br />    </div>   </div>    <div class="example" id="example-1495">    <p><strong>Example #2 <span class="function"><strong>MongoDB::command()</strong></span> &quot;distinct&quot;实例</strong></p>    <div class="example-contents"><p>     查找一个键的所有不重复值，并且这些值大于等于18    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$people&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">people</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Sally"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Dave"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Molly"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">87</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$ages&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"distinct"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"people"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"key"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"age"</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"query"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$gte'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">18</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;)<br />);&nbsp;&nbsp;<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$ages</span><span style="color: #007700">[</span><span style="color: #DD0000">'values'</span><span style="color: #007700">]&nbsp;as&nbsp;</span><span style="color: #9876AA">$age</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #9876AA">$age</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> 22<br /> 87<br />    </div>   </div>    <div class="example" id="example-1496">    <p><strong>Example #3 <span class="function"><strong>MongoDB::command()</strong></span> MapReduce实例</strong></p>    <div class="example-contents"><p>     获取所有有type=sale这样的&quot;event&quot;的用户，以及他们分别有几个这样的&quot;event&quot;（注:此处的event是一个集合的名字）    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;sample&nbsp;event&nbsp;document<br /></span><span style="color: #9876AA">$events</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"user_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$id</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"type"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$type</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"time"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(),&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"desc"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$description</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;construct&nbsp;map&nbsp;and&nbsp;reduce&nbsp;functions<br /></span><span style="color: #9876AA">$map&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"function()&nbsp;{&nbsp;emit(this.user_id,1);&nbsp;}"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$reduce&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"function(k,&nbsp;vals)&nbsp;{&nbsp;"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"var&nbsp;sum&nbsp;=&nbsp;0;"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"for&nbsp;(var&nbsp;i&nbsp;in&nbsp;vals)&nbsp;{"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"sum&nbsp;+=&nbsp;vals[i];"</span><span style="color: #007700">.&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"}"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"return&nbsp;sum;&nbsp;}"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$sales&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"mapreduce"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"events"</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"map"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$map</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"reduce"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$reduce</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"query"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"type"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"sale"</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"out"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"merge"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"eventCounts"</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">$users&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$sales</span><span style="color: #007700">[</span><span style="color: #DD0000">'result'</span><span style="color: #007700">])-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$users&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$user</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #007700">{</span><span style="color: #9876AA">$user</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">]}</span><span style="color: #DD0000">&nbsp;had&nbsp;</span><span style="color: #007700">{</span><span style="color: #9876AA">$user</span><span style="color: #007700">[</span><span style="color: #DD0000">'value'</span><span style="color: #007700">]}</span><span style="color: #DD0000">&nbsp;sale(s).\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> User 47cc67093475061e3d9536d2 had 3 sale(s).<br /> User 49902cde5162504500b45c2c had 14 sale(s).<br /> User 4af467e4fd543cce7b0ea8e2 had 1 sale(s).<br />    </div>    <blockquote class="note"><p><strong class="note">Note</strong>:      <strong>使用 <a href="http://php.net/manual/zh/class.mongocode.php" class="classname">MongoCode</a></strong><br />     <p class="para">      这个例子使用了      <a href="http://php.net/manual/zh/class.mongocode.php" class="classname">MongoCode</a>，它还可以接受一个作用域参数。然而，现在 MongoDB 还不支持在 MapReduce 中使用它，      如果你需要在MapReduce函数里用一个客户端参数，那么你可以在使用MapReduce的时候用“optional scope”字段把它们添加到全局作用域中，参考      <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/map-reduce/" class="link external">&raquo;&nbsp;MapReduce文档</a>       来获得更多信息。     </p>    </p></blockquote>    <blockquote class="note"><p><strong class="note">Note</strong>:      <strong><em>out</em> 参数</strong><br />     <p class="para">      1.8.0以前，<em>out</em>      参数是可选的，如果你不使用它，MapReduce的结果将被写入一个临时集合里，这个临时集合会在连接关闭后删除。      1.8.0以后，<em>out</em>      参数是必须的，参考      <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/map-reduce/" class="link external">&raquo;&nbsp;MapReduce documentation</a>       来获得更多信息。     </p>    </p></blockquote>   </div>    <div class="example" id="example-1497">    <p><strong>Example #4 <span class="function"><strong>MongoDB::command()</strong></span> &quot;textSearch&quot;实例</strong></p>    <div class="example-contents"><p>     在MongoDB 2.4以上版本中使用全文检索功能（之前的版本不支持全文检索）。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$d&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">demo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">planets</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Mercury"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"desc"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Mercury&nbsp;is&nbsp;the&nbsp;smallest&nbsp;and&nbsp;closest&nbsp;to&nbsp;the&nbsp;Sun"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Venus"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"desc"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Venus&nbsp;is&nbsp;the&nbsp;second&nbsp;planet&nbsp;from&nbsp;the&nbsp;Sun,&nbsp;orbiting&nbsp;it&nbsp;every&nbsp;224.7&nbsp;Earth&nbsp;days."</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Earth"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"desc"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Earth&nbsp;is&nbsp;the&nbsp;the&nbsp;densest&nbsp;of&nbsp;the&nbsp;eight&nbsp;planets&nbsp;in&nbsp;the&nbsp;Solar&nbsp;System."</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Mars"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"desc"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Mars&nbsp;is&nbsp;named&nbsp;after&nbsp;the&nbsp;Roman&nbsp;god&nbsp;of&nbsp;war."</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'desc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'text'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$r&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"text"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"planets"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'search'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"sun"&nbsp;</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> Array<br /> (<br />     [queryDebugString] =&gt; sun||||||<br />     [language] =&gt; english<br />     [results] =&gt; Array<br />         (<br />             [0] =&gt; Array<br />                 (<br />                     [score] =&gt; 0.625<br />                     [obj] =&gt; Array<br />                         (<br />                             [_id] =&gt; MongoId Object<br />                                 (<br />                                     [$id] =&gt; 517549d944670a4a5cb3059a<br />                                 )<br /> <br />                             [name] =&gt; Mercury<br />                             [desc] =&gt; Mercury is the smallest and closest to the Sun<br />                         )<br /> <br />                 )<br /> <br />             [1] =&gt; Array<br />                 (<br />                     [score] =&gt; 0.55<br />                     [obj] =&gt; Array<br />                         (<br />                             [_id] =&gt; MongoId Object<br />                                 (<br />                                     [$id] =&gt; 517549d944670a4a5cb3059b<br />                                 )<br /> <br />                             [name] =&gt; Venus<br />                             [desc] =&gt; Venus is the second planet from the Sun, orbiting it every 224.7 Earth days.<br />                         )<br /> <br />                 )<br /> <br />         )<br /> <br />     [stats] =&gt; Array<br />         (<br />             [nscanned] =&gt; 2<br />             [nscannedObjects] =&gt; 0<br />             [n] =&gt; 2<br />             [nfound] =&gt; 2<br />             [timeMicros] =&gt; 95<br />         )<br /> <br />     [ok] =&gt; 1<br /> )<br />    </div>   </div>    <div class="example" id="mongoclient-getconnections.example.basic">    <p><strong>Example #5 <span class="function"><strong>MongoDB::command()</strong></span> &quot;geoNear&quot;实例</strong></p>    <div class="example-contents"><p>     这个实例说明了如何使用 geoNear 指令。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$d&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">demo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">poiConcat</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$r&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'geoNear'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"poiConcat"</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;在&nbsp;poiConcat&nbsp;集合中<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'near'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(-</span><span style="color: #9876AA">0.08</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">51.48</span><span style="color: #007700">),&nbsp;</span><span style="color: #FF8000">//&nbsp;搜索&nbsp;51.48°N,&nbsp;0.08°E&nbsp;附近<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'spherical'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;启用特殊搜索<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'num'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;最多返回5个文档<br /></span><span style="color: #007700">));<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.command-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoCollection::aggregate()} - Perform an aggregation using the aggregation framework</span></li>     <li class="member"><span class="methodname">{@link MongoCollection::findAndModify()} - Update a document and return it</span></li>     <li class="member"><span class="methodname">{@link MongoCollection::group()} - Performs an operation similar to SQL's GROUP BY command</span></li>    </ul>   </p>   <p class="para">    MongoDB 核心文档的    <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/" class="link external">&raquo;&nbsp;数据库指令</a>    ，以及这些特定指令的文档    <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/findAndModify/" class="link external">&raquo;&nbsp;findAndModify</a>、    <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/getLastError/" class="link external">&raquo;&nbsp;getLastError</a>、    <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/repairDatabase/" class="link external">&raquo;&nbsp;repairDatabase</a>    （还有很多其他指令，这只是一些例子）   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function command(array $data, $options) {}

   /**
    * (PECL mongo &gt;= 0.9.5)<br/>
	* Check if there was an error on the most recent db operation performed
	* @link http://www.php.net/manual/en/mongodb.lasterror.php
/**
*<div id="mongodb.lasterror" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::lastError</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.5)</p><p class="refpurpose"><span class="refname">MongoDB::lastError</span> &mdash; <span class="dc-title">Check if there was an error on the most recent db operation performed</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.lasterror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::lastError</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method is equivalent to:    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">lastError</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'getlasterror'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.lasterror-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.lasterror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the error, if there was one.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.lasterror-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1512">    <p><strong>Example #1 <span class="function"><strong>MongoDB::lastError()</strong></span> <strong><code>NULL</code></strong> error example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resetError</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lastError</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;err&quot;]=&gt;   NULL   [&quot;n&quot;]=&gt;   int(0)   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>   <div class="example" id="example-1513">    <p><strong>Example #2 <span class="function"><strong>MongoDB::lastError()</strong></span> duplicate key example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;insert&nbsp;two&nbsp;documents&nbsp;with&nbsp;the&nbsp;same&nbsp;_id<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lastError</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;err&quot;]=&gt;   string(64) &quot;E11000 duplicate key errorindex: foo.foo.$_id_  dup key: { : 1 }&quot;   [&quot;n&quot;]=&gt;   int(0)   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
    * @return array Returns the error, if there was one.*/
    public function lastError() {}

   /**
    * (PECL mongo &gt;= 0.9.5)<br/>
	* Checks for the last error thrown during a database operation
	* @link http://www.php.net/manual/en/mongodb.preverror.php
/**
*<div id="mongodb.preverror" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::prevError</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.5)</p><p class="refpurpose"><span class="refname">MongoDB::prevError</span> &mdash; <span class="dc-title">Checks for the last error thrown during a database operation</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.preverror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::prevError</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    <span class="function">{@link MongoDB::lastError()}</span> is usually preferred to this.  This     method returns the last database error that occurred and how many operations    ago it occurred.  It is mostly deprecated.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.preverror-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.preverror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the error and the number of operations ago it occurred.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.preverror-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
    * @return array Returns the error and the number of operations ago it occurred.*/
    public function prevError() {}

   /**
    * (PECL mongo &gt;= 0.9.5)<br/>
	* Clears any flagged errors on the database
	* @link http://www.php.net/manual/en/mongodb.reseterror.php
/**
*<div id="mongodb.reseterror" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::resetError</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.5)</p><p class="refpurpose"><span class="refname">MongoDB::resetError</span> &mdash; <span class="dc-title">Clears any flagged errors on the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.reseterror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::resetError</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method is not used in normal operations.  It resets the database error     tracker (which can be incremented with     <span class="function">{@link MongoDB::forceError()}</span>, also not normally used).     </p>   <p class="para">    It is equivalent to running:    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">resetError</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'reseterror'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.reseterror-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.reseterror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the database response.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.reseterror-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
    * @return array Returns the database response.*/
    public function resetError() {}

    /**
     * (PECL mongo &gt;= 0.9.5)<br/>
	 * Creates a database error
	 * @link http://www.php.net/manual/en/mongodb.forceerror.php
	 * @return boolean Returns the database response.
	 */
/**
*<div id="mongodb.forceerror" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::forceError</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.5)</p><p class="refpurpose"><span class="refname">MongoDB::forceError</span> &mdash; <span class="dc-title">Creates a database error</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.forceerror-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoDB::forceError</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method is not very useful for normal MongoDB use.  It forces a database     error to occur.  This means that <span class="function">{@link MongoDB::lastError()}</span> will    return a generic database error after running this command.   </p>   <p class="para">    This command is identical to running:    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">forceError</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'forceerror'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodb.forceerror-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.forceerror-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the database response.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.forceerror-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function forceError() {}

    /**
     * (PECL mongo &gt;= 1.0.1)<br/>
	 * Log in to this database
	 * @link http://www.php.net/manual/en/mongodb.authenticate.php
	 * @param string $username The username.
	 * @param string $password The password (in plaintext).
	 * @return array <p>Returns database response. If the login was successful, it will return 1.</p>
     * <p>
     * <span style="color: #0000BB">&lt;?php<br></span><span style="color: #007700">array(</span><span style="color: #DD0000">"ok"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">1</span><span style="color: #007700">);<br></span><span style="color: #0000BB">?&gt;</span>
     * </span>
     * </code></div>
     * </div>
     * </p>
     * <p> If something went wrong, it will return </p>
     * <p>
     * <div class="example-contents">
     * <div class="phpcode"><code><span style="color: #000000">
     * <span style="color: #0000BB">&lt;?php<br></span><span style="color: #007700">array(</span><span style="color: #DD0000">"ok"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"errmsg"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"auth&nbsp;fails"</span><span style="color: #007700">);<br></span><span style="color: #0000BB">?&gt;</span></p>
     *         <p>("auth fails" could be another message, depending on database version and
     *         what went wrong)</p>
	 */
/**
*<div id="mongodb.authenticate" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::authenticate</h1>   <p class="verinfo">(PECL mongo &gt;=1.0.1)</p><p class="refpurpose"><span class="refname">MongoDB::authenticate</span> &mdash; <span class="dc-title">登录到数据库</span></p>   </div>    <div id="mongodb.authenticate-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>    <p class="para">需要把认证信息放在连接字符串里作为代替。</p>   </blockquote>  </div>    <div class="refsect1 description" id="refsect1-mongodb.authenticate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::authenticate</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span>    )</div>    <p class="para rdfs-comment">    此方法能够认证它的连接。    如果数据库服务器开启了认证（默认没有开启），在做任何操作之前你需要登录。   </p>   <p class="para">    通常情况下，你应该使用 <span class="function">{@link MongoClient::__construct()}</span> 内置的参数而不是此方法。    如果你对一个连接验证了，然后在会话期间连接掉了然后重连，你会被重新验证。    如果你用这个方法手动验证，然后连接掉了，你必须在重新连接时手动调用这个方法。   </p>   <p class="para">    该方法等同于运行：    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$salted&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #007700">${</span><span style="color: #9876AA">username</span><span style="color: #007700">}</span><span style="color: #DD0000">:mongo:</span><span style="color: #007700">${</span><span style="color: #9876AA">password</span><span style="color: #007700">}</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$hash&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">md5</span><span style="color: #007700">(</span><span style="color: #9876AA">$salted</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$nonce&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"getnonce"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$saltedHash&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">md5</span><span style="color: #007700">(</span><span style="color: #9876AA">$nonce</span><span style="color: #007700">[</span><span style="color: #DD0000">"nonce"</span><span style="color: #007700">].</span><span style="color: #DD0000">"</span><span style="color: #007700">${</span><span style="color: #9876AA">username</span><span style="color: #007700">}${</span><span style="color: #9876AA">hash</span><span style="color: #007700">}</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"authenticate"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"user"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$username</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"nonce"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$nonce</span><span style="color: #007700">[</span><span style="color: #DD0000">"nonce"</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"key"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$saltedHash<br /></span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>   <p class="para">    当一个连接验证后，它仅能够通过 &quot;logout&quot; 数据库命令来登出：    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"logout"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </p>  </div>   <div class="refsect1 parameters" id="refsect1-mongodb.authenticate-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">username</code>      </dt>       <dd>        <p class="para">        用户名。       </p>      </dd>                 <dt>        <code class="parameter">password</code>      </dt>       <dd>        <p class="para">        密码（明文格式）。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-mongodb.authenticate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数据库的响应，如果登录成功，它会返回   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">array(</span><span style="color: #DD0000">"ok"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>     如果出现了什么错误，它会返回   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">array(</span><span style="color: #DD0000">"ok"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"errmsg"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"auth&nbsp;fails"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    （&quot;auth fails&quot; 可能是另外的信息，取决于数据库版本和发生了什么错误）。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.authenticate-seealso">   <h3 class="title">参见</h3>   <p class="para">    MongoDB 关于 <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/authenticate" class="link external">&raquo;&nbsp;authenticate</a> 的核心文档。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.authenticate-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>         使用时产生 <strong><code>E_DEPRECATED</code></strong>。         请将验证细节传入到构造器。        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
*/
    public function authenticate($username, $password) {}

/**
*<div id="mongodb.getreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::getReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoDB::getReadPreference</span> &mdash; <span class="dc-title">Get the read preference for this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.getreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoDB::getReadPreference</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodb.getreadpreference-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.getreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the read preference. The array contains the values <em>type</em> for the string read preference mode (corresponding to the <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> constants), and <em>tagsets</em> containing a list of all tag set criteria. If no tag sets were specified, <em>tagsets</em> will not be present in the array.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongodb.getreadpreference-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.3.3</td>        <td>         The return value has changed to be consistent with         <span class="methodname">{@link MongoDB::setReadPreference()}</span>. The         <em>type</em> value was changed from a number to a string,         <em>type_string</em> was removed, and         <em>tagsets</em> now expresses tags as key/value pairs instead         of colon-delimited strings.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.getreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1510">    <p><strong>Example #1 <span class="methodname"><strong>MongoDB::getReadPreference()</strong></span> return value example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_SECONDARY</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(),<br />));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getReadPreference</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;type&quot;]=&gt;   string(9) &quot;secondary&quot;   [&quot;tagsets&quot;]=&gt;   array(3) {     [0]=&gt;     array(2) {       [&quot;dc&quot;]=&gt;       string(4) &quot;east&quot;       [&quot;use&quot;]=&gt;       string(9) &quot;reporting&quot;     }     [1]=&gt;     array(1) {       [&quot;dc&quot;]=&gt;       string(7) &quot;west&quot;     }     [2]=&gt;     array(0) {     }   } } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.getreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoDB::setReadPreference()} - Set the read preference for this database</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
     * @return array This function returns an array describing the read preference. The array contains the values type for the string read preference mode (corresponding to the MongoClient constants), and tagsets containing a list of all tag set criteria. If no tag sets were specified, tagsets will not be present in the array.*/
    public function getReadPreference () {}

/**
*<div id="mongodb.setreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::setReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoDB::setReadPreference</span> &mdash; <span class="dc-title">Set the read preference for this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.setreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoDB::setReadPreference</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodb.setreadpreference-parameters">   <h3 class="title">参数</h3>   <dl> <dt> <code class="parameter">read_preference</code></dt> <dd> <p class="para">The read preference mode: <strong><code>MongoClient::RP_PRIMARY</code></strong>, <strong><code>MongoClient::RP_PRIMARY_PREFERRED</code></strong>, <strong><code>MongoClient::RP_SECONDARY</code></strong>, <strong><code>MongoClient::RP_SECONDARY_PREFERRED</code></strong>, or <strong><code>MongoClient::RP_NEAREST</code></strong>.</p></dd> <dt> <code class="parameter">tags</code></dt> <dd> <p class="para">An array of zero or more tag sets, where each tag set is itself an array of criteria used to match tags on replica set members.</p></dd> </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.setreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>  </div>    <div class="refsect1 errors" id="refsect1-mongodb.setreadpreference-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Emits <strong><code>E_WARNING</code></strong> if either parameter is invalid, or if one or more tag sets are provided with the <strong><code>MongoClient::RP_PRIMARY</code></strong> read preference mode.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.setreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1516">    <p><strong>Example #1 <span class="methodname"><strong>MongoDB::setReadPreference()</strong></span> tag set array syntax example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Prefer&nbsp;the&nbsp;nearest&nbsp;server&nbsp;in&nbsp;the&nbsp;"east"&nbsp;data&nbsp;center&nbsp;also&nbsp;used&nbsp;for&nbsp;reporting,<br />//&nbsp;but&nbsp;fall&nbsp;back&nbsp;to&nbsp;a&nbsp;server&nbsp;in&nbsp;the&nbsp;"west"&nbsp;data&nbsp;center<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_NEAREST</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.setreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoDB::getReadPreference()} - Get the read preference for this database</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
     * @return boolean Returns <b>TRUE</b> on success, or <b>FALSE</b> otherwise.*/
    public function setReadPreference ($read_preference, array $tags) {}

/**
*<div id="mongodb.setwriteconcern" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDB::setWriteConcern</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoDB::setWriteConcern</span> &mdash; <span class="dc-title">Set the write concern for this database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongodb.setwriteconcern-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoDB::setWriteConcern</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$w</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$wtimeout</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodb.setwriteconcern-parameters">   <h3 class="title">参数</h3>   <dl> <dt> <code class="parameter">w</code></dt> <dd> <p class="para">The write concern. This may be an integer denoting the number of servers required to acknowledge the write, or a string mode (e.g. &quot;majority&quot;).</p></dd> <dt> <code class="parameter">wtimeout</code></dt> <dd> <p class="para">The maximum number of milliseconds to wait for the server to satisfy the write concern.</p></dd> </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongodb.setwriteconcern-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>  </div>    <div class="refsect1 errors" id="refsect1-mongodb.setwriteconcern-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Emits <strong><code>E_WARNING</code></strong> if the <em>w</em> parameter is not an integer or string value.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongodb.setwriteconcern-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1517">    <p><strong>Example #1 <span class="methodname"><strong>MongoDB::setWriteConcern()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$mc&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongodb://rs1.example.com,rs2.example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Require&nbsp;that&nbsp;the&nbsp;majority&nbsp;of&nbsp;servers&nbsp;in&nbsp;the&nbsp;replica&nbsp;set&nbsp;acknowledge&nbsp;writes<br />//&nbsp;within&nbsp;three&nbsp;seconds.<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setWriteConcern</span><span style="color: #007700">(</span><span style="color: #DD0000">'majority'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">3000</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodb.setwriteconcern-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> documentation.</li>    <li class="member"><span class="function">{@link MongoDB::getWriteConcern()} - Get the write concern for this database</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodb.php">MongoDB</a></div></div>
     * @return boolean Returns <b>TRUE</b> on success, or <b>FALSE</b> otherwise.*/
    public function setWriteConcern($w, $wtimeout) {}
}

/**
*<div id="class.mongocollection" class="reference">   <h1 class="title">The MongoCollection class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>     <div class="section" id="mongocollection.intro">    <h2 class="title">简介</h2>    <p class="para">     Represents a MongoDB collection.    </p>    <p class="para">     Collection names can use any character in the ASCII set.  Some valid      collection names are &quot;&quot;, &quot;...&quot;,      &quot;my collection&quot;, and &quot;*&amp;#@&quot;.    </p>    <p class="para">     User-defined collection names cannot contain the $ symbol.  There are      certain system collections which use a $ in their names (e.g.,      local.oplog.$main), but it is a reserved character.  If you attempt to      create and use a collection with a $ in the name, MongoDB will assert.    </p>   </div>     <div class="section" id="mongocollection.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoCollection</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongocollection.php#mongocollection.constants.ascending"><var class="varname">ASCENDING</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongocollection.php#mongocollection.constants.descending"><var class="varname">DESCENDING</var></a></var>      <span class="initializer"> = -1</span>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type"><a href="http://php.net/manual/zh/class.mongodb.php" class="type MongoDB">MongoDB</a></span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongocollection.php#mongocollection.props.db">$<var class="varname">db</var></a></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">integer</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongocollection.php#mongocollection.props.w">$<var class="varname">w</var></a></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">integer</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongocollection.php#mongocollection.props.wtimeout">$<var class="varname">wtimeout</var></a></var>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.aggregate.php" class="methodname">aggregate</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$pipeline</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCommandCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.aggregatecursor.php" class="methodname">aggregateCursor</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$command</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.batchinsert.php" class="methodname">batchInsert</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongodb.php" class="type MongoDB">MongoDB</a></span> <code class="parameter">$db</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.count.php" class="methodname">count</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$skip</code><span class="initializer"> = 0</span></span>   ]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.createdbref.php" class="methodname">createDBRef</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$document_or_id</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.createindex.php" class="methodname">createIndex</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$keys</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.deleteindex.php" class="methodname">deleteIndex</a></span>     ( <span class="methodparam"><span class="type"><span class="type string|array">string|array</span></span> <code class="parameter">$keys</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.deleteindexes.php" class="methodname">deleteIndexes</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.distinct.php" class="methodname">distinct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.drop.php" class="methodname">drop</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.ensureindex.php" class="methodname">ensureIndex</a></span>     ( <span class="methodparam"><span class="type"><span class="type string|array">string|array</span></span> <code class="parameter">$key|keys</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.find.php" class="methodname">find</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.findandmodify.php" class="methodname">findAndModify</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$update</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.findone.php" class="methodname">findOne</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCollection</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.get.php" class="methodname">__get</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.getdbref.php" class="methodname">getDBRef</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$ref</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.getindexinfo.php" class="methodname">getIndexInfo</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.getname.php" class="methodname">getName</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.getreadpreference.php" class="methodname">getReadPreference</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.getslaveokay.php" class="methodname">getSlaveOkay</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.getwriteconcern.php" class="methodname">getWriteConcern</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.group.php" class="methodname">group</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$keys</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$initial</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongocode.php" class="type MongoCode">MongoCode</a></span> <code class="parameter">$reduce</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool|array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.insert.php" class="methodname">insert</a></span>     ( <span class="methodparam"><span class="type"><span class="type array|object">array|object</span></span> <code class="parameter">$a</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array[MongoCommandCursor]</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.parallelcollectionscan.php" class="methodname">parallelCollectionScan</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_cursors</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool|array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.remove.php" class="methodname">remove</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$criteria</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.save.php" class="methodname">save</a></span>     ( <span class="methodparam"><span class="type"><span class="type array|object">array|object</span></span> <code class="parameter">$document</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.setreadpreference.php" class="methodname">setReadPreference</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.setslaveokay.php" class="methodname">setSlaveOkay</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$ok</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.setwriteconcern.php" class="methodname">setWriteConcern</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$w</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$wtimeout</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">static protected</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.toindexstring.php" class="methodname">toIndexString</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$keys</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.--tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool|array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.update.php" class="methodname">update</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$criteria</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$new_object</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocollection.validate.php" class="methodname">validate</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$scan_data</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>     }</div>     </div>    <div class="section">    <h2 class="title">预定义常量</h2>    <dl>            <dt id="mongocollection.constants.ascending"><strong><code>MongoCollection::ASCENDING</code></strong></dt>       <dd>        <span class="simpara">        Ascending direction for sorts and index creation.       </span>      </dd>                 <dt id="mongocollection.constants.descending"><strong><code>MongoCollection::DESCENDING</code></strong></dt>       <dd>        <span class="simpara">        Descending direction for sorts and index creation.       </span>      </dd>          </dl>    </div>    <div class="section">    <h2 class="title">Fields</h2>    <dl>            <dt id="mongocollection.props.db"><var class="varname"><var class="varname">db</var></var></dt>       <dd>        <p class="para">        The &quot;parent&quot; database for this collection.       </p>      </dd>                 <dt id="mongocollection.props.w"><var class="varname"><var class="varname">w</var></var></dt>       <dd>        <p class="para">        The number of servers to replicate a change to before returning success.        Value is inherited from the parent database. The         <a href="http://php.net/manual/zh/class.mongodb.php" class="classname">MongoDB</a> class has a more detailed description of        how <em>w</em> works.       </p>      </dd>                 <dt id="mongocollection.props.wtimeout"><var class="varname"><var class="varname">wtimeout</var></var></dt>       <dd>        <p class="para">        The number of milliseconds to wait for <em>$this-&gt;w</em>         replications to take place.  Value is inherited from the parent database.        The <a href="http://php.net/manual/zh/class.mongodb.php" class="classname">MongoDB</a> class has a more detailed description         of how <em>wtimeout</em> works.       </p>      </dd>          </dl>    </div>    <div class="section">    <h2 class="title">参见</h2>    <p class="para">     MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/glossary/#term-collection" class="link external">&raquo;&nbsp;collections</a>.    </p>   </div>   </div>                                                                                                                                                                                                                                                                      <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoCollection::aggregate} — Perform an aggregation using the aggregation framework</li><li>{@link MongoCollection::aggregateCursor} — Execute an aggregation pipeline command and retrieve results through a cursor</li><li>{@link MongoCollection::batchInsert} — Inserts multiple documents into this collection</li><li>{@link MongoCollection::__construct} — 创建一个新的集合</li><li>{@link MongoCollection::count} — 返回集合中的文档数量</li><li>{@link MongoCollection::createDBRef} — 创建一个数据库引用</li><li>{@link MongoCollection::createIndex} — Creates an index on the specified field(s) if it does not already exist</li><li>{@link MongoCollection::deleteIndex} — Deletes an index from this collection</li><li>{@link MongoCollection::deleteIndexes} — 删除集合的所有索引</li><li>{@link MongoCollection::distinct} — 获取集合里指定键的不同值的列表。</li><li>{@link MongoCollection::drop} — 删除该集合</li><li>{@link MongoCollection::ensureIndex} — Creates an index on the specified field(s) if it does not already exist</li><li>{@link MongoCollection::find} — 查询该集合，并返回结果集的 MongoCursor</li><li>{@link MongoCollection::findAndModify} — Update a document and return it</li><li>{@link MongoCollection::findOne} — Queries this collection, returning a single element</li><li>{@link MongoCollection::__get} — Gets a collection</li><li>{@link MongoCollection::getDBRef} — Fetches the document pointed to by a database reference</li><li>{@link MongoCollection::getIndexInfo} — Returns information about indexes on this collection</li><li>{@link MongoCollection::getName} — 返回这个集合的名称</li><li>{@link MongoCollection::getReadPreference} — Get the read preference for this collection</li><li>{@link MongoCollection::getSlaveOkay} — Get slaveOkay setting for this collection</li><li>{@link MongoCollection::getWriteConcern} — Get the write concern for this collection</li><li>{@link MongoCollection::group} — Performs an operation similar to SQL's GROUP BY command</li><li>{@link MongoCollection::insert} — 插入文档到集合中</li><li>{@link MongoCollection::parallelCollectionScan} — Returns an array of cursors to iterator over a full collection in parallel</li><li>{@link MongoCollection::remove} — 从集合中删除记录</li><li>{@link MongoCollection::save} — 保存一个文档到集合</li><li>{@link MongoCollection::setReadPreference} — Set the read preference for this collection</li><li>{@link MongoCollection::setSlaveOkay} — Change slaveOkay setting for this collection</li><li>{@link MongoCollection::setWriteConcern} — Set the write concern for this database</li><li>{@link MongoCollection::toIndexString} — Converts keys specifying an index to its identifying string</li><li>{@link MongoCollection::__toString} — String representation of this collection</li><li>{@link MongoCollection::update} — Update records based on a given criteria</li><li>{@link MongoCollection::validate} — Validates this collection</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.core.php">核心类</a></div></div>
*/
class MongoCollection {
     /**
     * @link http://php.net/manual/en/class.mongocollection.php#mongocollection.constants.ascending
     */
    const ASCENDING = 1;

     /**
     * @link http://php.net/manual/en/class.mongocollection.php#mongocollection.constants.descending
     */
    const DESCENDING = -1;

	/**
	 * @var MongoDB
	 */
	public $db = NULL ;

    /**
     * @var int <p>
     * The number of servers to replicate a change to before returning success.
     * Value is inherited from the parent database. The
     * {@link http://www.php.net/manual/en/class.mongodb.php MongoDB} class has a more detailed description of
     * how <em>w</em> works.
     * </p>
     */
    public $w;

    /**
     * @var int <p>
     * The number of milliseconds to wait for <em>$this-&gt;w</em>
     * replications to take place.  Value is inherited from the parent database.
     * The {@link http://www.php.net/manual/en/class.mongodb.php MongoDB} class has a more detailed description
     * of how <em>wtimeout</em> works.
     * </p>
     */
    public $wtimeout;

    /**
	 * Creates a new collection
	 * @link http://www.php.net/manual/en/mongocollection.construct.php
	 * @param MongoDB $db Parent database.
	 * @param string $name Name for this collection.
	 * @throws Exception
	 * @return MongoCollection
	 */
    public function __construct(MongoDB $db, $name) {}

   /**
	* String representation of this collection
	* @link http://www.php.net/manual/en/mongocollection.--tostring.php
/**
*<div id="mongocollection.--tostring" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::__toString</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::__toString</span> &mdash; <span class="dc-title">String representation of this collection</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongocollection.--tostring-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>MongoCollection::__toString</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.--tostring-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.--tostring-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the full name of this collection.   </p>  </div>   <div class="refsect1 examples" id="refsect1-mongocollection.--tostring-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-1564">     <p><strong>Example #1 <span class="function"><strong>MongoCollection::__toString()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$c1&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">foo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bar</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">baz</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">"Working&nbsp;with&nbsp;collection&nbsp;</span><span style="color: #9876AA">$c1</span><span style="color: #DD0000">."</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$c2&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'[]'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'&amp;'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Working&nbsp;with&nbsp;collection&nbsp;</span><span style="color: #9876AA">$c2</span><span style="color: #DD0000">."</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Working with collection foo.bar.baz. Working with collection [].&amp;. </pre></div>     </div>    </div>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
    * @return string Returns the full name of this collection.*/
    public function __toString() {}

	/**
	 * Gets a collection
	 * @link http://www.php.net/manual/en/mongocollection.get.php
	 * @param string $name The next string in the collection name.
	 * @return MongoCollection
	 */
    public function __get($name) {}

/**
*<div id="mongocollection.aggregate" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::aggregate</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoCollection::aggregate</span> &mdash; <span class="dc-title">Perform an aggregation using the aggregation framework</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.aggregate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::aggregate</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$pipeline</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::aggregate</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$op</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$op</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span>   ]] )</div>    <p class="para rdfs-comment">    The MongoDB    <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/aggregation-pipeline/" class="link external">&raquo;&nbsp;aggregation framework</a>    provides a means to calculate aggregated values without having to use    MapReduce. While MapReduce is powerful, it is often more difficult than    necessary for many simple aggregation tasks, such as totaling or averaging    field values.   </p>   <p class="para">    This method accepts either a variable amount of pipeline operators, or a    single array of operators constituting the pipeline.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.aggregate-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">pipeline</code></dt>      <dd>       <p class="para">       An array of pipeline operators.      </p>     </dd>              <dt> <code class="parameter">options</code></dt>      <dd>       <p class="para">Options for the aggregation command. Valid options include:</p>      <ul class="itemizedlist">       <li class="listitem">        <p class="para"><em>&quot;allowDiskUse&quot;</em></p>        <p class="para">Allow aggregation stages to write to temporary files</p>       </li>       <li class="listitem">        <p class="para"><em>&quot;cursor&quot;</em></p>        <p class="para">         Options controlling the creation of the cursor object. This option         causes the command to return a result document suitable for constructing         a <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a>. If you need to use this         option, you should consider using         <span class="methodname">{@link MongoCollection::aggregateCursor()}</span>.        </p>       </li>       <li class="listitem">        <p class="para"><em>&quot;explain&quot;</em></p>        <p class="para">Return information on the processing of the pipeline.</p>       </li>       <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>      </ul>     </dd>        </dl>    <p class="para">Or</p>   <dl>          <dt> <code class="parameter">op</code></dt>      <dd>       <p class="para">       First pipeline operator.      </p>     </dd>              <dt> <code class="parameter">op</code></dt>      <dd>       <p class="para">       The second pipeline operator.      </p>     </dd>              <dt> <code class="parameter">...</code></dt>      <dd>       <p class="para">       Additional pipeline operators.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.aggregate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The result of the aggregation as an array. The <var class="varname"><var class="varname">ok</var></var> will    be set to <em>1</em> on success, <em>0</em> on failure.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.aggregate-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    When an error occurs an array with the following keys will be returned:    <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       <var class="varname"><var class="varname">errmsg</var></var> - containing the reason for the failure      </span>     </li>     <li class="listitem">      <span class="simpara">       <var class="varname"><var class="varname">code</var></var> - the errorcode of the failure      </span>     </li>     <li class="listitem">      <span class="simpara">       <var class="varname"><var class="varname">ok</var></var> - will be set to 0.      </span>     </li>    </ul>   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.aggregate-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>1.5.0</td>       <td>        Added optional <code class="parameter">options</code> argument       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 examples" id="refsect1-mongocollection.aggregate-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1518">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::aggregate()</strong></span> example</strong></p>    <div class="example-contents"><p>     The following example aggregation operation pivots data to create a set of     author names grouped by tags applied to an article. Call the aggregation     framework by issuing the following command:    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"examples"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"article"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$data&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'title'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'this&nbsp;is&nbsp;my&nbsp;title'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'author'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'bob'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'posted'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'pageViews'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'tags'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array&nbsp;(&nbsp;</span><span style="color: #DD0000">'fun'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'good'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'fun'&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'comments'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'author'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'joe'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'text'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'this&nbsp;is&nbsp;cool'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'author'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'sam'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'text'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'this&nbsp;is&nbsp;bad'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'other'&nbsp;</span><span style="color: #007700">=&gt;array&nbsp;(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'foo'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /></span><span style="color: #9876AA">$d&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"w"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$ops&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$project'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"author"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"tags"&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'$unwind'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$tags'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"tags"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$tags'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"authors"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$addToSet'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$author'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /></span><span style="color: #9876AA">$results&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregate</span><span style="color: #007700">(</span><span style="color: #9876AA">$ops</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$results</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;result&quot;]=&gt;   array(2) {     [0]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       array(1) {         [&quot;tags&quot;]=&gt;         string(4) &quot;good&quot;       }       [&quot;authors&quot;]=&gt;       array(1) {         [0]=&gt;         string(3) &quot;bob&quot;       }     }     [1]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       array(1) {         [&quot;tags&quot;]=&gt;         string(3) &quot;fun&quot;       }       [&quot;authors&quot;]=&gt;       array(1) {         [0]=&gt;         string(3) &quot;bob&quot;       }     }   }   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>    <p class="para">    The following examples use the <a href="http://php.net/manual/zh/https://media.mongodb.org/zips.json" class="link external">&raquo;&nbsp;zipcode data set</a>.    Use mongoimport to load this data set into your mongod instance.   </p>    <div class="example" id="example-1519">    <p><strong>Example #2 <span class="methodname"><strong>MongoCollection::aggregate()</strong></span> example</strong></p>    <div class="example-contents"><p>     To return all states with a population greater than 10 million, use the following aggregation operation:    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"zips"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$pipeline&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'state'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$state'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'totalPop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$pop'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$match'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'totalPop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$gte'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">10&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">1000&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /></span><span style="color: #9876AA">$out&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregate</span><span style="color: #007700">(</span><span style="color: #9876AA">$pipeline</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$out</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;result&quot;]=&gt;   array(7) {     [0]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;TX&quot;       [&quot;totalPop&quot;]=&gt;       int(16986510)     }     [1]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;PA&quot;       [&quot;totalPop&quot;]=&gt;       int(11881643)     }     [2]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;NY&quot;       [&quot;totalPop&quot;]=&gt;       int(17990455)     }     [3]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;IL&quot;       [&quot;totalPop&quot;]=&gt;       int(11430602)     }     [4]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;CA&quot;       [&quot;totalPop&quot;]=&gt;       int(29760021)     }     [5]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;OH&quot;       [&quot;totalPop&quot;]=&gt;       int(10847115)     }     [6]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;FL&quot;       [&quot;totalPop&quot;]=&gt;       int(12937926)     }   }   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>    <div class="example" id="example-1520">    <p><strong>Example #3 <span class="methodname"><strong>MongoCollection::aggregate()</strong></span> example</strong></p>    <div class="example-contents"><p>     To return the average populations for cities in each state, use the following aggregation operation:    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"zips"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$out&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregate</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'state'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$state'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'city'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$city'&nbsp;</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'pop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$pop'&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$_id.state'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'avgCityPop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$avg'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$pop'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;)<br />);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$out</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;result&quot;]=&gt;   array(51) {     [0]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;DC&quot;       [&quot;avgCityPop&quot;]=&gt;       float(303450)     }     [1]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;DE&quot;       [&quot;avgCityPop&quot;]=&gt;       float(14481.913043478)     } ...     [49]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;WI&quot;       [&quot;avgCityPop&quot;]=&gt;       float(7323.0074850299)     }     [50]=&gt;     array(2) {       [&quot;_id&quot;]=&gt;       string(2) &quot;WV&quot;       [&quot;avgCityPop&quot;]=&gt;       float(2759.1953846154)     }   }   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>    <div class="example" id="example-1521">    <p><strong>Example #4 <span class="methodname"><strong>MongoCollection::aggregate()</strong></span> with command options</strong></p>    <div class="example-contents"><p>     To return information on how the pipeline will be processed we use the     <em>explain</em> command option:    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"zips"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$pipeline&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$state'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'totalPop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$pop'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$match'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'totalPop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$gte'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">10&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">1000&nbsp;</span><span style="color: #007700">*&nbsp;</span><span style="color: #9876AA">1000</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'$sort'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"totalPop"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />);<br /><br /></span><span style="color: #9876AA">$options&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"explain"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$out&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregate</span><span style="color: #007700">(</span><span style="color: #9876AA">$pipeline</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$out</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;stages&quot;]=&gt;   array(4) {     [0]=&gt;     array(1) {       [&quot;$cursor&quot;]=&gt;       array(3) {         [&quot;query&quot;]=&gt;         array(0) {         }         [&quot;fields&quot;]=&gt;         array(3) {           [&quot;pop&quot;]=&gt;           int(1)           [&quot;state&quot;]=&gt;           int(1)           [&quot;_id&quot;]=&gt;           int(0)         }         [&quot;plan&quot;]=&gt;         array(4) {           [&quot;cursor&quot;]=&gt;           string(11) &quot;BasicCursor&quot;           [&quot;isMultiKey&quot;]=&gt;           bool(false)           [&quot;scanAndOrder&quot;]=&gt;           bool(false)           [&quot;allPlans&quot;]=&gt;           array(1) {             [0]=&gt;             array(3) {               [&quot;cursor&quot;]=&gt;               string(11) &quot;BasicCursor&quot;               [&quot;isMultiKey&quot;]=&gt;               bool(false)               [&quot;scanAndOrder&quot;]=&gt;               bool(false)             }           }         }       }     }     [1]=&gt;     array(1) {       [&quot;$group&quot;]=&gt;       array(2) {         [&quot;_id&quot;]=&gt;         string(6) &quot;$state&quot;         [&quot;totalPop&quot;]=&gt;         array(1) {           [&quot;$sum&quot;]=&gt;           string(4) &quot;$pop&quot;         }       }     }     [2]=&gt;     array(1) {       [&quot;$match&quot;]=&gt;       array(1) {         [&quot;totalPop&quot;]=&gt;         array(1) {           [&quot;$gte&quot;]=&gt;           int(10000000)         }       }     }     [3]=&gt;     array(1) {       [&quot;$sort&quot;]=&gt;       array(1) {         [&quot;sortKey&quot;]=&gt;         array(1) {           [&quot;totalPop&quot;]=&gt;           int(-1)         }       }     }   }   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>   </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.aggregate-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCollection::aggregateCursor()} - Execute an aggregation pipeline command and retrieve results through a cursor</span></li>    <li class="member">The MongoDB <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/aggregation-pipeline/" class="link external">&raquo;&nbsp;aggregation framework</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return array The result of the aggregation as an array. The ok will be set to 1 on success, 0 on failure.*/
    public function aggregate ( array $pipeline, array $op, array $pipelineOperators ) {}

/**
*<div id="mongocollection.aggregatecursor" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::aggregateCursor</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCollection::aggregateCursor</span> &mdash; <span class="dc-title">Execute an aggregation pipeline command and retrieve results through a cursor</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongocollection.aggregatecursor-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="type MongoCommandCursor">MongoCommandCursor</a></span> <span class="methodname"><strong>MongoCollection::aggregateCursor</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$command</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ] )</div>    <p class="para rdfs-comment">    With this method you can execute Aggregation Framework pipelines and    retrieve the results through a cursor, instead of getting just one document    back as you would with <span class="methodname">{@link MongoCollection::aggregate()}</span>.    This method returns a <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a> object.    This cursor object implements the <strong class="classname">Iterator</strong> interface    just like the <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a> objects that are returned    by the <span class="methodname">{@link MongoCollection::find()}</span> method.   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     The resulting <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a> will inherit this     collection&#039;s read preference.     <span class="methodname">{@link MongoCommandCursor::setReadPreference()}</span> may be used     to change the read preference before iterating on the cursor.    </span>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.aggregatecursor-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">pipeline</code>      </dt>       <dd>        <p class="para">        The Aggregation Framework pipeline to execute.       </p>      </dd>                 <dt> <code class="parameter">options</code></dt>       <dd>        <p class="para">Options for the aggregation command. Valid options include:</p>       <ul class="itemizedlist">        <li class="listitem">         <p class="para"><em>&quot;allowDiskUse&quot;</em></p>         <p class="para">Allow aggregation stages to write to temporary files</p>        </li>        <li class="listitem">         <p class="para"><em>&quot;cursor&quot;</em></p>         <p class="para">          It is possible to configure how many initial documents the server          should return with the first result set. The default initial batch size          is <em>101</em>. You can change it by adding the          <em>batchSize</em> option:         </p>         <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$pipeline</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">"cursor"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">"batchSize"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4&nbsp;</span><span style="color: #007700">]&nbsp;]<br />);</span> </span> </code></div>         </div>          <p class="para">          This option only configures the size of the first batch. To configure          the size of future batches, please use the          <span class="methodname">{@link MongoCommandCursor::batchSize()}</span> method on the          returned <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a> object.         </p>        </li>        <li class="listitem">         <p class="para"><em>&quot;explain&quot;</em></p>         <p class="para">          Return information on the processing of the pipeline. This option may          cause the command to return a result document that is unsuitable for          constructing a <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a>. If you need          to use this option, you should consider using          <span class="methodname">{@link MongoCollection::aggregate()}</span>.         </p>        </li>        <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>       </ul>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.aggregatecursor-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns a <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a> object. Because this    implements the <strong class="classname">Iterator</strong> interface you can     iterate over each of the results as returned by the command query. The    <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a> also implements the    <a href="http://php.net/manual/zh/class.mongocursorinterface.php" class="classname">MongoCursorInterface</a> interface which adds the    <span class="methodname">{@link MongoCommandCursor::batchSize()}</span>,    <span class="methodname">{@link MongoCommandCursor::dead()}</span>,    <span class="methodname">{@link MongoCommandCursor::info()}</span> methods.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.aggregatecursor-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1522">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::aggregateCursor()</strong></span> example</strong></p>    <div class="example-contents"><p>     Finding all of the distinct values for a key.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$people&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">people</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drop</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Molly"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">43</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Sally"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Molly"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">87</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$ages&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$name'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$points'&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sort'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">]&nbsp;],<br />]&nbsp;);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$ages&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #007700">{</span><span style="color: #9876AA">$person</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">]}</span><span style="color: #DD0000">:&nbsp;</span><span style="color: #007700">{</span><span style="color: #9876AA">$person</span><span style="color: #007700">[</span><span style="color: #DD0000">'points'</span><span style="color: #007700">]}</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> Molly: 130<br /> Joe: 26<br /> Sally: 22<br />    </div>   </div>    <div class="example" id="example-1523">    <p><strong>Example #2 <span class="function"><strong>MongoCollection::aggregateCursor()</strong></span>    example with different initial batch size</strong></p>    <div class="example-contents"><p>     Finding all of the distinct values for a key.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$people&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">people</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drop</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Insert&nbsp;some&nbsp;sample&nbsp;data&nbsp;<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Molly"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">43</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Sally"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">22</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Molly"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">87</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;Run&nbsp;the&nbsp;command&nbsp;cursor&nbsp;<br /></span><span style="color: #9876AA">$ages&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$name'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$points'&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sort'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">"cursor"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">"batchSize"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4&nbsp;</span><span style="color: #007700">]&nbsp;]<br />);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$ages&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"</span><span style="color: #007700">{</span><span style="color: #9876AA">$person</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">]}</span><span style="color: #DD0000">:&nbsp;</span><span style="color: #007700">{</span><span style="color: #9876AA">$person</span><span style="color: #007700">[</span><span style="color: #DD0000">'points'</span><span style="color: #007700">]}</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"><br /> Molly: 130<br /> Joe: 26<br /> Sally: 22<br />    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.aggregatecursor-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoDB::command()} - 执行一条 Mongo 指令</span></li>     <li class="member"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a></li>     <li class="member"><span class="methodname">{@link MongoCommandCursor::batchSize()} - Limits the number of elements returned in one batch</span></li>     <li class="member"><span class="methodname">{@link MongoCollection::aggregate()} - Perform an aggregation using the aggregation framework</span></li>     <li class="member">The MongoDB <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/aggregation-pipeline/" class="link external">&raquo;&nbsp;aggregation framework</a></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return MongoCommandCursor Returns a {@link http://php.net/manual/en/class.mongocommandcursor.php MongoCommandCursor} object*/
    public function aggregateCursor(array $pipeline, array $options) {}

    /**
	 * Returns this collection's name
	 * @link http://www.php.net/manual/en/mongocollection.getname.php
	 * @return string
	 */
/**
*<div id="mongocollection.getname" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::getName</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::getName</span> &mdash; <span class="dc-title">返回这个集合的名称</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongocollection.getname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>MongoCollection::getName</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.getname-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.getname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    获取这个集合的名称。   </p>  </div>   <div class="refsect1 examples" id="refsect1-mongocollection.getname-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-1550">     <p><strong>Example #1 <span class="function"><strong>MongoCollection::getName()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">foo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bar</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">baz</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Working&nbsp;with&nbsp;collection&nbsp;"&nbsp;</span><span style="color: #007700">.&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">()&nbsp;.&nbsp;</span><span style="color: #DD0000">".\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;the&nbsp;full&nbsp;namespace&nbsp;is&nbsp;given&nbsp;by&nbsp;the&nbsp;MongoCollection::__toString()&nbsp;method<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Working&nbsp;in&nbsp;namespace&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #DD0000">.\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Working with collection bar.baz. Working in namespace foo.bar.baz. </pre></div>     </div>    </div>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function getName() {}

/**
*<div id="mongocollection.getslaveokay" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::getSlaveOkay</h1>   <p class="verinfo">(PECL mongo &gt;=1.1.0)</p><p class="refpurpose"><span class="refname">MongoCollection::getSlaveOkay</span> &mdash; <span class="dc-title">Get slaveOkay setting for this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.getslaveokay-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCollection::getSlaveOkay</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    See <a href="http://php.net/manual/zh/mongo.queries.php" class="link">the query section</a> of this manual for    information on distributing reads to secondaries.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.getslaveokay-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.getslaveokay-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the value of slaveOkay for this instance.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.getslaveokay-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.getslaveokay-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a></li>    <li class="member"><span class="methodname">{@link MongoCollection::getReadPreference()} - Get the read preference for this collection</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return bool Returns the value of slaveOkay for this instance.*/
    public function getSlaveOkay() { }

/**
*<div id="mongocollection.setslaveokay" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::setSlaveOkay</h1>   <p class="verinfo">(PECL mongo &gt;=1.1.0)</p><p class="refpurpose"><span class="refname">MongoCollection::setSlaveOkay</span> &mdash; <span class="dc-title">Change slaveOkay setting for this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.setslaveokay-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCollection::setSlaveOkay</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$ok</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>     <p class="para rdfs-comment">    See <a href="http://php.net/manual/zh/mongo.queries.php" class="link">the query section</a> of this manual for    information on distributing reads to secondaries.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.setslaveokay-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">ok</code>      </dt>       <dd>        <p class="para">        If reads should be sent to secondary members of a replica set for all         possible queries using this <a href="http://php.net/manual/zh/class.mongocollection.php" class="classname">MongoCollection</a>         instance.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.setslaveokay-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the former value of slaveOkay for this instance.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.setslaveokay-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.setslaveokay-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a></li>    <li class="member"><span class="methodname">{@link MongoCollection::setReadPreference()} - Set the read preference for this collection</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return bool Returns the former value of slaveOkay for this instance.*/
    public function setSlaveOkay($ok = true) { }

/**
*<div id="mongocollection.getreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::getReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoCollection::getReadPreference</span> &mdash; <span class="dc-title">Get the read preference for this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.getreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::getReadPreference</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.getreadpreference-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.getreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the read preference. The array contains the values <em>type</em> for the string read preference mode (corresponding to the <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> constants), and <em>tagsets</em> containing a list of all tag set criteria. If no tag sets were specified, <em>tagsets</em> will not be present in the array.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.getreadpreference-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.3.3</td>        <td>         The return value has changed to be consistent with         <span class="methodname">{@link MongoCollection::setReadPreference()}</span>. The         <em>type</em> value was changed from a number to a string,         <em>type_string</em> was removed, and         <em>tagsets</em> now expresses tags as key/value pairs instead         of colon-delimited strings.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.getreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1551">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::getReadPreference()</strong></span> return value example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">users</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_SECONDARY</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(),<br />));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getReadPreference</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;type&quot;]=&gt;   string(9) &quot;secondary&quot;   [&quot;tagsets&quot;]=&gt;   array(3) {     [0]=&gt;     array(2) {       [&quot;dc&quot;]=&gt;       string(4) &quot;east&quot;       [&quot;use&quot;]=&gt;       string(9) &quot;reporting&quot;     }     [1]=&gt;     array(1) {       [&quot;dc&quot;]=&gt;       string(7) &quot;west&quot;     }     [2]=&gt;     array(0) {     }   } } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.getreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCollection::setReadPreference()} - Set the read preference for this collection</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return array This function returns an array describing the read preference. The array contains the values <em>type</em> for the string read preference mode*/
    public function getReadPreference() { }

/**
*<div id="mongocollection.setreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::setReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoCollection::setReadPreference</span> &mdash; <span class="dc-title">Set the read preference for this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.setreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCollection::setReadPreference</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.setreadpreference-parameters">   <h3 class="title">参数</h3>   <dl> <dt> <code class="parameter">read_preference</code></dt> <dd> <p class="para">The read preference mode: <strong><code>MongoClient::RP_PRIMARY</code></strong>, <strong><code>MongoClient::RP_PRIMARY_PREFERRED</code></strong>, <strong><code>MongoClient::RP_SECONDARY</code></strong>, <strong><code>MongoClient::RP_SECONDARY_PREFERRED</code></strong>, or <strong><code>MongoClient::RP_NEAREST</code></strong>.</p></dd> <dt> <code class="parameter">tags</code></dt> <dd> <p class="para">An array of zero or more tag sets, where each tag set is itself an array of criteria used to match tags on replica set members.</p></dd> </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.setreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns <strong><code>TRUE</code></strong> on success, or <strong><code>FALSE</code></strong> otherwise.</p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.setreadpreference-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Emits <strong><code>E_WARNING</code></strong> if either parameter is invalid, or if one or more tag sets are provided with the <strong><code>MongoClient::RP_PRIMARY</code></strong> read preference mode.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.setreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1561">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::setReadPreference()</strong></span> tag set array syntax example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">users</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Prefer&nbsp;the&nbsp;nearest&nbsp;server&nbsp;in&nbsp;the&nbsp;"east"&nbsp;data&nbsp;center&nbsp;also&nbsp;used&nbsp;for&nbsp;reporting,<br />//&nbsp;but&nbsp;fall&nbsp;back&nbsp;to&nbsp;a&nbsp;server&nbsp;in&nbsp;the&nbsp;"west"&nbsp;data&nbsp;center<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_NEAREST</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.setreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCollection::getReadPreference()} - Get the read preference for this collection</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return bool Returns <b>TRUE</b> on success, or <b>FALSE</b> otherwise.*/
    public function setReadPreference($read_preference, array $tags) { }

   /**
	* Drops this collection
	* @link http://www.php.net/manual/en/mongocollection.drop.php
/**
*<div id="mongocollection.drop" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::drop</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::drop</span> &mdash; <span class="dc-title">删除该集合</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.drop-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::drop</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    删除该集合，以及它的索引。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.drop-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.drop-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数据库的响应。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.drop-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1535">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::drop()</strong></span> 例子</strong></p>    <div class="example-contents"><p>这个例子演示了如何删除一个集合，并且得到想要的回应。</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">articles</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drop</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [nIndexesWas] =&gt; 1     [msg] =&gt; all indexes deleted for collection     [ns] =&gt; my_db.articles     [ok] =&gt; 1 ) </pre></div>    </div>      </div>    </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
    * @return array Returns the database response.*/
    public function drop() {}

    /**
	 * Validates this collection
	 * @link http://www.php.net/manual/en/mongocollection.validate.php
	 * @param bool $scan_data Only validate indices, not the base collection.
	 * @return array Returns the database's evaluation of this object.
	 */
/**
*<div id="mongocollection.validate" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::validate</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::validate</span> &mdash; <span class="dc-title">Validates this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.validate-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::validate</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$scan_data</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.validate-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">scan_data</code>      </dt>       <dd>        <p class="para">        Only validate indices, not the base collection.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.validate-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the database&#039;s evaluation of this object.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function validate($scan_data = FALSE) {}

    /**
	 * Inserts an array into the collection
	 * @link http://www.php.net/manual/en/mongocollection.insert.php
	 * @param array|object $a An array or object. If an object is used, it may not have protected or private properties.
     * Note: If the parameter does not have an _id key or property, a new MongoId instance will be created and assigned to it.
     * This special behavior does not mean that the parameter is passed by reference.
	 * @param array $options Options for the insert.
     * <dl>
     * <dt>"w"
     * <dd>See WriteConcerns. The default value for MongoClient is 1.
     * <dt>"fsync"
     * <dd>Boolean, defaults to FALSE. Forces the insert to be synced to disk before returning success. If TRUE, an acknowledged insert is implied and will override setting w to 0.
     * <dt>"timeout"
     * <dd>Integer, defaults to MongoCursor::$timeout. If "safe" is set, this sets how long (in milliseconds) for the client to wait for a database response. If the database does not respond within the timeout period, a MongoCursorTimeoutException will be thrown.
     * <dt>"safe"
     * <dd>Deprecated. Please use the WriteConcern w option.
     * </dl>
	 * @throws MongoException if the inserted document is empty or if it contains zero-length keys. Attempting to insert an object with protected and private properties will cause a zero-length key error.
	 * @throws MongoCursorException if the "w" option is set and the write fails.
	 * @throws MongoCursorTimeoutException if the "w" option is set to a value greater than one and the operation takes longer than MongoCursor::$timeout milliseconds to complete. This does not kill the operation on the server, it is a client-side timeout. The operation in MongoCollection::$wtimeout is milliseconds.
	 * @return bool|array Returns an array containing the status of the insertion if the "w" option is set.
     * Otherwise, returns TRUE if the inserted array is not empty (a MongoException will be thrown if the inserted array is empty).
	 * If an array is returned, the following keys may be present:
     * <dl>
     * <dt>ok
     * <dd>This should almost be 1 (unless last_error itself failed).
     * <dt>err
     * <dd>If this field is non-null, an error occurred on the previous operation. If this field is set, it will be a string describing the error that occurred.
     * <dt>code
     * <dd>If a database error occurred, the relevant error code will be passed back to the client.
     * <dt>errmsg
     * <dd>This field is set if something goes wrong with a database command. It is coupled with ok being 0. For example, if w is set and times out, errmsg will be set to "timed out waiting for slaves" and ok will be 0. If this field is set, it will be a string describing the error that occurred.
     * <dt>n
     * <dd>If the last operation was an update, upsert, or a remove, the number of documents affected will be returned. For insert operations, this value is always 0.
     * <dt>wtimeout
     * <dd>If the previous option timed out waiting for replication.
     * <dt>waited
     * <dd>How long the operation waited before timing out.
     * <dt>wtime
     * <dd>If w was set and the operation succeeded, how long it took to replicate to w servers.
     * <dt>upserted
     * <dd>If an upsert occurred, this field will contain the new record's _id field. For upserts, either this field or updatedExisting will be present (unless an error occurred).
     * <dt>updatedExisting
     * <dd>If an upsert updated an existing element, this field will be true. For upserts, either this field or upserted will be present (unless an error occurred).
	 * </dl>
/**
*<div id="mongocollection.insert" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::insert</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::insert</span> &mdash; <span class="dc-title">插入文档到集合中</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.insert-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type bool|array">bool|array</span></span> <span class="methodname"><strong>MongoCollection::insert</strong></span>     ( <span class="methodparam"><span class="type"><span class="type array|object">array|object</span></span> <code class="parameter">$a</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>    <p class="para rdfs-comment">    发送到数据库的所有字符串必须是 UTF-8 的。如果有字符串不是 UTF-8，将会抛出     <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> 异常。    要插入（或者查询）一个非 UTF-8 的字符串，请使用 <a href="http://php.net/manual/zh/class.mongobindata.php" class="classname">MongoBinData</a>。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.insert-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">a</code>      </dt>       <dd>        <p class="para">        一个数组或对象。如果使用的是一个对象，它不能有 protected 或        private 的属性。       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         如果参数不具有 <em>_id</em> 键或属性，         将会创建一个新的 <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> 实例，并赋值给它。         这种特殊行为不意味着参数是传引用的。        </p>       </p></blockquote>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        插入的选项。        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;fsync&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the insert to be synced to disk before returning success. If <strong><code>TRUE</code></strong>, an acknowledged insert is implied and will override setting <em>w</em> to <em>0</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;j&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the write operation to block until it is synced to the journal on disk. If <strong><code>TRUE</code></strong>, an acknowledged write is implied and this option will override setting <em>&quot;w&quot;</em> to <em>0</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">If this option is used and journaling is disabled, MongoDB 2.6+ will raise an error and the write will fail; older server versions will simply ignore the option.</span></p></blockquote></li>          <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wtimeout&quot;</em></p><p class="para">Deprecated alias for <em>&quot;wTimeoutMS&quot;</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;safe&quot;</em></p><p class="para"><em class="emphasis">Deprecated</em>. Please use the <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcern</a> <em>w</em> option.</p></li>         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.insert-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果设置了 <em>&quot;w&quot;</em> 选项，将会返回包含插入状态的数组。    否则，将会返回一个 <strong><code>TRUE</code></strong> 代表数组不是空的（空数组将会抛出 <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> ）。   </p>   <p class="para">    如果返回了一个 array，将会有以下键：    <dl>            <dt>        <code class="parameter">ok</code>      </dt>       <dd>        <p class="para">        它应该几乎总是 1（除非 last_error 本身出现错误）。       </p>      </dd>                 <dt>        <code class="parameter">err</code>      </dt>       <dd>        <p class="para">        如果这个字段不是 null，说明刚才的操作出现了错误。        如果有这个字段，它将包含一个字符串，用于描述出现的错误信息。       </p>      </dd>                 <dt>        <code class="parameter">code</code>      </dt>       <dd>        <p class="para">        如果发生了一个数据库错误，相应的错误码会传到客户端。       </p>      </dd>                 <dt>        <code class="parameter">errmsg</code>      </dt>       <dd>        <p class="para">        如果数据库命令出现了错误，将会设置这个字段。同时 <em>ok</em> 也会是 0.        例如，设置了 <em>w</em> 并且超时了，errmsg 将会是 &quot;timed        out waiting for slaves&quot; 并且 <em>ok</em> 是 0。        如果设置了这个字段，它会是发生的错误的字符串描述。        </p>      </dd>                 <dt>        <code class="parameter">n</code>      </dt>       <dd>        <p class="para">        如果最后的操作是插入、更新或删除，将会返回受影响的对象数量。对于插入操作，这个值总是 <em>0</em>。       </p>      </dd>                 <dt>        <code class="parameter">wtimeout</code>      </dt>       <dd>        <p class="para">        等待复制直到超时的时间。       </p>      </dd>                 <dt>        <code class="parameter">waited</code>      </dt>       <dd>        <p class="para">        在超时前，要等待操作多久。       </p>      </dd>                 <dt>        <code class="parameter">wtime</code>      </dt>       <dd>        <p class="para">        如果设置了 <em>w</em> 并且操作成功了，等到复制到 <em>w</em> 台服务器的时间。        </p>      </dd>                 <dt>        <code class="parameter">upserted</code>      </dt>       <dd>        <p class="para">        如果发生了一次 upsert，这个字段将会包含新记录的        <em>_id</em>。        对于 upsert，不管是该字段还是        <em>updatedExisting</em> 都会被保留（除非发生了一个错误）。       </p>      </dd>                 <dt>        <code class="parameter">updatedExisting</code>      </dt>       <dd>        <p class="para">        如果一个 upsert 更新了一个存在的元素，这个字段将会是 true。        对于 upsert，无论是这个字段 还是 upserted 都会被保留（除非发生了错误）。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.insert-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果插入的文档是空的，或者包含零长度的键，将会抛出 <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>。    尝试插入包含 protected 和 private 属性的对象将会导致零长度键（zero-length key）的错误。   </p>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.insert-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">               <tr>        <td>1.3.0</td>        <td>         <code class="parameter">options</code> 参数不再接受 boolean 来标识一个确认的写入。         现在，你可以通过         <em>array(&#039;w&#039; =&gt; 1)</em> 设置（         <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> 默认的行为）        </td>       </tr>        <tr>        <td>1.2.0</td>        <td>增加了 <em>&quot;timeout&quot;</em> 选项。</td>       </tr>        <tr>        <td>1.0.11</td>        <td>         如果设置了 <em>&quot;safe&quot;</em>，出现 &quot;not master&quot; 错误时断开连接。        </td>       </tr>        <tr>        <td>1.0.9</td>        <td>         <p class="para">          <em>&quot;safe&quot;</em> 选项接受 integer 值，之前只接受 boolean 值。         </p>         <p class="para">          增加 <em>&quot;fsync&quot;</em> 选项。         </p>         <p class="para">          如果设置了 <em>&quot;safe&quot;</em> 选项，返回类型改成包含错误信息的 array。          否则，和之前一样返回 boolean。         </p>        </td>       </tr>        <tr>        <td>1.0.5</td>        <td>         修改第二个参数为选项数组。在 1.0.5 之前，第二个参数是 boolean，指示 <em>&quot;safe&quot;</em> 选项。        </td>       </tr>        <tr>        <td>1.0.1</td>        <td>         如果设置了 <em>&quot;safe&quot;</em> 选项并且插入失败了，将会抛出 <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a>。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.insert-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1556">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::insert()</strong></span> <em>_id</em> 例子</strong></p>    <div class="example-contents"><p>     如果没有 <em>_id</em>，则会添加一个到插入的文档中。     基于参数传入的方式，在调用代码时可能无法产生有效     <em>_id</em>。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'phpmanual'</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;如果使用的是&nbsp;array&nbsp;字面语法，将无法成功生成&nbsp;_id<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;通过传&nbsp;array&nbsp;的变量可以生成&nbsp;_id<br /></span><span style="color: #9876AA">$a&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;通过传引用的&nbsp;array&nbsp;无法生成&nbsp;_id<br /></span><span style="color: #9876AA">$b&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$ref&nbsp;</span><span style="color: #007700">=&nbsp;&amp;</span><span style="color: #9876AA">$b</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$ref</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$ref</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;没有在包裹的函数中触发&nbsp;copy-on-write&nbsp;时&nbsp;_id&nbsp;有效<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">insert_no_cow</span><span style="color: #007700">(</span><span style="color: #9876AA">$collection</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$document</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$document</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">insert_no_cow</span><span style="color: #007700">(</span><span style="color: #9876AA">$collection</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;在包裹的函数中触发&nbsp;copy-on-write&nbsp;时&nbsp;_id&nbsp;无效<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">insert_cow</span><span style="color: #007700">(</span><span style="color: #9876AA">$collection</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$document</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$document</span><span style="color: #007700">[</span><span style="color: #DD0000">'y'</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$document</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$d&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">insert_cow</span><span style="color: #007700">(</span><span style="color: #9876AA">$collection</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$d</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$d</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;x&quot;]=&gt;   int(2)   [&quot;_id&quot;]=&gt;   object(MongoId)#4 (0) {   } } array(1) {   [&quot;x&quot;]=&gt;   int(3) } array(2) {   [&quot;x&quot;]=&gt;   int(4)   [&quot;_id&quot;]=&gt;   object(MongoId)#5 (0) {   } } array(1) {   [&quot;x&quot;]=&gt;   int(5) } </pre></div>    </div>   </div>    <div class="example" id="mongocollection.findandmodify.example.basic">    <p><strong>Example #2 <span class="function"><strong>MongoCollection::insert()</strong></span> 确认写入的例子</strong></p>    <div class="example-contents"><p>     这个例子显示了设置了 <code class="parameter">w</code> 后，插入两个具有相同 _id 的元素时，导致抛出 <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> 的例子。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$person&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Joe"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"age"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$person</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;现在&nbsp;$person&nbsp;具有一个&nbsp;_id&nbsp;字段，所以我们再次&nbsp;<br />//&nbsp;保存它的时候，将会得到一个异常<br /></span><span style="color: #007700">try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$person</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"w"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}&nbsp;catch(</span><span style="color: #9876AA">MongoCursorException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Can't&nbsp;save&nbsp;the&nbsp;same&nbsp;person&nbsp;twice!\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.insert-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCollection::batchInsert()} - Inserts multiple documents into this collection</span></li>    <li class="member"><span class="function">{@link MongoCollection::update()} - Update records based on a given criteria</span></li>    <li class="member"><span class="function">{@link MongoCollection::find()} - 查询该集合，并返回结果集的 MongoCursor</span></li>    <li class="member"><span class="function">{@link MongoCollection::remove()} - 从集合中删除记录</span></li>    <li class="member">MongoDB <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/insert-documents/" class="link external">&raquo;&nbsp;insert</a> 的核心文档。</li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function insert($a, array $options = array()) {}

    /**
	 * Inserts multiple documents into this collection
	 * @link http://www.php.net/manual/en/mongocollection.batchinsert.php
	 * @param array $a An array of arrays.
	 * @param array $options Options for the inserts.
	 * @throws MongoCursorException
	 * @return mixed f "safe" is set, returns an associative array with the status of the inserts ("ok") and any error that may have occured ("err"). Otherwise, returns TRUE if the batch insert was successfully sent, FALSE otherwise.
	 */
/**
*<div id="mongocollection.batchinsert" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::batchInsert</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::batchInsert</span> &mdash; <span class="dc-title">Inserts multiple documents into this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.batchinsert-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>MongoCollection::batchInsert</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.batchinsert-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">a</code>      </dt>       <dd>        <p class="para">        An array of arrays or objects. If any objects are used, they may not have        protected or private properties.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         If the documents to insert do not have an <em>_id</em> key or         property, a new <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> instance will be created         and assigned to it. See <span class="function">{@link MongoCollection::insert()}</span> for         additional information on this behavior.        </p>       </p></blockquote>      </dd>                    <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the batch of insert operations. Currently        available options include:        <ul class="itemizedlist">         <li class="listitem">          <p class="para">           <em>&quot;continueOnError&quot;</em>          </p>          <p class="para">           Boolean, defaults to <strong><code>FALSE</code></strong>. If set, the database will not stop           processing a bulk insert if one fails (eg due to duplicate IDs).           This makes bulk insert behave similarly to a series of single           inserts, except that calling <span class="function">{@link MongoDB::lastError()}</span>           will have an error set if any insert fails, not just the last one.           If multiple errors occur, only the most recent will be reported by           <span class="function">{@link MongoDB::lastError()}</span>.          </p>          <blockquote class="note"><p><strong class="note">Note</strong>:            <p class="para">            Please note that <em>continueOnError</em> affects errors            on the database side only. If you try to insert a document that has            errors (for example it contains a key with an empty name), then the            document is not even transferred to the database as the driver            detects this error and bails out.            <em>continueOnError</em> has no effect on errors detected            in the documents by the driver.           </p>          </p></blockquote>         </li>         <li class="listitem"><p class="para"><em>&quot;fsync&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the insert to be synced to disk before returning success. If <strong><code>TRUE</code></strong>, an acknowledged insert is implied and will override setting <em>w</em> to <em>0</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;j&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the write operation to block until it is synced to the journal on disk. If <strong><code>TRUE</code></strong>, an acknowledged write is implied and this option will override setting <em>&quot;w&quot;</em> to <em>0</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">If this option is used and journaling is disabled, MongoDB 2.6+ will raise an error and the write will fail; older server versions will simply ignore the option.</span></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;socketTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for socket communication. If the server does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown and there will be no way to determine if the server actually handled the write or not. A value of <em>-1</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>30000</em> (30 seconds).</p></li>         <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> acknowledgement. It is only applicable when <em>&quot;w&quot;</em> is greater than <em>1</em>, as the timeout pertains to replication. If the write concern is not satisfied within the time limit, a <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> will be thrown. A value of <em>0</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>10000</em> (ten seconds).</p></li>        </ul>       </p>       <p class="para">        The following options are deprecated and should no longer be used:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;safe&quot;</em></p><p class="para"><em class="emphasis">Deprecated</em>. Please use the <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcern</a> <em>w</em> option.</p></li>         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>         <li class="listitem"><p class="para"><em>&quot;wtimeout&quot;</em></p><p class="para">Deprecated alias for <em>&quot;wTimeoutMS&quot;</em>.</p></li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.batchinsert-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    If the <em>w</em> parameter is set to acknowledge the write,    returns an associative array with the status of the inserts (&quot;ok&quot;) and any    error that may have occurred (&quot;err&quot;).  Otherwise, returns <strong><code>TRUE</code></strong> if the    batch insert was successfully sent, <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.batchinsert-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> if any inserted documents are    empty or if they contains zero-length keys. Attempting to insert an object    with protected and private properties will cause a zero-length key error.   </p>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.batchinsert-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.5.0</td>        <td>         <p class="para">          Added the <em>&quot;wTimeoutMS&quot;</em> option, which replaces          <em>&quot;wtimeout&quot;</em>. Emits <strong><code>E_DEPRECATED</code></strong>          when <em>&quot;wtimeout&quot;</em> is used.         </p>         <p class="para">          Added the <em>&quot;socketTimeoutMS&quot;</em> option, which replaces          <em>&quot;timeout&quot;</em>. Emits <strong><code>E_DEPRECATED</code></strong>          when <em>&quot;timeout&quot;</em> is used.         </p>         <p class="para">          Emits <strong><code>E_DEPRECATED</code></strong> when <em>&quot;safe&quot;</em>          is used.         </p>        </td>       </tr>        <tr>        <td>1.3.4</td>        <td>Added <em>&quot;wtimeout&quot;</em> option.</td>       </tr>        <tr>        <td>1.3.0</td>        <td>Added <em>&quot;w&quot;</em> option.</td>       </tr>        <tr>        <td>1.2.7</td>        <td>Added <em>&quot;continueOnError&quot;</em> option.</td>       </tr>        <tr>        <td>1.0.9</td>        <td>         <p class="para">          Added ability to pass integers to the <em>&quot;safe&quot;</em> option,          which previously only accepted booleans.         </p>         <p class="para">          Added <em>&quot;fsync&quot;</em> option.         </p>        </td>       </tr>        <tr>        <td>1.0.5</td>        <td>Added <code class="parameter">options</code> parameter.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.batchinsert-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1524">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::batchInsert()</strong></span> example</strong></p>    <div class="example-contents"><p>     Batch insertion is a quick way to add many elements to the database at once    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$users&nbsp;</span><span style="color: #007700">=&nbsp;array();<br />for&nbsp;(</span><span style="color: #9876AA">$i&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">&lt;</span><span style="color: #9876AA">100</span><span style="color: #007700">;&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$users</span><span style="color: #007700">[]&nbsp;=&nbsp;array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'user'</span><span style="color: #007700">.</span><span style="color: #9876AA">$i</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'i'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$i</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$mongo&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">users</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drop</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">batchInsert</span><span style="color: #007700">(</span><span style="color: #9876AA">$users</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$users&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$user</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$user</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">].</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;populated&nbsp;with&nbsp;instanceof&nbsp;MongoId<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">$users&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">sort</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'i'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />foreach&nbsp;(</span><span style="color: #9876AA">$users&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$user</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$user</span><span style="color: #007700">[</span><span style="color: #DD0000">'username'</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> 4bf43ac68ead0e1971000000 4bf43ac68ead0e1971010000 4bf43ac68ead0e1971020000 ... string(5) &quot;user1&quot; string(5) &quot;user2&quot; string(5) &quot;user3&quot; ... </pre></div>    </div>   </div>    <div class="example" id="example-1525">    <p><strong>Example #2 <span class="function"><strong>MongoCollection::batchInsert()</strong></span> example with    ignoring errors</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$con&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$con</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">demo</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$doc1&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoId</span><span style="color: #007700">(</span><span style="color: #DD0000">'4cb4ab6d7addf98506010001'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'desc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"ONE"</span><span style="color: #007700">,<br />);<br /></span><span style="color: #9876AA">$doc2&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoId</span><span style="color: #007700">(</span><span style="color: #DD0000">'4cb4ab6d7addf98506010002'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'desc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"TWO"</span><span style="color: #007700">,<br />);<br /></span><span style="color: #9876AA">$doc3&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoId</span><span style="color: #007700">(</span><span style="color: #DD0000">'4cb4ab6d7addf98506010002'</span><span style="color: #007700">),&nbsp;</span><span style="color: #FF8000">//&nbsp;same&nbsp;_id&nbsp;as&nbsp;above<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'desc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"THREE"</span><span style="color: #007700">,<br />);<br /></span><span style="color: #9876AA">$doc4&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoId</span><span style="color: #007700">(</span><span style="color: #DD0000">'4cb4ab6d7addf98506010004'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'desc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"FOUR"</span><span style="color: #007700">,<br />);<br /><br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'c'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">batchInsert</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #9876AA">$doc1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$doc2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$doc3</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$doc4</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'continueOnError'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$docs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br />foreach&nbsp;(</span><span style="color: #9876AA">$docs&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$doc</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$doc</span><span style="color: #007700">[</span><span style="color: #DD0000">'desc'</span><span style="color: #007700">]);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> string(3) &quot;ONE&quot; string(3) &quot;TWO&quot; string(4) &quot;FOUR&quot; </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.batchinsert-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCollection::insert()} - 插入文档到集合中</span></li>    <li class="member"><span class="function">{@link MongoCollection::update()} - Update records based on a given criteria</span></li>    <li class="member"><span class="function">{@link MongoCollection::find()} - 查询该集合，并返回结果集的 MongoCursor</span></li>    <li class="member"><span class="function">{@link MongoCollection::remove()} - 从集合中删除记录</span></li>    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/insert-documents/" class="link external">&raquo;&nbsp;insert</a>.</li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function batchInsert(array $a, array $options = array()) {}

    /**
	 * Update records based on a given criteria
	 * @link http://www.php.net/manual/en/mongocollection.update.php
	 * @param array $criteria Description of the objects to update.
	 * @param array $newobj The object with which to update the matching records.
     * @param array $options This parameter is an associative array of the form
     *        array("optionname" => boolean, ...).
     *
     *        Currently supported options are:
     *          "upsert": If no document matches $$criteria, a new document will be created from $$criteria and $$new_object (see upsert example).
     *
     *          "multiple": All documents matching $criteria will be updated. MongoCollection::update has exactly the opposite behavior of MongoCollection::remove- it updates one document by
     *          default, not all matching documents. It is recommended that you always specify whether you want to update multiple documents or a single document, as the
     *          database may change its default behavior at some point in the future.
     *
     *          "safe" Can be a boolean or integer, defaults to false. If false, the program continues executing without waiting for a database response. If true, the program will wait for
     *          the database response and throw a MongoCursorException if the update did not succeed. If you are using replication and the master has changed, using "safe" will make the driver
     *          disconnect from the master, throw and exception, and attempt to find a new master on the next operation (your application must decide whether or not to retry the operation on the new master).
     *          If you do not use "safe" with a replica set and the master changes, there will be no way for the driver to know about the change so it will continuously and silently fail to write.
     *          If safe is an integer, will replicate the update to that many machines before returning success (or throw an exception if the replication times out, see wtimeout).
     *          This overrides the w variable set on the collection.
     *
     *         "fsync": Boolean, defaults to false. Forces the update to be synced to disk before returning success. If true, a safe update is implied and will override setting safe to false.
     *
     *         "timeout" Integer, defaults to MongoCursor::$timeout. If "safe" is set, this sets how long (in milliseconds) for the client to wait for a database response. If the database does
     *         not respond within the timeout period, a MongoCursorTimeoutException will be thrown
	 * @throws MongoCursorException
	 * @return boolean
	 */
/**
*<div id="mongocollection.update" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::update</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::update</span> &mdash; <span class="dc-title">Update records based on a given criteria</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.update-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type bool|array">bool|array</span></span> <span class="methodname"><strong>MongoCollection::update</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$criteria</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$new_object</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.update-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt id="mongocollection.update.criteria">       <code class="parameter">criteria</code>      </dt>       <dd>        <p class="para">        Query criteria for the documents to update.       </p>      </dd>                 <dt id="mongocollection.update.new_object">       <code class="parameter">new_object</code>      </dt>       <dd>        <p class="para">        The object used to update the matched documents. This may either contain        update operators (for modifying specific fields) or be a replacement        document.       </p>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the update operation. Currently available options        include:        <ul class="itemizedlist">         <li class="listitem" id="mongocollection.update.upsert">          <p class="para">           <em>&quot;upsert&quot;</em>          </p>          <p class="para">           If no document matches <code class="parameter">$criteria</code>, a new           document will be inserted.          </p>          <p class="para">           If a new document would be inserted and           <code class="parameter">$new_object</code> contains atomic modifiers           (i.e. <em>$</em> operators), those operations will be           applied to the <code class="parameter">$criteria</code> parameter to create           the new document. If <code class="parameter">$new_object</code> does not           contain atomic modifiers, it will be used as-is for the inserted           document. See the upsert examples below for more information.          </p>         </li>         <li class="listitem" id="mongocollection.update.multiple">          <p class="para">           <em>&quot;multiple&quot;</em>          </p>          <p class="para">           All documents matching $criteria will be updated.             <span class="function"><strong>MongoCollection::update()</strong></span> has exactly the opposite            behavior of <span class="function">{@link MongoCollection::remove()}</span>: it updates            one document by default, not all matching documents.  <em class="emphasis">It is            recommended that you always specify whether you want to update             multiple documents or a single document</em>, as the database            may change its default behavior at some point in the future.          </p>         </li>         <li class="listitem"><p class="para"><em>&quot;fsync&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the insert to be synced to disk before returning success. If <strong><code>TRUE</code></strong>, an acknowledged insert is implied and will override setting <em>w</em> to <em>0</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;j&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the write operation to block until it is synced to the journal on disk. If <strong><code>TRUE</code></strong>, an acknowledged write is implied and this option will override setting <em>&quot;w&quot;</em> to <em>0</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">If this option is used and journaling is disabled, MongoDB 2.6+ will raise an error and the write will fail; older server versions will simply ignore the option.</span></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;socketTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for socket communication. If the server does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown and there will be no way to determine if the server actually handled the write or not. A value of <em>-1</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>30000</em> (30 seconds).</p></li>         <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> acknowledgement. It is only applicable when <em>&quot;w&quot;</em> is greater than <em>1</em>, as the timeout pertains to replication. If the write concern is not satisfied within the time limit, a <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> will be thrown. A value of <em>0</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>10000</em> (ten seconds).</p></li>        </ul>       </p>       <p class="para">        The following options are deprecated and should no longer be used:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;safe&quot;</em></p><p class="para"><em class="emphasis">Deprecated</em>. Please use the <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcern</a> <em>w</em> option.</p></li>         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>         <li class="listitem"><p class="para"><em>&quot;wtimeout&quot;</em></p><p class="para">Deprecated alias for <em>&quot;wTimeoutMS&quot;</em>.</p></li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.update-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array containing the status of the update if the    <em>&quot;w&quot;</em> option is set. Otherwise, returns <strong><code>TRUE</code></strong>.   </p>   <p class="para">    Fields in the status array are described in the documentation for    <span class="function">{@link MongoCollection::insert()}</span>.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.update-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.update-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.5.0</td>        <td>         <p class="para">          Added the <em>&quot;wTimeoutMS&quot;</em> option, which replaces          <em>&quot;wtimeout&quot;</em>. Emits <strong><code>E_DEPRECATED</code></strong>          when <em>&quot;wtimeout&quot;</em> is used.         </p>         <p class="para">          Added the <em>&quot;socketTimeoutMS&quot;</em> option, which replaces          <em>&quot;timeout&quot;</em>. Emits <strong><code>E_DEPRECATED</code></strong>          when <em>&quot;timeout&quot;</em> is used.         </p>         <p class="para">          Emits <strong><code>E_DEPRECATED</code></strong> when <em>&quot;safe&quot;</em>          is used.         </p>        </td>       </tr>        <tr>        <td>1.3.4</td>        <td>Added <em>&quot;wtimeout&quot;</em> option.</td>       </tr>        <tr>        <td>1.3.0</td>        <td>         <p class="para">Added <em>&quot;w&quot;</em> option.</p>         <p class="para">          The <code class="parameter">options</code> parameter no longer accepts a boolean          to signify an upsert. Instead, this now has to be done with          <em>array(&#039;upsert&#039; =&gt; true)</em>.         </p>        </td>       </tr>        <tr>        <td>1.2.11</td>        <td>         Emits <strong><code>E_DEPRECATED</code></strong> when         <code class="parameter">options</code> is <span class="type"><span class="type scalar">scalar</span></span>.        </td>       </tr>        <tr>        <td>1.2.0</td>        <td>Added <em>&quot;timeout&quot;</em> option.</td>       </tr>        <tr>        <td>1.0.11</td>        <td>         Disconnects on &quot;not master&quot; errors if <em>&quot;safe&quot;</em> is set.        </td>       </tr>        <tr>        <td>1.0.9</td>        <td>         <p class="para">          Added ability to pass integers to the <em>&quot;safe&quot;</em> option,          which previously only accepted booleans.         </p>         <p class="para">          Added <em>&quot;fsync&quot;</em> option.         </p>         <p class="para">          The return type was changed to be an array containing error information          if the <em>&quot;safe&quot;</em> option is used. Otherwise, a boolean          is returned as before.         </p>        </td>       </tr>        <tr>        <td>1.0.5</td>        <td>Added <em>&quot;safe&quot;</em> option.</td>       </tr>        <tr>        <td>1.0.1</td>        <td>         Changed <code class="parameter">options</code> parameter from boolean to array.         Pre-1.0.1, the second parameter was an optional boolean value specifying         an upsert.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.update-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1565">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::update()</strong></span></strong></p>    <div class="example-contents"><p>     Adding an address field to a document.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"firstname"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Bob"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"lastname"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Jones"&nbsp;</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$newdata&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'$set'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"address"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"1&nbsp;Smith&nbsp;Lane"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">update</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"firstname"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Bob"</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">$newdata</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"firstname"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Bob"</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(4) {   [&quot;_id&quot;]=&gt;   object(MongoId)#6 (0) {   }   [&quot;firstname&quot;]=&gt;   string(3) &quot;Bob&quot;   [&quot;lastname&quot;]=&gt;   string(5) &quot;Jones&quot;   [&quot;address&quot;]=&gt;   string(12) &quot;1 Smith Lane&quot; } </pre></div>    </div>   </div>   <div class="example" id="example-1566">    <p><strong>Example #2 <span class="function"><strong>MongoCollection::update()</strong></span> upsert examples</strong></p>    <div class="example-contents"><p>     Upserts can simplify code, as a single line can create the document if it     does not exist (based on <code class="parameter">$criteria</code>), or update an     existing document if it matches.    </p></div>    <div class="example-contents"><p>     In the following example, <code class="parameter">$new_object</code> contains an     atomic modifier. Since the collection is empty and upsert must insert a new     document, it will apply those operations to the     <code class="parameter">$criteria</code> parameter in order to create the document.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drop</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">update</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"uri"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"/summer_pics"</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'$inc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"page&nbsp;hits"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">)),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"upsert"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)<br />);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;_id&quot;]=&gt;   object(MongoId)#9 (0) {   }   [&quot;uri&quot;]=&gt;   string(12) &quot;/summer_pics&quot;   [&quot;page hits&quot;]=&gt;   int(1) } </pre></div>    </div>    <div class="example-contents"><p>     If <code class="parameter">$new_object</code> does not contain atomic modifiers     (i.e. <em>$</em> operators), upsert will use     <code class="parameter">$new_object</code> as-is for the new document. This matches     the behavior of a normal update, where not using atomic modifiers causes the     document to be overwritten.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drop</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">update</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"joe"</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"username"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"joe312"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"createdAt"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">()),&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"upsert"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)<br />);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;_id&quot;]=&gt;   object(MongoId)#10 (0) {   }   [&quot;username&quot;]=&gt;   string(6) &quot;joe312&quot;   [&quot;createdAt&quot;]=&gt;   object(MongoDate)#4 (0) {   } } </pre></div>    </div>   </div>   <div class="example" id="example-1567">    <p><strong>Example #3 <span class="function"><strong>MongoCollection::update()</strong></span> multiple example</strong></p>    <div class="example-contents"><p>     By default, <span class="function"><strong>MongoCollection::update()</strong></span> will only update     the first document matching <code class="parameter">$criteria</code> that it     finds. Using the &quot;multiple&quot; option can override this behavior, if needed.    </p></div>    <div class="example-contents"><p>     This example adds a &quot;gift&quot; field to every person whose birthday is in the     next day.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$today&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'$gt'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">'$lt'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">"+1&nbsp;day"</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">update</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"birthday"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$today</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'$set'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'gift'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$surprise</span><span style="color: #007700">)),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"multiple"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.update-seealso">   <h3 class="title">参见</h3>   <p class="para">    The <a href="http://php.net/manual/zh/mongo.updates.php" class="link">PHP documentation on updates</a> and the    <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/modify-documents/" class="link external">&raquo;&nbsp;MongoDB core docs</a>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function update(array $criteria , array $newobj, array $options = array()) {}

    /**
     * (PECL mongo &gt;= 0.9.0)<br/>
	 * Remove records from this collection
	 * @link http://www.php.net/manual/en/mongocollection.remove.php
	 * @param array $criteria [optional] <p>Query criteria for the documents to delete.</p>
     * @param array $options [optional] <p>An array of options for the remove operation. Currently available options
     * include:
     * </p><ul>
     * <li><p><em>"w"</em></p><p>See {@link http://www.php.net/manual/en/mongo.writeconcerns.php Write Concerns}. The default value for <b>MongoClient</b> is <em>1</em>.</p></li>
     * <li>
     * <p>
     * <em>"justOne"</em>
     * </p>
     * <p>
     * Specify <strong><code>TRUE</code></strong> to limit deletion to just one document. If <strong><code>FALSE</code></strong> or
     * omitted, all documents matching the criteria will be deleted.
     * </p>
     * </li>
     * <li><p><em>"fsync"</em></p><p>Boolean, defaults to <b>FALSE</b>. If journaling is enabled, it works exactly like <em>"j"</em>. If journaling is not enabled, the write operation blocks until it is synced to database files on disk. If <strong><code>TRUE</code></strong>, an acknowledged insert is implied and this option will override setting <em>"w"</em> to <em>0</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">If journaling is enabled, users are strongly encouraged to use the <em>"j"</em> option instead of <em>"fsync"</em>. Do not use <em>"fsync"</em> and <em>"j"</em> simultaneously, as that will result in an error.</p></blockquote></li>
     * <li><p><em>"j"</em></p><p>Boolean, defaults to <b>FALSE</b>. Forces the write operation to block until it is synced to the journal on disk. If <strong><code>TRUE</code></strong>, an acknowledged write is implied and this option will override setting <em>"w"</em> to <em>0</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">If this option is used and journaling is disabled, MongoDB 2.6+ will raise an error and the write will fail; older server versions will simply ignore the option.</p></blockquote></li>
     * <li><p><em>"socketTimeoutMS"</em></p><p>This option specifies the time limit, in milliseconds, for socket communication. If the server does not respond within the timeout period, a <b>MongoCursorTimeoutException</b> will be thrown and there will be no way to determine if the server actually handled the write or not. A value of <em>-1</em> may be specified to block indefinitely. The default value for <b>MongoClient</b> is <em>30000</em> (30 seconds).</p></li>
     * <li><p><em>"w"</em></p><p>See {@link http://www.php.net/manual/en/mongo.writeconcerns.php Write Concerns }. The default value for <b>MongoClient</b> is <em>1</em>.</p></li>
     * <li><p><em>"wTimeoutMS"</em></p><p>This option specifies the time limit, in milliseconds, for {@link http://www.php.net/manual/en/mongo.writeconcerns.php write concern} acknowledgement. It is only applicable when <em>"w"</em> is greater than <em>1</em>, as the timeout pertains to replication. If the write concern is not satisfied within the time limit, a <a href="class.mongocursorexception.php" class="classname">MongoCursorException</a> will be thrown. A value of <em>0</em> may be specified to block indefinitely. The default value for {@link http://www.php.net/manual/en/class.mongoclient.php MongoClient} is <em>10000</em> (ten seconds).</p></li>
     * </ul>
     *
     * <p>
     * The following options are deprecated and should no longer be used:
     * </p><ul>
     * <li><p><em>"safe"</em></p><p>Deprecated. Please use the {@link http://www.php.net/manual/en/mongo.writeconcerns.php write concern} <em>"w"</em> option.</p></li>
     * <li><p><em>"timeout"</em></p><p>Deprecated alias for <em>"socketTimeoutMS"</em>.</p></li>
     * <li><p><b>"wtimeout"</b></p><p>Deprecated alias for <em>"wTimeoutMS"</em>.</p></p>
	 * @throws MongoCursorException
     * @throws MongoCursorTimeoutException
	 * @return bool|array <p>Returns an array containing the status of the removal if the
     * <em>"w"</em> option is set. Otherwise, returns <b>TRUE</b>.
     * </p>
     * <p>
     * Fields in the status array are described in the documentation for
     * <b>MongoCollection::insert()</b>.
     * </p>
	 */
/**
*<div id="mongocollection.remove" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::remove</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::remove</span> &mdash; <span class="dc-title">从集合中删除记录</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.remove-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type bool|array">bool|array</span></span> <span class="methodname"><strong>MongoCollection::remove</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$criteria</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.remove-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">criteria</code>      </dt>       <dd>        <p class="para">        待删除记录的描述。       </p>      </dd>                    <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        删除的选项。        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem">          <p class="para">           <em>&quot;justOne&quot;</em>          </p>          <p class="para">           最多只删除一个匹配的记录。          </p>         </li>         <li class="listitem"><p class="para"><em>&quot;fsync&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the insert to be synced to disk before returning success. If <strong><code>TRUE</code></strong>, an acknowledged insert is implied and will override setting <em>w</em> to <em>0</em>.</p></li>                 <li class="listitem"><p class="para"><em>&quot;j&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the write operation to block until it is synced to the journal on disk. If <strong><code>TRUE</code></strong>, an acknowledged write is implied and this option will override setting <em>&quot;w&quot;</em> to <em>0</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">If this option is used and journaling is disabled, MongoDB 2.6+ will raise an error and the write will fail; older server versions will simply ignore the option.</span></p></blockquote></li>          <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wtimeout&quot;</em></p><p class="para">Deprecated alias for <em>&quot;wTimeoutMS&quot;</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;safe&quot;</em></p><p class="para"><em class="emphasis">Deprecated</em>. Please use the <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcern</a> <em>w</em> option.</p></li>         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>        </ul>       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.remove-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果设置了 <em>&quot;w&quot;</em>  选项，将会返回包含删除状态的 array。    否则返回 <strong><code>TRUE</code></strong>。   </p>   <p class="para">    状态数组字段的解释位于 <span class="function">{@link MongoCollection::insert()}</span> 的文档。   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.remove-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.remove-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">        <tr>        <td>1.3.0</td>        <td>         <code class="parameter">options</code> 参数不再接受 boolean 值来代表 <em>&quot;justOne&quot;</em>。         现在，必须使用 <em>array(&#039;justOne&#039; =&gt; true)</em> 作为替代。        </td>       </tr>        <tr>        <td>1.2.11</td>        <td>         当 <code class="parameter">options</code> 是 <span class="type"><span class="type scalar">scalar</span></span> 时产生一个 <strong><code>E_DEPRECATED</code></strong> 警告。        </td>       </tr>        <tr>        <td>1.2.0</td>        <td>添加 <em>&quot;timeout&quot;</em> 选项。</td>       </tr>        <tr>        <td>1.0.11</td>        <td>         在设置了 <em>&quot;safe&quot;</em> 之后，将在出现 &quot;not master&quot; 错误时断开连接。        </td>       </tr>        <tr>        <td>1.0.9</td>        <td>         <p class="para">          添加了 <em>&quot;safe&quot;</em> 选项对 integer 的支持，之前只接受 boolean 值。         </p>         <p class="para">          添加了 <em>&quot;fsync&quot;</em> 选项。         </p>         <p class="para">          当使用了 <em>&quot;safe&quot;</em> 选项时将会返回包含错误信息的数组。          否则和之前一样返回一个 boolean。         </p>        </td>       </tr>        <tr>        <td>1.0.5</td>        <td>         修改第二个参数为选项的 array。在 1.0.5 之前，第二个选项是 boolean 值，         代表了 <em>&quot;safe&quot;</em> 选项。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.remove-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1559">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::remove()</strong></span> 的 justOne 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$radioactive&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">radioactive</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;统计那有多少个钚<br /></span><span style="color: #9876AA">$remaining&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$radioactive</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'type'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">94</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$halflife&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$remaining</span><span style="color: #007700">/</span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;删除一半<br /></span><span style="color: #007700">while&nbsp;(</span><span style="color: #9876AA">$halflife&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$radioactive</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">remove</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'type'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">94</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">"justOne"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$halflife</span><span style="color: #007700">--;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.remove-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCollection::insert()} - 插入文档到集合中</span></li>    <li class="member"><span class="function">{@link MongoCollection::update()} - Update records based on a given criteria</span></li>    <li class="member">MongoDB <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/remove-documents/" class="link external">&raquo;&nbsp;remove</a> 的核心文档。</li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function remove(array $criteria = array(), array $options = array()) {}

    /**
	 * Querys this collection
	 * @link http://www.php.net/manual/en/mongocollection.find.php
	 * @param array $query The fields for which to search.
	 * @param array $fields Fields of the results to return.
	 * @return MongoCursor
	 */
/**
*<div id="mongocollection.find" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::find</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::find</span> &mdash; <span class="dc-title">查询该集合，并返回结果集的 <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a></span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.find-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocursor.php" class="type MongoCursor">MongoCursor</a></span> <span class="methodname"><strong>MongoCollection::find</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>   ]] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.find-parameters">   <h3 class="title">参数</h3>     <p class="para">    <dl>            <dt>        <code class="parameter">query</code>      </dt>       <dd>        <p class="para">        要搜索的字段。        MongoDB 的查询语言十分宽泛。        PHP 驱动在几乎所有的情况下会把查询直接传入服务器，所以阅读 MongoDB 关于 <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/method/db.collection.find/" class="link external">&raquo;&nbsp;find</a> 的核心文档是个不错的主意。       </p>       <div class="warning"><strong class="warning">Warning</strong>        <p class="para">         请确保所有指定的查询操作符（以 <em>$</em> 开头）是用单引号的，这样 PHP 才不会尝试用 <em>$exists</em> 变量的值来替换 <em>&quot;$exists&quot;</em> 命令。        </p>       </div>      </dd>                    <dt>        <code class="parameter">fields</code>      </dt>       <dd>        <p class="para">        返回结果的字段。Array 的格式是 <em>array(&#039;fieldname&#039; =&gt; true, &#039;fieldname2&#039; =&gt; true)</em>。        <em>_id</em> 字段总会返回。       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.find-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回搜索结果的游标。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.find-examples">   <h3 class="title">范例</h3>    <div class="example" id="example-1539">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::find()</strong></span> 例子</strong></p>    <div class="example-contents"><p>该例子演示了基本的搜索选项。</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'produce'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;搜索水果<br /></span><span style="color: #9876AA">$fruitQuery&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'Type'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Fruit'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(</span><span style="color: #9876AA">$fruitQuery</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$doc</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$doc</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;搜索甜的产品&nbsp;Taste&nbsp;is&nbsp;a&nbsp;child&nbsp;of&nbsp;Details.&nbsp;<br /></span><span style="color: #9876AA">$sweetQuery&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'Details.Taste'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Sweet'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">"Sweet\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(</span><span style="color: #9876AA">$sweetQuery</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$doc</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$doc</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(4) {   [&quot;_id&quot;]=&gt;   object(MongoId)#7 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;50a87dd084f045a19b220dd6&quot;   }   [&quot;Name&quot;]=&gt;   string(5) &quot;Apple&quot;   [&quot;Type&quot;]=&gt;   string(5) &quot;Fruit&quot;   [&quot;Details&quot;]=&gt;   array(2) {     [&quot;Taste&quot;]=&gt;     string(5) &quot;Sweet&quot;     [&quot;Colour&quot;]=&gt;     string(3) &quot;Red&quot;   } } array(4) {   [&quot;_id&quot;]=&gt;   object(MongoId)#8 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;50a87de084f045a19b220dd7&quot;   }   [&quot;Name&quot;]=&gt;   string(5) &quot;Lemon&quot;   [&quot;Type&quot;]=&gt;   string(5) &quot;Fruit&quot;   [&quot;Details&quot;]=&gt;   array(2) {     [&quot;Taste&quot;]=&gt;     string(4) &quot;Sour&quot;     [&quot;Colour&quot;]=&gt;     string(5) &quot;Green&quot;   } }  Sweet: array(4) {   [&quot;_id&quot;]=&gt;   object(MongoId)#7 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;50a87dd084f045a19b220dd6&quot;   }   [&quot;Name&quot;]=&gt;   string(5) &quot;Apple&quot;   [&quot;Type&quot;]=&gt;   string(5) &quot;Fruit&quot;   [&quot;Details&quot;]=&gt;   array(2) {     [&quot;Taste&quot;]=&gt;     string(5) &quot;Sweet&quot;     [&quot;Colour&quot;]=&gt;     string(3) &quot;Red&quot;   } } </pre></div>    </div>    <div class="example-contents"><p>     更多关于游标如何使用的信息，参见 <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a>。    </p></div>   </div>   <div class="example" id="example-1540">    <p><strong>Example #2 <span class="function"><strong>MongoCollection::find()</strong></span> 例子</strong></p>    <div class="example-contents"><p>这个例子演示了如何搜索一个范围。</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'phpmanual'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;search&nbsp;for&nbsp;documents&nbsp;where&nbsp;5&nbsp;&lt;&nbsp;x&nbsp;&lt;&nbsp;20<br /></span><span style="color: #9876AA">$rangeQuery&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">'$gt'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'$lt'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">20&nbsp;</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(</span><span style="color: #9876AA">$rangeQuery</span><span style="color: #007700">);<br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$doc</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$doc</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;_id&quot;]=&gt;   object(MongoId)#10 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;4ebc3e3710b89f2349000000&quot;   }   [&quot;x&quot;]=&gt;   int(12) } array(2) {   [&quot;_id&quot;]=&gt;   object(MongoId)#11 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;4ebc3e3710b89f2349000001&quot;   }   [&quot;x&quot;]=&gt;   int(12) } </pre></div>    </div>    <div class="example-contents"><p>     更多关于游标如何使用的信息，参见 <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a>。    </p></div>   </div>   <div class="example" id="example-1541">    <p><strong>Example #3 使用 $where 的 <span class="function"><strong>MongoCollection::find()</strong></span> 例子</strong></p>    <div class="example-contents"><p>这个例子演示了如何搜索一个集合，并用 javascript 代码来筛选结果集。</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'phpmanual'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$js&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"function()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.name&nbsp;==&nbsp;'Joe'&nbsp;||&nbsp;this.age&nbsp;==&nbsp;50;<br />}"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'$where'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$js</span><span style="color: #007700">));<br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$doc</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$doc</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;_id&quot;]=&gt;   object(MongoId)#7 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;4ebc3e3710b89f2349000002&quot;   }   [&quot;name&quot;]=&gt;   string(3) &quot;Joe&quot;   [&quot;age&quot;]=&gt;   int(20) } </pre></div>    </div>   </div>   <div class="example" id="example-1542">    <p><strong>Example #4 使用 $in 的 <span class="function"><strong>MongoCollection::find()</strong></span> 例子</strong></p>    <div class="example-contents"><p>这个例子演示了使用 $in 操作符来搜索集合。</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'phpmanual'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'name'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$in'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'Joe'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Wendy'</span><span style="color: #007700">))<br />));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;_id&quot;]=&gt;   object(MongoId)#7 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;4ebc3e3710b89f2349000002&quot;   }   [&quot;name&quot;]=&gt;   string(3) &quot;Joe&quot;   [&quot;age&quot;]=&gt;   int(20) } </pre></div>    </div>   </div>    <div class="example" id="example-1543">    <p><strong>Example #5 以数组形式获取结果集</strong></p>    <div class="example-contents"><p>     返回 <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a>。     常常在开始的时候，人们更习惯使用数组。     使用 <span class="function">{@link iterator_to_array()}</span> 将游标转换成一个数组。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'phpmanual'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$array&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">iterator_to_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(3) {   [&quot;4ebc40af10b89f5149000000&quot;]=&gt;   array(2) {     [&quot;_id&quot;]=&gt;     object(MongoId)#6 (1) {       [&quot;$id&quot;]=&gt;       string(24) &quot;4ebc40af10b89f5149000000&quot;     }     [&quot;x&quot;]=&gt;     int(12)   }   [&quot;4ebc40af10b89f5149000001&quot;]=&gt;   array(2) {     [&quot;_id&quot;]=&gt;     object(MongoId)#11 (1) {       [&quot;$id&quot;]=&gt;       string(24) &quot;4ebc40af10b89f5149000001&quot;     }     [&quot;x&quot;]=&gt;     int(12)   }   [&quot;4ebc40af10b89f5149000002&quot;]=&gt;   array(3) {     [&quot;_id&quot;]=&gt;     object(MongoId)#12 (1) {       [&quot;$id&quot;]=&gt;       string(24) &quot;4ebc40af10b89f5149000002&quot;     }     [&quot;name&quot;]=&gt;     string(3) &quot;Joe&quot;     [&quot;age&quot;]=&gt;     int(20)   } } </pre></div>    </div>    <div class="example-contents"><p>     使用 <span class="function">{@link iterator_to_array()}</span> 会让驱动将强制载入所有搜索结果集到内存，所以对超过内存大小的结果集不要这么做！    </p></div>    <div class="example-contents"><p>     同时，有些系统集合不具有 <em>_id</em> 字段。     如果你处理一个可能没有 <em>_id</em> 字段的集合，需要将 <strong><code>FALSE</code></strong> 传入     <span class="function">{@link iterator_to_array()}</span> 第二个参数（这样它不会尝试使用不存在的 <em>_id</em> 的值作为数组键）。    </p></div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.find-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCollection::findOne()} - Queries this collection, returning a single element</span></li>    <li class="member"><span class="function">{@link MongoCollection::insert()} - 插入文档到集合中</span></li>    <li class="member">MongoDB <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/method/db.collection.find/" class="link external">&raquo;&nbsp;find</a> 的核心文档。</li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function find(array $query = array(), array $fields = array()) {}

/**
*<div id="mongocollection.distinct" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::distinct</h1>   <p class="verinfo">(PECL mongo &gt;=1.2.11)</p><p class="refpurpose"><span class="refname">MongoCollection::distinct</span> &mdash; <span class="dc-title">获取集合里指定键的不同值的列表。</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.distinct-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::distinct</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>   ] )</div>    <p class="para rdfs-comment">    distinct 命令返回集合里给定键不同值的列表。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.distinct-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       要使用的键。      </p>     </dd>              <dt> <code class="parameter">query</code></dt>      <dd>       <p class="para">       一个可选的查询参数      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.distinct-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回不同值的数组， 或者在失败时返回 <strong><code>FALSE</code></strong>   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.distinct-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongocollection.aggregate.example.zipcode.population.average">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::distinct()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$db&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">dropCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"distinct"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">distinct</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"stuff"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"zip-code"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">10010</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"stuff"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"zip-code"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">10010</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"stuff"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"zip-code"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">99701</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">"w"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">distinct</span><span style="color: #007700">(</span><span style="color: #DD0000">"zip-code"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$retval</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">distinct</span><span style="color: #007700">(</span><span style="color: #DD0000">"zip-code"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"stuff"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$retval</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">distinct</span><span style="color: #007700">(</span><span style="color: #DD0000">"zip-code"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"stuff"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$retval</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [0]=&gt;   int(10010)   [1]=&gt;   int(99701) } array(1) {   [0]=&gt;   int(10010) } array(2) {   [0]=&gt;   int(10010)   [1]=&gt;   int(99701) } </pre></div>    </div>   </div>   <div class="example" id="mongocollection.aggregate.example.zipcode.explain">    <p><strong>Example #2 内嵌文档的 <span class="methodname"><strong>MongoCollection::distinct()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"user"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">25</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"user"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">31</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"user"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"points"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">25</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">distinct</span><span style="color: #007700">(</span><span style="color: #DD0000">"user.points"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$retval</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">distinct</span><span style="color: #007700">(</span><span style="color: #DD0000">"user.nonexisting"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$retval</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [0]=&gt;   int(25)   [1]=&gt;   int(31) } array(0) { } </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return array|bool Returns an array of distinct values, or <b>FALSE</b> on failure*/
    public function distinct ($key, array $query = NULL) {}

/**
*<div id="mongocollection.findandmodify" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::findAndModify</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoCollection::findAndModify</span> &mdash; <span class="dc-title">Update a document and return it</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.findandmodify-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::findAndModify</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$update</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span>   ]]] )</div>    <p class="para rdfs-comment">   The findAndModify command atomically modifies and returns a single document.   By default, the returned document does not include the modifications made on   the update. To return the document with the modifications made on the   update, use the <var class="varname"><var class="varname">new</var></var> option.   </p>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.findandmodify-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">query</code></dt>      <dd>       <p class="para">       The query criteria to search for.      </p>     </dd>              <dt> <code class="parameter">update</code></dt>      <dd>       <p class="para">       The update criteria.      </p>     </dd>              <dt> <code class="parameter">fields</code></dt>      <dd>       <p class="para">       Optionally only return these fields.      </p>     </dd>              <dt> <code class="parameter">options</code></dt>      <dd>       <p class="para">       An array of options to apply, such as remove the match document from the       DB and return it.       <table class="doctable informaltable">                 <thead>          <tr>           <th>Option</th>           <th>说明</th>          </tr>          </thead>          <tbody class="tbody">          <tr>           <td><var class="varname"><var class="varname">sort</var></var> <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span></td>           <td>            Determines which document the operation will modify if the            query selects multiple documents. findAndModify will modify the            first document in the sort order specified by this argument.           </td>          </tr>           <tr>           <td><var class="varname"><var class="varname">remove</var></var> <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span></td>           <td>            Optional if <var class="varname"><var class="varname">update</var></var> field exists. When <strong><code>TRUE</code></strong>, removes the selected            document. The default is <strong><code>FALSE</code></strong>.           </td>          </tr>           <tr>           <td><var class="varname"><var class="varname">update</var></var> <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span></td>           <td>            Optional if <var class="varname"><var class="varname">remove</var></var> field exists.            Performs an update of the selected document.           </td>          </tr>           <tr>           <td><var class="varname"><var class="varname">new</var></var> <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span></td>           <td>            Optional. When <strong><code>TRUE</code></strong>, returns the modified document rather than the            original. The findAndModify method ignores the <var class="varname"><var class="varname">new</var></var> option for            remove operations. The default is <strong><code>FALSE</code></strong>.           </td>          </tr>           <tr>           <td><var class="varname"><var class="varname">upsert</var></var> <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span></td>           <td>            Optional. Used in conjunction with the <var class="varname"><var class="varname">update</var></var> field. When <strong><code>TRUE</code></strong>, the            findAndModify command creates a new document if the query returns            no documents. The default is false. In MongoDB 2.2, the            findAndModify command returns <strong><code>NULL</code></strong> when upsert is <strong><code>TRUE</code></strong>.           </td>          </tr>           <tr>           <td><var class="varname"/></td>           <td>           </td>          </tr>          </tbody>               </table>       </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.findandmodify-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the original document, or the modified document when    <var class="varname"><var class="varname">new</var></var> is set.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.findandmodify-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoresultexception.php" class="classname">MongoResultException</a> on failure.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.findandmodify-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1544">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::findAndModify()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$col&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">jobs</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Next&nbsp;promo"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">"select&nbsp;product"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"add&nbsp;inventory"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"do&nbsp;placement"</span><span style="color: #007700">),<br />)&nbsp;);<br /><br /></span><span style="color: #9876AA">$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Biz&nbsp;report"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">"run&nbsp;sales&nbsp;report"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"email&nbsp;report"&nbsp;</span><span style="color: #007700">)<br />)&nbsp;);<br /><br /></span><span style="color: #9876AA">$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Biz&nbsp;report"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">"run&nbsp;marketing&nbsp;report"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"email&nbsp;report"&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"w"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">)<br />);<br /><br /><br /><br /></span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findAndModify</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Biz&nbsp;report"</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'$set'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'inprogress'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"started"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">())),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"sort"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"new"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;)<br />);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$retval</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(6) {   [&quot;_id&quot;]=&gt;   object(MongoId)#7 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;5091b5b244415e8cc3000002&quot;   }   [&quot;inprogress&quot;]=&gt;   bool(true)   [&quot;name&quot;]=&gt;   string(10) &quot;Biz report&quot;   [&quot;priority&quot;]=&gt;   int(2)   [&quot;started&quot;]=&gt;   object(MongoDate)#8 (2) {     [&quot;sec&quot;]=&gt;     int(1351726514)     [&quot;usec&quot;]=&gt;     int(925000)   }   [&quot;tasks&quot;]=&gt;   array(2) {     [0]=&gt;     string(20) &quot;run marketing report&quot;     [1]=&gt;     string(12) &quot;email report&quot;   } } </pre></div>    </div>   </div>   <div class="example" id="example-1545">    <p><strong>Example #2 <span class="methodname"><strong>MongoCollection::findAndModify()</strong></span> error handling</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$col&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">jobs</span><span style="color: #007700">;<br />try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findAndModify</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Next&nbsp;promo"</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'$pop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">)),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$pop'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"stuff"</span><span style="color: #007700">))),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"new"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;);<br />}&nbsp;catch(</span><span style="color: #9876AA">MongoResultException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCode</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">"&nbsp;:&nbsp;"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDocument</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> 13097 : exception: Unsupported projection option: $pop array(3) {   [&quot;errmsg&quot;]=&gt;   string(46) &quot;exception: Unsupported projection option: $pop&quot;   [&quot;code&quot;]=&gt;   int(13097)   [&quot;ok&quot;]=&gt;   float(0) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.findandmodify-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The MongoDB <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/findAndModify/" class="link external">&raquo;&nbsp;findAndModify command</a> docs</li>   </ul>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return array Returns the original document, or the modified document when new is set.*/
    public function findAndModify (array $query, array $update = NULL, array $fields = NULL, array $options = NULL) {}

    /**
	 * Querys this collection, returning a single element
	 * @link http://www.php.net/manual/en/mongocollection.findone.php
	 * @param array $query The fields for which to search.
	 * @param array $fields Fields of the results to return.
	 * @param array $options This parameter is an associative array of the form array("name" => <value>, ...).
	 * @return array|null
	 */
/**
*<div id="mongocollection.findone" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::findOne</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::findOne</span> &mdash; <span class="dc-title">Queries this collection, returning a single element</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.findone-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::findOne</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]]] )</div>    <p class="para rdfs-comment">    As opposed to <span class="function">{@link MongoCollection::find()}</span>, this method    will return only the <em class="emphasis">first</em> result from the result set,    and not a <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a> that can be iterated over.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.findone-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">query</code>      </dt>       <dd>        <p class="para">        The fields for which to search. MongoDB&#039;s query language is quite        extensive. The PHP driver will in almost all cases pass the query        straight through to the server, so reading the MongoDB core docs on        <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/method/db.collection.find/" class="link external">&raquo;&nbsp;find</a> is a good idea.       </p>       <div class="warning"><strong class="warning">Warning</strong>        <p class="para">         Please make sure that for all special query operaters (starting with         <em>$</em>) you use single quotes so that PHP doesn&#039;t try to         replace <em>&quot;$exists&quot;</em> with the value of the variable         <em>$exists</em>.        </p>       </div>      </dd>                    <dt>        <code class="parameter">fields</code>      </dt>       <dd>        <p class="para">        Fields of the results to return. The array is in the format        <em>array(&#039;fieldname&#039; =&gt; true, &#039;fieldname2&#039; =&gt; true)</em>.        The <em>_id</em> field is always returned.       </p>      </dd>                    <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        This parameter is an associative array of the form         <em>array(&quot;name&quot; =&gt; &lt;value&gt;, ...)</em>. Currently        supported options are:       </p>       <ul class="itemizedlist">        <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>       </ul>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.findone-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns record matching the search or <strong><code>NULL</code></strong>.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.findone-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a> if it cannot reach the     database.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.findone-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>1.5.0</td>       <td>        Added optional <code class="parameter">options</code> argument.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 examples" id="refsect1-mongocollection.findone-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongocollection.distinct.basic">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::findOne()</strong></span> document by its id.</strong></p>    <div class="example-contents"><p>This example demonstrates how to find a single document in a collection by its id.</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$articles&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">articles</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$article&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$articles</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoId</span><span style="color: #007700">(</span><span style="color: #DD0000">'47cc67093475061e3d9536d2'</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="mongocollection.distinct.basic-embedded">    <p><strong>Example #2 <span class="methodname"><strong>MongoCollection::findOne()</strong></span> document by some condition.</strong></p>    <div class="example-contents"><p>This example demonstrates how to find a single document in a collection by some condition and limiting the returned fields.</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$users&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">users</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$user&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$users</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'jwage'</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'password'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$user</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [_id] =&gt; MongoId Object         (         )      [password] =&gt; test ) </pre></div>    </div>    <div class="example-contents"><p>     Notice how even though the document does have a username field, we limited the results     to only contain the password field.    </p></div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.findone-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCollection::find()} - 查询该集合，并返回结果集的 MongoCursor</span></li>    <li class="member"><span class="function">{@link MongoCollection::insert()} - 插入文档到集合中</span></li>    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/method/db.collection.find/" class="link external">&raquo;&nbsp;find</a>.</li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function findOne(array $query = array(), array $fields = array(), array $options = array()) {}

/**
*<div id="mongocollection.createindex" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::createIndex</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCollection::createIndex</span> &mdash; <span class="dc-title">    Creates an index on the specified field(s) if it does not already exist   </span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.createindex-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCollection::createIndex</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$keys</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>    <p class="para rdfs-comment">    Creates an index on the specified field(s) if it does not already exist.    Fields may be indexed with a direction (e.g. ascending or descending) or a    special type (e.g. text, geospatial, hashed).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This method will use the     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/createIndexes" class="link external">&raquo;&nbsp;createIndexes</a>     database command when communicating with MongoDB 2.6+. For previous database     versions, the method will perform an insert operation on the     special <em>system.indexes</em> collection.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.createindex-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">keys</code>      </dt>       <dd>        <p class="para">        An array specifying the index&#039;s fields as its keys. For each field, the        value is either the index direction or        <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/index-types/" class="link external">&raquo;&nbsp;index type</a>.        If specifying direction, specify <em>1</em> for ascending or        <em>-1</em> for descending.       </p>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the index creation. We pass all given options        straight to the server, but a non-exhaustive list of currently        available options include:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;unique&quot;</em></p><p class="para">Specify <strong><code>TRUE</code></strong> to create a unique index. The default value is <strong><code>FALSE</code></strong>. This option applies only to ascending/descending indexes.</p><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">When MongoDB indexes a field, if a document does not have a value for the field, a <strong><code>NULL</code></strong> value is indexed. If multiple documents do not contain a field, a unique index will reject all but the first of those documents. The <em>&quot;sparse&quot;</em> option may be used to overcome this, since it will prevent documents without the field from being indexed.</p></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;sparse&quot;</em></p><p class="para">Specify <strong><code>TRUE</code></strong> to create a sparse index, which only indexes documents containing a specified field. The default value is <strong><code>FALSE</code></strong>.</p></li>         <li class="listitem"><p class="para"><em>&quot;expireAfterSeconds&quot;</em></p><p class="para">The value of this option should specify the number of seconds after which a document should be considered expired and automatically removed from the collection. This option is only compatible with single-field indexes where the field will contain <a href="http://php.net/manual/zh/class.mongodate.php" class="classname">MongoDate</a> values.</p><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">This feature is available in MongoDB 2.2+. See <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/expire-data/" class="link external">&raquo;&nbsp;Expire Data from Collections by Setting TTL</a> for more information.</p></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;name&quot;</em></p><p class="para">A optional name that uniquely identifies the index.</p><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">By default, the driver will generate an index name based on the index&#039;s field(s) and ordering or type. For example, a compound index <em>array(&quot;x&quot; =&gt; 1, &quot;y&quot; =&gt; -1)</em> would be named <em>&quot;x_1_y_-1&quot;</em> and a geospatial index <em>array(&quot;loc&quot; =&gt; &quot;2dsphere&quot;)</em> would be named <em>&quot;loc_2dsphere&quot;</em>. For indexes with many fields, it is possible that the generated name might exceed MongoDB&#039;s <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/limits/#Index-Name-Length" class="link external">&raquo;&nbsp;limit for index names</a>. The <em>&quot;name&quot;</em> option may be used in that case to supply a shorter name.</p></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;background&quot;</em></p><p class="para">Builds the index in the background so that building an index does <em class="emphasis">not</em> block other database activities. Specify <strong><code>TRUE</code></strong> to build in the background. The default value is <strong><code>FALSE</code></strong>.</p><div class="warning"><strong class="warning">Warning</strong><p class="para">Prior to MongoDB 2.6.0, index builds on secondaries were executed as foreground operations, irrespective of this option. See <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/build-indexes-on-replica-sets/" class="link external">&raquo;&nbsp;Building Indexes with Replica Sets</a> for more information.</p></div></li>         <li class="listitem"><p class="para"><em>&quot;socketTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for socket communication. If the server does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown and there will be no way to determine if the server actually handled the write or not. A value of <em>-1</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>30000</em> (30 seconds).</p></li>        </ul>       </p>       <p class="para">        The following option may be used with MongoDB 2.6+:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>        </ul>       </p>       <p class="para">        The following options may be used with MongoDB versions before 2.8:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;dropDups&quot;</em></p><p class="para">Specify <strong><code>TRUE</code></strong> to force creation of a unique index where the collection may contain duplicate values for a key. MongoDB will index the first occurrence of a key and delete all subsequent documents from the collection that contain a duplicate value for that key. The default value is <strong><code>FALSE</code></strong>.</p><div class="warning"><strong class="warning">Warning</strong><p class="para"><em>&quot;dropDups&quot;</em> may delete data from your database. Use with extreme caution.</p></div><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">This option is not supported on MongoDB 2.8+. Index creation will fail if the collection contains duplicate values.</p></p></blockquote></li>        </ul>       </p>       <p class="para">        The following options may be used with MongoDB versions before 2.6:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> acknowledgement. It is only applicable when <em>&quot;w&quot;</em> is greater than <em>1</em>, as the timeout pertains to replication. If the write concern is not satisfied within the time limit, a <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> will be thrown. A value of <em>0</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>10000</em> (ten seconds).</p></li>        </ul>       </p>       <p class="para">        The following options are deprecated and should no longer be used:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;safe&quot;</em></p><p class="para"><em class="emphasis">Deprecated</em>. Please use the <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcern</a> <em>w</em> option.</p></li>         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>         <li class="listitem"><p class="para"><em>&quot;wtimeout&quot;</em></p><p class="para">Deprecated alias for <em>&quot;wTimeoutMS&quot;</em>.</p></li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.createindex-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array containing the status of the index creation. The array    contains whether the operation succeeded (<em>&quot;ok&quot;</em>), the    number of indexes before and after the operation    (<em>&quot;numIndexesBefore&quot;</em> and    <em>&quot;numIndexesAfter&quot;</em>), and whether the collection that the    index belongs to has been created    (<em>&quot;createdCollectionAutomatically&quot;</em>). If the index already    existed and did not need to be created, a <em>&quot;note&quot;</em> field may    be present in lieu of <em>&quot;numIndexesAfter&quot;</em>.   </p>   <p class="para">    With MongoDB 2.4 and earlier, a status document is only returned if the    <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> is at least    <em>1</em>. Otherwise, <strong><code>TRUE</code></strong> is returned. The fields in the status    document are different, except for the <em>&quot;ok&quot;</em> field, which    signals whether the index creation was successful. Additional fields are    described in the documentation for    <span class="function">{@link MongoCollection::insert()}</span>.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.createindex-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> if the index name is longer    than 128 bytes, or if the index specification is not an array.   </p>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoduplicatekeyexception.php" class="classname">MongoDuplicateKeyException</a> if the server could not    create the unique index due to conflicting documents.   </p>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoresultexception.php" class="classname">MongoResultException</a> if the server could not    create the index due to an error.   </p>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.createindex-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1528">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::createIndex()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$c&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;an&nbsp;index&nbsp;on&nbsp;'x'&nbsp;ascending<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;a&nbsp;unique&nbsp;index&nbsp;on&nbsp;'y'<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'y'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'unique'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;a&nbsp;compound&nbsp;index&nbsp;on&nbsp;'za'&nbsp;ascending&nbsp;and&nbsp;'zb'&nbsp;descending<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'za'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'zb'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-1529">    <p><strong>Example #2 Geospatial Indexing</strong></p>    <div class="example-contents"><p>     Mongo supports geospatial indexes, which allow you to search for documents     near a given location or within a shape. The following example creates a     geospatial index on the <em>&quot;loc&quot;</em> field:    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'loc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'2dsphere'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-1530">    <p><strong>Example #3 Drop duplicates example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'joeschmoe'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'joeschmoe'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;Index&nbsp;creation&nbsp;fails,&nbsp;since&nbsp;you&nbsp;cannot&nbsp;create&nbsp;a&nbsp;unique&nbsp;index&nbsp;on&nbsp;a&nbsp;field&nbsp;when<br />&nbsp;*&nbsp;duplicates&nbsp;exist.<br />&nbsp;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'unique'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;MongoDB&nbsp;will&nbsp;one&nbsp;of&nbsp;the&nbsp;conflicting&nbsp;documents&nbsp;and&nbsp;allow&nbsp;the&nbsp;unique&nbsp;index&nbsp;to<br />&nbsp;*&nbsp;be&nbsp;created.<br />&nbsp;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'unique'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'dropDups'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;We&nbsp;now&nbsp;have&nbsp;a&nbsp;unique&nbsp;index&nbsp;and&nbsp;subsequent&nbsp;inserts&nbsp;with&nbsp;the&nbsp;same&nbsp;username&nbsp;will<br />&nbsp;*&nbsp;fail.<br />&nbsp;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'joeschmoe'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.createindex-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCollection::deleteIndex()} - Deletes an index from this collection</span></li>    <li class="member"><span class="methodname">{@link MongoCollection::deleteIndexes()} - 删除集合的所有索引</span></li>    <li class="member">     The MongoDB     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/indexes/" class="link external">&raquo;&nbsp;index</a> and     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/index-types/" class="link external">&raquo;&nbsp;index type</a>     documentation.    </li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
     * @return array Returns the database response.*/
    public function createIndex(array $keys, array $options = array()) {}

    /**
	 * @deprecated Use MongoCollection::createIndex() instead.
	 * Creates an index on the given field(s), or does nothing if the index already exists
	 * @link http://www.php.net/manual/en/mongocollection.ensureindex.php
	 * @param array $keys Field or fields to use as index.
	 * @param array $options [optional] This parameter is an associative array of the form array("optionname" => <boolean>, ...).
	 * @return boolean always true
	 */
/**
*<div id="mongocollection.ensureindex" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::ensureIndex</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::ensureIndex</span> &mdash; <span class="dc-title">    Creates an index on the specified field(s) if it does not already exist   </span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.ensureindex-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCollection::ensureIndex</strong></span>     ( <span class="methodparam"><span class="type"><span class="type string|array">string|array</span></span> <code class="parameter">$key|keys</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     This method is deprecated since version 1.5.0. Please use     <span class="methodname">{@link MongoCollection::createIndex()}</span> instead.    </p>   </div>   <p class="para">    Creates an index on the specified field(s) if it does not already exist.    Fields may be indexed with a direction (e.g. ascending or descending) or a    special type (e.g. text, geospatial, hashed).   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     This method will use the     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/createIndexes" class="link external">&raquo;&nbsp;createIndexes</a>     database command when communicating with MongoDB 2.6+. For previous database     versions, the method will perform an insert operation on the     special <em>system.indexes</em> collection.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.ensureindex-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">keys</code>      </dt>       <dd>        <p class="para">        An array specifying the index&#039;s fields as its keys. For each field, the        value is either the index direction or        <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/index-types/" class="link external">&raquo;&nbsp;index type</a>.        If specifying direction, specify <em>1</em> for ascending or        <em>-1</em> for descending.       </p>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the index creation. Currently available options        include:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;unique&quot;</em></p><p class="para">Specify <strong><code>TRUE</code></strong> to create a unique index. The default value is <strong><code>FALSE</code></strong>. This option applies only to ascending/descending indexes.</p><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">When MongoDB indexes a field, if a document does not have a value for the field, a <strong><code>NULL</code></strong> value is indexed. If multiple documents do not contain a field, a unique index will reject all but the first of those documents. The <em>&quot;sparse&quot;</em> option may be used to overcome this, since it will prevent documents without the field from being indexed.</p></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;sparse&quot;</em></p><p class="para">Specify <strong><code>TRUE</code></strong> to create a sparse index, which only indexes documents containing a specified field. The default value is <strong><code>FALSE</code></strong>.</p></li>         <li class="listitem"><p class="para"><em>&quot;expireAfterSeconds&quot;</em></p><p class="para">The value of this option should specify the number of seconds after which a document should be considered expired and automatically removed from the collection. This option is only compatible with single-field indexes where the field will contain <a href="http://php.net/manual/zh/class.mongodate.php" class="classname">MongoDate</a> values.</p><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">This feature is available in MongoDB 2.2+. See <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/expire-data/" class="link external">&raquo;&nbsp;Expire Data from Collections by Setting TTL</a> for more information.</p></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;name&quot;</em></p><p class="para">A optional name that uniquely identifies the index.</p><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">By default, the driver will generate an index name based on the index&#039;s field(s) and ordering or type. For example, a compound index <em>array(&quot;x&quot; =&gt; 1, &quot;y&quot; =&gt; -1)</em> would be named <em>&quot;x_1_y_-1&quot;</em> and a geospatial index <em>array(&quot;loc&quot; =&gt; &quot;2dsphere&quot;)</em> would be named <em>&quot;loc_2dsphere&quot;</em>. For indexes with many fields, it is possible that the generated name might exceed MongoDB&#039;s <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/limits/#Index-Name-Length" class="link external">&raquo;&nbsp;limit for index names</a>. The <em>&quot;name&quot;</em> option may be used in that case to supply a shorter name.</p></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;background&quot;</em></p><p class="para">Builds the index in the background so that building an index does <em class="emphasis">not</em> block other database activities. Specify <strong><code>TRUE</code></strong> to build in the background. The default value is <strong><code>FALSE</code></strong>.</p><div class="warning"><strong class="warning">Warning</strong><p class="para">Prior to MongoDB 2.6.0, index builds on secondaries were executed as foreground operations, irrespective of this option. See <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/build-indexes-on-replica-sets/" class="link external">&raquo;&nbsp;Building Indexes with Replica Sets</a> for more information.</p></div></li>         <li class="listitem"><p class="para"><em>&quot;socketTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for socket communication. If the server does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown and there will be no way to determine if the server actually handled the write or not. A value of <em>-1</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>30000</em> (30 seconds).</p></li>        </ul>       </p>       <p class="para">        The following option may be used with MongoDB 2.6+:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>        </ul>       </p>       <p class="para">        The following options may be used with MongoDB versions before 2.8:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;dropDups&quot;</em></p><p class="para">Specify <strong><code>TRUE</code></strong> to force creation of a unique index where the collection may contain duplicate values for a key. MongoDB will index the first occurrence of a key and delete all subsequent documents from the collection that contain a duplicate value for that key. The default value is <strong><code>FALSE</code></strong>.</p><div class="warning"><strong class="warning">Warning</strong><p class="para"><em>&quot;dropDups&quot;</em> may delete data from your database. Use with extreme caution.</p></div><blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">This option is not supported on MongoDB 2.8+. Index creation will fail if the collection contains duplicate values.</p></p></blockquote></li>        </ul>       </p>       <p class="para">        The following options may be used with MongoDB versions before 2.6:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> acknowledgement. It is only applicable when <em>&quot;w&quot;</em> is greater than <em>1</em>, as the timeout pertains to replication. If the write concern is not satisfied within the time limit, a <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> will be thrown. A value of <em>0</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>10000</em> (ten seconds).</p></li>        </ul>       </p>       <p class="para">        The following options are deprecated and should no longer be used:        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;safe&quot;</em></p><p class="para"><em class="emphasis">Deprecated</em>. Please use the <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcern</a> <em>w</em> option.</p></li>         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>         <li class="listitem"><p class="para"><em>&quot;wtimeout&quot;</em></p><p class="para">Deprecated alias for <em>&quot;wTimeoutMS&quot;</em>.</p></li>        </ul>       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.ensureindex-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array containing the status of the index creation. The array    contains whether the operation succeeded (<em>&quot;ok&quot;</em>), the    number of indexes before and after the operation    (<em>&quot;numIndexesBefore&quot;</em> and    <em>&quot;numIndexesAfter&quot;</em>), and whether the collection that the    index belongs to has been created    (<em>&quot;createdCollectionAutomatically&quot;</em>). If the index already    existed and did not need to be created, a <em>&quot;note&quot;</em> field may    be present in lieu of <em>&quot;numIndexesAfter&quot;</em>.   </p>   <p class="para">    With MongoDB 2.4 and earlier, a status document is only returned if the    <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> is at least    <em>1</em>. Otherwise, <strong><code>TRUE</code></strong> is returned. The fields in the status    document are different, except for the <em>&quot;ok&quot;</em> field, which    signals whether the index creation was successful. Additional fields are    described in the documentation for    <span class="function">{@link MongoCollection::insert()}</span>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.ensureindex-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.5.0</td>        <td>         <p class="para">          Renamed the <em>&quot;wtimeout&quot;</em> option to          <em>&quot;wTimeoutMS&quot;</em>. Emits          <strong><code>E_DEPRECATED</code></strong> when <em>&quot;wtimeout&quot;</em> is          used.         </p>         <p class="para">          Renamed the <em>&quot;timeout&quot;</em> option to          <em>&quot;socketTimeoutMS&quot;</em>. Emits          <strong><code>E_DEPRECATED</code></strong> when <em>&quot;timeout&quot;</em> is          used.         </p>         <p class="para">          Emits <strong><code>E_DEPRECATED</code></strong> when <em>&quot;safe&quot;</em>          is used.         </p>        </td>       </tr>        <tr>        <td>1.3.4</td>        <td>Added <em>&quot;wtimeout&quot;</em> option.</td>       </tr>        <tr>        <td>1.3.0</td>        <td>         <p class="para">Added <em>&quot;w&quot;</em> option.</p>         <p class="para">          The <code class="parameter">options</code> parameter no longer accepts a          boolean to signify a unique index. Instead, this now has to be done          with <em>array(&#039;unique&#039; =&gt; true)</em>.         </p>        </td>       </tr>        <tr>        <td>1.2.11</td>        <td>         Emits <strong><code>E_DEPRECATED</code></strong> when         <code class="parameter">options</code> is <span class="type"><span class="type scalar">scalar</span></span>.        </td>       </tr>        <tr>        <td>1.2.0</td>        <td>Added <em>&quot;timeout&quot;</em> option.</td>       </tr>        <tr>        <td>1.0.11</td>        <td>         <p class="para">          The <em>&quot;safe&quot;</em> option will trigger a primary failover,          if necessary.         </p>         <p class="para">          <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> will be thrown if the index name          (either generated or set) is longer than 128 bytes.         </p>        </td>       </tr>        <tr>        <td>1.0.5</td>        <td>         Added the <em>&quot;name&quot;</em> option to override index name         creation.        </td>       </tr>        <tr>        <td>1.0.2</td>        <td>         Changed <code class="parameter">options</code> parameter from boolean to array.         Pre-1.0.2, the second parameter was an optional boolean value specifying         a unique index.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.ensureindex-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a> if the index name is longer    than 128 bytes, or if the index specification is not an array.   </p>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoduplicatekeyexception.php" class="classname">MongoDuplicateKeyException</a> if the server could not    create the unique index due to conflicting documents.   </p>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoresultexception.php" class="classname">MongoResultException</a> if the server could not    create the index due to an error.   </p>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.ensureindex-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1536">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::ensureIndex()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$c&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCollection</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;an&nbsp;index&nbsp;on&nbsp;'x'&nbsp;ascending<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;a&nbsp;unique&nbsp;index&nbsp;on&nbsp;'y'<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'y'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'unique'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;a&nbsp;compound&nbsp;index&nbsp;on&nbsp;'za'&nbsp;ascending&nbsp;and&nbsp;'zb'&nbsp;descending<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'za'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'zb'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-1537">    <p><strong>Example #2 Geospatial Indexing</strong></p>    <div class="example-contents"><p>     Mongo supports geospatial indexes, which allow you to search for documents     near a given location or within a shape. The following example creates a     geospatial index on the <em>&quot;loc&quot;</em> field:    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'loc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'2dsphere'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>   <div class="example" id="example-1538">    <p><strong>Example #3 Drop duplicates example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'joeschmoe'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'joeschmoe'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;Index&nbsp;creation&nbsp;fails,&nbsp;since&nbsp;you&nbsp;cannot&nbsp;create&nbsp;a&nbsp;unique&nbsp;index&nbsp;on&nbsp;a&nbsp;field&nbsp;when<br />&nbsp;*&nbsp;duplicates&nbsp;exist.<br />&nbsp;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'unique'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;MongoDB&nbsp;will&nbsp;one&nbsp;of&nbsp;the&nbsp;conflicting&nbsp;documents&nbsp;and&nbsp;allow&nbsp;the&nbsp;unique&nbsp;index&nbsp;to<br />&nbsp;*&nbsp;be&nbsp;created.<br />&nbsp;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'unique'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'dropDups'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;We&nbsp;now&nbsp;have&nbsp;a&nbsp;unique&nbsp;index&nbsp;and&nbsp;subsequent&nbsp;inserts&nbsp;with&nbsp;the&nbsp;same&nbsp;username&nbsp;will<br />&nbsp;*&nbsp;fail.<br />&nbsp;<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'joeschmoe'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.ensureindex-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCollection::createIndex()} - Creates an index on the specified field(s) if it does not already exist</span></li>    <li class="member"><span class="methodname">{@link MongoCollection::deleteIndex()} - Deletes an index from this collection</span></li>    <li class="member"><span class="methodname">{@link MongoCollection::deleteIndexes()} - 删除集合的所有索引</span></li>    <li class="member">     The MongoDB     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/indexes/" class="link external">&raquo;&nbsp;index</a> and     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/index-types/" class="link external">&raquo;&nbsp;index type</a>     documentation.    </li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function ensureIndex(array $keys, array $options = array()) {}

    /**
	 * Deletes an index from this collection
	 * @link http://www.php.net/manual/en/mongocollection.deleteindex.php
	 * @param string|array $keys Field or fields from which to delete the index.
	 * @return array Returns the database response.
	 */
/**
*<div id="mongocollection.deleteindex" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::deleteIndex</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::deleteIndex</span> &mdash; <span class="dc-title">Deletes an index from this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.deleteindex-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::deleteIndex</strong></span>     ( <span class="methodparam"><span class="type"><span class="type string|array">string|array</span></span> <code class="parameter">$keys</code></span>    )</div>    <p class="para rdfs-comment">    This method is identical to:   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #9876AA">deleteIndexes</span><span style="color: #007700">(</span><span style="color: #9876AA">$keys</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;</span><span style="color: #9876AA">$indexName&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">toIndexString</span><span style="color: #007700">(</span><span style="color: #9876AA">$keys</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"deleteIndexes"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">(),<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"index"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$indexName</span><span style="color: #007700">,<br />&nbsp;&nbsp;));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    <p class="para">    Each index is given a unique name when it is created. This is often generated    by the driver based on the index key(s) and order/type, but custom names may    also be specified with <span class="function">{@link MongoCollection::createIndex()}</span>&#039;s    <em>&quot;name&quot;</em> option).   </p>   <p class="para">    Unfortunately, <span class="function"><strong>MongoCollection::deleteIndex()</strong></span> cannot    delete custom-named indexes due to a backwards compatibility issue. When a    string argument is provided, it is assumed to be the single field name in an    ascending index (e.g. the name <em>&quot;x_1&quot;</em> would be used for the    argument <em>&quot;x&quot;</em>). If an array or object is provided, an index    name is generated just as if that argument was passed to    <span class="function">{@link MongoCollection::createIndex()}</span>.   </p>   <p class="para">    In order to delete a custom-named index with the PHP driver, the    <em>deleteIndexes</em> database command must be used. For instance,    an index named &quot;myIndex&quot; could be deleted with the PHP driver by running:   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">command</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;</span><span style="color: #DD0000">"deleteIndexes"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">(),<br />&nbsp;&nbsp;</span><span style="color: #DD0000">"index"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"myIndex"</span><span style="color: #007700">,<br />));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    <p class="para">    To determine the name of an index with the PHP driver, you can query the    <em>system.indexes</em> collection of a database and look for the    <em>&quot;name&quot;</em> field of each result. The <em>&quot;ns&quot;</em>    field will indicate the collection to which each index belongs.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.deleteindex-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">keys</code>      </dt>       <dd>        <p class="para">        An array specifying the index&#039;s fields as its keys. For each field, the        value is either the index direction or        <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/index-types/" class="link external">&raquo;&nbsp;index type</a>.        If specifying direction, specify <em>1</em> for ascending or        <em>-1</em> for descending.       </p>       <p class="para">        If a string is provided, it is assumed to be the single field name in an        ascending index.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.deleteindex-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the database response.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.deleteindex-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongocollection.aggregate.example.basic">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::deleteIndex()</strong></span> example</strong></p>    <div class="example-contents"><p>     This example passes the function string and array parameters.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">example</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">indices</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;and&nbsp;remove&nbsp;a&nbsp;simple&nbsp;index<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"i"</span><span style="color: #007700">=&gt;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">deleteIndex</span><span style="color: #007700">(</span><span style="color: #DD0000">"i"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;create&nbsp;and&nbsp;remove&nbsp;a&nbsp;multi-key&nbsp;index<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ensureIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"j"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"k"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">deleteIndex</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"j"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"k"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.deleteindex-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCollection::createIndex()} - Creates an index on the specified field(s) if it does not already exist</span></li>    <li class="member"><span class="methodname">{@link MongoCollection::deleteIndexes()} - 删除集合的所有索引</span></li>    <li class="member"><span class="methodname">{@link MongoCollection::toIndexString()} - Converts keys specifying an index to its identifying string</span></li>    <li class="member">     The MongoDB     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/indexes/" class="link external">&raquo;&nbsp;index</a> and     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/index-types/" class="link external">&raquo;&nbsp;index type</a>     documentation.    </li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function deleteIndex($keys) {}

   /**
	* Delete all indexes for this collection
	* @link http://www.php.net/manual/en/mongocollection.deleteindexes.php
/**
*<div id="mongocollection.deleteindexes" class="refentry">   <div class="refnamediv">   <h1 class="refname">MongoCollection::deleteIndexes</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::deleteIndexes</span> &mdash; <span class="dc-title">删除集合的所有索引</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.deleteindexes-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::deleteIndexes</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.deleteindexes-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.deleteindexes-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数据库的响应。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.deleteindexes-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongocollection.aggregate.example.zipcode.population">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::deleteIndexes()</strong></span> 例子</strong></p>    <div class="example-contents"><p>这个例子演示了如何从集合中删除所有索引并得到响应</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">articles</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">deleteIndexes</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Array (     [nIndexesWas] =&gt; 1     [msg] =&gt; all indexes deleted for collection     [ok] =&gt; 1 ) </pre></div>    </div>      </div>    </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.deleteindexes-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCollection::createIndex()} - Creates an index on the specified field(s) if it does not already exist</span></li>    <li class="member"><span class="methodname">{@link MongoCollection::deleteIndex()} - Deletes an index from this collection</span></li>   </ul>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
    * @return array Returns the database response.*/
    public function deleteIndexes() {}

    /**
	 * Returns an array of index names for this collection
	 * @link http://www.php.net/manual/en/mongocollection.getindexinfo.php
	 * @return array Returns a list of index names.
	 */
/**
*<div id="mongocollection.getindexinfo" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::getIndexInfo</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::getIndexInfo</span> &mdash; <span class="dc-title">Returns information about indexes on this collection</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.getindexinfo-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::getIndexInfo</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.getindexinfo-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.getindexinfo-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    This function returns an array in which each element describes an index.    Elements will contain the values <em>name</em> for the name of    the index, <em>ns</em> for the namespace (a combination of the    database and collection name), and <em>key</em> for a list of all    fields in the index and their ordering. Additional values may be present for    special indexes, such as <em>unique</em> or    <em>sparse</em>.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.getindexinfo-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1549">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::getIndexInfo()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'venues'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getIndexInfo</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(4) {   [0]=&gt;   array(4) {     [&quot;v&quot;]=&gt;     int(1)     [&quot;key&quot;]=&gt;     array(1) {       [&quot;_id&quot;]=&gt;       int(1)     }     [&quot;name&quot;]=&gt;     string(4) &quot;_id_&quot;     [&quot;ns&quot;]=&gt;     string(11) &quot;test.venues&quot;   }   [1]=&gt;   array(4) {     [&quot;v&quot;]=&gt;     int(1)     [&quot;key&quot;]=&gt;     array(1) {       [&quot;name&quot;]=&gt;       float(1)     }     [&quot;name&quot;]=&gt;     string(6) &quot;name_1&quot;     [&quot;ns&quot;]=&gt;     string(11) &quot;test.venues&quot;   }   [2]=&gt;   array(4) {     [&quot;v&quot;]=&gt;     int(1)     [&quot;key&quot;]=&gt;     array(2) {       [&quot;type&quot;]=&gt;       float(1)       [&quot;createdAt&quot;]=&gt;       float(-1)     }     [&quot;name&quot;]=&gt;     string(19) &quot;type_1_createdAt_-1&quot;     [&quot;ns&quot;]=&gt;     string(11) &quot;test.venues&quot;   }   [3]=&gt;   array(5) {     [&quot;v&quot;]=&gt;     int(1)     [&quot;key&quot;]=&gt;     array(1) {       [&quot;location&quot;]=&gt;       string(8) &quot;2dsphere&quot;     }     [&quot;name&quot;]=&gt;     string(17) &quot;location_2dsphere&quot;     [&quot;ns&quot;]=&gt;     string(11) &quot;test.venues&quot;     [&quot;2dsphereIndexVersion&quot;]=&gt;     int(2)   } } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.getindexinfo-seealso">   <h3 class="title">参见</h3>   <p class="para">    MongoDB core docs on     <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/indexes/" class="link external">&raquo;&nbsp;vanilla indexes</a> and    <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/applications/geospatial-indexes/" class="link external">&raquo;&nbsp;geospatial indexes</a>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function getIndexInfo() {}

    /**
	 * Counts the number of documents in this collection
	 * @link http://www.php.net/manual/en/mongocollection.count.php
	 * @param array|stdClass $query
	 * @return int Returns the number of documents matching the query.
	 */
/**
*<div id="mongocollection.count" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::count</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::count</span> &mdash; <span class="dc-title">返回集合中的文档数量</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.count-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoCollection::count</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$skip</code><span class="initializer"> = 0</span></span>   ]]] )</div>   </div>     <div class="refsect1 parameters" id="refsect1-mongocollection.count-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">query</code>      </dt>       <dd>        <p class="para">        关联数组或者对象，含有需要匹配的字段。       </p>      </dd>                    <dt>        <code class="parameter">limit</code>      </dt>       <dd>        <p class="para">        指定返回数量的上限。       </p>      </dd>                    <dt>        <code class="parameter">skip</code>      </dt>       <dd>        <p class="para">        指定在开始统计前，需要跳过的结果数目。       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.count-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回查询匹配到的文档数目。   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.count-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.0.7</td>        <td>         添加了 <code class="parameter">limit</code> 和 <code class="parameter">skip</code>         参数。        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.count-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1526">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::count()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'x'</span><span style="color: #007700">=&gt;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'x'</span><span style="color: #007700">=&gt;</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'x'</span><span style="color: #007700">=&gt;</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'x'</span><span style="color: #007700">=&gt;</span><span style="color: #9876AA">1</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> int(3) int(1) </pre></div>    </div>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function count($query = array()) {}

    /**
	 * Saves an object to this collection
	 * @link http://www.php.net/manual/en/mongocollection.save.php
	 * @param array|object $a Array to save. If an object is used, it may not have protected or private properties.
     * Note: If the parameter does not have an _id key or property, a new MongoId instance will be created and assigned to it.
     * See MongoCollection::insert() for additional information on this behavior.
	 * @param array $options Options for the save.
     * <dl>
     * <dt>"w"
     * <dd>See WriteConcerns. The default value for MongoClient is 1.
     * <dt>"fsync"
     * <dd>Boolean, defaults to FALSE. Forces the insert to be synced to disk before returning success. If TRUE, an acknowledged insert is implied and will override setting w to 0.
     * <dt>"timeout"
     * <dd>Integer, defaults to MongoCursor::$timeout. If "safe" is set, this sets how long (in milliseconds) for the client to wait for a database response. If the database does not respond within the timeout period, a MongoCursorTimeoutException will be thrown.
     * <dt>"safe"
     * <dd>Deprecated. Please use the WriteConcern w option.
     * </dl>
	 * @throws MongoException if the inserted document is empty or if it contains zero-length keys. Attempting to insert an object with protected and private properties will cause a zero-length key error.
	 * @throws MongoCursorException if the "w" option is set and the write fails.
	 * @throws MongoCursorTimeoutException if the "w" option is set to a value greater than one and the operation takes longer than MongoCursor::$timeout milliseconds to complete. This does not kill the operation on the server, it is a client-side timeout. The operation in MongoCollection::$wtimeout is milliseconds.
	 * @return array|boolean If w was set, returns an array containing the status of the save.
     * Otherwise, returns a boolean representing if the array was not empty (an empty array will not be inserted).
	 */
/**
*<div id="mongocollection.save" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::save</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::save</span> &mdash; <span class="dc-title">保存一个文档到集合</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.save-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>MongoCollection::save</strong></span>     ( <span class="methodparam"><span class="type"><span class="type array|object">array|object</span></span> <code class="parameter">$document</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>    <p class="para rdfs-comment">    如果对象来自数据库，则更新现有的数据库对象，否则插入对象。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.save-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">document</code>      </dt>       <dd>        <p class="para">        要保存的 Array 或 Object。        如果用的是 Object，它不能有 protected        或 private 的属性。       </p>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         如果参数不具有 <em>_id</em> 的键或者属性，将会创建并赋值一个新的         <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> 实例。         关于此行为的更多信息，参见 <span class="function">{@link MongoCollection::insert()}</span>。        </p>       </p></blockquote>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        此次保存的选项。        <ul class="itemizedlist">         <li class="listitem"><p class="para"><em>&quot;fsync&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the insert to be synced to disk before returning success. If <strong><code>TRUE</code></strong>, an acknowledged insert is implied and will override setting <em>w</em> to <em>0</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;j&quot;</em></p><p class="para">Boolean, defaults to <strong><code>FALSE</code></strong>. Forces the write operation to block until it is synced to the journal on disk. If <strong><code>TRUE</code></strong>, an acknowledged write is implied and this option will override setting <em>&quot;w&quot;</em> to <em>0</em>.</p><blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">If this option is used and journaling is disabled, MongoDB 2.6+ will raise an error and the write will fail; older server versions will simply ignore the option.</span></p></blockquote></li>         <li class="listitem"><p class="para"><em>&quot;socketTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for socket communication. If the server does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown and there will be no way to determine if the server actually handled the write or not. A value of <em>-1</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>30000</em> (30 seconds).</p></li>         <li class="listitem"><p class="para"><em>&quot;w&quot;</em></p><p class="para">See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcerns</a>. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>1</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wtimeout&quot;</em></p><p class="para">Deprecated alias for <em>&quot;wTimeoutMS&quot;</em>.</p></li>         <li class="listitem"><p class="para"><em>&quot;wTimeoutMS&quot;</em></p><p class="para">This option specifies the time limit, in milliseconds, for <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> acknowledgement. It is only applicable when <em>&quot;w&quot;</em> is greater than <em>1</em>, as the timeout pertains to replication. If the write concern is not satisfied within the time limit, a <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> will be thrown. A value of <em>0</em> may be specified to block indefinitely. The default value for <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> is <em>10000</em> (ten seconds).</p></li>         <li class="listitem"><p class="para"><em>&quot;safe&quot;</em></p><p class="para"><em class="emphasis">Deprecated</em>. Please use the <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">WriteConcern</a> <em>w</em> option.</p></li>         <li class="listitem"><p class="para"><em>&quot;timeout&quot;</em></p><p class="para">Integer, defaults to <em>MongoCursor::$timeout</em>.  If &quot;safe&quot; is set, this sets how long (in milliseconds) for the client to wait for a database response.  If the database does not respond within the timeout period, a <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> will be thrown.</p></li>        </ul>       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.save-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果设置了 <code class="parameter">w</code>，返回包含此次保存状态的一个 array。    否则，返回一个 boolean，表示数组是否为空（空数组不会被插入）。   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocollection.save-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    如果插入的文档时空的，或者包含零长度的键，将抛出 <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>。    尝试插入包含 protected 和 private 属性的对象将导致零长度键的错误。   </p>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.save-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">          <tr>        <td>1.5.0</td>        <td>         <p class="para">          增加 <em>&quot;wTimeoutMS&quot;</em> 选项来代替           <em>&quot;wtimeout&quot;</em>。          使用 <em>&quot;wtimeout&quot;</em> 时出现 <strong><code>E_DEPRECATED</code></strong> 错误。         </p>         <p class="para">          新增 <em>&quot;socketTimeoutMS&quot;</em> 选项来代替           <em>&quot;timeout&quot;</em>。 使用 <em>&quot;timeout&quot;</em> 时出现  <strong><code>E_DEPRECATED</code></strong> 错误。         </p>         <p class="para">          使用  <em>&quot;safe&quot;</em> 时出现 <strong><code>E_DEPRECATED</code></strong> 错误。         </p>        </td>       </tr>        <tr>        <td>1.2.0</td>        <td>增加 <em>&quot;timeout&quot;</em> 选项。</td>       </tr>        <tr>        <td>1.0.11</td>        <td>         设置 <em>&quot;safe&quot;</em> 时，当出现 &quot;not master&quot; 错误时主动断开连接。        </td>       </tr>        <tr>        <td>1.0.9</td>        <td>         <p class="para">          增加 <em>&quot;fsync&quot;</em> 选项。         </p>        </td>       </tr>        <tr>        <td>1.0.5</td>        <td>增加 <code class="parameter">options</code> 参数。</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.save-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1560">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::save()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$obj&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'x'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;插入&nbsp;$obj&nbsp;到&nbsp;db<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;增加额外的字段<br /></span><span style="color: #9876AA">$obj</span><span style="color: #007700">[</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #DD0000">'bar'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;$obj&nbsp;不能被再次插入，导致&nbsp;duplicate&nbsp;_id&nbsp;错误<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;保存、更新附带新字段的&nbsp;$obj<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;x&quot;]=&gt;   int(1)   [&quot;_id&quot;]=&gt;   object(MongoId)#4 (1) {     [&quot;$id&quot;]=&gt;     string(24) &quot;50b6afe544415ed606000000&quot;   } } </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function save($a, array $options = array()) {}

    /**
	 * Creates a database reference
	 * @link http://www.php.net/manual/en/mongocollection.createdbref.php
	 * @param array $a Object to which to create a reference.
	 * @return array Returns a database reference array.
	 */
/**
*<div id="mongocollection.createdbref" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::createDBRef</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::createDBRef</span> &mdash; <span class="dc-title">创建一个数据库引用</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.createdbref-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::createDBRef</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$document_or_id</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.createdbref-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">document_or_id</code>      </dt>       <dd>        <p class="para">        If an array or object is given, its <em>_id</em> field will be        used as the reference ID. If a <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> or scalar        is given, it will be used as the reference ID.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.createdbref-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回一个数据库的引用数组。   </p>   <p class="para">    如果提供了不包含 <em>_id</em> 字段的数组当做 <em>document_or_id</em> 参数，将会返回 <strong><code>NULL</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.createdbref-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1527">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::createDBRef()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$songs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">songs</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$playlists&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">playlists</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;为&nbsp;song&nbsp;创建引用<br /></span><span style="color: #9876AA">$manamana&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$songs</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'title'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'Ma&nbsp;na&nbsp;ma&nbsp;na'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$refToSong&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$songs</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDBRef</span><span style="color: #007700">(</span><span style="color: #9876AA">$manamana</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;添加引用到我的播放列表<br /></span><span style="color: #9876AA">$playlists</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">update</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'me'</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'$push'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'songlist'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$refToSong</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.createdbref-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoCollection::getDBRef()} - Fetches the document pointed to by a database reference</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function createDBRef(array $a) {}

	/**
	 * Fetches the document pointed to by a database reference
	 * @link http://www.php.net/manual/en/mongocollection.getdbref.php
	 * @param array $ref A database reference.
	 * @return array Returns the database document pointed to by the reference.
	 */
/**
*<div id="mongocollection.getdbref" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::getDBRef</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::getDBRef</span> &mdash; <span class="dc-title">Fetches the document pointed to by a database reference</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.getdbref-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::getDBRef</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$ref</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.getdbref-parameters">   <h3 class="title">参数</h3>       <p class="para">    <dl>            <dt>        <code class="parameter">ref</code>      </dt>       <dd>        <p class="para">        A database reference.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.getdbref-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the database document pointed to by the reference.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.getdbref-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1548">    <p><strong>Example #1 <span class="methodname"><strong>MongoCollection::getDBRef()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$playlists&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">playlists</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$myList&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$playlists</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'me'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;fetch&nbsp;each&nbsp;song&nbsp;in&nbsp;the&nbsp;playlist<br /></span><span style="color: #007700">foreach&nbsp;(</span><span style="color: #9876AA">$myList</span><span style="color: #007700">[</span><span style="color: #DD0000">'songlist'</span><span style="color: #007700">]&nbsp;as&nbsp;</span><span style="color: #9876AA">$songRef</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$song&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$playlists</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDBRef</span><span style="color: #007700">(</span><span style="color: #9876AA">$songRef</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$song</span><span style="color: #007700">[</span><span style="color: #DD0000">'title'</span><span style="color: #007700">]&nbsp;.&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Dazed and Confused Ma na ma na Bohemian Rhapsody </pre></div>    </div>    <div class="example-contents screen"> <br />     In the above example each $songRef looks something like the following:<br />     <div class="cdata"><pre>     Array     (         [$ref] =&gt; songs         [$id] =&gt; 49902cde5162504500b45c2c     )     </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.getdbref-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoCollection::createDBRef()} - 创建一个数据库引用</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function getDBRef(array $ref) {}

/**
*<div id="mongocollection.toindexstring" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::toIndexString</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCollection::toIndexString</span> &mdash; <span class="dc-title">Converts keys specifying an index to its identifying string</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.toindexstring-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">static protected</span> <span class="type">string</span> <span class="methodname"><strong>MongoCollection::toIndexString</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$keys</code></span>    )</div>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">     This method is deprecated since version 1.5.0.    </p>   </div>  </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.toindexstring-parameters">   <h3 class="title">参数</h3>     <p class="para">    <dl>            <dt>        <code class="parameter">keys</code>      </dt>       <dd>        <p class="para">        Field or fields to convert to the identifying string       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.toindexstring-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a string that describes the index.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.toindexstring-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1563">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::toIndexString()</strong></span> example</strong></p>    <div class="example-contents"><p>This example shows how you can create an index name out of keys.    Because this is a protected (static) method, you need to overload it in a    child class first.</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//&nbsp;Create&nbsp;inherited&nbsp;class&nbsp;to&nbsp;make&nbsp;the&nbsp;method&nbsp;"public".<br /></span><span style="color: #007700">class&nbsp;</span><span style="color: #9876AA">MyCollection&nbsp;</span><span style="color: #007700">extends&nbsp;</span><span style="color: #9876AA">MongoCollection<br /></span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;public&nbsp;function&nbsp;</span><span style="color: #9876AA">toIndexString</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">parent</span><span style="color: #007700">::</span><span style="color: #9876AA">toIndexString</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />echo&nbsp;</span><span style="color: #9876AA">MyCollection</span><span style="color: #007700">::</span><span style="color: #9876AA">toIndexString</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;Outputs:&nbsp;foo_1<br /><br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #9876AA">MyCollection</span><span style="color: #007700">::</span><span style="color: #9876AA">toIndexString</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'name'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'age'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">)),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">//&nbsp;Outputs:&nbsp;name_1_age_-1<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocollection.toindexstring-seealso">   <h3 class="title">参见</h3>   <p class="para">    MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/indexes/" class="link external">&raquo;&nbsp;indexes</a>.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.toindexstring-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.5.0</td>        <td>         This method has been deprecated.        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
    * @return string */
    protected static function toIndexString($keys) {}

	/**
	 * Performs an operation similar to SQL's GROUP BY command
	 * @link http://www.php.net/manual/en/mongocollection.group.php
	 * @param mixed $keys Fields to group by. If an array or non-code object is passed, it will be the key used to group results.
	 * @param array $initial Initial value of the aggregation counter object.
	 * @param MongoCode $reduce A function that aggregates (reduces) the objects iterated.
	 * @param array $condition An condition that must be true for a row to be considered.
	 * @return array
	 */
/**
*<div id="mongocollection.group" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCollection::group</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.2)</p><p class="refpurpose"><span class="refname">MongoCollection::group</span> &mdash; <span class="dc-title">Performs an operation similar to SQL&#039;s GROUP BY command</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocollection.group-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCollection::group</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$keys</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$initial</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongocode.php" class="type MongoCode">MongoCode</a></span> <code class="parameter">$reduce</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocollection.group-parameters">   <h3 class="title">参数</h3>     <p class="para">    <dl>            <dt>        <code class="parameter">keys</code>      </dt>       <dd>        <p class="para">        Fields to group by.  If an array or non-code object is passed, it will be        the key used to group results.        </p>       <p class="para">1.0.4+: If <code class="parameter">keys</code> is an instance of         <a href="http://php.net/manual/zh/class.mongocode.php" class="classname">MongoCode</a>, <code class="parameter">keys</code> will be treated as        a function that returns the key to group by (see the &quot;Passing a         <code class="parameter">keys</code> function&quot; example below).         </p>      </dd>                    <dt>        <code class="parameter">initial</code>      </dt>       <dd>        <p class="para">        Initial value of the aggregation counter object.       </p>      </dd>                    <dt>        <code class="parameter">reduce</code>      </dt>       <dd>        <p class="para">        A function that takes two arguments (the current document and the         aggregation to this point) and does the aggregation.       </p>      </dd>                    <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        Optional parameters to the group command.  Valid options include:       </p>       <ul class="itemizedlist">        <li class="listitem">         <p class="para">          <em>&quot;condition&quot;</em>         </p>         <p class="para">          Criteria for including a document in the aggregation.         </p>        </li>        <li class="listitem">         <p class="para">          <em>&quot;finalize&quot;</em>         </p>         <p class="para">          Function called once per unique key that takes the final output of the          reduce function.         </p>        </li>        <li class="listitem"><p class="para"><em>&quot;maxTimeMS&quot;</em></p><p class="para">Specifies a cumulative time limit in milliseconds for processing the operation on the server (does not include idle time). If the operation is not completed by the server within the timeout period, a <a href="http://php.net/manual/zh/class.mongoexecutiontimeoutexception.php" class="classname">MongoExecutionTimeoutException</a> will be thrown.</p></li>       </ul>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocollection.group-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array containing the result.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocollection.group-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.5.0</td>        <td>Added <em>&quot;maxTimeMS&quot;</em> option.</td>       </tr>        <tr>        <td>1.2.11</td>        <td>         Emits <strong><code>E_DEPRECATED</code></strong> when         <code class="parameter">options</code> is <span class="type"><span class="type scalar">scalar</span></span>.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocollection.group-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1553">    <p><strong>Example #1 <span class="function"><strong>MongoCollection::group()</strong></span> example</strong></p>    <div class="example-contents"><p>     This groups documents by category and creates a list of names within that     category.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"category"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"fruit"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"apple"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"category"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"fruit"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"peach"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"category"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"fruit"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"banana"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"category"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"veggie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"corn"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"category"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"veggie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"broccoli"</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$keys&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"category"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$initial&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"items"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array());<br /><br /></span><span style="color: #9876AA">$reduce&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"function&nbsp;(obj,&nbsp;prev)&nbsp;{&nbsp;prev.items.push(obj.name);&nbsp;}"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$g&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">group</span><span style="color: #007700">(</span><span style="color: #9876AA">$keys</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$initial</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$reduce</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">json_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$g</span><span style="color: #007700">[</span><span style="color: #DD0000">'retval'</span><span style="color: #007700">]);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> [{&quot;category&quot;:&quot;fruit&quot;,&quot;items&quot;:[&quot;apple&quot;,&quot;peach&quot;,&quot;banana&quot;]},{&quot;category&quot;:&quot;veggie&quot;,&quot;items&quot;:[&quot;corn&quot;,&quot;broccoli&quot;]}] </pre></div>    </div>   </div>    <div class="example" id="example-1554">    <p><strong>Example #2 <span class="function"><strong>MongoCollection::group()</strong></span> example</strong></p>    <div class="example-contents"><p>     This example doesn&#039;t use any key, so every document will be its own group.     It also uses a condition: only documents that match this condition will be     processed by the grouping function.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"b"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;use&nbsp;all&nbsp;fields<br /></span><span style="color: #9876AA">$keys&nbsp;</span><span style="color: #007700">=&nbsp;array();<br /><br /></span><span style="color: #FF8000">//&nbsp;set&nbsp;intial&nbsp;values<br /></span><span style="color: #9876AA">$initial&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"count"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;JavaScript&nbsp;function&nbsp;to&nbsp;perform<br /></span><span style="color: #9876AA">$reduce&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"function&nbsp;(obj,&nbsp;prev)&nbsp;{&nbsp;prev.count++;&nbsp;}"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;only&nbsp;use&nbsp;documents&nbsp;where&nbsp;the&nbsp;"a"&nbsp;field&nbsp;is&nbsp;greater&nbsp;than&nbsp;1<br /></span><span style="color: #9876AA">$condition&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'condition'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">'$gt'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">$g&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">group</span><span style="color: #007700">(</span><span style="color: #9876AA">$keys</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$initial</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$reduce</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$condition</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$g</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(4) {   [&quot;retval&quot;]=&gt;   array(1) {     [0]=&gt;     array(1) {       [&quot;count&quot;]=&gt;       float(1)     }   }   [&quot;count&quot;]=&gt;   float(1)   [&quot;keys&quot;]=&gt;   int(1)   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>    <div class="example" id="example-1555">    <p><strong>Example #3 Passing a <code class="parameter">keys</code> function</strong></p>    <div class="example-contents"><p>     If you want to group by something other than a field name, you can pass     a function as the first parameter of      <span class="function"><strong>MongoCollection::group()</strong></span> and it will be run against each     document.  The return value of the function will be used as its grouping      value.    </p></div>    <div class="example-contents"><p>     This example demonstrates grouping by the num field modulo 4.    </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">group</span><span style="color: #007700">(new&nbsp;</span><span style="color: #9876AA">MongoCode</span><span style="color: #007700">(</span><span style="color: #DD0000">'function(doc)&nbsp;{&nbsp;return&nbsp;{mod&nbsp;:&nbsp;doc.num&nbsp;%&nbsp;4};&nbsp;}'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"count"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCode</span><span style="color: #007700">(</span><span style="color: #DD0000">'function(current,&nbsp;total)&nbsp;{&nbsp;total.count++;&nbsp;}'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocollection.php">MongoCollection</a></div></div>
*/
    public function group($keys, array $initial, MongoCode $reduce, array $condition = array()) {}
}

/**
*<div id="class.mongocursor" class="reference">   <h1 class="title">The MongoCursor class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>       <div class="section" id="mongocursor.intro">    <h2 class="title">简介</h2>    <p class="para">     A cursor is used to iterate through the results of a database query.  For      example, to query the database and see all results, you could do:     <div class="example" id="example-1568">      <p><strong>Example #1 <strong class="classname">MongoCursor</strong> basic usage</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">iterator_to_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     You don&#039;t generally create cursors using the      <strong class="classname">MongoCursor</strong> constructor, you get a new cursor by     calling <span class="function">{@link MongoCollection::find()}</span> (as shown above).    </p>    <p class="para">     Suppose that, in the example above, <em>$collection</em> was a     50GB collection.  We certainly wouldn&#039;t want to load that into memory all      at once, which is what a cursor is for: allowing the client to access the      collection in dribs and drabs.      </p>    <p class="para">     If we have a large result set, we can iterate through it, loading a few      megabytes of results into memory at a time.  For example, we could do:     <div class="example" id="example-1569">      <p><strong>Example #2 Iterating over <strong class="classname">MongoCursor</strong></strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$doc</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;do&nbsp;something&nbsp;to&nbsp;each&nbsp;document<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>     This will go through each document in the collection, loading and garbage      collecting documents as needed.    </p>    <p class="para">     Note that this means that a cursor does not &quot;contain&quot; the database results,      it just manages them.  Thus, if you print a cursor (with, say,      <span class="function">{@link var_dump()}</span> or <span class="function">{@link print_r()}</span>), you&#039;ll just      get the cursor object, not your documents.  To get the documents themselves,      you can use one of the methods shown above.    </p>   </div>    <div class="section">    <h2 class="title">Cursor Stages</h2>    <p class="para">     A <strong class="classname">MongoCursor</strong> has two &quot;life stages&quot;: pre- and post-     query. When a cursor is created, it has not yet contacted the database, so      it is in its pre-query state.  In this state, the client can further specify     what they want the query to do, including adding limits, skips, sorts, and      more advanced options.    </p>    <p class="para">     When the client attempts to get a result (by calling      <span class="function">{@link MongoCursor::next()}</span>, directly or indirectly), the cursor     moves into the post-query stage.  At this point, the query has been executed     by the database and cannot be modified anymore.    </p>    <p class="para">     <div class="example" id="example-1570">      <p><strong>Example #3 Adding options to <strong class="classname">MongoCursor</strong></strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">limit</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;database&nbsp;has&nbsp;not&nbsp;yet&nbsp;been&nbsp;queried,&nbsp;so&nbsp;more&nbsp;search&nbsp;options&nbsp;can&nbsp;be&nbsp;added<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sort</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNext</span><span style="color: #007700">());<br /></span><span style="color: #FF8000">//&nbsp;now&nbsp;database&nbsp;has&nbsp;been&nbsp;queried&nbsp;and&nbsp;more&nbsp;options&nbsp;cannot&nbsp;be&nbsp;added<br /><br />//&nbsp;so&nbsp;this&nbsp;will&nbsp;throw&nbsp;an&nbsp;exception:<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">skip</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>   </div>       <div class="section" id="mongocursor.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoCursor</strong>      </span>      <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.mongocursorinterface.php" class="interfacename">MongoCursorInterface</a></span>      </span>      <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>      {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// Static Fields </div>     <div class="fieldsynopsis">      <span class="modifier">static</span>      <span class="type">boolean</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongocursor.php#mongocursor.props.slaveokay">$<var class="varname">slaveOkay</var></a></var>      <span class="initializer"> = <strong><code>FALSE</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">static</span>      <span class="type">integer</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongocursor.php#mongocursor.props.timeout">$<var class="varname">timeout</var></a></var>      <span class="initializer"> = 30000</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.addoption.php" class="methodname">addOption</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.awaitdata.php" class="methodname">awaitData</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$wait</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.batchsize.php" class="methodname">batchSize</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$batchSize</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongoclient.php" class="type MongoClient">MongoClient</a></span> <code class="parameter">$connection</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ns</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.count.php" class="methodname">count</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$foundOnly</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.current.php" class="methodname">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.dead.php" class="methodname">dead</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">protected</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.doquery.php" class="methodname">doQuery</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.explain.php" class="methodname">explain</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.fields.php" class="methodname">fields</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$f</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.getnext.php" class="methodname">getNext</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.getreadpreference.php" class="methodname">getReadPreference</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.hasnext.php" class="methodname">hasNext</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.hint.php" class="methodname">hint</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$index</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.immortal.php" class="methodname">immortal</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$liveForever</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.info.php" class="methodname">info</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string|int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.key.php" class="methodname">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.limit.php" class="methodname">limit</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.maxtimems.php" class="methodname">maxTimeMS</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ms</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.next.php" class="methodname">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.partial.php" class="methodname">partial</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$okay</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.reset.php" class="methodname">reset</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.rewind.php" class="methodname">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.setflag.php" class="methodname">setFlag</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$flag</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$set</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.setreadpreference.php" class="methodname">setReadPreference</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.skip.php" class="methodname">skip</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.slaveokay.php" class="methodname">slaveOkay</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$okay</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.snapshot.php" class="methodname">snapshot</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.sort.php" class="methodname">sort</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.tailable.php" class="methodname">tailable</a></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$tail</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.timeout.php" class="methodname">timeout</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ms</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocursor.valid.php" class="methodname">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>        </div>    <div class="section">    <h2 class="title">Static Variables</h2>     <dl>            <dt id="mongocursor.props.slaveokay"><var class="varname"><var class="varname">slaveOkay</var></var></dt>       <dd>        <p class="para">        If the query should have the &quot;slaveOkay&quot; flag set, which allows reads on        the secondary (secondaries are, by default, just for backup and not        queried). Can be overridden with <span class="function">{@link MongoCursor::slaveOkay()}</span>.       </p>       <p class="para">        This functionality is <em class="emphasis">deprecated</em>. Please use        <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="xref">读取首选项</a> instead.       </p>      </dd>                 <dt id="mongocursor.props.timeout"><var class="varname"><var class="varname">timeout</var></var></dt>       <dd>        <p class="para">        Set timeout in milliseconds for all database responses. Use        <em>-1</em> to wait forever. Can be overridden with        <span class="function">{@link MongoCursor::timeout()}</span>. This does not cause the        MongoDB server to cancel the operation; it only instructs the driver to        stop waiting for a response and throw a        <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> after a set time.       </p>      </dd>          </dl>    </div>    <div class="section">    <h2 class="title">参见</h2>    <p class="para">     MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/cursors/" class="link external">&raquo;&nbsp;cursors</a>.    </p>   </div>   </div>                                                                                                                                                                                                                                     <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoCursor::addOption} — Adds a top-level key/value pair to a query</li><li>{@link MongoCursor::awaitData} — Sets whether this cursor will wait for a while for a tailable cursor to return more data</li><li>{@link MongoCursor::batchSize} — Limits the number of elements returned in one batch</li><li>{@link MongoCursor::__construct} — Create a new cursor</li><li>{@link MongoCursor::count} — Counts the number of results for this query</li><li>{@link MongoCursor::current} — Returns the current element</li><li>{@link MongoCursor::dead} — Checks if there are results that have not yet been sent from the database</li><li>{@link MongoCursor::doQuery} — Execute the query</li><li>{@link MongoCursor::explain} — Return an explanation of the query, often useful for optimization and debugging</li><li>{@link MongoCursor::fields} — Sets the fields for a query</li><li>{@link MongoCursor::getNext} — Advances the cursor to the next result, and returns that result</li><li>{@link MongoCursor::getReadPreference} — Get the read preference for this query</li><li>{@link MongoCursor::hasNext} — Checks if there are any more elements in this cursor</li><li>{@link MongoCursor::hint} — Gives the database a hint about the query</li><li>{@link MongoCursor::immortal} — Sets whether this cursor will timeout</li><li>{@link MongoCursor::info} — Gets information about the cursor's creation and iteration</li><li>{@link MongoCursor::key} — Returns the current result's _id, or its index within the result set</li><li>{@link MongoCursor::limit} — Limits the number of results returned</li><li>{@link MongoCursor::maxTimeMS} — Sets a server-side timeout for this query</li><li>{@link MongoCursor::next} — Advances the cursor to the next result, and returns that result</li><li>{@link MongoCursor::partial} — If this query should fetch partial results from mongos if a shard is down</li><li>{@link MongoCursor::reset} — Clears the cursor</li><li>{@link MongoCursor::rewind} — Returns the cursor to the beginning of the result set</li><li>{@link MongoCursor::setFlag} — Sets arbitrary flags in case there is no method available the specific flag</li><li>{@link MongoCursor::setReadPreference} — Set the read preference for this query</li><li>{@link MongoCursor::skip} — Skips a number of results</li><li>{@link MongoCursor::slaveOkay} — Sets whether this query can be done on a secondary [deprecated]</li><li>{@link MongoCursor::snapshot} — Use snapshot mode for the query</li><li>{@link MongoCursor::sort} — Sorts the results by given fields</li><li>{@link MongoCursor::tailable} — Sets whether this cursor will be left open after fetching the last results</li><li>{@link MongoCursor::timeout} — Sets a client-side timeout for this query</li><li>{@link MongoCursor::valid} — Checks if the cursor is reading a valid result</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.core.php">核心类</a></div></div>
*/
class MongoCursor implements Iterator {
    /**
     * @link http://php.net/manual/en/class.mongocursor.php#mongocursor.props.slaveokay
	 * @static
     * @var bool $slaveOkay
     */
    public static $slaveOkay = FALSE;

    /**
     * @var int <p>
     * Set timeout in milliseconds for all database responses. Use
     * <em>-1</em> to wait forever. Can be overridden with
     * {link http://php.net/manual/en/mongocursor.timeout.php MongoCursor::timeout()}. This does not cause the
     * MongoDB server to cancel the operation; it only instructs the driver to
     * stop waiting for a response and throw a
     * {@link http://php.net/manual/en/class.mongocursortimeoutexception.php MongoCursorTimeoutException} after a set time.
     * </p>
     */
    static $timeout = 30000;
    /**
	 * Create a new cursor
	 * @link http://www.php.net/manual/en/mongocursor.construct.php
	 * @param MongoClient $connection Database connection.
	 * @param string $ns Full name of database and collection.
	 * @param array $query Database query.
	 * @param array $fields Fields to return.
     * @return MongoCursor Returns the new cursor
	 */
    public function __construct($connection, $ns, array $query = array(), array $fields = array()) {}

/**
*<div id="mongocursor.awaitdata" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::awaitData</h1>   <p class="verinfo">(PECL mongo &gt;=1.2.11)</p><p class="refpurpose"><span class="refname">MongoCursor::awaitData</span> &mdash; <span class="dc-title">Sets whether this cursor will wait for a while for a tailable cursor to return more data</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.awaitdata-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocursor.php" class="type MongoCursor">MongoCursor</a></span> <span class="methodname"><strong>MongoCursor::awaitData</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$wait</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    This method is to be used with tailable cursors. If we are at the end of    the data, block for a while rather than returning no data. After a timeout    period, we do return as normal.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.awaitdata-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">wait</code>      </dt>       <dd>        <p class="para">        If the cursor should wait for more data to become available.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocursor.awaitdata-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocursor.awaitdata-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if this cursor has started iterating.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocursor.awaitdata-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1573">    <p><strong>Example #1 <span class="function"><strong>MongoCursor::awaitData()</strong></span> example</strong></p>    <div class="example-contents"><p>     In this example we tail the &quot;oplog&quot; and instead of sleeping during every     iteration, we set the <span class="function"><strong>MongoCursor::awaitData()</strong></span> option.     <span class="function">{@link MongoCursor::hasNext()}</span> will now block until there is     more data available.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'mongodb://localhost:13000'</span><span style="color: #007700">,&nbsp;array(&nbsp;</span><span style="color: #DD0000">'replSet'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'seta'&nbsp;</span><span style="color: #007700">)&nbsp;);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">local</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'oplog.rs'&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(&nbsp;array(&nbsp;</span><span style="color: #DD0000">'ns'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'demo.article'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'op'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'i'&nbsp;</span><span style="color: #007700">)&nbsp;);<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">tailable</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">true&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">awaitData</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">true&nbsp;</span><span style="color: #007700">);<br /><br />while&nbsp;(</span><span style="color: #9876AA">true</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">hasNext</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;we've&nbsp;read&nbsp;all&nbsp;the&nbsp;results,&nbsp;exit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">dead</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNext</span><span style="color: #007700">()&nbsp;);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocursor.awaitdata-seealso">   <h3 class="title">参见</h3>   <p class="para">    MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/tutorial/create-tailable-cursor/" class="link external">&raquo;&nbsp;tailable cursors</a>.   </p>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link MongoCursor::tailable()} - Sets whether this cursor will be left open after fetching the last results</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
     * @return MongoCursor Returns this cursor.*/
    public function awaitData ($wait = true) {}
    /**
	 * Checks if there are any more elements in this cursor
	 * @link http://www.php.net/manual/en/mongocursor.hasnext.php
	 * @throws MongoConnectionException
	 * @throws MongoCursorTimeoutException
     * @return bool Returns true if there is another element
	 */
/**
*<div id="mongocursor.hasnext" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::hasNext</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCursor::hasNext</span> &mdash; <span class="dc-title">Checks if there are any more elements in this cursor</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.hasnext-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCursor::hasNext</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.hasnext-parameters">   <h3 class="title">参数</h3>       <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocursor.hasnext-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns if there is another element.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocursor.hasnext-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a> if it cannot reach     the database and <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the    timeout is exceeded.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
*/
    public function hasNext() {}

    /**
	 * Return the next object to which this cursor points, and advance the cursor
	 * @link http://www.php.net/manual/en/mongocursor.getnext.php
	 * @throws MongoConnectionException
	 * @throws MongoCursorTimeoutException
     * @return array Returns the next object
	 */
/**
*<div id="mongocursor.getnext" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::getNext</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCursor::getNext</span> &mdash; <span class="dc-title">Advances the cursor to the next result, and returns that result</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.getnext-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCursor::getNext</strong></span>     ( <span class="methodparam">void</span>    )</div>     <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     <span class="methodname"><strong>MongoCursor::getNext()</strong></span> is an alias of <span class="methodname">{@link MongoCursor::next()}</span>.    </p>   </p></blockquote>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
*/
    public function getNext() {}

/**
*<div id="mongocursor.getreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::getReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.3)</p><p class="refpurpose"><span class="refname">MongoCursor::getReadPreference</span> &mdash; <span class="dc-title">Get the read preference for this query</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.getreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCursor::getReadPreference</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.getreadpreference-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocursor.getreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the read preference. The array contains the values <em>type</em> for the string read preference mode (corresponding to the <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> constants), and <em>tagsets</em> containing a list of all tag set criteria. If no tag sets were specified, <em>tagsets</em> will not be present in the array.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocursor.getreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1578">    <p><strong>Example #1 <span class="methodname"><strong>MongoCursor::getReadPreference()</strong></span> return value example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">users</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_SECONDARY</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(),<br />));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getReadPreference</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;type&quot;]=&gt;   string(9) &quot;secondary&quot;   [&quot;tagsets&quot;]=&gt;   array(3) {     [0]=&gt;     array(2) {       [&quot;dc&quot;]=&gt;       string(4) &quot;east&quot;       [&quot;use&quot;]=&gt;       string(9) &quot;reporting&quot;     }     [1]=&gt;     array(1) {       [&quot;dc&quot;]=&gt;       string(7) &quot;west&quot;     }     [2]=&gt;     array(0) {     }   } } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocursor.getreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCursor::setReadPreference()} - Set the read preference for this query</span></li>    <li class="member"><span class="function">{@link MongoCursorInterface::getReadPreference()} - Get the read preference for this query</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
     * @return array This function returns an array describing the read preference. The array contains the values <em>type</em> for the string*/
    public function getReadPreference () { }

    /**
	 * Limits the number of results returned
	 * @link http://www.php.net/manual/en/mongocursor.limit.php
	 * @param int $num The number of results to return.
	 * @throws MongoCursorException
     * @return MongoCursor Returns this cursor
	 */
/**
*<div id="mongocursor.limit" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::limit</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCursor::limit</span> &mdash; <span class="dc-title">Limits the number of results returned</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.limit-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocursor.php" class="type MongoCursor">MongoCursor</a></span> <span class="methodname"><strong>MongoCursor::limit</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.limit-parameters">   <h3 class="title">参数</h3>     <p class="para">    <dl>            <dt>        <code class="parameter">num</code>      </dt>       <dd>        <p class="para">        The number of results to return.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocursor.limit-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocursor.limit-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if this cursor has started iterating.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocursor.limit-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/method/cursor.limit/" class="link external">&raquo;&nbsp;limit</a>.</li>     <li class="member"><span class="function">{@link MongoCursor::batchSize()} - Limits the number of elements returned in one batch</span></li>     <li class="member"><span class="methodname">{@link MongoCursor::skip()} - Skips a number of results</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
*/
    public function limit($num) {}

/**
*<div id="mongocursor.partial" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::partial</h1>   <p class="verinfo">(PECL mongo &gt;=1.2.0)</p><p class="refpurpose"><span class="refname">MongoCursor::partial</span> &mdash; <span class="dc-title">If this query should fetch partial results from <em class="emphasis">mongos</em> if a shard is down</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.partial-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocursor.php" class="type MongoCursor">MongoCursor</a></span> <span class="methodname"><strong>MongoCursor::partial</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$okay</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    This option allows <em class="emphasis">mongos</em> to send partial query results     if a shard is unreachable.  This is only applicable when running a sharded     MongoDB cluster and connecting to a <em class="emphasis">mongos</em>.   </p>   <p class="para">    If a shard goes down and a query needs to be sent to that shard,     <em class="emphasis">mongos</em> will return the results (if any) from shards it    already contacted, then an error message that it could not reach the shard    (a <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> in PHP).  If you would like to    get whatever results <em class="emphasis">mongos</em> can provide and no     exception, you can use this method.  Note that this means that you won&#039;t have    an indication that a shard is down in your query response.   </p>   <p class="para">    This has no effect on the query if all shards are reachable.  This flag was    implemented in MongoDB version 1.7.5, so will only work with that version and    higher.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.partial-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">okay</code>      </dt>       <dd>        <p class="para">        If receiving partial results is okay.       </p>      </dd>             </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-mongocursor.partial-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocursor.partial-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if this cursor has started iterating.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
     * @return MongoCursor Returns this cursor.*/
    public function partial ($okay = true) {}

/**
*<div id="mongocursor.setflag" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::setFlag</h1>   <p class="verinfo">(PECL mongo &gt;=1.2.11)</p><p class="refpurpose"><span class="refname">MongoCursor::setFlag</span> &mdash; <span class="dc-title">Sets arbitrary flags in case there is no method available the specific flag</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.setflag-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocursor.php" class="type MongoCursor">MongoCursor</a></span> <span class="methodname"><strong>MongoCursor::setFlag</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$flag</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$set</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    The <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a> class has several methods for    setting flags on the query object. This method is available in case the    MongoDB wire protocol has acquired a new flag, and the driver has not been    updated with a method for this new flag. In all other cases, the method    should be used. See the &quot;See also&quot; section for available methods.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.setflag-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">flag</code>      </dt>       <dd>        <p class="para">        Which flag to set. You can not set flag 6 (EXHAUST) as the driver does        not know how to handle them. You will get a warning if you try to use        this flag. For available flags, please refer to the wire protocol        <a href="http://php.net/manual/zh/https://docs.mongodb.com/meta-driver/latest/legacy/mongodb-wire-protocol/#MongoWireProtocol-OPQUERY" class="link external">&raquo;&nbsp;documentation</a>.       </p>      </dd>                 <dt>        <code class="parameter">set</code>      </dt>       <dd>        <p class="para">        Whether the flag should be set (<strong><code>TRUE</code></strong>) or unset (<strong><code>FALSE</code></strong>).       </p>      </dd>          </dl>    </p>  </div>     <div class="refsect1 returnvalues" id="refsect1-mongocursor.setflag-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocursor.setflag-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Shows a warning when an unsupport flag is attempted to be set.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongocursor.setflag-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.4.0</td>        <td>         Support for flag 3 (OPLOG_REPLAY) is added. Versions before 1.4.0         would throw a warning saying that the flag is unsupported.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocursor.setflag-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongocursor.intro-example">    <p><strong>Example #1 <span class="function"><strong>MongoCursor::setFlag()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'mongodb://localhost:13000'</span><span style="color: #007700">,&nbsp;array(&nbsp;</span><span style="color: #DD0000">'replSet'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'seta'&nbsp;</span><span style="color: #007700">)&nbsp;);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">local</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'oplog.rs'&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(&nbsp;array(&nbsp;</span><span style="color: #DD0000">'ns'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'demo.article'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'op'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'i'&nbsp;</span><span style="color: #007700">)&nbsp;);<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFlag</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true&nbsp;</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;sets&nbsp;the&nbsp;tailable&nbsp;flag<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFlag</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">5</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">true&nbsp;</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;sets&nbsp;the&nbsp;await&nbsp;data&nbsp;flag<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocursor.setflag-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link MongoCursor::tailable()} - Sets whether this cursor will be left open after fetching the last results</span></li>     <li class="member"><span class="function">{@link MongoCursor::immortal()} - Sets whether this cursor will timeout</span></li>     <li class="member"><span class="function">{@link MongoCursor::awaitData()} - Sets whether this cursor will wait for a while for a tailable cursor to return more data</span></li>     <li class="member"><span class="function">{@link MongoCursor::partial()} - If this query should fetch partial results from mongos if a shard is down</span></li>     <li class="member">MongoDB core docs on<a href="http://php.net/manual/zh/https://docs.mongodb.com/meta-driver/latest/legacy/mongodb-wire-protocol/#MongoWireProtocol-OPQUERY" class="link external">&raquo;&nbsp;wire protocol query flags</a></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
     * @return MongoCursor*/
    public function setFlag ($flag, $set = true ) {}

/**
*<div id="mongocursor.setreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::setReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.3)</p><p class="refpurpose"><span class="refname">MongoCursor::setReadPreference</span> &mdash; <span class="dc-title">Set the read preference for this query</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.setreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocursor.php" class="type MongoCursor">MongoCursor</a></span> <span class="methodname"><strong>MongoCursor::setReadPreference</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.setreadpreference-parameters">   <h3 class="title">参数</h3>   <dl> <dt> <code class="parameter">read_preference</code></dt> <dd> <p class="para">The read preference mode: <strong><code>MongoClient::RP_PRIMARY</code></strong>, <strong><code>MongoClient::RP_PRIMARY_PREFERRED</code></strong>, <strong><code>MongoClient::RP_SECONDARY</code></strong>, <strong><code>MongoClient::RP_SECONDARY_PREFERRED</code></strong>, or <strong><code>MongoClient::RP_NEAREST</code></strong>.</p></dd> <dt> <code class="parameter">tags</code></dt> <dd> <p class="para">An array of zero or more tag sets, where each tag set is itself an array of criteria used to match tags on replica set members.</p></dd> </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocursor.setreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocursor.setreadpreference-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Emits <strong><code>E_WARNING</code></strong> if either parameter is invalid, or if one or more tag sets are provided with the <strong><code>MongoClient::RP_PRIMARY</code></strong> read preference mode.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocursor.setreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1582">    <p><strong>Example #1 <span class="methodname"><strong>MongoCursor::setReadPreference()</strong></span> tag set array syntax example    </strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">test</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">users</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Prefer&nbsp;the&nbsp;nearest&nbsp;server&nbsp;in&nbsp;the&nbsp;"east"&nbsp;data&nbsp;center&nbsp;also&nbsp;used&nbsp;for&nbsp;reporting,<br />//&nbsp;but&nbsp;fall&nbsp;back&nbsp;to&nbsp;a&nbsp;server&nbsp;in&nbsp;the&nbsp;"west"&nbsp;data&nbsp;center<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_NEAREST</span><span style="color: #007700">,&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'</span><span style="color: #007700">),<br />));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocursor.setreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCursor::getReadPreference()} - Get the read preference for this query</span></li>    <li class="member"><span class="function">{@link MongoCursorInterface::setReadPreference()} - Set the read preference for this query</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
     * @return MongoCursor Returns this cursor.*/
    public function setReadPreference ($read_preference, array $tags) {}

    /**
	 * Skips a number of results
	 * @link http://www.php.net/manual/en/mongocursor.skip.php
	 * @param int $num The number of results to skip.
	 * @throws MongoCursorException
     * @return MongoCursor Returns this cursor
	 */
/**
*<div id="mongocursor.skip" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCursor::skip</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoCursor::skip</span> &mdash; <span class="dc-title">Skips a number of results</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocursor.skip-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocursor.php" class="type MongoCursor">MongoCursor</a></span> <span class="methodname"><strong>MongoCursor::skip</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocursor.skip-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">num</code>      </dt>       <dd>        <p class="para">        The number of results to skip.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocursor.skip-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocursor.skip-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if this cursor has started iterating.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocursor.skip-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoCursor::limit()} - Limits the number of results returned</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocursor.php">MongoCursor</a></div></div>
*/
    public function skip($num) {}

    /**
	 * Sets whether this query can be done on a slave
	 * This method will override the static class variable slaveOkay.
	 * @link http://www.php.net/manual/en/mongocursor.slaveOkay.php
	 * @param boolean $okay If it is okay to query the slave.
	 * @throws MongoCursorException
     * @return MongoCursor Returns this cursor
	 */
    public function slaveOkay($okay = true) {}

    /**
	 * Sets whether this cursor will be left open after fetching the last results
	 * @link http://www.php.net/manual/en/mongocursor.tailable.php
	 * @param bool $tail If the cursor should be tailable.
     * @return MongoCursor Returns this cursor
	 */
    public function tailable($tail = true) {}

    /**
	 * Sets whether this cursor will timeout
	 * @link http://www.php.net/manual/en/mongocursor.immortal.php
	 * @param bool $liveForever If the cursor should be immortal.
	 * @throws MongoCursorException
     * @return MongoCursor Returns this cursor
	 */
    public function immortal($liveForever = true) {}

    /**
	 * Sets a client-side timeout for this query
	 * @link http://www.php.net/manual/en/mongocursor.timeout.php
	 * @param int $ms The number of milliseconds for the cursor to wait for a response. By default, the cursor will wait forever.
	 * @throws MongoCursorTimeoutException
     * @return MongoCursor Returns this cursor
	 */
    public function timeout($ms) {}

   /**
	* Checks if there are documents that have not been sent yet from the database for this cursor
	* @link http://www.php.net/manual/en/mongocursor.dead.php
    * @return boolean Returns if there are more results that have not been sent to the client, yet.
    */
    public function dead() {}

   /**
	* Use snapshot mode for the query
	* @link http://www.php.net/manual/en/mongocursor.snapshot.php
	* @throws MongoCursorException
    * @return MongoCursor Returns this cursor
    */
    public function snapshot() {}

    /**
	 * Sorts the results by given fields
	 * @link http://www.php.net/manual/en/mongocursor.sort.php
     * @param array $fields An array of fields by which to sort. Each element in the array has as key the field name, and as value either 1 for ascending sort, or -1 for descending sort
	 * @throws MongoCursorException
     * @return MongoCursor Returns the same cursor that this method was called on
	 */
    public function sort(array $fields) {}

   /**
	* Gives the database a hint about the query
	* @link http://www.php.net/manual/en/mongocursor.hint.php
	* @param mixed $key_pattern Indexes to use for the query.
	* @throws MongoCursorException
    * @return MongoCursor Returns this cursor
    */
    public function hint(mixed $key_pattern) {}


	/**
	 * Adds a top-level key/value pair to a query
	 * @link http://www.php.net/manual/en/mongocursor.addoption.php
	 * @param string $key Fieldname to add.
	 * @param mixed $value Value to add.
	 * @throws MongoCursorException
     * @return MongoCursor Returns this cursor
	 */
    public function addOption($key, $value) {}

   /**
	* Execute the query
	* @link http://www.php.net/manual/en/mongocursor.doquery.php
	* @throws MongoConnectionException if it cannot reach the database.
    * @return void
    */
    protected function doQuery() {}

   /**
	* Returns the current element
	* @link http://www.php.net/manual/en/mongocursor.current.php
    * @return array
    */
    public function current() {}

   /**
	* Returns the current result's _id
	* @link http://www.php.net/manual/en/mongocursor.key.php
    * @return string The current result's _id as a string.
    */
    public function key() {}

    /**
	 * Advances the cursor to the next result
	 * @link http://www.php.net/manual/en/mongocursor.next.php
	 * @throws MongoConnectionException
	 * @throws MongoCursorTimeoutException
	 * @return void
	 */
    public function next() {}

   /**
	* Returns the cursor to the beginning of the result set
	* @throws MongoConnectionException
	* @throws MongoCursorTimeoutException
    * @return void
    */
    public function rewind() {}

    /**
	 * Checks if the cursor is reading a valid result.
	 * @link http://www.php.net/manual/en/mongocursor.valid.php
	 * @return boolean If the current result is not null.
	 */
    public function valid() {}

   /**
	* Clears the cursor
	* @link http://www.php.net/manual/en/mongocursor.reset.php
    * @return void
    */
    public function reset() {}

   /**
	* Return an explanation of the query, often useful for optimization and debugging
	* @link http://www.php.net/manual/en/mongocursor.explain.php
    * @return array Returns an explanation of the query.
    */
    public function explain() {}

    /**
	 * Counts the number of results for this query
	 * @link http://www.php.net/manual/en/mongocursor.count.php
	 * @param bool $all Send cursor limit and skip information to the count function, if applicable.
	 * @return int The number of documents returned by this cursor's query.
	 */
    public function count($all = FALSE) {}

	/**
	 * Sets the fields for a query
	 * @link http://www.php.net/manual/en/mongocursor.fields.php
	 * @param array $f Fields to return (or not return).
	 * @throws MongoCursorException
	 * @return MongoCursor
	 */
	public function fields(array $f){}

	/**
	 * Gets the query, fields, limit, and skip for this cursor
	 * @link http://www.php.net/manual/en/mongocursor.info.php
	 * @return array The query, fields, limit, and skip for this cursor as an associative array.
	 */
	public function info(){}

    /**
     * PECL mongo >=1.0.11
     * Limits the number of elements returned in one batch.
     * <p>A cursor typically fetches a batch of result objects and store them locally.
     * This method sets the batchSize value to configure the amount of documents retrieved from the server in one data packet.
     * However, it will never return more documents than fit in the max batch size limit (usually 4MB).
     *
     * @param int $batchSize The number of results to return per batch. Each batch requires a round-trip to the server.
     * <p>If batchSize is 2 or more, it represents the size of each batch of objects retrieved.
     * It can be adjusted to optimize performance and limit data transfer.
     *
     * <p>If batchSize is 1 or negative, it will limit of number returned documents to the absolute value of batchSize,
     * and the cursor will be closed. For example if batchSize is -10, then the server will return a maximum of 10
     * documents and as many as can fit in 4MB, then close the cursor.
     * <b>Warning</b>
     * <p>A batchSize of 1 is special, and means the same as -1, i.e. a value of 1 makes the cursor only capable of returning one document.
     * <p>Note that this feature is different from MongoCursor::limit() in that documents must fit within a maximum size,
     * and it removes the need to send a request to close the cursor server-side.
     * The batch size can be changed even after a cursor is iterated, in which case the setting will apply on the next batch retrieval.
     * <p>This cannot override MongoDB's limit on the amount of data it will return to the client (i.e.,
     * if you set batch size to 1,000,000,000, MongoDB will still only return 4-16MB of results per batch).
     * <p>To ensure consistent behavior, the rules of MongoCursor::batchSize() and MongoCursor::limit() behave a little complex
     * but work "as expected". The rules are: hard limits override soft limits with preference given to MongoCursor::limit() over
     * MongoCursor::batchSize(). After that, whichever is set and lower than the other will take precedence.
     * See below. section for some examples.
     * @return MongoCursor Returns this cursor.
     * @link http://docs.php.net/manual/en/mongocursor.batchsize.php
     */
    public function batchSize($batchSize){}
	
	/**
	 * (PECL mongo >=1.5.0)
	 * Sets a server-side timeout for this query
	 * @link http://php.net/manual/en/mongocursor.maxtimems.php
	 * @param int $ms <p>
	 * Specifies a cumulative time limit in milliseconds to be allowed by the
	 * server for processing operations on the cursor.
	 * </p>
	 * @return MongoCursor This cursor.
	 */
	public function maxTimeMS ($ms) {}
}

/**
*<div id="class.mongocommandcursor" class="reference">   <h1 class="title">The MongoCommandCursor class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=1.5.0)</p>       <div class="section" id="mongocommandcursor.intro">    <h2 class="title">简介</h2>    <p class="para">     A command cursor is similar to a <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a> except     that you use it for iterating through the results of a database command     instead of a normal query. Command cursors are useful for iterating over     large result sets that might exceed the document size limit (currently 16MB)     of a single <span class="function">{@link MongoDB::command()}</span> response.    </p>    <p class="para">     While you can create command cursors using     <span class="function">{@link MongoCommandCursor::__construct()}</span> or the     <span class="function">{@link MongoCommandCursor::createFromDocument()}</span> factory method,     you will generally want to use command-specific helpers such as     <span class="function">{@link MongoCollection::aggregateCursor()}</span>.    </p>    <p class="para">     Note that the cursor does not &quot;contain&quot; the database command&#039;s results; it     just manages iteration through them. Thus, if you print a cursor (f.e. with     <span class="function">{@link var_dump()}</span> or <span class="function">{@link print_r()}</span>), you will see     the cursor object but not the result documents.    </p>   </div>    <div class="section">    <h2 class="title">Cursor Stages</h2>    <p class="para">     A <strong class="classname">MongoCommandCursor</strong> has two &quot;life stages&quot;: pre-     and post- command. When a cursor is created, it has not yet contacted the     database, so it is in its pre-command state. When the client first attempts     to get a result (by calling <span class="function">{@link MongoCommandCursor::rewind()}</span>,     directly or indirectly), the cursor moves into the post-command state.    </p>    <p class="para">     The command cursor&#039;s batch size and socket timeout may be configured in both     the pre- and post- command states.    </p>    <p class="para">     <div class="example" id="example-1587">      <p><strong>Example #1 Adding options to <strong class="classname">MongoCommandCursor</strong></strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$cursor&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCommandCursor</span><span style="color: #007700">(...);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">batchSize</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">4&nbsp;</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$result</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>   </div>       <div class="section" id="mongocommandcursor.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoCommandCursor</strong>      </span>      <span class="oointerface">implements        <span class="interfacename"><a href="http://php.net/manual/zh/class.mongocursorinterface.php" class="interfacename">MongoCursorInterface</a></span>      </span>      <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>      {</div>               <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCommandCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.batchsize.php" class="methodname">batchSize</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$batchSize</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongoclient.php" class="type MongoClient">MongoClient</a></span> <code class="parameter">$connection</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ns</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$command</code><span class="initializer"> = array()</span></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">MongoCommandCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.createfromdocument.php" class="methodname">createFromDocument</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongoclient.php" class="type MongoClient">MongoClient</a></span> <code class="parameter">$connection</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$hash</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$document</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.current.php" class="methodname">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.dead.php" class="methodname">dead</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.getreadpreference.php" class="methodname">getReadPreference</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.info.php" class="methodname">info</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.key.php" class="methodname">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.next.php" class="methodname">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.rewind.php" class="methodname">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCommandCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.setreadpreference.php" class="methodname">setReadPreference</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoCommandCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.timeout.php" class="methodname">timeout</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ms</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocommandcursor.valid.php" class="methodname">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>        </div>    <div class="section">    <h2 class="title">参见</h2>    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoDB::command()}</span></li>     <li class="member"><span class="methodname">{@link MongoCollection::aggregateCursor()}</span></li>    </ul>   </div>   </div>                                                                                                <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoCommandCursor::batchSize} — Limits the number of elements returned in one batch</li><li>{@link MongoCommandCursor::__construct} — Create a new command cursor</li><li>{@link MongoCommandCursor::createFromDocument} — Create a new command cursor from an existing command response document</li><li>{@link MongoCommandCursor::current} — Returns the current element</li><li>{@link MongoCommandCursor::dead} — Checks if there are results that have not yet been sent from the database</li><li>{@link MongoCommandCursor::getReadPreference} — Get the read preference for this command</li><li>{@link MongoCommandCursor::info} — Gets information about the cursor's creation and iteration</li><li>{@link MongoCommandCursor::key} — Returns the current result's index within the result set</li><li>{@link MongoCommandCursor::next} — Advances the cursor to the next result</li><li>{@link MongoCommandCursor::rewind} — Executes the command and resets the cursor to the start of the result set</li><li>{@link MongoCommandCursor::setReadPreference} — Set the read preference for this command</li><li>{@link MongoCommandCursor::timeout} — Sets a client-side timeout for this command</li><li>{@link MongoCommandCursor::valid} — Checks if the cursor is reading a valid result</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.core.php">核心类</a></div></div>
*/
class MongoCommandCursor implements MongoCursorInterface {
/**
*<div id="mongocommandcursor.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::current</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::current</span> &mdash; <span class="dc-title">Returns the current element</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCommandCursor::current</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This returns <strong><code>NULL</code></strong> until <span class="function">{@link MongoCommandCursor::rewind()}</span> is called.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.current-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.current-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    The current result document as an associative array. <strong><code>NULL</code></strong> will be returned    if there is no result.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.current-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Iterator::current()} - 返回当前元素</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
     * @return mixed Can return any type.*/
    public function current(){}

/**
*<div id="mongocommandcursor.next" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::next</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::next</span> &mdash; <span class="dc-title">Advances the cursor to the next result</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>MongoCommandCursor::next</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.next-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <strong><code>NULL</code></strong>.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocommandcursor.next-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a> if it cannot reach the    database and <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the    timeout is exceeded.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.next-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Iterator::next()} - 向前移动到下一个元素</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
     * @return void Any returned value is ignored.*/
    public function next(){}

/**
*<div id="mongocommandcursor.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::key</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::key</span> &mdash; <span class="dc-title">Returns the current result&#039;s index within the result set</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoCommandCursor::key</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.key-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The current result&#039;s index within the result set.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.key-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Iterator::key()} - 返回当前元素的键</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
     * @return mixed scalar on success, or null on failure.*/
    public function key(){}

/**
*<div id="mongocommandcursor.valid" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::valid</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::valid</span> &mdash; <span class="dc-title">Checks if the cursor is reading a valid result</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.valid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCommandCursor::valid</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.valid-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.valid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <strong><code>TRUE</code></strong> if the current result is not null, and <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.valid-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Iterator::valid()} - 检查当前位置是否有效</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
     * @return boolean The return value will be casted to boolean and then evaluated.*/
    public function valid(){}

/**
*<div id="mongocommandcursor.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::rewind</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::rewind</span> &mdash; <span class="dc-title">Executes the command and resets the cursor to the start of the result set</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCommandCursor::rewind</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    If the cursor has already started iteration, the command will be re-executed.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.rewind-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The raw server result document.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocommandcursor.rewind-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a> if it cannot reach the    database and <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the    timeout is exceeded.   </p>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the cursor was created    with <span class="function">{@link MongoCommandCursor::createFromDocument()}</span> and has    already started iteration. Such cursors cannot be iterated multiple times, as    they lack the original command necessary for re-execution.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.rewind-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1593">    <p><strong>Example #1 <span class="function"><strong>MongoCommandCursor::rewind()</strong></span></strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$rawResult&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$commandCursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;Command&nbsp;cursor&nbsp;is&nbsp;now&nbsp;reset&nbsp;to&nbsp;the&nbsp;start&nbsp;of&nbsp;the&nbsp;result&nbsp;set<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$rawResult</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(2) {   [&quot;cursor&quot;]=&gt;   array(3) {     [&quot;id&quot;]=&gt;     object(MongoInt64)#5 (1) {       [&quot;value&quot;]=&gt;       string(12) &quot;310050110216&quot;     }     [&quot;ns&quot;]=&gt;     string(9) &quot;demo.test&quot;     [&quot;firstBatch&quot;]=&gt;     array(1) {       [0]=&gt;       array(2) {         [&quot;_id&quot;]=&gt;         object(MongoId)#6 (1) {           [&quot;$id&quot;]=&gt;           string(24) &quot;52f5691544670a8077b0dc51&quot;         }         [&quot;value&quot;]=&gt;         string(2) &quot;42&quot;       }     }   }   [&quot;ok&quot;]=&gt;   float(1) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.rewind-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link Iterator::rewind()} - 返回到迭代器的第一个元素</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
     * @return void Any returned value is ignored.*/
    public function rewind(){}

/**
*<div id="mongocommandcursor.batchsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::batchSize</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::batchSize</span> &mdash; <span class="dc-title">Limits the number of elements returned in one batch</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.batchsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="type MongoCommandCursor">MongoCommandCursor</a></span> <span class="methodname"><strong>MongoCommandCursor::batchSize</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$batchSize</code></span>    )</div>    <p class="para rdfs-comment">    A cursor typically fetches a batch of result objects and store them    locally. This method sets the batchSize value to configure the amount of    documents retrieved from the server in one round trip.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.batchsize-parameters">   <h3 class="title">参数</h3>     <p class="para">    <dl>            <dt>        <code class="parameter">batchSize</code>      </dt>       <dd>        <p class="para">        The number of results to return per batch. Each batch requires a        round-trip to the server.        </p>       <p class="para">        This cannot override MongoDB&#039;s limit on the amount of data it will return to         the client (i.e., if you set batch size to 1,000,000,000, MongoDB will still         only return 4-16MB of results per batch).        </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.batchsize-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.batchsize-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1588">    <p><strong>Example #1 <span class="function"><strong>MongoCommandCursor::batchSize()</strong></span></strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$commandCursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">batchSize</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.batchsize-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCursorInterface::batchSize()} - Limits the number of elements returned in one batch</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function batchSize(int $batchSize):MongoCursorInterface{}

/**
*<div id="mongocommandcursor.dead" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::dead</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::dead</span> &mdash; <span class="dc-title">Checks if there are results that have not yet been sent from the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.dead-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCommandCursor::dead</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method checks whether the <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a>    cursor has been exhausted and the database has no more results to send to the    client. A cursor being &quot;dead&quot; does not necessarily mean that there are no    more results available for iteration.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.dead-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.dead-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if there are more results that have not yet been sent to the    client, and <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.dead-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCursorInterface::dead()} - Checks if there are results that have not yet been sent from the database</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function dead():bool{}

/**
*<div id="mongocommandcursor.info" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::info</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::info</span> &mdash; <span class="dc-title">Gets information about the cursor&#039;s creation and iteration</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.info-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCommandCursor::info</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This can be called before or after the cursor has started iterating.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.info-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.info-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the namespace, batch size, limit, skip, flags, query, and projected    fields for this cursor. If the cursor has started iterating, additional    information about iteration and the connection will be included.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.info-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1592">    <p><strong>Example #1 <span class="function"><strong>MongoCommandCursor::info()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCommandCursor</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;MongoClient&nbsp;object<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'demo.cities'</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;namespace<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">[<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'aggregate'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'cities'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'pipeline'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;[&nbsp;</span><span style="color: #DD0000">'$match'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$exists'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'cursor'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'batchSize'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;]<br />);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Before&nbsp;iteration&nbsp;started:\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">info</span><span style="color: #007700">());<br /><br />echo&nbsp;</span><span style="color: #DD0000">"\nAfter&nbsp;iteration&nbsp;started:\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">info</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Before iteration started: array(8) {   [&quot;ns&quot;]=&gt;   string(11) &quot;demo.cities&quot;   [&quot;limit&quot;]=&gt;   int(0)   [&quot;batchSize&quot;]=&gt;   int(0)   [&quot;skip&quot;]=&gt;   int(0)   [&quot;flags&quot;]=&gt;   int(0)   [&quot;query&quot;]=&gt;   array(3) {     [&quot;aggregate&quot;]=&gt;     string(6) &quot;cities&quot;     [&quot;pipeline&quot;]=&gt;     array(1) {       [0]=&gt;       array(1) {         [&quot;$match&quot;]=&gt;         array(1) {           [&quot;_id&quot;]=&gt;           array(1) {             [&quot;$exists&quot;]=&gt;             bool(true)           }         }       }     }     [&quot;cursor&quot;]=&gt;     array(1) {       [&quot;batchSize&quot;]=&gt;       int(1)     }   }   [&quot;fields&quot;]=&gt;   NULL   [&quot;started_iterating&quot;]=&gt;   bool(false) }  After iteration started: array(17) {   [&quot;ns&quot;]=&gt;   string(11) &quot;demo.cities&quot;   [&quot;limit&quot;]=&gt;   int(0)   [&quot;batchSize&quot;]=&gt;   int(0)   [&quot;skip&quot;]=&gt;   int(0)   [&quot;flags&quot;]=&gt;   int(0)   [&quot;query&quot;]=&gt;   array(3) {     [&quot;aggregate&quot;]=&gt;     string(6) &quot;cities&quot;     [&quot;pipeline&quot;]=&gt;     array(1) {       [0]=&gt;       array(1) {         [&quot;$match&quot;]=&gt;         array(1) {           [&quot;_id&quot;]=&gt;           array(1) {             [&quot;$exists&quot;]=&gt;             bool(true)           }         }       }     }     [&quot;cursor&quot;]=&gt;     array(1) {       [&quot;batchSize&quot;]=&gt;       int(1)     }   }   [&quot;fields&quot;]=&gt;   NULL   [&quot;started_iterating&quot;]=&gt;   bool(true)   [&quot;id&quot;]=&gt;   int(185840310129)   [&quot;at&quot;]=&gt;   int(0)   [&quot;numReturned&quot;]=&gt;   int(0)   [&quot;server&quot;]=&gt;   string(25) &quot;localhost:27017;-;.;23991&quot;   [&quot;host&quot;]=&gt;   string(9) &quot;localhost&quot;   [&quot;port&quot;]=&gt;   int(27017)   [&quot;connection_type_desc&quot;]=&gt;   string(10) &quot;STANDALONE&quot;   [&quot;firstBatchAt&quot;]=&gt;   int(0)   [&quot;firstBatchNumReturned&quot;]=&gt;   int(1) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.info-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCursorInterface::info()} - Gets information about the cursor's creation and iteration</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function info():array{}

/**
*<div id="mongocommandcursor.getreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::getReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.6.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::getReadPreference</span> &mdash; <span class="dc-title">Get the read preference for this command</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.getreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCommandCursor::getReadPreference</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.getreadpreference-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.getreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the read preference. The array contains the values <em>type</em> for the string read preference mode (corresponding to the <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> constants), and <em>tagsets</em> containing a list of all tag set criteria. If no tag sets were specified, <em>tagsets</em> will not be present in the array.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.getreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1591">    <p><strong>Example #1 <span class="methodname"><strong>MongoCommandCursor::getReadPreference()</strong></span> return value example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongodb://rs1.example.com:27017'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'replicaSet'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'myReplSetName'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'people'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;If&nbsp;a&nbsp;MongoCommandCursor&nbsp;is&nbsp;constructed&nbsp;directly,&nbsp;it&nbsp;will&nbsp;inherit&nbsp;the&nbsp;read<br />//&nbsp;preference&nbsp;of&nbsp;the&nbsp;MongoClient&nbsp;instance&nbsp;passed&nbsp;to&nbsp;its&nbsp;constructor;&nbsp;however,<br />//&nbsp;MongoCollection::aggregateCursor()&nbsp;will&nbsp;have&nbsp;the&nbsp;MongoCommandCursor&nbsp;inherit<br />//&nbsp;the&nbsp;collection's&nbsp;read&nbsp;preference.<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_SECONDARY</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$name'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$points'&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sort'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">]&nbsp;],<br />]&nbsp;);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getReadPreference</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(1) {   [&quot;type&quot;]=&gt;   string(9) &quot;secondary&quot; } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.getreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCommandCursor::setReadPreference()} - Set the read preference for this command</span></li>    <li class="member"><span class="function">{@link MongoCursorInterface::getReadPreference()} - Get the read preference for this query</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function getReadPreference():array{}

/**
*<div id="mongocommandcursor.setreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::setReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.6.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::setReadPreference</span> &mdash; <span class="dc-title">Set the read preference for this command</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.setreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="type MongoCommandCursor">MongoCommandCursor</a></span> <span class="methodname"><strong>MongoCommandCursor::setReadPreference</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.setreadpreference-parameters">   <h3 class="title">参数</h3>   <dl> <dt> <code class="parameter">read_preference</code></dt> <dd> <p class="para">The read preference mode: <strong><code>MongoClient::RP_PRIMARY</code></strong>, <strong><code>MongoClient::RP_PRIMARY_PREFERRED</code></strong>, <strong><code>MongoClient::RP_SECONDARY</code></strong>, <strong><code>MongoClient::RP_SECONDARY_PREFERRED</code></strong>, or <strong><code>MongoClient::RP_NEAREST</code></strong>.</p></dd> <dt> <code class="parameter">tags</code></dt> <dd> <p class="para">An array of zero or more tag sets, where each tag set is itself an array of criteria used to match tags on replica set members.</p></dd> </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.setreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocommandcursor.setreadpreference-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Emits <strong><code>E_WARNING</code></strong> if either parameter is invalid, or if one or more tag sets are provided with the <strong><code>MongoClient::RP_PRIMARY</code></strong> read preference mode.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.setreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1594">    <p><strong>Example #1 <span class="methodname"><strong>MongoCommandCursor::setReadPreference()</strong></span> tag set array syntax example    </strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongodb://rs1.example.com:27017'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'replicaSet'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'myReplSetName'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'people'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$name'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$points'&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sort'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">]&nbsp;],<br />]&nbsp;);<br /><br /></span><span style="color: #FF8000">//&nbsp;Prefer&nbsp;the&nbsp;nearest&nbsp;server&nbsp;in&nbsp;the&nbsp;"east"&nbsp;data&nbsp;center&nbsp;also&nbsp;used&nbsp;for&nbsp;reporting,<br />//&nbsp;but&nbsp;fall&nbsp;back&nbsp;to&nbsp;a&nbsp;server&nbsp;in&nbsp;the&nbsp;"west"&nbsp;data&nbsp;center<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_NEAREST</span><span style="color: #007700">,&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'&nbsp;</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'&nbsp;</span><span style="color: #007700">],<br />]&nbsp;);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;...<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #FF8000">//&nbsp;If&nbsp;the&nbsp;read&nbsp;preference&nbsp;is&nbsp;changed,&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;the&nbsp;next&nbsp;time&nbsp;the&nbsp;cursor<br />//&nbsp;is&nbsp;rewound&nbsp;and&nbsp;the&nbsp;command&nbsp;is&nbsp;re-executed.<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_PRIMARY</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;...<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.setreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCommandCursor::getReadPreference()} - Get the read preference for this command</span></li>    <li class="member"><span class="function">{@link MongoCursorInterface::setReadPreference()} - Set the read preference for this query</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function setReadPreference(string $read_preference, array $tags = null):MongoCursorInterface{}

/**
*<div id="mongocommandcursor.timeout" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::timeout</h1>   <p class="verinfo">(PECL mongo &gt;=1.6.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::timeout</span> &mdash; <span class="dc-title">Sets a client-side timeout for this command</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.timeout-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="type MongoCommandCursor">MongoCommandCursor</a></span> <span class="methodname"><strong>MongoCommandCursor::timeout</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ms</code></span>    )</div>    <p class="para rdfs-comment">    A timeout can be set at any time and will affect subsequent data retrieval    associated with this cursor, including fetching more results from the    database.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.timeout-parameters">   <h3 class="title">参数</h3>   <dl>          <dt>       <code class="parameter">ms</code>     </dt>      <dd>       <p class="para">       The number of milliseconds for the cursor to wait for a response. Use       <em>-1</em> to wait forever. By default, the cursor will wait       <var class="varname"><var class="varname">30000</var></var> milliseconds (30 seconds).      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.timeout-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    This cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocommandcursor.timeout-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Causes methods that fetch results to throw a    <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the data fetch takes    longer than the specified number of milliseconds.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.timeout-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1595">    <p><strong>Example #1 <span class="function"><strong>MongoCommandCursor::timeout()</strong></span> example</strong></p>    <div class="example-contents"><p>     In the following example, the driver will wait for 60 seconds for the     first response from the aggregate command. It will also wait for 60     seconds each time the server needs to be polled for more information.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$col&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">database</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">collection</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$pipeline&nbsp;</span><span style="color: #007700">=&nbsp;[&nbsp;</span><span style="color: #9876AA">…&nbsp;</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">$pipeline&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">timeout</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">60000&nbsp;</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;for&nbsp;60&nbsp;seconds<br /><br /></span><span style="color: #007700">foreach&nbsp;(&nbsp;</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">…<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 notes" id="refsect1-mongocommandcursor.timeout-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">      This does not cause the MongoDB server to cancel long-running operations;      it only instructs the driver to stop waiting for a response and throw a      <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> after a set time.      If you need to specify a server-side timeout for a command, considering      passing the <em>maxTimeMS</em> option to      <span class="methodname">{@link MongoCollection::aggregateCursor()}</span>.    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.timeout-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCollection::aggregateCursor()} - Execute an aggregation pipeline command and retrieve results through a cursor</span></li>    <li class="member"><span class="methodname">{@link MongoCursorInterface::timeout()} - Sets a client-side timeout for this query</span></li>    <li class="member">The <em>socketTimeoutMS</em> option for <span class="function">{@link MongoClient::__construct()}</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function timeout(int $ms):MongoCursorInterface{}
}

interface MongoCursorInterface extends Iterator
{
/**
*<div id="mongocommandcursor.batchsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::batchSize</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::batchSize</span> &mdash; <span class="dc-title">Limits the number of elements returned in one batch</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.batchsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="type MongoCommandCursor">MongoCommandCursor</a></span> <span class="methodname"><strong>MongoCommandCursor::batchSize</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$batchSize</code></span>    )</div>    <p class="para rdfs-comment">    A cursor typically fetches a batch of result objects and store them    locally. This method sets the batchSize value to configure the amount of    documents retrieved from the server in one round trip.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.batchsize-parameters">   <h3 class="title">参数</h3>     <p class="para">    <dl>            <dt>        <code class="parameter">batchSize</code>      </dt>       <dd>        <p class="para">        The number of results to return per batch. Each batch requires a        round-trip to the server.        </p>       <p class="para">        This cannot override MongoDB&#039;s limit on the amount of data it will return to         the client (i.e., if you set batch size to 1,000,000,000, MongoDB will still         only return 4-16MB of results per batch).        </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.batchsize-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.batchsize-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1588">    <p><strong>Example #1 <span class="function"><strong>MongoCommandCursor::batchSize()</strong></span></strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$commandCursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">batchSize</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.batchsize-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCursorInterface::batchSize()} - Limits the number of elements returned in one batch</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function batchSize(int $batchSize):MongoCursorInterface;

/**
*<div id="mongocommandcursor.dead" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::dead</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::dead</span> &mdash; <span class="dc-title">Checks if there are results that have not yet been sent from the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.dead-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname"><strong>MongoCommandCursor::dead</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method checks whether the <a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="classname">MongoCommandCursor</a>    cursor has been exhausted and the database has no more results to send to the    client. A cursor being &quot;dead&quot; does not necessarily mean that there are no    more results available for iteration.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.dead-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.dead-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if there are more results that have not yet been sent to the    client, and <strong><code>FALSE</code></strong> otherwise.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.dead-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCursorInterface::dead()} - Checks if there are results that have not yet been sent from the database</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function dead():bool;

/**
*<div id="mongocommandcursor.info" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::info</h1>   <p class="verinfo">(PECL mongo &gt;=1.5.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::info</span> &mdash; <span class="dc-title">Gets information about the cursor&#039;s creation and iteration</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.info-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCommandCursor::info</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This can be called before or after the cursor has started iterating.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.info-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.info-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the namespace, batch size, limit, skip, flags, query, and projected    fields for this cursor. If the cursor has started iterating, additional    information about iteration and the connection will be included.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.info-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1592">    <p><strong>Example #1 <span class="function"><strong>MongoCommandCursor::info()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoCommandCursor</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;MongoClient&nbsp;object<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'demo.cities'</span><span style="color: #007700">,&nbsp;</span><span style="color: #FF8000">//&nbsp;namespace<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">[<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'aggregate'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'cities'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'pipeline'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;[&nbsp;</span><span style="color: #DD0000">'$match'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$exists'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'cursor'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'batchSize'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;]<br />);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Before&nbsp;iteration&nbsp;started:\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">info</span><span style="color: #007700">());<br /><br />echo&nbsp;</span><span style="color: #DD0000">"\nAfter&nbsp;iteration&nbsp;started:\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rewind</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">info</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Before iteration started: array(8) {   [&quot;ns&quot;]=&gt;   string(11) &quot;demo.cities&quot;   [&quot;limit&quot;]=&gt;   int(0)   [&quot;batchSize&quot;]=&gt;   int(0)   [&quot;skip&quot;]=&gt;   int(0)   [&quot;flags&quot;]=&gt;   int(0)   [&quot;query&quot;]=&gt;   array(3) {     [&quot;aggregate&quot;]=&gt;     string(6) &quot;cities&quot;     [&quot;pipeline&quot;]=&gt;     array(1) {       [0]=&gt;       array(1) {         [&quot;$match&quot;]=&gt;         array(1) {           [&quot;_id&quot;]=&gt;           array(1) {             [&quot;$exists&quot;]=&gt;             bool(true)           }         }       }     }     [&quot;cursor&quot;]=&gt;     array(1) {       [&quot;batchSize&quot;]=&gt;       int(1)     }   }   [&quot;fields&quot;]=&gt;   NULL   [&quot;started_iterating&quot;]=&gt;   bool(false) }  After iteration started: array(17) {   [&quot;ns&quot;]=&gt;   string(11) &quot;demo.cities&quot;   [&quot;limit&quot;]=&gt;   int(0)   [&quot;batchSize&quot;]=&gt;   int(0)   [&quot;skip&quot;]=&gt;   int(0)   [&quot;flags&quot;]=&gt;   int(0)   [&quot;query&quot;]=&gt;   array(3) {     [&quot;aggregate&quot;]=&gt;     string(6) &quot;cities&quot;     [&quot;pipeline&quot;]=&gt;     array(1) {       [0]=&gt;       array(1) {         [&quot;$match&quot;]=&gt;         array(1) {           [&quot;_id&quot;]=&gt;           array(1) {             [&quot;$exists&quot;]=&gt;             bool(true)           }         }       }     }     [&quot;cursor&quot;]=&gt;     array(1) {       [&quot;batchSize&quot;]=&gt;       int(1)     }   }   [&quot;fields&quot;]=&gt;   NULL   [&quot;started_iterating&quot;]=&gt;   bool(true)   [&quot;id&quot;]=&gt;   int(185840310129)   [&quot;at&quot;]=&gt;   int(0)   [&quot;numReturned&quot;]=&gt;   int(0)   [&quot;server&quot;]=&gt;   string(25) &quot;localhost:27017;-;.;23991&quot;   [&quot;host&quot;]=&gt;   string(9) &quot;localhost&quot;   [&quot;port&quot;]=&gt;   int(27017)   [&quot;connection_type_desc&quot;]=&gt;   string(10) &quot;STANDALONE&quot;   [&quot;firstBatchAt&quot;]=&gt;   int(0)   [&quot;firstBatchNumReturned&quot;]=&gt;   int(1) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.info-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="methodname">{@link MongoCursorInterface::info()} - Gets information about the cursor's creation and iteration</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function info():array;

/**
*<div id="mongocommandcursor.getreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::getReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.6.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::getReadPreference</span> &mdash; <span class="dc-title">Get the read preference for this command</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.getreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoCommandCursor::getReadPreference</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.getreadpreference-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.getreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">This function returns an array describing the read preference. The array contains the values <em>type</em> for the string read preference mode (corresponding to the <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> constants), and <em>tagsets</em> containing a list of all tag set criteria. If no tag sets were specified, <em>tagsets</em> will not be present in the array.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.getreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1591">    <p><strong>Example #1 <span class="methodname"><strong>MongoCommandCursor::getReadPreference()</strong></span> return value example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongodb://rs1.example.com:27017'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'replicaSet'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'myReplSetName'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'people'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;If&nbsp;a&nbsp;MongoCommandCursor&nbsp;is&nbsp;constructed&nbsp;directly,&nbsp;it&nbsp;will&nbsp;inherit&nbsp;the&nbsp;read<br />//&nbsp;preference&nbsp;of&nbsp;the&nbsp;MongoClient&nbsp;instance&nbsp;passed&nbsp;to&nbsp;its&nbsp;constructor;&nbsp;however,<br />//&nbsp;MongoCollection::aggregateCursor()&nbsp;will&nbsp;have&nbsp;the&nbsp;MongoCommandCursor&nbsp;inherit<br />//&nbsp;the&nbsp;collection's&nbsp;read&nbsp;preference.<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_SECONDARY</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$name'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$points'&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sort'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">]&nbsp;],<br />]&nbsp;);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getReadPreference</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程会输出：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(1) {   [&quot;type&quot;]=&gt;   string(9) &quot;secondary&quot; } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.getreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCommandCursor::setReadPreference()} - Set the read preference for this command</span></li>    <li class="member"><span class="function">{@link MongoCursorInterface::getReadPreference()} - Get the read preference for this query</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function getReadPreference():array;

/**
*<div id="mongocommandcursor.setreadpreference" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::setReadPreference</h1>   <p class="verinfo">(PECL mongo &gt;=1.6.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::setReadPreference</span> &mdash; <span class="dc-title">Set the read preference for this command</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.setreadpreference-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="type MongoCommandCursor">MongoCommandCursor</a></span> <span class="methodname"><strong>MongoCommandCursor::setReadPreference</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$read_preference</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$tags</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.setreadpreference-parameters">   <h3 class="title">参数</h3>   <dl> <dt> <code class="parameter">read_preference</code></dt> <dd> <p class="para">The read preference mode: <strong><code>MongoClient::RP_PRIMARY</code></strong>, <strong><code>MongoClient::RP_PRIMARY_PREFERRED</code></strong>, <strong><code>MongoClient::RP_SECONDARY</code></strong>, <strong><code>MongoClient::RP_SECONDARY_PREFERRED</code></strong>, or <strong><code>MongoClient::RP_NEAREST</code></strong>.</p></dd> <dt> <code class="parameter">tags</code></dt> <dd> <p class="para">An array of zero or more tag sets, where each tag set is itself an array of criteria used to match tags on replica set members.</p></dd> </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.setreadpreference-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns this cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocommandcursor.setreadpreference-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Emits <strong><code>E_WARNING</code></strong> if either parameter is invalid, or if one or more tag sets are provided with the <strong><code>MongoClient::RP_PRIMARY</code></strong> read preference mode.</p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.setreadpreference-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1594">    <p><strong>Example #1 <span class="methodname"><strong>MongoCommandCursor::setReadPreference()</strong></span> tag set array syntax example    </strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongodb://rs1.example.com:27017'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'replicaSet'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'myReplSetName'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'people'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$group'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$name'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sum'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'$points'&nbsp;</span><span style="color: #007700">]&nbsp;]&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'$sort'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;[&nbsp;</span><span style="color: #DD0000">'points'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1&nbsp;</span><span style="color: #007700">]&nbsp;],<br />]&nbsp;);<br /><br /></span><span style="color: #FF8000">//&nbsp;Prefer&nbsp;the&nbsp;nearest&nbsp;server&nbsp;in&nbsp;the&nbsp;"east"&nbsp;data&nbsp;center&nbsp;also&nbsp;used&nbsp;for&nbsp;reporting,<br />//&nbsp;but&nbsp;fall&nbsp;back&nbsp;to&nbsp;a&nbsp;server&nbsp;in&nbsp;the&nbsp;"west"&nbsp;data&nbsp;center<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_NEAREST</span><span style="color: #007700">,&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'east'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'use'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'reporting'&nbsp;</span><span style="color: #007700">],<br />&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;</span><span style="color: #DD0000">'dc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'west'&nbsp;</span><span style="color: #007700">],<br />]&nbsp;);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;...<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #FF8000">//&nbsp;If&nbsp;the&nbsp;read&nbsp;preference&nbsp;is&nbsp;changed,&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;the&nbsp;next&nbsp;time&nbsp;the&nbsp;cursor<br />//&nbsp;is&nbsp;rewound&nbsp;and&nbsp;the&nbsp;command&nbsp;is&nbsp;re-executed.<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setReadPreference</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">::</span><span style="color: #9876AA">RP_PRIMARY</span><span style="color: #007700">);<br /><br />foreach&nbsp;(</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;...<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.setreadpreference-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member">The <a href="http://php.net/manual/zh/mongo.readpreferences.php" class="link">read preferences</a> documentation.</li>    <li class="member"><span class="function">{@link MongoCommandCursor::getReadPreference()} - Get the read preference for this command</span></li>    <li class="member"><span class="function">{@link MongoCursorInterface::setReadPreference()} - Set the read preference for this query</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function setReadPreference(string $read_preference, array $tags = null):MongoCursorInterface;

/**
*<div id="mongocommandcursor.timeout" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoCommandCursor::timeout</h1>   <p class="verinfo">(PECL mongo &gt;=1.6.0)</p><p class="refpurpose"><span class="refname">MongoCommandCursor::timeout</span> &mdash; <span class="dc-title">Sets a client-side timeout for this command</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongocommandcursor.timeout-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongocommandcursor.php" class="type MongoCommandCursor">MongoCommandCursor</a></span> <span class="methodname"><strong>MongoCommandCursor::timeout</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ms</code></span>    )</div>    <p class="para rdfs-comment">    A timeout can be set at any time and will affect subsequent data retrieval    associated with this cursor, including fetching more results from the    database.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongocommandcursor.timeout-parameters">   <h3 class="title">参数</h3>   <dl>          <dt>       <code class="parameter">ms</code>     </dt>      <dd>       <p class="para">       The number of milliseconds for the cursor to wait for a response. Use       <em>-1</em> to wait forever. By default, the cursor will wait       <var class="varname"><var class="varname">30000</var></var> milliseconds (30 seconds).      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongocommandcursor.timeout-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    This cursor.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongocommandcursor.timeout-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Causes methods that fetch results to throw a    <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the data fetch takes    longer than the specified number of milliseconds.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongocommandcursor.timeout-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1595">    <p><strong>Example #1 <span class="function"><strong>MongoCommandCursor::timeout()</strong></span> example</strong></p>    <div class="example-contents"><p>     In the following example, the driver will wait for 60 seconds for the     first response from the aggregate command. It will also wait for 60     seconds each time the server needs to be polled for more information.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$col&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">database</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">collection</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$pipeline&nbsp;</span><span style="color: #007700">=&nbsp;[&nbsp;</span><span style="color: #9876AA">…&nbsp;</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">aggregateCursor</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">$pipeline&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">timeout</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">60000&nbsp;</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;for&nbsp;60&nbsp;seconds<br /><br /></span><span style="color: #007700">foreach&nbsp;(&nbsp;</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #9876AA">$result&nbsp;</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">…<br /></span><span style="color: #007700">}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 notes" id="refsect1-mongocommandcursor.timeout-notes">   <h3 class="title">注释</h3>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">      This does not cause the MongoDB server to cancel long-running operations;      it only instructs the driver to stop waiting for a response and throw a      <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> after a set time.      If you need to specify a server-side timeout for a command, considering      passing the <em>maxTimeMS</em> option to      <span class="methodname">{@link MongoCollection::aggregateCursor()}</span>.    </p>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongocommandcursor.timeout-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoCollection::aggregateCursor()} - Execute an aggregation pipeline command and retrieve results through a cursor</span></li>    <li class="member"><span class="methodname">{@link MongoCursorInterface::timeout()} - Sets a client-side timeout for this query</span></li>    <li class="member">The <em>socketTimeoutMS</em> option for <span class="function">{@link MongoClient::__construct()}</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongocommandcursor.php">MongoCommandCursor</a></div></div>
*/
    function timeout(int $ms):MongoCursorInterface;
}

/**
*<div id="class.mongogridfs" class="reference">   <h1 class="title">The MongoGridFS class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>     <div class="section" id="mongogridfs.intro">    <h2 class="title">简介</h2>    <p class="para">     Utilities for storing and retrieving files from the database.    </p>     <p class="para">     GridFS is a storage specification all supported drivers implement.      Basically, it defines two collections: <em>files</em>, for file      metadata, and <em>chunks</em>, for file content.  If the file is      large, it will automatically be split into smaller chunks and each chunk      will be saved as a document in the chunks collection.    </p>     <p class="para">     Each document in the files collection contains the filename, upload date,      and md5 hash.  It also contains a unique <em>_id</em> field, which     can be used to query the chunks collection for the file&#039;s content.  Each      document in the chunks collection contains a chunk of binary data, a      <em>files_id</em> field that matches its file&#039;s      <em>_id</em>, and the position of this chunk in the overall file.    </p>     <p class="para">     For example, the files document is something like:     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">array(</span><span style="color: #DD0000">"_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">123456789</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"filename"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"foo.txt"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"chunkSize"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"length"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">12</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      and the chunks documents look like:     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">array(</span><span style="color: #DD0000">"files_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">123456789</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"n"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"data"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoBinData</span><span style="color: #007700">(</span><span style="color: #DD0000">"abc"</span><span style="color: #007700">));<br />array(</span><span style="color: #DD0000">"files_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">123456789</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"n"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"data"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoBinData</span><span style="color: #007700">(</span><span style="color: #DD0000">"def"</span><span style="color: #007700">));<br />array(</span><span style="color: #DD0000">"files_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">123456789</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"n"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"data"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoBinData</span><span style="color: #007700">(</span><span style="color: #DD0000">"ghi"</span><span style="color: #007700">));<br />array(</span><span style="color: #DD0000">"files_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">123456789</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"n"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"data"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoBinData</span><span style="color: #007700">(</span><span style="color: #DD0000">"jkl"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      Of course, the default chunk size is thousands of bytes, but that makes an unwieldy example.    </p>   </div>    <div class="section">    <h2 class="title">Inter-Language Compatibility</h2>    <p class="para">     You should be able to use any files created by MongoGridFS with any other      drivers, and vice versa.  However, some drivers expect that all metadata     associated with a file be in a &quot;metadata&quot; field.  If you&#039;re going to be      using other languages, it&#039;s a good idea to wrap info you might want them to     see in a &quot;metadata&quot; field.  For example, instead of:    </p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeFile</span><span style="color: #007700">(</span><span style="color: #DD0000">"somefile.txt"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"date"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">()));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <p class="para">     use something like:    </p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeFile</span><span style="color: #007700">(</span><span style="color: #DD0000">"somefile.txt"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"metadata"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"date"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">())));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>    <div class="section">    <h2 class="title">The <strong class="classname">MongoGridFS</strong> Family</h2>     <p class="para">     <strong class="classname">MongoGridFS</strong> represents the files and chunks      collections. <strong class="classname">MongoGridFS</strong> extends MongoCollection,      and an instance of <strong class="classname">MongoGridFS</strong> has access to all of      <a href="http://php.net/manual/zh/class.mongocollection.php" class="classname">MongoCollection</a> methods, which act on the files     collection:     <div class="informalexample">      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$grid&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">update</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"filename"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">$newObj</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;update&nbsp;on&nbsp;the&nbsp;files&nbsp;collection<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>     <p class="para">     Another example of manipulating metadata:     <div class="informalexample">      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;save&nbsp;a&nbsp;file<br /></span><span style="color: #9876AA">$id&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeFile</span><span style="color: #007700">(</span><span style="color: #DD0000">"game.tgz"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$game&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;add&nbsp;a&nbsp;downloads&nbsp;counter<br /></span><span style="color: #9876AA">$game</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">file</span><span style="color: #007700">[</span><span style="color: #DD0000">'downloads'</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(</span><span style="color: #9876AA">$game</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">file</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;increment&nbsp;the&nbsp;counter<br /></span><span style="color: #9876AA">$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">update</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$id</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">'$inc'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"downloads"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>     <p class="para">     You can also access the chunks collection from an instance of      <strong class="classname">MongoGridFS</strong>:     <div class="informalexample">      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />&nbsp;&nbsp;$chunks&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">chunks</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;$chunks&nbsp;is&nbsp;a&nbsp;normal&nbsp;MongoCollection<br /></span><span style="color: #9876AA">$chunks</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"x"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">4</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     There are some methods for <strong class="classname">MongoGridFS</strong> with the same     name as <a href="http://php.net/manual/zh/class.mongocollection.php" class="classname">MongoCollection</a> methods, that behave      slightly differently. For example, <span class="function">{@link MongoGridFS::remove()}</span>     will remove any objects that match the criteria from the files collection      and their content from the chunks collection.    </p>     <p class="para">     To store something new in GridFS, there are a couple options.  If you have     a filename, you can say:     <div class="informalexample">      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeFile</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"whatever"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"metadata"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"you"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"want"</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>     <p class="para">     If you have a string of bytes that isn&#039;t a file, you can also store that     using <span class="function">{@link MongoGridFS::storeBytes()}</span>:     <div class="informalexample">      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$grid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeBytes</span><span style="color: #007700">(</span><span style="color: #9876AA">$bytes</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"whatever"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"metadata"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"you"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"want"</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>     <p class="para">     Querying a <strong class="classname">MongoGridFS</strong> collection returns a      <a href="http://php.net/manual/zh/class.mongogridfscursor.php" class="classname">MongoGridFSCursor</a>, which behaves like a normal      <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a> except that it returns      <strong class="classname">MongoGridFSFiles</strong> instead of associative arrays.    </p>     <p class="para">     <strong class="classname">MongoGridFSFiles</strong> can be written back to disc using      <span class="function">{@link MongoGridFSFile::write()}</span> or retrieved in memory using      <span class="function">{@link MongoGridFSFile::getBytes()}</span>. There is currently no      method that automatically streams chunks, but it would be fairly easy to      write by querying the <em>$grid-&gt;chunks</em> collection.    </p>     <p class="para">     <a href="http://php.net/manual/zh/class.mongogridfsfile.php" class="classname">MongoGridFSFile</a> objects contain a field file which     contains any file metadata.    </p>   </div>     <div class="section" id="mongogridfs.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongocollection.php" class="classname">MongoCollection</a>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type"><a href="http://php.net/manual/zh/class.mongocollection.php" class="type MongoCollection">MongoCollection</a></span>       <var class="varname">$<var class="varname">chunks</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname">$<var class="varname">filesName</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname">$<var class="varname">chunksName</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongodb.php" class="type MongoDB">MongoDB</a></span> <code class="parameter">$db</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code><span class="initializer"> = &quot;fs&quot;</span></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$chunks</code><span class="initializer"> = &quot;fs&quot;</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool|array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.delete.php" class="methodname">delete</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$id</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.drop.php" class="methodname">drop</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoGridFSCursor</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.find.php" class="methodname">find</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoGridFSFile</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.findone.php" class="methodname">findOne</a></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoGridFSFile</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.get.php" class="methodname">get</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$id</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.put.php" class="methodname">put</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">bool|array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.remove.php" class="methodname">remove</a></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$criteria</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.storebytes.php" class="methodname">storeBytes</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$bytes</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.storefile.php" class="methodname">storeFile</a></span>     ( <span class="methodparam"><span class="type"><span class="type string|resource">string|resource</span></span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfs.storeupload.php" class="methodname">storeUpload</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code></span>   ] )</div>     }</div>     </div>    <div class="section">    <h2 class="title">参见</h2>    <ul class="simplelist">     <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/" class="link external">&raquo;&nbsp;GridFS</a></li>     <li class="member">LightCube Solutions blog post on <a href="http://www.lightcubesolutions.com/blog/?p=209" class="link external">&raquo;&nbsp;saving user uploads</a></li>     <li class="member">LightCube Solutions blog post on <a href="http://www.lightcubesolutions.com/blog/?p=228" class="link external">&raquo;&nbsp;adding metadata to files</a></li>    </ul>   </div>  </div>                                                                               <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoGridFS::__construct} — Creates new file collections</li><li>{@link MongoGridFS::delete} — Remove a file and its chunks from the database</li><li>{@link MongoGridFS::drop} — Drops the files and chunks collections</li><li>{@link MongoGridFS::find} — Queries for files</li><li>{@link MongoGridFS::findOne} — Returns a single file matching the criteria</li><li>{@link MongoGridFS::get} — Retrieve a file from the database</li><li>{@link MongoGridFS::put} — Stores a file in the database</li><li>{@link MongoGridFS::remove} — Remove files and their chunks from the database</li><li>{@link MongoGridFS::storeBytes} — Stores a string of bytes in the database</li><li>{@link MongoGridFS::storeFile} — Stores a file in the database</li><li>{@link MongoGridFS::storeUpload} — Stores an uploaded file in the database</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.gridfs.php">GridFS Classes</a></div></div>
*/
class MongoGridFS extends MongoCollection {
    const ASCENDING = 1;
    const DESCENDING = -1;

    /**
     * @link http://php.net/manual/en/class.mongogridfs.php#mongogridfs.props.chunks
     * @var $chunks MongoCollection
     */
    public $chunks;

    /**
     * @link http://php.net/manual/en/class.mongogridfs.php#mongogridfs.props.filesname
     * @var $filesName string
     */
    protected $filesName;

    /**
     * @link http://php.net/manual/en/class.mongogridfs.php#mongogridfs.props.chunksname
     * @var $chunksName string
     */
    protected $chunksName;



    /**
     * Files as stored across two collections, the first containing file meta
     * information, the second containing chunks of the actual file. By default,
     * fs.files and fs.chunks are the collection names used.
     *
     * @link http://php.net/manual/en/mongogridfs.construct.php
     * @param MongoDB $db Database
     * @param string $prefix [optional] <p>Optional collection name prefix.</p>
     * @param mixed $chunks  [optional]
     * @return MongoGridFS
     */
    public function __construct($db, $prefix = "fs", $chunks = "fs") {}

/**
*<div id="mongogridfs.drop" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::drop</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFS::drop</span> &mdash; <span class="dc-title">Drops the files and chunks collections</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.drop-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoGridFS::drop</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.drop-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.drop-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The database response.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
     * @return array The database response*/
    public function drop() {}

/**
*<div id="mongogridfs.find" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::find</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFS::find</span> &mdash; <span class="dc-title">Queries for files</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.find-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongogridfscursor.php" class="type MongoGridFSCursor">MongoGridFSCursor</a></span> <span class="methodname"><strong>MongoGridFS::find</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>   ]] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.find-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">query</code>      </dt>       <dd>        <p class="para">        The query.       </p>      </dd>                 <dt>        <code class="parameter">fields</code>      </dt>       <dd>        <p class="para">        Fields to return.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.find-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    A <a href="http://php.net/manual/zh/class.mongogridfscursor.php" class="classname">MongoGridFSCursor</a>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
     * @return MongoGridFSCursor A MongoGridFSCursor*/
    public function find(array $query = array(), array $fields = array()) {}

/**
*<div id="mongogridfs.storefile" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::storeFile</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFS::storeFile</span> &mdash; <span class="dc-title">Stores a file in the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.storefile-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>MongoGridFS::storeFile</strong></span>     ( <span class="methodparam"><span class="type"><span class="type string|resource">string|resource</span></span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.storefile-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">filename</code>      </dt>       <dd>        <p class="para">        Name of the file or a readable stream to store.       </p>      </dd>                 <dt>        <code class="parameter">metadata</code>      </dt>       <dd>        <p class="para">        Other metadata fields to include in the file document.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">These fields may also overwrite those that would be created automatically by the driver, as described in the MongoDB core documentation for the <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/#the-files-collection" class="link external">&raquo;&nbsp;files collection</a>. Some practical use cases for this behavior would be to specify a custom <em>chunkSize</em> or <em>_id</em> for the file.</p></p></blockquote>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the insert operations executed against the        <em>chunks</em> and <em>files</em> collections. See        <span class="function">{@link MongoCollection::insert()}</span> for documentation on these        these options.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.storefile-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns the <em>_id</em> of the saved file document. This will be a generated <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> unless an <em>_id</em> was explicitly specified in the <code class="parameter">extra</code> parameter.</p>  </div>    <div class="refsect1 errors" id="refsect1-mongogridfs.storefile-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongogridfsexception.php" class="classname">MongoGridFSException</a> if there is an error    reading <code class="parameter">filename</code> or inserting into the    <em>chunks</em> or <em>files</em> collections.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongogridfs.storefile-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1615">    <p><strong>Example #1 <span class="function"><strong>MongoGridFS::storeFile()</strong></span> with additional metadata</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$gridfs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$id&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$gridfs</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.txt'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'contentType'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'plain/text'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$gridfsFile&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$gridfs</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">$id</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$gridfsFile</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(7) {   [&quot;_id&quot;]=&gt;   object(MongoId)#6 (0) {   }   [&quot;contentType&quot;]=&gt;   string(10) &quot;plain/text&quot;   [&quot;filename&quot;]=&gt;   string(11) &quot;example.txt&quot;   [&quot;uploadDate&quot;]=&gt;   object(MongoDate)#7 (0) {   }   [&quot;length&quot;]=&gt;   int(26)   [&quot;chunkSize&quot;]=&gt;   int(262144)   [&quot;md5&quot;]=&gt;   string(32) &quot;c3fcd3d76192e4007dfb496cca67e13b&quot; } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongogridfs.storefile-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoGridFS::put()} - Stores a file in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeBytes()} - Stores a string of bytes in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeUpload()} - Stores an uploaded file in the database</span></li>    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/" class="link external">&raquo;&nbsp;GridFS</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
     * @return mixed Returns the _id of the saved object*/
    public function storeFile($filename, $extra = array(), $options = array()) {}

/**
*<div id="mongogridfs.storebytes" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::storeBytes</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.2)</p><p class="refpurpose"><span class="refname">MongoGridFS::storeBytes</span> &mdash; <span class="dc-title">Stores a string of bytes in the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.storebytes-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>MongoGridFS::storeBytes</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$bytes</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.storebytes-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">bytes</code>      </dt>       <dd>        <p class="para">        String of bytes to store.       </p>      </dd>                 <dt>        <code class="parameter">metadata</code>      </dt>       <dd>        <p class="para">        Other metadata fields to include in the file document.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">These fields may also overwrite those that would be created automatically by the driver, as described in the MongoDB core documentation for the <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/#the-files-collection" class="link external">&raquo;&nbsp;files collection</a>. Some practical use cases for this behavior would be to specify a custom <em>chunkSize</em> or <em>_id</em> for the file.</p></p></blockquote>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the insert operations executed against the        <em>chunks</em> and <em>files</em> collections. See        <span class="function">{@link MongoCollection::insert()}</span> for documentation on these        these options.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.storebytes-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns the <em>_id</em> of the saved file document. This will be a generated <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> unless an <em>_id</em> was explicitly specified in the <code class="parameter">extra</code> parameter.</p>  </div>    <div class="refsect1 errors" id="refsect1-mongogridfs.storebytes-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongogridfsexception.php" class="classname">MongoGridFSException</a> if there is an error    inserting into the <em>chunks</em> or <em>files</em>    collections.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongogridfs.storebytes-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1614">    <p><strong>Example #1 <span class="function"><strong>MongoGridFS::storeBytes()</strong></span> with additional metadata</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$gridfs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$bytes&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'abcdefghijklmnopqrstuvwxyz'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$id&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$gridfs</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeBytes</span><span style="color: #007700">(</span><span style="color: #9876AA">$bytes</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'alphabet'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$gridfsFile&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$gridfs</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">$id</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$gridfsFile</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> array(7) {   [&quot;_id&quot;]=&gt;   string(8) &quot;alphabet&quot;   [&quot;uploadDate&quot;]=&gt;   object(MongoDate)#7 (0) {   }   [&quot;length&quot;]=&gt;   int(26)   [&quot;chunkSize&quot;]=&gt;   int(262144)   [&quot;md5&quot;]=&gt;   string(32) &quot;c3fcd3d76192e4007dfb496cca67e13b&quot; } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongogridfs.storebytes-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoGridFS::put()} - Stores a file in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeFile()} - Stores a file in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeUpload()} - Stores an uploaded file in the database</span></li>    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/" class="link external">&raquo;&nbsp;GridFS</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
     * @return mixed The _id of the object saved*/
    public function storeBytes($bytes, $extra = array(), $options = array()) {}

    /**
	 * Returns a single file matching the criteria
	 * @link http://www.php.net/manual/en/mongogridfs.findone.php
	 * @param array $query The fields for which to search.
	 * @param array $fields Fields of the results to return.
	 * @return MongoGridFSFile|null
	 */
/**
*<div id="mongogridfs.findone" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::findOne</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFS::findOne</span> &mdash; <span class="dc-title">Returns a single file matching the criteria</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.findone-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongogridfsfile.php" class="type MongoGridFSFile">MongoGridFSFile</a></span> <span class="methodname"><strong>MongoGridFS::findOne</strong></span>     ([ <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$query</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$fields</code><span class="initializer"> = array()</span></span>   ]] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.findone-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">query</code>      </dt>       <dd>        <p class="para">        The filename or criteria for which to search.       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.findone-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns a <a href="http://php.net/manual/zh/class.mongogridfsfile.php" class="classname">MongoGridFSFile</a> or <strong><code>NULL</code></strong>.   </p>  </div>     <div class="refsect1 examples" id="refsect1-mongogridfs.findone-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1613">    <p><strong>Example #1 <span class="methodname"><strong>MongoGridFS::findOne()</strong></span> example</strong></p>    <div class="example-contents"><p>     Example demonstrating how to find a single file from the MongoGridFS.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$downloads&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mongo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">(</span><span style="color: #DD0000">'downloads'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$downloads</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'filename.tgz'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$download&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$downloads</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(</span><span style="color: #DD0000">'filename.tgz'</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;instance&nbsp;of&nbsp;MongoGridFSFile<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$download</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>     See <a href="http://php.net/manual/zh/class.mongogridfsfile.php" class="classname">MongoGridFSFile</a> for more information about how to work with files.    </p></div>    <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> MongoGridFSFile Object (     [file] =&gt; Array         (             [_id] =&gt; MongoId Object                 (                 )              [filename] =&gt; filename.tgz             [uploadDate] =&gt; MongoDate Object                 (                     [sec] =&gt; 1274288014                     [usec] =&gt; 467000                 )              [chunkSize] =&gt; 262144             [md5] =&gt; d41d8cd98f00b204e9800998ecf8427e         )      [gridfs:protected] =&gt; MongoGridFS Object         (             [chunks] =&gt; MongoCollection Object                 (                 )              [filesName:protected] =&gt; downloads.files             [chunksName:protected] =&gt; downloads.chunks         )  ) </pre></div>    </div>   </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
*/
    public function findOne(array $query = array(), array $fields = array()) {}

    /**
	 * Removes files from the collections
	 * @link http://www.php.net/manual/en/mongogridfs.remove.php
	 * @param array $criteria Description of records to remove.
	 * @param array $options Options for remove. Valid options are: "safe"- Check that the remove succeeded.
	 * @throws MongoCursorException
	 * @return boolean
	 */
/**
*<div id="mongogridfs.remove" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::remove</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFS::remove</span> &mdash; <span class="dc-title">Remove files and their chunks from the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.remove-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type bool|array">bool|array</span></span> <span class="methodname"><strong>MongoGridFS::remove</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$criteria</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.remove-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">criteria</code>      </dt>       <dd>        <p class="para">        The filename or criteria for which to search.       </p>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the remove operations executed against the        <em>chunks</em> and <em>files</em> collections. See        <span class="function">{@link MongoCollection::remove()}</span> for documentation on these        options.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.remove-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array containing the status of the removal (with respect to the    <em>files</em> collection) if the <em>&quot;w&quot;</em> option is    set. Otherwise, returns <strong><code>TRUE</code></strong>.   </p>   <p class="para">    Fields in the status array are described in the documentation for    <span class="function">{@link MongoCollection::insert()}</span>.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongogridfs.remove-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
*/
    public function remove(array $criteria = array(), array $options = array()) {}

/**
*<div id="mongogridfs.delete" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::delete</h1>   <p class="verinfo">(PECL mongo &gt;=1.0.8)</p><p class="refpurpose"><span class="refname">MongoGridFS::delete</span> &mdash; <span class="dc-title">Remove a file and its chunks from the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.delete-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><span class="type bool|array">bool|array</span></span> <span class="methodname"><strong>MongoGridFS::delete</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$id</code></span>    )</div>     <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     <span class="methodname"><strong>MongoGridFS::delete()</strong></span> is a convenience method for     calling <span class="methodname">{@link MongoGridFS::remove()}</span> with specific     <code class="parameter">criteria</code> and default <code class="parameter">options</code>     parameters.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.delete-parameters">  <h3 class="title">参数</h3>  <p class="para">   <dl>          <dt>       <code class="parameter">id</code>     </dt>      <dd>       <p class="para">       <em>_id</em> of the file to remove.      </p>     </dd>           </dl>   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.delete-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns an array containing the status of the removal (with respect to the    <em>files</em> collection) if a    <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="link">write concern</a> is applied.    Otherwise, returns <strong><code>TRUE</code></strong>.   </p>   <p class="para">    Fields in the status array are described in the documentation for    <span class="function">{@link MongoCollection::insert()}</span>.   </p>  </div>    <div class="refsect1 errors" id="refsect1-mongogridfs.delete-errors">   <h3 class="title">错误／异常</h3>   <p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a> if the &quot;w&quot; option is set and the write fails.</p><p class="para">Throws <a href="http://php.net/manual/zh/class.mongocursortimeoutexception.php" class="classname">MongoCursorTimeoutException</a> if the &quot;w&quot; option is set to a value greater than one and the operation takes longer than <var class="varname"><var class="varname">MongoCursor::$timeout</var></var> milliseconds to complete.  This does not kill the operation on the server, it is a client-side timeout. The operation in <em>MongoCollection::$wtimeout</em> is milliseconds.</p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
     * @return boolean Returns true if the remove was successfully sent to the database.*/
    public function delete($id) {}

    /**
	 * Saves an uploaded file directly from a POST to the database
	 * @link http://www.php.net/manual/en/mongogridfs.storeupload.php
	 * @param string $name The name attribute of the uploaded file, from <input type="file" name="something"/>.
	 * @param array $metadata An array of extra fields for the uploaded file.
	 * @return mixed Returns the _id of the uploaded file.
	 */
/**
*<div id="mongogridfs.storeupload" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::storeUpload</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFS::storeUpload</span> &mdash; <span class="dc-title">Stores an uploaded file in the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.storeupload-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>MongoGridFS::storeUpload</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code></span>   ] )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.storeupload-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">name</code>      </dt>       <dd>        <p class="para">        The name of the uploaded file(s) to store. This should correspond to the        file field&#039;s <em>name</em> attribute in the HTML form.       </p>      </dd>                 <dt>        <code class="parameter">metadata</code>      </dt>       <dd>        <p class="para">        Other metadata fields to include in the file document.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">These fields may also overwrite those that would be created automatically by the driver, as described in the MongoDB core documentation for the <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/#the-files-collection" class="link external">&raquo;&nbsp;files collection</a>. Some practical use cases for this behavior would be to specify a custom <em>chunkSize</em> or <em>_id</em> for the file.</p></p></blockquote>       <blockquote class="note"><p><strong class="note">Note</strong>:         <p class="para">         The <em>filename</em> field will be populated with the         client&#039;s filename (e.g. <em>$_FILES[&#039;foo&#039;][&#039;name&#039;]</em>).        </p>       </p></blockquote>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.storeupload-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns the <em>_id</em> of the saved file document. This will be a generated <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> unless an <em>_id</em> was explicitly specified in the <code class="parameter">extra</code> parameter.</p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     If <a href="http://php.net/manual/zh/features.file-upload.multiple.php" class="link">multiple files are uploaded     using the same field name</a>, this method will not return anything;     however, the files themselves will still be processed.    </p>   </p></blockquote>  </div>    <div class="refsect1 errors" id="refsect1-mongogridfs.storeupload-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongogridfsexception.php" class="classname">MongoGridFSException</a> if there is an error    reading the uploaded file(s) or inserting into the <em>chunks</em>    or <em>files</em> collections.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongogridfs.storeupload-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.5</td>        <td>         Changed second parameter to an array of metadata. Pre-1.2.5, the         second parameter was an optional string overriding the filename.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongogridfs.storeupload-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1616">    <p><strong>Example #1 <span class="function"><strong>MongoGridFS::storeUpload()</strong></span> HTML form example</strong></p>    <div class="example-contents"><p>     Suppose you have the following HTML form:    </p></div>    <div class="example-contents"> <div class="htmlcode"><pre class="htmlcode">&lt;form method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;     &lt;label for=&quot;username&quot;&gt;Username:&lt;/label&gt;     &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; /&gt;      &lt;label for=&quot;pic&quot;&gt;Please upload a profile picture:&lt;/label&gt;     &lt;input type=&quot;file&quot; name=&quot;pic&quot; id=&quot;pic&quot; /&gt;      &lt;input type=&quot;submit&quot; /&gt; &lt;/form&gt;</pre> </div>    </div>     <div class="example-contents"><p>     If you wanted to store the uploaded image in MongoDB, you could do the     following in the script handling the form submission:    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$gridfs&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectDB</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$gridfs</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">storeUpload</span><span style="color: #007700">(</span><span style="color: #DD0000">'pic'</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">'username'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'username'</span><span style="color: #007700">]));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongogridfs.storeupload-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoGridFS::put()} - Stores a file in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeBytes()} - Stores a string of bytes in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeFile()} - Stores a file in the database</span></li>    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/" class="link external">&raquo;&nbsp;GridFS</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
*/
    public function storeUpload($name, array $metadata = array()) {}


    /**
	* Retrieve a file from the database
	* @link http://www.php.net/manual/en/mongogridfs.get.php
/**
*<div id="mongogridfs.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::get</h1>   <p class="verinfo">(PECL mongo &gt;=1.0.8)</p><p class="refpurpose"><span class="refname">MongoGridFS::get</span> &mdash; <span class="dc-title">Retrieve a file from the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongogridfsfile.php" class="type MongoGridFSFile">MongoGridFSFile</a></span> <span class="methodname"><strong>MongoGridFS::get</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$id</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.get-parameters">  <h3 class="title">参数</h3>  <p class="para">   <dl>          <dt>       <code class="parameter">id</code>     </dt>      <dd>       <p class="para">       <em>_id</em> of the file to find.      </p>     </dd>           </dl>   </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.get-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the file, if found, or <strong><code>NULL</code></strong>.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
    * @return MongoGridFSFile|null Returns the file, if found, or NULL.*/
    public function get($id) {}

/**
*<div id="mongogridfs.put" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFS::put</h1>   <p class="verinfo">(PECL mongo &gt;=1.0.8)</p><p class="refpurpose"><span class="refname">MongoGridFS::put</span> &mdash; <span class="dc-title">Stores a file in the database</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfs.put-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>MongoGridFS::put</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$metadata</code><span class="initializer"> = array()</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code><span class="initializer"> = array()</span></span>   ]] )</div>     <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     <span class="methodname"><strong>MongoGridFS::put()</strong></span> is an alias of <span class="methodname">{@link MongoGridFS::storeFile()}</span>.    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-mongogridfs.put-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">filename</code>      </dt>       <dd>        <p class="para">        Name of the file to store.       </p>      </dd>                 <dt>        <code class="parameter">metadata</code>      </dt>       <dd>        <p class="para">        Other metadata fields to include in the file document.       </p>       <blockquote class="note"><p><strong class="note">Note</strong>: <p class="para">These fields may also overwrite those that would be created automatically by the driver, as described in the MongoDB core documentation for the <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/#the-files-collection" class="link external">&raquo;&nbsp;files collection</a>. Some practical use cases for this behavior would be to specify a custom <em>chunkSize</em> or <em>_id</em> for the file.</p></p></blockquote>      </dd>                 <dt>        <code class="parameter">options</code>      </dt>       <dd>        <p class="para">        An array of options for the insert operations executed against the        <em>chunks</em> and <em>files</em> collections. See        <span class="function">{@link MongoCollection::insert()}</span> for documentation on these        these options.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfs.put-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">Returns the <em>_id</em> of the saved file document. This will be a generated <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> unless an <em>_id</em> was explicitly specified in the <code class="parameter">extra</code> parameter.</p>  </div>    <div class="refsect1 errors" id="refsect1-mongogridfs.put-errors">   <h3 class="title">错误／异常</h3>   <p class="para">    Throws <a href="http://php.net/manual/zh/class.mongogridfsexception.php" class="classname">MongoGridFSException</a> if there is an error    reading <code class="parameter">filename</code> or inserting into the    <em>chunks</em> or <em>files</em> collections.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-mongogridfs.put-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link MongoGridFS::storeBytes()} - Stores a string of bytes in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeFile()} - Stores a file in the database</span></li>    <li class="member"><span class="function">{@link MongoGridFS::storeUpload()} - Stores an uploaded file in the database</span></li>    <li class="member">MongoDB core docs on <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/core/gridfs/" class="link external">&raquo;&nbsp;GridFS</a></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfs.php">MongoGridFS</a></div></div>
     * @return mixed Returns the _id of the saved object*/
    public function put($filename, array $extra = array()) {}

}

/**
*<div id="class.mongogridfsfile" class="reference">   <h1 class="title">The MongoGridFSFile class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>     <div class="section" id="mongogridfsfile.intro">    <h2 class="title">简介</h2>    <p class="para">     A database file object.    </p>   </div>     <div class="section" id="mongogridfsfile.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoGridFSFile</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">array</span>       <var class="varname">$<var class="varname">file</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type"><a href="http://php.net/manual/zh/class.mongogridfs.php" class="type MongoGridFS">MongoGridFS</a></span>       <var class="varname">$<var class="varname">gridfs</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname">{@link MongoGridfsFile::__construct}</span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongogridfs.php" class="type MongoGridFS">MongoGridFS</a></span> <code class="parameter">$gridfs</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$file</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfsfile.getbytes.php" class="methodname">getBytes</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfsfile.getfilename.php" class="methodname">getFilename</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">resource</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfsfile.getresource.php" class="methodname">getResource</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfsfile.getsize.php" class="methodname">getSize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfsfile.write.php" class="methodname">write</a></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>   ] )</div>     }</div>     </div>   </div>                                               <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoGridfsFile::__construct} — Create a new GridFS file</li><li>{@link MongoGridFSFile::getBytes} — Returns this file's contents as a string of bytes</li><li>{@link MongoGridFSFile::getFilename} — Returns this file's filename</li><li>{@link MongoGridFSFile::getResource} — Returns a resource that can be used to read the stored file</li><li>{@link MongoGridFSFile::getSize} — Returns this file's size</li><li>{@link MongoGridFSFile::write} — Writes this file to the filesystem</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.gridfs.php">GridFS Classes</a></div></div>
*/
class MongoGridFSFile {
    /**
    * @link http://php.net/manual/en/class.mongogridfsfile.php#mongogridfsfile.props.file
    * @var $file
    */
    public $file;

    /**
    * @link http://php.net/manual/en/class.mongogridfsfile.php#mongogridfsfile.props.gridfs
    * @var $gridfs
    */
    protected $gridfs;

    /**
     * @link http://php.net/manual/en/mongogridfsfile.construct.php
     * @param MongoGridFS $gridfs The parent MongoGridFS instance
     * @param array $file A file from the database
     * @return MongoGridFSFile Returns a new MongoGridFSFile
     */
    public function __construct($gridfs, array $file) {}

/**
*<div id="mongogridfsfile.getfilename" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSFile::getFilename</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFSFile::getFilename</span> &mdash; <span class="dc-title">Returns this file&#039;s filename</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongogridfsfile.getfilename-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>MongoGridFSFile::getFilename</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>   <div class="refsect1 parameters" id="refsect1-mongogridfsfile.getfilename-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>   <div class="refsect1 returnvalues" id="refsect1-mongogridfsfile.getfilename-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns the filename.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongogridfsfile.php">MongoGridFSFile</a></div></div>
     * @return string Returns the filename*/
    public function getFilename() {}

/**
*<div id="mongogridfsfile.getsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSFile::getSize</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFSFile::getSize</span> &mdash; <span class="dc-title">Returns this file&#039;s size</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongogridfsfile.getsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoGridFSFile::getSize</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>   <div class="refsect1 parameters" id="refsect1-mongogridfsfile.getsize-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>   <div class="refsect1 returnvalues" id="refsect1-mongogridfsfile.getsize-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns this file&#039;s size   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongogridfsfile.php">MongoGridFSFile</a></div></div>
     * @return int Returns this file's size*/
    public function getSize() {}

/**
*<div id="mongogridfsfile.write" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSFile::write</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFSFile::write</span> &mdash; <span class="dc-title">Writes this file to the filesystem</span></p>   </div>  <div class="refsect1 description" id="refsect1-mongogridfsfile.write-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoGridFSFile::write</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>   ] )</div>   </div>   <div class="refsect1 parameters" id="refsect1-mongogridfsfile.write-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">filename</code>      </dt>       <dd>        <p class="para">        The location to which to write the file.  If none is given,        the stored filename will be used.       </p>      </dd>             </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-mongogridfsfile.write-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the number of bytes written.   </p>  </div>     <div class="refsect1 examples" id="refsect1-mongogridfsfile.write-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1619">    <p><strong>Example #1 <span class="methodname"><strong>MongoGridFSFile::write()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$images&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">(</span><span style="color: #DD0000">'images'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$images</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(</span><span style="color: #DD0000">'jwage.png'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/write/jwage.png'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongogridfsfile.php">MongoGridFSFile</a></div></div>
     * @return int Returns the number of bytes written*/
    public function write($filename = null) {}

/**
*<div id="mongogridfsfile.getbytes" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSFile::getBytes</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFSFile::getBytes</span> &mdash; <span class="dc-title">Returns this file&#039;s contents as a string of bytes</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfsfile.getbytes-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>MongoGridFSFile::getBytes</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Warning: this will load the file into memory.  If the file is bigger than    your memory, this will cause problems!   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongogridfsfile.getbytes-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfsfile.getbytes-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns a string of the bytes in the file.   </p>  </div>     <div class="refsect1 examples" id="refsect1-mongogridfsfile.getbytes-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1617">    <p><strong>Example #1 <span class="methodname"><strong>MongoGridFSFile::getBytes()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$images&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">(</span><span style="color: #DD0000">'images'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$images</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(</span><span style="color: #DD0000">'jwage.png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type:&nbsp;image/png;'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBytes</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfsfile.php">MongoGridFSFile</a></div></div>
     * @return string Returns a string of the bytes in the file*/
    public function getBytes() {}

/**
*<div id="mongogridfsfile.getresource" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSFile::getResource</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoGridFSFile::getResource</span> &mdash; <span class="dc-title">Returns a resource that can be used to read the stored file</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfsfile.getresource-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">resource</span> <span class="methodname"><strong>MongoGridFSFile::getResource</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This method returns a stream resource that can be used with all file    functions in PHP that deal with reading files. The contents of the file are    pulled out of MongoDB on the fly, so that the whole file does not have to    be loaded into memory first.   </p>   <p class="para">    At most two GridFSFile chunks will be loaded in memory.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongogridfsfile.getresource-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfsfile.getresource-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns a resource that can be used to read the file with   </p>  </div>     <div class="refsect1 examples" id="refsect1-mongogridfsfile.getresource-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1618">    <p><strong>Example #1 <span class="methodname"><strong>MongoGridFSFile::getResource()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$m&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$images&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$m</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">my_db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getGridFS</span><span style="color: #007700">(</span><span style="color: #DD0000">'images'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$images</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">(</span><span style="color: #DD0000">'mongo.png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type:&nbsp;image/png;'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stream&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getResource</span><span style="color: #007700">();<br /><br />while&nbsp;(!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">8192</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfsfile.php">MongoGridFSFile</a></div></div>
     * @return resource Returns a resource that can be used to read the file with*/
    public function getResource() {}
}

/**
*<div id="class.mongogridfscursor" class="reference">   <h1 class="title">The MongoGridFSCursor class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>     <div class="section" id="mongogridfscursor.intro">    <h2 class="title">简介</h2>    <p class="para">     Cursor for database file results.    </p>   </div>     <div class="section" id="mongogridfscursor.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongocursor.php" class="classname">MongoCursor</a>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type"><a href="http://php.net/manual/zh/class.mongogridfs.php" class="type MongoGridFS">MongoGridFS</a></span>       <var class="varname">$<var class="varname">gridfs</var></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfscursor.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongogridfs.php" class="type MongoGridFS">MongoGridFS</a></span> <code class="parameter">$gridfs</code></span>    , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ns</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoGridFSFile</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfscursor.current.php" class="methodname">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">MongoGridFSFile</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfscursor.getnext.php" class="methodname">getNext</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongogridfscursor.key.php" class="methodname">key</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>   </div>                                 <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoGridFSCursor::__construct} — Create a new cursor</li><li>{@link MongoGridFSCursor::current} — Returns the current file</li><li>{@link MongoGridFSCursor::getNext} — Return the next file to which this cursor points, and advance the cursor</li><li>{@link MongoGridFSCursor::key} — Returns the current result's filename</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.gridfs.php">GridFS Classes</a></div></div>
*/
class MongoGridFSCursor extends MongoCursor implements Traversable, Iterator {
    /**
    * @static
    * @var $slaveOkay
    */
    public static $slaveOkay;

    /**
    * @link http://php.net/manual/en/class.mongogridfscursor.php#mongogridfscursor.props.gridfs
    * @var $gridfs
    */
    protected $gridfs;

    /**
     * Create a new cursor
     * @link http://php.net/manual/en/mongogridfscursor.construct.php
     * @param MongoGridFS $gridfs Related GridFS collection
     * @param resource $connection Database connection
     * @param string $ns Full name of database and collection
     * @param array $query Database query
     * @param array $fields Fields to return
     * @return MongoGridFSCursor Returns the new cursor
     */
    public function __construct($gridfs, $connection, $ns, $query, $fields) {}

/**
*<div id="mongogridfscursor.getnext" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSCursor::getNext</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFSCursor::getNext</span> &mdash; <span class="dc-title">Return the next file to which this cursor points, and advance the cursor</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfscursor.getnext-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongogridfsfile.php" class="type MongoGridFSFile">MongoGridFSFile</a></span> <span class="methodname"><strong>MongoGridFSCursor::getNext</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfscursor.getnext-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfscursor.getnext-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    Returns the next file.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongogridfscursor.php">MongoGridFSCursor</a></div></div>
    * @return MongoGridFSFile Returns the next file*/
    public function getNext() {}

/**
*<div id="mongogridfscursor.current" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSCursor::current</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFSCursor::current</span> &mdash; <span class="dc-title">Returns the current file</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfscursor.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.mongogridfsfile.php" class="type MongoGridFSFile">MongoGridFSFile</a></span> <span class="methodname"><strong>MongoGridFSCursor::current</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfscursor.current-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfscursor.current-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    The current file.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongogridfscursor.php">MongoGridFSCursor</a></div></div>
    * @return MongoGridFSFile The current file*/
    public function current() {}

/**
*<div id="mongogridfscursor.key" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoGridFSCursor::key</h1>   <p class="verinfo">(PECL mongo &gt;=0.9.0)</p><p class="refpurpose"><span class="refname">MongoGridFSCursor::key</span> &mdash; <span class="dc-title">Returns the current result&#039;s filename</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongogridfscursor.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><strong>MongoGridFSCursor::key</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongogridfscursor.key-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongogridfscursor.key-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    The current result&#039;s _id as a string.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongogridfscursor.key-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.3.0</td>        <td>         The document&#039;s <em>_id</em> is returned as a string value,         since the key should be unique. Pre-1.3.0, <em>filename</em>         was returned.        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongogridfscursor.php">MongoGridFSCursor</a></div></div>
    * @return string The current results filename*/
    public function key() {}

}

/**
*<div id="class.mongoid" class="reference">   <h1 class="title">MongoId 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.8.0)</p>     <div class="section" id="mongoid.intro">    <h2 class="title">简介</h2>    <p class="para">     为数据库对象创建的唯一标识符。     如果插入数据库的对象不具有 _id 字段，将会为 _id      字段添加一个 <strong class="classname">MongoId</strong> 实例作为值。     如果数据具有自然的唯一字段（比如说，用户名或 timestamp），用来作为 _id 字段也不错，它不会被     一个 <strong class="classname">MongoId</strong> 替换。    </p>    <p class="para">     <strong class="classname">MongoId</strong> 类实例满足了关系数据库中自增列的角色：     如果数据不具有天然的唯一键，则提供一个。     自增列在分布式数据库中不会工作得很好，因为它无法快速找到下一个数字。     这个类能够满足在分布式下快速产生唯一值的条件。    </p>    <p class="para">     每个 MongoId 具有 12 个字节（使它的字符串形式是 24 个十六进制字符）。     前四个字节是一个时间戳（timestamp），后三个是客户端主机名的 hash 摘要，然后两个是运行脚本的进程 ID，     最后三位是一个自增值。    </p>    <p class="para">     <strong class="classname">MongoId</strong> 是可以序列化/反序列化的。     它们序列化后的格式和它们的字符串格式比较像：     <div class="example-contents screen"> <div class="cdata"><pre> C:7:&quot;MongoId&quot;:24:{4af9f23d8ead0e1d32000000} </pre></div>     </div>    </p>   </div>     <div class="section" id="mongoid.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoId</strong>      </span>      {</div>       <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongoid.php#mongoid.props.id">$<var class="varname">id</var></a></var>      <span class="initializer"> = <strong><code>NULL</code></strong></span>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type"><span class="type string|MongoId">string|MongoId</span></span> <code class="parameter">$id</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.gethostname.php" class="methodname">getHostname</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.getinc.php" class="methodname">getInc</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.getpid.php" class="methodname">getPID</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.gettimestamp.php" class="methodname">getTimestamp</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.isvalid.php" class="methodname">isValid</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">MongoId</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.set-state.php" class="methodname">__set_state</a></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$props</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoid.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>    <div class="section">    <h2 class="title">Fields</h2>    <dl>            <dt id="mongoid.props.id"><var class="varname"><var class="varname">id</var></var></dt>       <dd>        <span class="simpara">        这个字段包含了该对象的字符串表达形式。       </span>      </dd>          </dl>    </div>    <div class="section">    <h2 class="title">参见</h2>    <p class="para">     关于 <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/object-id/" class="link external">&raquo;&nbsp;ids</a> 的 MongoDB 核心文档。    </p>   </div>  </div>                                                                           <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoId::__construct} — 创建一个新的id</li><li>{@link MongoId::getHostname} — 获取这台机器上 id 所使用的 hostname</li><li>{@link MongoId::getInc} — 返回用于创建 id 所增加的值</li><li>{@link MongoId::getPID} — 获取进程 ID</li><li>{@link MongoId::getTimestamp} — 获取新纪元时间到 id 创建时的秒数。</li><li>{@link MongoId::isValid} — Check if a value is a valid ObjectId</li><li>{@link MongoId::__set_state} — 创建一个假的 MongoId</li><li>{@link MongoId::__toString} — 返回该 id 十六进制的表示形式</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoId {
    /**
     * @var string $id <p> Note: The property name begins with a $ character. It may be accessed using
     * {@link http://php.net/manual/en/language.types.string.php#language.types.string.parsing.complex complex variable parsed syntax} (e.g. $mongoId->{'$id'}).</p>
     */
     public $id = NULL;

    /**
     * (PECL mongo &gt;= 0.8.0)
	 * Creates a new id
	 * @link http://www.php.net/manual/en/mongoid.construct.php
	 * @param string $id [optional] A string to use as the id. Must be 24 hexidecimal characters. If an invalid string is passed to this constructor, the constructor will ignore it and create a new id value.
	 * @return MongoId <p>Returns a new id.</p>
     */
    public function __construct($id = NULL) {}

/**
*<div id="mongoid.isvalid" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoId::isValid</h1>   <p class="verinfo">(PECL mongo &gt;= 1.5.0)</p><p class="refpurpose"><span class="refname">MongoId::isValid</span> &mdash; <span class="dc-title">Check if a value is a valid ObjectId</span></p>   </div>   <div id="mongoid.isvalid-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>   </blockquote>  </div>   <div class="refsect1 description" id="refsect1-mongoid.isvalid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>MongoId::isValid</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$value</code></span>    )</div>    <p class="para rdfs-comment">    This method may be used to check a variable before passing it as an argument    to <span class="function">{@link MongoId::__construct()}</span>.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongoid.isvalid-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">value</code>      </dt>       <dd>        <p class="para">        The value to check for validity.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoid.isvalid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if <code class="parameter">value</code> is a    <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> instance or a string consisting of exactly 24    hexadecimal characters; otherwise, <strong><code>FALSE</code></strong> is returned.   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoid.php">MongoId</a></div></div>
     * @return bool <p>*/
    public static function isValid($value) {}
   /**
    * (PECL mongo &gt;= 0.8.0)
	* Returns a hexidecimal representation of this id
	* @link http://www.php.net/manual/en/mongoid.tostring.php
    * @return string This id.
    */
    public function __toString() {}

/**
*<div id="mongoid.getinc" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoId::getInc</h1>   <p class="verinfo">(PECL mongo &gt;= 1.0.11)</p><p class="refpurpose"><span class="refname">MongoId::getInc</span> &mdash; <span class="dc-title">返回用于创建 id 所增加的值</span></p>   </div>   <div id="mongoid.getinc-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>   </blockquote>  </div>   <div class="refsect1 description" id="refsect1-mongoid.getinc-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoId::getInc</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoid.getinc-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoid.getinc-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回增加的值，用于创建 <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoid.php">MongoId</a></div></div>
     * @return int Returns the incremented value used to create this MongoId.*/
    public function getInc() {}

/**
*<div id="mongoid.getpid" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoId::getPID</h1>   <p class="verinfo">(PECL mongo &gt;= 1.0.11)</p><p class="refpurpose"><span class="refname">MongoId::getPID</span> &mdash; <span class="dc-title">获取进程 ID</span></p>   </div>    <div id="mongoid.getpid-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>   </blockquote>  </div>   <div class="refsect1 description" id="refsect1-mongoid.getpid-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoId::getPID</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    从 Mongo ID 中提取 pid。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongoid.getpid-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoid.getpid-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> 里的 PID。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoid.php">MongoId</a></div></div>
     * @return int Returns the PID of the MongoId.*/
    public function getPID() {}

   /**
    * (PECL mongo &gt;= 1.0.1)
	* Gets the number of seconds since the epoch that this id was created
	* @link http://www.php.net/manual/en/mongoid.gettimestamp.php
/**
*<div id="mongoid.gettimestamp" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoId::getTimestamp</h1>   <p class="verinfo">(PECL mongo &gt;= 1.0.1)</p><p class="refpurpose"><span class="refname">MongoId::getTimestamp</span> &mdash; <span class="dc-title">获取新纪元时间到 id 创建时的秒数。</span></p>   </div>   <div id="mongoid.gettimestamp-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>   </blockquote>  </div>    <div class="refsect1 description" id="refsect1-mongoid.gettimestamp-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><strong>MongoId::getTimestamp</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回 id 创建时运行 <span class="function">{@link time()}</span> 同样的东西。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongoid.gettimestamp-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoid.gettimestamp-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    获取新纪元时间到 id 创建时的秒数。    仅储存了四个字节的时间戳，所以 <a href="http://php.net/manual/zh/class.mongodate.php" class="classname">MongoDate</a> 是储存更精准、更广范围时间的更佳选择。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoid.php">MongoId</a></div></div>
    * @return int*/
    public function getTimestamp() {}

/**
*<div id="mongoid.gethostname" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoId::getHostname</h1>   <p class="verinfo">(PECL mongo &gt;= 1.0.8)</p><p class="refpurpose"><span class="refname">MongoId::getHostname</span> &mdash; <span class="dc-title">获取这台机器上 id 所使用的 hostname</span></p>   </div>   <div id="mongoid.gethostname-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this method in the new extension.</p>   </blockquote>  </div>   <div class="refsect1 description" id="refsect1-mongoid.gethostname-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">string</span> <span class="methodname"><strong>MongoId::getHostname</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    返回的 hostname 用于 <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> 产生唯一 id。    这和    <span class="function">{@link gethostname()}</span> 应该会返回同样的值。   </p>   <p class="para">    它和以下函数是一样的：   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">public&nbsp;static&nbsp;function&nbsp;</span><span style="color: #9876AA">getHostname</span><span style="color: #007700">()&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #9876AA">gethostname</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>   </div>    <div class="refsect1 parameters" id="refsect1-mongoid.gethostname-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoid.gethostname-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回 hostname。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoid.php">MongoId</a></div></div>
     * @return string Returns the hostname.*/
    public static function getHostname() {}

    /**
     * (PECL mongo &gt;= 1.0.8)
     * Create a dummy MongoId
     * @link http://php.net/manual/en/mongoid.set-state.php
     * @param array $props <p>Theoretically, an array of properties used to create the new id. However, as MongoId instances have no properties, this is not used.</p>
     * @return MongoId A new id with the value "000000000000000000000000".
     */
    public static function __set_state(array $props) {}
}

/**
*<div id="class.mongocode" class="reference">   <h1 class="title">The MongoCode class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.8.3)</p>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this class include:</p>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongodb-bson-javascript.php" class="classname">MongoDB\BSON\JavaScript</a></li>    </ul>   </div>     <div class="section" id="mongocode.intro">    <h2 class="title">简介</h2>    <p class="para">     Represents JavaScript code for the database.    </p>    <p class="para">     MongoCode objects are composed of two parts: a string of code and an optional scope.  The string of code must be valid JavaScript.  The scope is a associative array of variable name/value pairs.    </p>   </div>     <div class="section" id="mongocode.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoCode</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocode.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$scope</code><span class="initializer"> = array()</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongocode.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>   </div>                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoCode::__construct} — 创建一个新的代码对象</li><li>{@link MongoCode::__toString} — 返回代码的字符串形式</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoCode {
    /**
    * @var $code
    */
    public $code;

    /**
    * @var $scope
    */
    public $scope;

    /**
     * .
     *
     * @link http://php.net/manual/en/mongocode.construct.php
     * @param string $code A string of code
     * @param array $scope The scope to use for the code
     * @return MongoCode Returns a new code object
     */
    public function __construct($code, array $scope = array()) {}

    /**
    * Returns this code as a string
    * @return string
    */
    public function __toString() {}
}

/**
*<div id="class.mongoregex" class="reference">   <h1 class="title">MongoRegex 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.8.1)</p>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this class include:</p>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongodb-bson-regex.php" class="classname">MongoDB\BSON\Regex</a></li>    </ul>   </div>     <div class="section" id="mongoregex.intro">    <h2 class="title">简介</h2>    <p class="para">     这个类用于创建一个正则表达式。     通常这些表达式用于查询数据库中匹配的字符串。不常用的是，它们可以保存到数据库并用于检索。    </p>    <p class="para">     正则表达式由四部分组成。     首先 <em>/</em> 作为起始的分隔符，然后是 pattern、另一个 <em>/</em>  以及最后包含 flag 的字符串。    </p>    <p class="para">     <div class="example" id="example-1605">      <p><strong>Example #1 正则表达式</strong></p>       <div class="example-contents screen"> <div class="cdata"><pre> /pattern/flags </pre></div>       </div>     </div>    </p>    <p class="para">     Mongo 能够识别六种正则表达式标记（flag）：    </p>    <ul class="itemizedlist">     <li class="listitem">      <p class="para">       <em>i</em>：大小写不敏感      </p>     </li>     <li class="listitem">      <p class="para">       <em>m</em>：多行      </p>     </li>     <li class="listitem">      <p class="para">       <em>x</em>：能够包含注释      </p>     </li>     <li class="listitem">      <p class="para">       <em>l</em>：语言环境      </p>     </li>     <li class="listitem">      <p class="para">       <em>s</em>：dotall，&quot;.&quot; 匹配任何字符，包括换行符。      </p>     </li>     <li class="listitem">      <p class="para">       <em>u</em>：匹配 Unicode      </p>     </li>    </ul>   </div>     <div class="section" id="mongoregex.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoRegex</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 字段 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname">$<var class="varname">regex</var></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname">$<var class="varname">flags</var></var>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoregex.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$regex</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoregex.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>   </div>                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoRegex::__construct} — 创建一个新的正则表达式</li><li>{@link MongoRegex::__toString} — 正则表达式的字符串表达形式</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoRegex {
    /**
     * @link http://php.net/manual/en/class.mongoregex.php#mongoregex.props.regex
     * @var $regex
     */
    public $regex;

    /**
     * @link http://php.net/manual/en/class.mongoregex.php#mongoregex.props.flags
     * @var $flags
     */
    public $flags;

    /**
     * Creates a new regular expression.
     *
     * @link http://php.net/manual/en/mongoregex.construct.php
     * @param string $regex Regular expression string of the form /expr/flags
     * @return MongoRegex Returns a new regular expression
     */
    public function __construct($regex) {}

    /**
    * Returns a string representation of this regular expression.
    * @return string This regular expression in the form "/expr/flags".
    */
    public function __toString() {}
}

/**
*<div id="class.mongodate" class="reference">   <h1 class="title">The MongoDate class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.8.1)</p>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this class include:</p>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongodb-bson-utcdatetime.php" class="classname">MongoDB\BSON\UTCDateTime</a></li>    </ul>   </div>     <div class="section" id="mongodate.intro">    <h2 class="title">简介</h2>    <p class="para">     Represent date objects for the database.  This class should be used to save     dates to the database and to query for dates.  For example:    </p>    <div class="example" id="example-1602">     <p><strong>Example #1 Storing dates with <strong class="classname">MongoDate</strong></strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;save&nbsp;a&nbsp;date&nbsp;to&nbsp;the&nbsp;database<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"ts"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">()));<br /><br /></span><span style="color: #9876AA">$start&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2010-01-15&nbsp;00:00:00"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$end&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2010-01-30&nbsp;00:00:00"</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">//&nbsp;find&nbsp;dates&nbsp;between&nbsp;1/15/2010&nbsp;and&nbsp;1/30/2010<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"ts"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$gt'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$start</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'$lte'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$end</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>    <p class="para">     MongoDB stores dates as milliseconds past the epoch.  This means that dates      <em class="emphasis">do not</em> contain timezone information.  Timezones must be     stored in a separate field if needed.  Second, this means that any precision     beyond milliseconds will be lost when the document is sent to/from the      database.    </p>   </div>     <div class="section" id="mongodate.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoDate</strong>      </span>      {</div>         <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">sec</var></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">usec</var></var>     ;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodate.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$sec</code><span class="initializer"> = time()</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$usec</code><span class="initializer"> = 0</span></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">DateTime</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodate.todatetime.php" class="methodname">toDateTime</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodate.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>   </div>                              <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoDate::__construct} — 创建一个新的日期。</li><li>{@link MongoDate::toDateTime} — Returns a DateTime object representing this date</li><li>{@link MongoDate::__toString} — 返回该日期的字符串形式的表达</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoDate {
    /**
     * @link http://php.net/manual/en/class.mongodate.php#mongodate.props.sec
     * @var int $sec
     */
    public $sec;

    /**
     * @link http://php.net/manual/en/class.mongodate.php#mongodate.props.usec
     * @var int $usec
     */
    public $usec;

    /**
     * Creates a new date. If no parameters are given, the current time is used.
     *
     * @link http://php.net/manual/en/mongodate.construct.php
     * @param int $sec Number of seconds since January 1st, 1970
     * @param int $usec Microseconds
     * @return MongoDate Returns this new date
     */
    public function __construct($sec = 0, $usec = 0) {}
    
/**
*<div id="mongodate.todatetime" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDate::toDateTime</h1>   <p class="verinfo">(PECL mongo &gt;= 1.6.0)</p><p class="refpurpose"><span class="refname">MongoDate::toDateTime</span> &mdash; <span class="dc-title">Returns a DateTime object representing this date</span></p>   </div>   <div id="mongodate.todatetime-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this method is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this method include:</p>    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoDB\BSON\UTCDateTime::toDateTime()}</span></li>    </ul>   </blockquote>  </div>   <div class="refsect1 description" id="refsect1-mongodate.todatetime-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type"><a href="http://php.net/manual/zh/class.datetime.php" class="type DateTime">DateTime</a></span> <span class="methodname"><strong>MongoDate::toDateTime</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns a DateTime object representation of this date.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodate.todatetime-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodate.todatetime-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    This date as a <a href="http://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a> object.   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodate.todatetime-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1604">    <p><strong>Example #1 <span class="function"><strong>MongoDate::toDateTime()</strong></span> example</strong></p>    <div class="example-contents"><p>This example demonstrates creating a DateTime object from a MongoDate    object.</p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$d&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2014-11-18&nbsp;11:01:25"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(&nbsp;</span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">toDateTime</span><span style="color: #007700">()&nbsp;);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> class DateTime#2 (3) {   public $date =&gt;   string(26) &quot;2014-11-18 11:01:25.000000&quot;   public $timezone_type =&gt;   int(1)   public $timezone =&gt;   string(6) &quot;+00:00&quot; } </pre></div>    </div>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodate.php">MongoDate</a></div></div>
     * @return DateTime*/
    public function toDateTime() {}

    /**
    * Returns a string representation of this date
    * @return string
    */
    public function __toString() {}
}

/**
*<div id="class.mongobindata" class="reference">   <h1 class="title">The MongoBinData class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 0.8.1)</p>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this class include:</p>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongodb-bson-binary.php" class="classname">MongoDB\BSON\Binary</a></li>    </ul>   </div>     <div class="section" id="mongobindata.intro">    <h2 class="title">简介</h2>    <p class="para">     An object that can be used to store or retrieve binary data from the database.    </p>    <p class="para">     The maximum size of a single object that can be inserted into the database     is 16MB. For data that is larger than this (movies, music, Henry Kissinger&#039;s     autobiography), use <a href="http://php.net/manual/zh/class.mongogridfs.php" class="classname">MongoGridFS</a>. For data that is     smaller than 16MB, you may find it easier to embed it within the document     using <strong class="classname">MongoBinData</strong>.    </p>    <p class="para">     For example, to embed an image in a document, one could write:    </p>    <div class="example" id="example-1608">     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$profile&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"username"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"foobity"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"pic"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoBinData</span><span style="color: #007700">(</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">"gravatar.jpg"</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">MongoBinData</span><span style="color: #007700">::</span><span style="color: #9876AA">GENERIC</span><span style="color: #007700">),<br />);<br /><br /></span><span style="color: #9876AA">$users</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(</span><span style="color: #9876AA">$profile</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>    <p class="para">     This class contains a <var class="varname"><var class="varname">type</var></var> field, which currently gives     no additional functionality in the PHP driver or the database. There are     seven predefined types, which are defined as class constants below. For     backwards compatibility, the PHP driver uses     <strong><code>MongoBinData::BYTE_ARRAY</code></strong> as the default; however, this     may change to <strong><code>MongoBinData::GENERIC</code></strong> in the future.     Users are encouraged to specify a type in     <span class="function">{@link MongoBinData::__construct()}</span>.    </p>   </div>     <div class="section" id="mongobindata.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoBinData</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongobindata.php#mongobindata.constants.generic"><var class="varname">GENERIC</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongobindata.php#mongobindata.constants.func"><var class="varname">FUNC</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongobindata.php#mongobindata.constants.byte_array"><var class="varname">BYTE_ARRAY</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongobindata.php#mongobindata.constants.uuid"><var class="varname">UUID</var></a></var>      <span class="initializer"> = 3</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongobindata.php#mongobindata.constants.uuid_rfc4122"><var class="varname">UUID_RFC4122</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongobindata.php#mongobindata.constants.md5"><var class="varname">MD5</var></a></var>      <span class="initializer"> = 5</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongobindata.php#mongobindata.constants.custom"><var class="varname">CUSTOM</var></a></var>      <span class="initializer"> = 128</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname">$<var class="varname">bin</var></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">type</var></var>      <span class="initializer"> = 2</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongobindata.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer"> = 0</span></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongobindata.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>     <div class="section">    <h2 class="title">预定义常量</h2>    <div class="section" id="mongobindata.constants.types">     <h2 class="title">Binary Data Types</h2>     <dl>              <dt id="mongobindata.constants.generic"><strong><code>MongoBinData::GENERIC</code></strong></dt>        <dd>         <span class="simpara">         Generic binary data.        </span>       </dd>                    <dt id="mongobindata.constants.func"><strong><code>MongoBinData::FUNC</code></strong></dt>        <dd>         <span class="simpara">         Function.        </span>       </dd>                    <dt id="mongobindata.constants.byte_array"><strong><code>MongoBinData::BYTE_ARRAY</code></strong></dt>        <dd>         <span class="simpara">         Generic binary data (deprecated in favor of         <strong><code>MongoBinData::GENERIC</code></strong>).        </span>       </dd>                    <dt id="mongobindata.constants.uuid"><strong><code>MongoBinData::UUID</code></strong></dt>        <dd>         <span class="simpara">         Universally unique identifier (deprecated in favor of         <strong><code>MongoBinData::UUID_RFC4122</code></strong>).        </span>       </dd>                    <dt id="mongobindata.constants.uuid_rfc4122"><strong><code>MongoBinData::UUID_RFC4122</code></strong></dt>        <dd>         <span class="simpara">         Universally unique identifier (according to         <a href="http://www.faqs.org/rfcs/rfc4122" class="link external">&raquo;&nbsp;RFC 4122</a>).        </span>       </dd>                    <dt id="mongobindata.constants.md5"><strong><code>MongoBinData::MD5</code></strong></dt>        <dd>         <span class="simpara">         MD5.        </span>       </dd>                    <dt id="mongobindata.constants.custom"><strong><code>MongoBinData::CUSTOM</code></strong></dt>        <dd>         <span class="simpara">         User-defined type.        </span>       </dd>            </dl>     </div>   </div>     <div class="simplesect">    <h3 class="title">更新日志</h3>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.5.0</td>        <td>         Added <strong><code>MongoBinData::GENERIC</code></strong> and         <strong><code>MongoBinData::UUID_RFC4122</code></strong> constants.        </td>       </tr>       </tbody>         </table>    </div>   </div>                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoBinData::__construct} — 创建一个新的二进制数据对象</li><li>{@link MongoBinData::__toString} — 二进制数据对象的字符串表达形式。</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoBinData {
	/**
	 * Generic binary data.
	 * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.constants.custom
	 */
	const GENERIC = 0x0;

     /**
	  * Function
     * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.constants.func
     */
    const FUNC = 0x1;

     /**
	  * Generic binary data (deprecated in favor of MongoBinData::GENERIC)
     * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.constants.byte-array
     */
    const BYTE_ARRAY = 0x2;

     /**
	  * Universally unique identifier (deprecated in favor of MongoBinData::UUID_RFC4122)
     * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.constants.uuid
     */
    const UUID = 0x3;

	/**
	 * Universally unique identifier (according to » RFC 4122)
	 * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.constants.custom
	 */
	const UUID_RFC4122 = 0x4;

	
	/**
	 * MD5
     * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.constants.md5
     */
    const MD5 = 0x5;

     /**
	  * User-defined type
     * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.constants.custom
     */
    const CUSTOM = 0x80;


    /**
     * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.props.bin
     * @var $bin
     */
    public $bin;

    /**
     * @link http://php.net/manual/en/class.mongobindata.php#mongobindata.props.type
     * @var $type
     */
    public $type;


    /**
     * Creates a new binary data object.
     *
     * @link http://php.net/manual/en/mongobindata.construct.php
     * @param string $data Binary data
     * @param int $type Data type
     * @return MongoBinData Returns a new binary data object
     */
    public function __construct($data, $type = 2) {}

    /**
    * Returns the string representation of this binary data object.
    * @return string
    */
    public function __toString() {}
}

/**
*<div id="class.mongodbref" class="reference">   <h1 class="title">MongoDBRef 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=0.9.0)</p>     <div class="section" id="mongodbref.intro">    <h2 class="title">简介</h2>    <p class="para">     这个类可以用于创建不同集合中对象间的轻量级的链接。    </p>    <p class="para">     <em class="emphasis">Motivation</em>：如果我们需要引用其他集合中的文档。最简单的方法是在当前文档中创建一个字段。比如，有     &quot;people&quot; 集合和 &quot;addresses&quot; 集合，我们需要“关联”每个 person 和对应的 address ，可以：     <div class="example" id="example-1609">      <p><strong>Example #1 链接文档</strong></p>      <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$people&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">people</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$addresses&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addresses</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$myAddress&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"line&nbsp;1"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"123&nbsp;Main&nbsp;Street"</span><span style="color: #007700">,&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"line&nbsp;2"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"city"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Springfield"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"state"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Vermont"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"country"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"USA"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;save&nbsp;the&nbsp;address&nbsp;保存address文档<br /></span><span style="color: #9876AA">$addresses</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$myAddress</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;save&nbsp;a&nbsp;person&nbsp;with&nbsp;a&nbsp;reference&nbsp;to&nbsp;the&nbsp;address&nbsp;保存一个people，关联刚才的address<br /></span><span style="color: #9876AA">$me&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Fred"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"address"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">$myAddress</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$me</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     然后，我们可以：把保存在 &quot;people&quot; 集合中的     <a href="http://php.net/manual/zh/class.mongoid.php" class="classname">MongoId</a> 作为条件，查询     &quot;address&quot; 集合，来获取一个人的地址。    </p>    <p class="para">     如果我们现在有更加一般性的的情况，我们不知道哪个集合（甚至数据库）中包含我们要引用的文档。     <strong class="classname">MongoDBRef</strong> 就是个好选择，它是一个更加通用的格式，所有的驱动和数据库都可以处理它。    </p>    <p class="para">     如果每个“人”有一系列关联到其他多个集合的信息，例如爱好、运动、书籍等，我们可以用数个     <strong class="classname">MongoDBRef</strong> 对象来跟踪每一个 爱好 来自哪个集合：     <div class="example" id="example-1610">      <p><strong>Example #2 Creating MongoDBRef links</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$people&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"people"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;model&nbsp;trains&nbsp;are&nbsp;in&nbsp;the&nbsp;"hobbies"&nbsp;collection<br /></span><span style="color: #9876AA">$trainRef&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">MongoDBRef</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #DD0000">"hobbies"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$modelTrains</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">]);<br /></span><span style="color: #FF8000">//&nbsp;soccer&nbsp;is&nbsp;in&nbsp;the&nbsp;"sports"&nbsp;collection<br /></span><span style="color: #9876AA">$soccerRef&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">MongoDBRef</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #DD0000">"sports"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$soccer</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">]);<br /><br /></span><span style="color: #FF8000">//&nbsp;now&nbsp;we'll&nbsp;know&nbsp;what&nbsp;collections&nbsp;the&nbsp;items&nbsp;in&nbsp;the&nbsp;"likes"&nbsp;array&nbsp;came&nbsp;from&nbsp;when<br />//&nbsp;we&nbsp;retrieve&nbsp;this&nbsp;document<br />//&nbsp;&nbsp;#&nbsp;现在当我们读取这个文档的时候，就可以知道“likes”字段里的数组元素分别来自哪个集合了。<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Fred"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"likes"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #9876AA">$trainRef</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$soccerRef</span><span style="color: #007700">)));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>      </div>      </div>    </p>    <p class="para">     数据库引用可以被理解为超链接：它们指定了一个文档的唯一地址，但不会自动读取或者跟踪引用、链接。、    </p>    <p class="para">     一个数据库引用仅仅是一个普通关联数组，不是     <strong class="classname">MongoDBRef</strong> 的实例，所以这个类与其他数据类型有些不同。这个类只包含静态方法，用来操作引用。     译注：上面两段的意思概括为     1.一个数据库引用与超链接相似，复制、删除、修改等操作不会影响原来的文档。     2.读取这个引用可以得知指向的文档的位置，但不能知道文档的内容，要手动解引用。     3.这个“引用”保存到Mongo的时候就是普通数组    </p>   </div>     <div class="section" id="mongodbref.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoDBRef</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodbref.create.php" class="methodname">create</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$collection</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$id</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span>   ] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodbref.get.php" class="methodname">get</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongodb.php" class="type MongoDB">MongoDB</a></span> <code class="parameter">$db</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$ref</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongodbref.isref.php" class="methodname">isRef</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$ref</code></span>    )</div>     }</div>     </div>    <div class="section">    <h2 class="title">参见</h2>    <p class="para">     MongoDB 官方核心文档 <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/database-references/" class="link external">&raquo;&nbsp;databases references</a>.    </p>   </div>  </div>                              <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoDBRef::create} — 创建一个新的数据库引用</li><li>{@link MongoDBRef::get} — 获取引用所指向的对象</li><li>{@link MongoDBRef::isRef} — 检测数组是否为数据库引用</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoDBRef {
    /**
    * @static
    * @var $refKey
    */
    protected static $refKey = '$ref';

    /**
    * @static
    * @var $idKey
    */
    protected static $idKey = '$id';

/**
*<div id="mongodbref.create" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDBRef::create</h1>   <p class="verinfo">(PECL mongo &gt;= 0.9.0)</p><p class="refpurpose"><span class="refname">MongoDBRef::create</span> &mdash; <span class="dc-title">创建一个新的数据库引用</span></p>   </div>    <div id="mongodbref.create-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this class in the new extension.</p>    <p class="para">      数据库引用（database reference） 的概念，并且此类已经被弃用。    </p>   </blockquote>  </div>    <div class="refsect1 description" id="refsect1-mongodbref.create-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><strong>MongoDBRef::create</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$collection</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$id</code></span>    [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span>   ] )</div>    <p class="para rdfs-comment">    如果没有指定数据库，将会使用当前数据库。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodbref.create-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">collection</code>      </dt>       <dd>        <p class="para">        集合名称（不包括数据库名）。       </p>      </dd>                    <dt>        <code class="parameter">id</code>      </dt>       <dd>        <p class="para">        要链接的对象的 _id 字段。       </p>      </dd>                    <dt>        <code class="parameter">database</code>      </dt>       <dd>        <p class="para">        数据库名。       </p>      </dd>             </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodbref.create-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    返回引用。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodbref.create-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1611">    <p><strong>Example #1 <span class="function"><strong>MongoDBRef::create()</strong></span> 例子</strong></p>    <div class="example-contents"><p>     这个例子为文档创建了一个 <em>addresses</em> 的数据库引用。     <span class="function">{@link MongoCollection::getName()}</span> 函数返回集合的名字（不包括数据库名）。    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$addresses&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addresses</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$people&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">people</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;保存&nbsp;$address，所以它有一个&nbsp;_id<br /></span><span style="color: #9876AA">$addresses</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$address</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;创建引用<br /></span><span style="color: #9876AA">$ref&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">MongoDBRef</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #9876AA">$addresses</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">(),&nbsp;</span><span style="color: #9876AA">$address</span><span style="color: #007700">[</span><span style="color: #DD0000">'_id'</span><span style="color: #007700">]);<br /><br /></span><span style="color: #FF8000">//设置&nbsp;$person&nbsp;里的字段<br /></span><span style="color: #9876AA">$person</span><span style="color: #007700">[</span><span style="color: #DD0000">'address'</span><span style="color: #007700">]&nbsp;=&nbsp;</span><span style="color: #9876AA">$ref</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(</span><span style="color: #9876AA">$person</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodbref.create-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoDB::createDBRef()} - 创建数据库引用</span></li>     <li class="member"><span class="methodname">{@link MongoCollection::createDBRef()} - 创建一个数据库引用</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodbref.php">MongoDBRef</a></div></div>
     * @return array Returns the reference*/
    public static function create($collection, $id, $database = null) {}

/**
*<div id="mongodbref.isref" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDBRef::isRef</h1>   <p class="verinfo">(PECL mongo &gt;= 0.9.0)</p><p class="refpurpose"><span class="refname">MongoDBRef::isRef</span> &mdash; <span class="dc-title">检测数组是否为数据库引用</span></p>   </div>   <div id="mongodbref.isref-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this class in the new extension.</p>    <p class="para">      数据库引用（database reference） 的概念，并且此类已经被弃用。    </p>   </blockquote>  </div>    <div class="refsect1 description" id="refsect1-mongodbref.isref-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>MongoDBRef::isRef</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$ref</code></span>    )</div>    <p class="para rdfs-comment">    这个方法没有真正读取引用的数据，所以它无法检测引用是否损坏。    它仅仅检查 <code class="parameter">ref</code> 是否为有效的数据库引用格式（一个对象或数组，并具有 $ref 和 $id 的字段）。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongodbref.isref-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">ref</code>      </dt>       <dd>        <p class="para">        要检查的数组或对象。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodbref.isref-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">     成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongodbref.php">MongoDBRef</a></div></div>
     * @return boolean Returns true if $ref is a reference*/
    public static function isRef($ref) {}

/**
*<div id="mongodbref.get" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoDBRef::get</h1>   <p class="verinfo">(PECL mongo &gt;= 0.9.0)</p><p class="refpurpose"><span class="refname">MongoDBRef::get</span> &mdash; <span class="dc-title">获取引用所指向的对象</span></p>   </div>   <div id="mongodbref.get-soft-deprecation-notice" class="soft-deprecation-notice">   <blockquote class="sidebar">    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this class in the new extension.</p>    <p class="para">      数据库引用（database reference） 的概念，并且此类已经被弃用。    </p>   </blockquote>  </div>    <div class="refsect1 description" id="refsect1-mongodbref.get-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">array</span> <span class="methodname"><strong>MongoDBRef::get</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/class.mongodb.php" class="type MongoDB">MongoDB</a></span> <code class="parameter">$db</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$ref</code></span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongodbref.get-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">db</code>      </dt>       <dd>        <p class="para">        使用的数据库。       </p>      </dd>                 <dt>        <code class="parameter">ref</code>      </dt>       <dd>        <p class="para">        要获取的引用。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongodbref.get-returnvalues">   <h3 class="title">返回值</h3>     <p class="para">    返回引用指向的文档，如果文档不存在则返回 <strong><code>NULL</code></strong>（该引用已损坏）。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongodbref.get-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1612">    <p><strong>Example #1 <span class="function">{@link MongoCollection::createDBRef()}</span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;从&nbsp;db&nbsp;获取&nbsp;$person。<br /></span><span style="color: #9876AA">$person&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findOne</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;解析引用的&nbsp;address<br /></span><span style="color: #9876AA">$address&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">MongoDBRef</span><span style="color: #007700">::</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">$people</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">db</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$person</span><span style="color: #007700">[</span><span style="color: #DD0000">'address'</span><span style="color: #007700">]);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongodbref.get-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="methodname">{@link MongoDB::getDBRef()} - Fetches the document pointed to by a database reference</span></li>     <li class="member"><span class="methodname">{@link MongoCollection::getDBRef()} - Fetches the document pointed to by a database reference</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongodbref.php">MongoDBRef</a></div></div>
     * @return array|null Returns the document to which the reference refers or null if the document does not exist (the reference is broken)*/
    public static function get($db, $ref) {}
}

class MongoWriteBatch
{

	const COMMAND_INSERT = 1;
	const COMMAND_UPDATE = 2;
	const COMMAND_DELETE = 3;


	/**
	 * <p>(PECL mongo &gt;= 1.5.0)</p>
	 * MongoWriteBatch constructor.
	 * @link http://php.net/manual/en/mongowritebatch.construct.php
	 * @param MongoCollection $collection The {@see MongoCollection} to execute the batch on.
	 * Its {@link http://php.net/manual/en/mongo.writeconcerns.php write concern}
	 * will be copied and used as the default write concern if none is given as <code >$write_options</code> or during
	 * {@see MongoWriteBatch::execute()}.
	 * @param string $batch_type [optional] <p>
	 * One of:
	 * </p><ul>
	 * <li class="member"><em>0</em> - make an MongoWriteBatch::COMMAND_INSERT batch</li>
	 * <li class="member"><em>1</em> - make an MongoWriteBatch::COMMAND_UPDATE batch</li>
	 * <li class="member"><em>2</em> - make a  MongoWriteBatch::COMMAND_DELETE batch</li>
	 * </ul>
	 * @param array $write_options [optional]
	 * <p> An array of Write Options.</p><table><thead><tr><th>key</th><th>value meaning</th></tr>
	 * </thead>
	 * <tbody><tr><td>w (int|string)</td><td>{@link http://php.net/manual/en/mongo.writeconcerns.php Write concern} value</td></tr>
	 * <tr><td>wtimeout (int)</td><td>{@link http://php.net/manual/en/mongo.writeconcerns.php Maximum time to wait for replication}</td></tr>
	 * <tr><td>ordered</td><td>Determins if MongoDB must apply this batch in order (sequentally, one item at a time) or can rearrange it.
	 * Defaults to <strong><code>TRUE</code></strong></td></tr>
	 * <tr><td>j (bool)</td><td>Wait for journaling on the primary. This value is discouraged, use WriteConcern instead</td></tr>
	 * <tr><td>fsync (bool)</td><td>Wait for fsync on the primary. This value is discouraged, use WriteConcern instead</td></tr>
	 * </tbody></table>
	 */
	protected function __construct($collection, $batch_type, $write_options)
	{
	}

	/**
	 * <p>(PECL mongo &gt;= 1.5.0)</p>
	 * Adds a write operation to a batch
	 * @link http://php.net/manual/en/mongowritebatch.add.php
	 * @param array $item <p>
	 * An array that describes a write operation. The structure of this value
	 * depends on the batch's operation type.
	 * </p><table>
	 * <thead>
	 * <tr>
	 * <th>Batch type</th>
	 * <th>Argument expectation</th>
	 * </tr>
	 *
	 * </thead>
	 *
	 * <tbody>
	 * <tr>
	 * <td><strong><code>MongoWriteBatch::COMMAND_INSERT</code></strong></td>
	 * <td>
	 * The document to add.
	 * </td>
	 * </tr>
	 * <tr>
	 * <td><strong><code>MongoWriteBatch::COMMAND_UPDATE</code></strong></td>
	 * <td>
	 * <p>Raw update operation.</p>
	 * <p>Required keys are <em>"q"</em> and <em>"u"</em>, which correspond to the
	 * <code>$criteria</code> and <code$new_object</code> parameters of {@see MongoCollection::update()}, respectively.</p>
	 * <p>Optional keys are <em>"multi"</em> and <em>"upsert"</em>, which correspond to the
	 * <em>"multiple"</em> and <em>"upsert"</em> options for {@see MongoCollection::update()}, respectively.
	 * If unspecified, both options default to <strong><code>FALSE</code></strong>.</p>
	 * </td>
	 * </tr>
	 * <tr>
	 * <td><strong><code>MongoWriteBatch::COMMAND_DELETE</code></strong></td>
	 * <td>
	 * <p class="para">Raw delete operation.</p>
	 * <p>Required keys are: <em>"q"</em> and <em>"limit"</em>, which correspond to the <code>$criteria</code> parameter
	 * and <em>"justOne"</em> option of {@see MongoCollection::remove()}, respectively.</p>
	 * <p>The <em>"limit"</em> option is an integer; however, MongoDB only supports <em>0</em> (i.e. remove all matching
	 * ocuments) and <em>1</em> (i.e. remove at most one matching document) at this time.</p>
	 * </td>
	 * </tr>
	 * </tbody>
	 * </table>
	 * @return bool <b>Returns TRUE on success and throws an exception on failure.</b>
	 */
	public function add(array $item)
	{
	}

	/**
	 * <p>(PECL mongo &gt;= 1.5.0)</p>
	 * Executes a batch of write operations
	 * @link http://php.net/manual/en/mongowritebatch.execute.php
	 * @param array $write_options See {@see MongoWriteBatch::__construct}
	 * @return array Returns an array containing statistical information for the full batch.
	 * If the batch had to be split into multiple batches, the return value will aggregate the values from individual batches and return only the totals.
	 * If the batch was empty, an array containing only the 'ok' field is returned (as <b>TRUE</b<) although nothing will be shipped over the wire (NOOP).
	 */
	final public function execute(array $write_options)
	{
	}
}

class MongoUpdateBatch extends MongoWriteBatch
{

	/**
	 * <p>(PECL mongo &gt;= 1.5.0)</p>
	 * MongoUpdateBatch constructor.
	 * @link http://php.net/manual/en/mongoupdatebatch.construct.php
	 * @param MongoCollection $collection <p>The MongoCollection to execute the batch on.
	 * Its write concern will be copied and used as the default write concern
	 * if none is given as $write_options or during {@see MongoWriteBatch::execute()}.</p>
	 * @param array $write_options <p class="para">An array of Write Options.</p><table class="doctable informaltable"><thead><tr><th>key</th><th>value meaning</th></tr>
	 * </thead>
	 * <tbody class="tbody"><tr><td>w (int|string)</td><td>{@link http://php.net/manual/en/mongo.writeconcerns.php Write concern} value</td></tr>
	 * <tr><td>wtimeout (int)</td><td>{@link http://php.net/manual/en/mongo.writeconcerns.php Maximum time to wait for replication}</td></tr>
	 * <tr><td>ordered</td><td>Determins if MongoDB must apply this batch in order (sequentally, one item at a time) or can rearrange it. Defaults to <strong><code>TRUE</code></strong></td></tr>
	 * <tr><td>j (bool)</td><td>Wait for journaling on the primary. This value is discouraged, use WriteConcern instead</td></tr>
	 * <tr><td>fsync (bool)</td><td>Wait for fsync on the primary. This value is discouraged, use WriteConcern instead</td></tr>
	 * </tbody></table>
	 */
	public function __construct(MongoCollection $collection, array $write_options)
	{
	}


}

/**
*<div id="class.mongoexception" class="reference">   <h1 class="title">The MongoException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.0.0)</p>       <div class="section" id="mongoexception.intro">    <h2 class="title">简介</h2>    <p class="para">     Default Mongo exception.    </p>     <p class="para">     This covers a bunch of different error conditions that may eventually be     moved to more specific exceptions, but will always extend      <strong class="classname">MongoException</strong>.    </p>     <ul class="itemizedlist">      <li class="listitem">      <p class="para">       <em>The MongoSomething object has not been correctly initialized by its constructor</em>      </p>      <p class="para">       Code: 0      </p>      <p class="para">       Probably your Mongo object is not connected to a database server.      </p>     </li>      <li class="listitem">      <p class="para">       <em>zero-length keys are not allowed, did you use $ with double quotes?</em>      </p>      <p class="para">       Code: 1      </p>      <p class="para">       You tried to save &quot;&quot; as a key.  You generally should not do this.  &quot;&quot; can        mess up subobject access and is used by MongoDB internally.  However, if        you really want, you can set        <a href="http://php.net/manual/zh/mongo.configuration.php#ini.mongo.allow-empty-keys" class="link">mongo.allow_empty_keys</a>        to true in your php.ini file to override this sanity check.  If you        override this, it is highly recommended that you set error checking to        strict to avoid string interpolation errors.      </p>     </li>      <li class="listitem">      <p class="para">       <em>&#039;.&#039; not allowed in key: &lt;key&gt;</em>      </p>      <p class="para">       Code: 2      </p>      <p class="para">       You attempted to write a key with &#039;.&#039; in it, which is prohibited.      </p>     </li>      <li class="listitem">      <p class="para">       <em>insert too large: &lt;size&gt;, max: &lt;max&gt;</em>      </p>      <p class="para">       Code: 3      </p>      <p class="para">       You&#039;re attempting to send too much data to the database at once: the       database will only accept inserts up to a certain size (currently 16 MB).      </p>     </li>      <li class="listitem">      <p class="para">       <em>no elements in doc</em>      </p>      <p class="para">       Code: 4      </p>      <p class="para">       You&#039;re attempting to save a document with no fields.      </p>     </li>      <li class="listitem">      <p class="para">       <em>size of BSON doc is &lt;size&gt; bytes, max &lt;max&gt;MB</em>      </p>      <p class="para">       Code: 5      </p>      <p class="para">       You&#039;re attempting to save a document that is larger than MongoDB can save.      </p>     </li>      <li class="listitem">      <p class="para">       <em>no documents given</em>      </p>      <p class="para">       Code: 6      </p>      <p class="para">       You&#039;re attempting to batch insert an empty array of documents.      </p>     </li>      <li class="listitem">      <p class="para">       <em>MongoCollection::group takes an array, object, or MongoCode key</em>      </p>      <p class="para">       Code: 7      </p>      <p class="para">       Wrong type parameter send to <span class="function">{@link MongoCollection::group()}</span>.      </p>     </li>      <li class="listitem">      <p class="para">       <em>field names must be strings</em>      </p>      <p class="para">       Code: 8      </p>      <p class="para">       You should format field selectors as        <em>array(&quot;field1&quot; =&gt; 1, &quot;field2&quot; =&gt; 1, ..., &quot;fieldN&quot; =&gt; 1)</em>.      </p>     </li>      <li class="listitem">      <p class="para">       <em>invalid regex</em>      </p>      <p class="para">       Code: 9      </p>      <p class="para">       The regex passed to <a href="http://php.net/manual/zh/class.mongoregex.php" class="classname">MongoRegex</a> is not of the        correct form.      </p>     </li>      <li class="listitem">      <p class="para">       <em>MongoDBRef::get: $ref field must be a string</em>      </p>      <p class="para">       Code: 10      </p>     </li>      <li class="listitem">      <p class="para">       <em>MongoDBRef::get: $db field must be a string</em>      </p>      <p class="para">       Code: 11      </p>     </li>      <li class="listitem">      <p class="para">       <em>non-utf8 string: &lt;str&gt;</em>      </p>      <p class="para">       Code: 12      </p>      <p class="para">       This error occurs if you attempt to send a non-utf8 string to the        database.  All strings going into the database should be UTF8. See php.ini       options for the transition option of quieting this exception.      </p>     </li>      <li class="listitem">      <p class="para">       <em>mutex error: &lt;err&gt;</em>      </p>      <p class="para">       Code: 13      </p>      <p class="para">       The driver uses mutexes for synchronizing requests and responses in        multithreaded environments.  This is a fairly serious error and may not       have a stack trace.  It&#039;s unusual and should be reported to maintainers       with any system information and steps to reproduce that you can provide.      </p>     </li>      <li class="listitem">      <p class="para">       <em>index name too long: &lt;len&gt;, max &lt;max&gt; characters</em>      </p>      <p class="para">       Code: 14      </p>      <p class="para">       Indexes with names longer than 128 characters cannot be created.  If you       get this error, you should use        <span class="function">{@link MongoCollection::ensureIndex()}</span>&#039;s &quot;name&quot; option to        create a shorter name for your index.      </p>     </li>     </ul>   </div>       <div class="section" id="mongoexception.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoException</strong>      </span>      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.exception.php" class="classname">Exception</a>      </span>      {</div>              }</div>        </div>   </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoException extends Exception {
}

/**
*<div id="class.mongocursorexception" class="reference">   <h1 class="title">The MongoCursorException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.0.0)</p>       <div class="section" id="mongocursorexception.intro">    <h2 class="title">简介</h2>    <p class="para">     Caused by accessing a cursor incorrectly or a error receiving a reply. Note     that this can be thrown by any database request that receives a reply, not     just queries.  Writes, commands, and any other operation that sends     information to the database and waits for a response can throw a     <strong class="classname">MongoCursorException</strong>.  The only exception is     <em>new MongoClient()</em> (creating a new connection), which will     only throw <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a>s.    </p>     <p class="para">     This returns a specific error message to help diagnose the problem and a     numeric error code associated with the cause of the exception.    </p>     <p class="para">     For example, suppose you tried to insert two documents with the same _id:     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">"w"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"_id"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #DD0000">"w"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}<br />catch&nbsp;(</span><span style="color: #9876AA">MongoCursorException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"error&nbsp;message:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"error&nbsp;code:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCode</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      This would produce output like:     <div class="example-contents"> <div class="txtcode"><pre class="txtcode">error message: E11000 duplicate key error index: foo.bar.$_id_  dup key: { : 1 } error code: 11000</pre> </div>     </div>      Note that the MongoDB error code (11000) is used for the PHP error code. The     PHP driver uses the &quot;native&quot; error code wherever possible.    </p>     <p class="para">     The following is a list of common errors, codes, and causes.  Exact errors     are in italics, errors where the message can vary are described in obliques.    </p>     <ul class="itemizedlist">     <li class="listitem">      <p class="para">       <em>cannot modify cursor after beginning iteration</em>      </p>      <p class="para">       Code: 0      </p>      <p class="para">       You are calling a method that sets up the query after executing the query.       Reset the cursor and try again.      </p>      <p class="para">       An example:       <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNext</span><span style="color: #007700">());<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;getNext()&nbsp;queried&nbsp;the&nbsp;database,&nbsp;it's&nbsp;too&nbsp;late&nbsp;to&nbsp;set&nbsp;a&nbsp;limit<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">limit</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />}<br />catch&nbsp;(</span><span style="color: #9876AA">MongoCursorException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"error&nbsp;message:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"error&nbsp;code:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCode</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;this&nbsp;will&nbsp;work,&nbsp;though:<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNext</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">reset</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">limit</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>       </div>       </p>     </li>      <li class="listitem">      <p class="para">       Get next batch send errors      </p>      <p class="para">       Code: 1      </p>      <p class="para">       Could not send the query to the database.  Make sure the database is       still up and the network is okay.      </p>     </li>      <li class="listitem">      <p class="para">       <em>cursor not found</em>      </p>      <p class="para">       Code: 2      </p>      <p class="para">       The driver was trying to fetch more results from the database, but the       database did not have a record of the query.  This usually means that the       cursor timed out on the server side: after a few minutes of inactivity,       the database will kill a cursor (see       <span class="function">{@link MongoCursor::immortal()}</span> for information on preventing       this).      </p>      <p class="para">       An example:       <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNext</span><span style="color: #007700">();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;sleep&nbsp;for&nbsp;15&nbsp;minutes<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">sleep</span><span style="color: #007700">(</span><span style="color: #9876AA">60</span><span style="color: #007700">*</span><span style="color: #9876AA">15</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">hasNext</span><span style="color: #007700">())&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$cursor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNext</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br />catch&nbsp;(</span><span style="color: #9876AA">MongoCursorException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"error&nbsp;message:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"error&nbsp;code:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCode</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>       </div>       </p>     </li>      <li class="listitem">      <p class="para">       <em>cursor-&gt;buf.pos is null</em>      </p>      <p class="para">       Code: 3      </p>      <p class="para">       This may indicate you are out of RAM or some other extraordinary       circumstance.      </p>     </li>      <li class="listitem">      <p class="para">       <em>couldn&#039;t get response header</em>      </p>      <p class="para">       Code: 4      </p>      <p class="para">       A common error if the database or network goes down. This means that the       driver couldn&#039;t get a response from the connection.      </p>     </li>      <li class="listitem">      <p class="para">       <em>no db response</em>      </p>      <p class="para">       Code: 5      </p>      <p class="para">       This may not even be an error, for example, the database command       &quot;shutdown&quot; returns no response.  However, if you were expecting a       response, this means the database didn&#039;t give one.      </p>     </li>      <li class="listitem">      <p class="para">       <em>bad response length: %d, did the db assert?</em>      </p>      <p class="para">       Code: 6      </p>      <p class="para">       This means that the database said that its response was less than 0.  This       error probably indicates a network error or database corruption.      </p>     </li>      <li class="listitem">      <p class="para">       <em>incomplete header</em>      </p>      <p class="para">       Code: 7      </p>      <p class="para">       Highly unusual.  Occurs if the database response started out correctly,       but broke off in the middle.  Probably indicates a network problem.      </p>     </li>      <li class="listitem">      <p class="para">       <em>incomplete response</em>      </p>      <p class="para">       Code: 8      </p>      <p class="para">       Highly unusual.  Occurs if the database response started out correctly,       but broke off in the middle.  Probably indicates a network problem.      </p>     </li>      <li class="listitem">      <p class="para">       <em>couldn&#039;t find a response</em>      </p>      <p class="para">       Code: 9      </p>      <p class="para">       If the response was cached and now cannot be located.      </p>     </li>      <li class="listitem">      <p class="para">       <em>error getting socket</em>      </p>      <p class="para">       Code: 10      </p>      <p class="para">       The socket was closed or encountered an error.  The driver should       automatically reconnect (if possible) on the next operation.      </p>     </li>      <li class="listitem">      <p class="para">       <em>couldn&#039;t find reply, please try again</em>      </p>      <p class="para">       Code: 11      </p>      <p class="para">       The driver saves any database responses it cannot immediately match with a       request. This exception occurs if the driver has already passed your       request&#039;s response and cannot find your response in its cache.      </p>     </li>      <li class="listitem">      <p class="para">       <em>error getting database response: errstr</em>      </p>      <p class="para">       <em>WSA error getting database response: errstr</em>      </p>      <p class="para">       &quot;errstr&quot; is an io error reported directly from the C socket       subsystem.  On Windows, the error message is prefixed with &quot;WSA&quot;.      </p>     </li>      <li class="listitem">      <p class="para">       <em>Timeout error</em>      </p>      <p class="para">       Code: 13      </p>      <p class="para">       If there was an error while waiting for a query to complete.      </p>     </li>      <li class="listitem">      <p class="para">       <em>couldn&#039;t send query: &lt;various&gt;</em>      </p>      <p class="para">       Code: 14      </p>      <p class="para">       C socket error on send.      </p>     </li>      <li class="listitem">      <p class="para">       <em>max number of retries exhausted, couldn&#039;t send query</em>      </p>      <p class="para">       Code: 19      </p>      <p class="para">       The driver will automatically retry &quot;plain&quot; queries (not commands) a       couple of times if the first attempt failed for certain reasons.  This is       to cause fewer exceptions during replica set failover (although you will       probably still have to deal with some) and gloss over transient network       issues.      </p>      <p class="para">       This can also be caused by the driver not being able to reconnect at all       to the database (if, for example, the database is unreachable).      </p>      <p class="para">       Version 1.2.2+.      </p>     </li>    </ul>   </div>     <div class="section">    <h2 class="title">Errors passed through by the database</h2>    <p class="para">     Database errors should always trigger     <strong class="classname">MongoCursorExceptions</strong> on queries.     Error messages and codes are sent directly from the database and you should     be able to see matching errors in the database log.    </p>     <p class="para">     A few common database errors are listed below:    </p>     <ul class="itemizedlist">     <li class="listitem">      <p class="para">       <em>E11000 duplicate key error index: foo.bar.$X  dup key: { // ...  }</em>      </p>      <p class="para">       Code: 11000      </p>      <p class="para">       Database error for duplicate keys.      </p>     </li>      <li class="listitem">      <p class="para">       <em>not master</em>      </p>      <p class="para">       Codes: 10107, 13435, and 10058      </p>      <p class="para">       Not master errors, piped through by the database.  ach of these will       cause the driver to disconnect and attempt to find a new primary. The       actual error you get on failover may not be a &quot;not master&quot; error,       depending on when the change in primary occurs.      </p>     </li>    </ul>    </div>       <div class="section" id="mongocursorexception.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoCursorException</strong>      </span>      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>      </span>      {</div>          }</div>        </div>   </div>              <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoCursorException::getHost} — 遇到该错误的服务器的 hostname</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoCursorException extends MongoException {

}

/**
*<div id="class.mongocursortimeoutexception" class="reference">   <h1 class="title">The MongoCursorTimeoutException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.0.0)</p>       <div class="section" id="mongocursortimeoutexception.intro">    <h2 class="title">简介</h2>    <p class="para">     Caused by a query timing out.  You can set the length of time to wait before     this exception is thrown by calling      <span class="function">{@link MongoCursor::timeout()}</span> on the cursor or setting     <em>MongoCursor::$timeout</em>.  The static variable is useful for     queries such as database commands and      <span class="function">{@link MongoCollection::findOne()}</span>, both of which implicitly use      cursors.    </p>   </div>       <div class="section" id="mongocursortimeoutexception.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoCursorTimeoutException</strong>      </span>      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a>      </span>      {</div>              }</div>        </div>   </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoCursorTimeoutException extends MongoCursorException {

}

/**
*<div id="class.mongoconnectionexception" class="reference">   <h1 class="title">The MongoConnectionException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.0.0)</p>       <div class="section" id="mongoconnectionexception.intro">    <h2 class="title">简介</h2>    <p class="para">     Thrown when the driver fails to connect to the database.    </p>     <p class="para">     There are a number of possible error messages to help you diagnose the      connection problem.  These are:    </p>     <ul class="itemizedlist">     <li class="listitem">      <p class="para">       <em>No candidate servers found</em>      </p>      <p class="para">      Thrown when the driver cannot establish a connection to MongoDB      (fulfilling the ReadPreferences, if specified).      </p>     </li>      <li class="listitem">      <p class="para">       <em>No server name given.</em>      </p>      <p class="para">       This error occurs if you pass in &quot;&quot; as the server name,        probably because of an typo with string interpolation,        e.g., &quot;$servr&quot; instead of &quot;$server&quot;.      </p>     </li>     <li class="listitem">      <p class="para">       <em>        failed to get host [hostname] or port [portnum]         from [server].       </em>      </p>      <p class="para">        This indicated that the server string was malformed.          &quot;[hostname]&quot; and &quot;[portnum]&quot; will be as much as the         driver could dicipher of it.      </p>     </li>     <li class="listitem">      <p class="para">       <em>Operation in progress</em>      </p>      <p class="para">       Connecting to the database timed out.      </p>     </li>     <li class="listitem">      <p class="para">       <em>Transport endpoint is not connected</em>      </p>      <p class="para">       Generally means that the connection string isn&#039;t correct, the driver       couldn&#039;t even find the database server.      </p>     </li>     <li class="listitem">      <p class="para">       <em>couldn&#039;t determine master</em>      </p>      <p class="para">       No server in a replica set connection was identified as the primary.      </p>     </li>     <li class="listitem">      <p class="para">       <em>couldn&#039;t get host info for [server]</em>      </p>      <p class="para">       This indicated that DNS could not resolve the server address        you gave.  This could easily be caused by a typo, for example,        &quot;server&quot; instead of &quot;$server&quot;.      </p>     </li>     <li class="listitem">      <p class="para">       <em>Invalid Argument</em>      </p>      <p class="para">       This can be caused by attempting to connect to a machine that is up but       that the database isn&#039;t actually running on.  Make sure that you&#039;ve       started the database server before connecting.            </p>     </li>     <li class="listitem">      <p class="para">       <em>Permission denied</em>      </p>      <p class="para">       This means that the socket could not be opened due to permissions issues.       On Red Hat variants, this can be caused by a default setting that does not       allow Apache to create network connections.  You can override this setting       by running:       <div class="example-contents"> <div class="shellcode"><pre class="shellcode">$ /usr/sbin/setsebool -P httpd_can_network_connect 1</pre> </div>       </div>        then restarting Apache.      </p>     </li>    </ul>     <p class="para">       If the error message is not listed above, it is probably an error      from the C socket, and you can search the web for its usual cause.    </p>   </div>       <div class="section" id="mongoconnectionexception.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoConnectionException</strong>      </span>      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>      </span>      {</div>              }</div>        </div>   </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoConnectionException extends MongoException {

}

/**
*<div id="class.mongogridfsexception" class="reference">   <h1 class="title">The MongoGridFSException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.0.0)</p>       <div class="section" id="mongogridfsexception.intro">    <h2 class="title">简介</h2>    <p class="para">     Thrown when there are errors reading or writing files     to or from the database.    </p>   </div>       <div class="section" id="mongogridfsexception.synopsis">    <h2 class="title">类摘要</h2>         <div class="classsynopsis">     <div class="ooclass"></div>           <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoGridFSException</strong>      </span>      <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>      </span>      {</div>              }</div>        </div>    <div class="section" id="mongogridfsexception.error-codes">   <h2 class="title">Error codes</h2>   <p class="para">    <table class="doctable table">     <caption><strong><strong class="classname">MongoGridFSException</strong> error codes</strong></caption>           <thead>       <tr>        <th>Code</th>        <th>Message</th>        <th>Reason</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>3</td>        <td>Could not open file <var class="varname"><var class="varname">$filename</var></var></td>        <td>Attempting to store an invalid file, such as directory</td>       </tr>        <tr>        <td>4</td>        <td>File <var class="varname"><var class="varname">$filename</var></var> is too large: <var class="varname"><var class="varname">$filesize</var></var> bytes</td>        <td>Maximum filesize in GridFS is 4GB</td>       </tr>        <tr>        <td>5</td>        <td>could not find filehandle</td>        <td>Resource doesn&#039;t have a filehandle</td>       </tr>        <tr>        <td>6</td>        <td>no file is associate with this filehandle</td>        <td>Resource isn&#039;t a file resource</td>       </tr>        <tr>        <td>7</td>        <td>error setting up file: <var class="varname"><var class="varname">$filename</var></var>s</td>        <td>Could not open file for reading</td>       </tr>        <tr>        <td>9</td>        <td>error reading file <var class="varname"><var class="varname">$filename</var></var>s</td>        <td>Failed reading file</td>       </tr>        <tr>        <td>10</td>        <td>error reading filehandle</td>        <td>Failed reading from a resource</td>       </tr>        <tr>        <td>11</td>        <td>could not find uploaded file %s</td>        <td>Filename doesn&#039;t seem to be uploaded file</td>       </tr>        <tr>        <td>12</td>        <td>Couldn&#039;t find tmp_name in the $_FILES array. Are you sure the upload worked?</td>        <td>Uploaded filename probably failed</td>       </tr>        <tr>        <td>13</td>        <td>tmp_name was not a string or an array</td>        <td>Invalid filename given</td>       </tr>        <tr>        <td>14</td>        <td>couldn&#039;t find file size</td>        <td>The <var class="varname"><var class="varname">length</var></var> property is missing</td>       </tr>        <tr>        <td>15</td>        <td>Cannot find filename</td>        <td>No filename provided, and no <var class="varname"><var class="varname">filename</var></var> property set</td>       </tr>        <tr>        <td>16</td>        <td>could not open destination file %s</td>        <td>Destination filename not writable</td>       </tr>        <tr>        <td>17</td>        <td>error reading chunk of file</td>        <td>Chunk corruption</td>       </tr>        <tr>        <td>18</td>        <td>couldn&#039;t create a php_stream</td>        <td>Couldn&#039;t create a stream resource</td>       </tr>        <tr>        <td>19</td>        <td>couldn&#039;t find <var class="varname"><var class="varname">property</var></var></td>        <td>Chunk corruption</td>       </tr>        <tr>        <td>20</td>        <td>chunk <var class="varname"><var class="varname">number</var></var> has wrong size (<var class="varname"><var class="varname">size</var></var>) when the max is <var class="varname"><var class="varname">maxchunksize</var></var></td>        <td>Chunk larger then expected</td>       </tr>        <tr>        <td>21</td>        <td>chunk has wrong format</td>        <td>Chunk corruption</td>       </tr>       </tbody>         </table>     </p>   </div>   </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoGridFSException extends MongoException {

}

/**
*<div id="class.mongowriteconcernexception" class="reference">   <h1 class="title">The MongoWriteConcernException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.5.0)</p>     <div class="section" id="mongowriteconcernexception.intro">    <h2 class="title">简介</h2>    <p class="para">     MongoWriteConcernException is thrown when a write fails. See <a href="http://php.net/manual/zh/mongo.writeconcerns.php" class="xref">Write Concerns</a> for how to set failure thresholds.    </p>    <p class="para">     Prior to MongoDB 2.6.0, the <a href="http://php.net/manual/zh/https://docs.mongodb.com/manual/reference/command/getLastError" class="link external">&raquo;&nbsp;getLastError</a> command would determine whether a write failed.    </p>   </div>     <div class="section" id="mongowriteconcernexception.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoWriteConcernException</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongocursorexception.php" class="classname">MongoCursorException</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>     ;</div>            <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongowriteconcernexception.getdocument.php" class="methodname">getDocument</a></span>     ( <span class="methodparam">void</span>    )</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">{@link MongoCursorException::getHost}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>   </div>            <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoWriteConcernException::getDocument} — Get the error document</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoWriteConcernException extends MongoCursorException {
/**
*<div id="mongowriteconcernexception.getdocument" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoWriteConcernException::getDocument</h1>   <p class="verinfo">(PECL mongo &gt;= 1.5.0)</p><p class="refpurpose"><span class="refname">MongoWriteConcernException::getDocument</span> &mdash; <span class="dc-title">Get the error document</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongowriteconcernexception.getdocument-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoWriteConcernException::getDocument</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    Returns the actual response from the server that was interperated as an error.   </p>   </div>    <div class="refsect1 parameters" id="refsect1-mongowriteconcernexception.getdocument-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongowriteconcernexception.getdocument-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    A MongoDB document, if available, as an array.   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongowriteconcernexception.php">MongoWriteConcernException</a></div></div>
     * @return array <p>A MongoDB document, if available, as an array.</p>*/
    public function getDocument() {}
}

/**
*<div id="class.mongoexecutiontimeoutexception" class="reference">   <h1 class="title">The MongoExecutionTimeoutException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.5.0)</p>     <div class="section" id="mongoexecutiontimeoutexception.intro">    <h2 class="title">简介</h2>    <p class="para">     Thrown when a operation times out server side (i.e. in MongoDB).    </p>    <p class="para">     To configure the operation timeout threshold, use     <span class="methodname">{@link MongoCursor::maxTimeMS()}</span> or the     <em>&quot;maxTimeMS&quot;</em> command option.    </p>   </div>     <div class="section" id="mongoexecutiontimeoutexception.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoExecutionTimeoutException</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>     ;</div>      }</div>     </div>   </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoExecutionTimeoutException extends MongoException {}

/**
*<div id="class.mongoprotocolexception" class="reference">   <h1 class="title">The MongoProtocolException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.5.0)</p>     <div class="section" id="mongoprotocolexception.intro">    <h2 class="title">简介</h2>    <p class="para">     When talking to MongoDB 2.6.0, and later, certain operations (such as writes) may throw MongoProtocolException when the response     from the server did not make sense - for example during network failure (we could read the entire response) or data corruption.    </p>    <p class="para">     This exception is also thrown when attempting to talk newer protocols then the server supports, for example using the     <strong class="classname">MongoWriteBatch</strong> when talking to a MongoDB server prior to 2.6.0.    </p>   </div>     <div class="section" id="mongoprotocolexception.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoProtocolException</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>     ;</div>      }</div>     </div>    <div class="section" id="mongoprotocolexception.examples">    <h2 class="title">范例</h2>    <div class="example" id="example-1627">     <p><strong>Example #1 Catching MongoProtocolException</strong></p>     <div class="example-contents"><p>      Running the following example against MongoDB prior to 2.6.0 will throw an MongoProtocolException     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$mc&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"test"</span><span style="color: #007700">);<br /><br />try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$batch&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoInsertBatch</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">);<br />}&nbsp;catch(</span><span style="color: #9876AA">MongoProtocolException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Current primary does not have a Write API </pre></div>     </div>    </div>   </div>    </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoProtocolException extends MongoException {}

/**
*<div id="class.mongoduplicatekeyexception" class="reference">   <h1 class="title">The MongoDuplicateKeyException class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.5.0)</p>     <div class="section" id="mongoduplicatekeyexception.intro">    <h2 class="title">简介</h2>    <p class="para">     Thrown when attempting to insert a document into a collection which already contains the same values for the <a href="http://php.net/manual/zh/mongocollection.ensureindex.php" class="link">unique keys</a>.    </p>   </div>     <div class="section" id="mongoduplicatekeyexception.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoDuplicateKeyException</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongowriteconcernexception.php" class="classname">MongoWriteConcernException</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>     ;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">{@link MongoWriteConcernException::getDocument}</span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>    <div class="section" id="mongoduplicatekeyexception.examples">    <h2 class="title">范例</h2>    <div class="example" id="example-1626">     <p><strong>Example #1 Catching MongoDuplicateKeyException</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$mc&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"test"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'_id'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br />}&nbsp;catch&nbsp;(</span><span style="color: #9876AA">MongoWriteConcernException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> localhost:27017: insertDocument :: caused by :: 11000 E11000 duplicate key error index: test.test.$_id_  dup key: { : 1 } </pre></div>     </div>    </div>   </div>   </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoDuplicateKeyException extends MongoWriteConcernException {

}

/**
*<div id="class.mongoresultexception" class="reference">   <h1 class="title">MongoResultException 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=1.3.0)</p>     <div class="section" id="mongoresultexception.intro">    <h2 class="title">简介</h2>    <p class="para">     MongoResultException 由几个助手命令（例如 <span class="methodname">{@link MongoCollection::findAndModify()}</span>）在发生失败事件时抛出。     原始的结果文档可以通过     <span class="methodname">{@link MongoResultException::getDocument()}</span> 获取。    </p>   </div>     <div class="section" id="mongoresultexception.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoResultException</strong>      </span>            <span class="ooclass">       <span class="modifier">extends</span>       <a href="http://php.net/manual/zh/class.mongoexception.php" class="classname">MongoException</a>      </span>      {</div>      <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongoresultexception.php#mongoresultexception.props.document">$<var class="varname">document</var></a></var>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>     <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var>     ;</div> <div class="fieldsynopsis">      <span class="modifier">protected</span>      <span class="type">int</span>       <var class="varname"><a href="http://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>     ;</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoresultexception.getdocument.php" class="methodname">getDocument</a></span>     ( <span class="methodparam">void</span>    )</div>      }</div>     </div>        <div class="section" id="mongoresultexception.props">    <h2 class="title">属性</h2>    <dl>            <dt id="mongoresultexception.props.document"><var class="varname"><var class="varname">document</var></var></dt>       <dd>        <p class="para">array 的原始结果文档。</p>      </dd>          </dl>    </div>     </div>              <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoResultException::getDocument} — 获取完整的结果文档</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.exceptions.php">Exceptions</a></div></div>
*/
class MongoResultException extends MongoException {
/**
*<div id="mongoresultexception.getdocument" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoResultException::getDocument</h1>   <p class="verinfo">(PECL mongo &gt;=1.3.0)</p><p class="refpurpose"><span class="refname">MongoResultException::getDocument</span> &mdash; <span class="dc-title">获取完整的结果文档</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongoresultexception.getdocument-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoResultException::getDocument</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    获取完整的错误结果文档。   </p>   </div>    <div class="refsect1 parameters" id="refsect1-mongoresultexception.getdocument-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongoresultexception.getdocument-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    完整的结果文档数组，包括是否有效的部分数据以及额外的键。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongoresultexception.getdocument-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1625">    <p><strong>Example #1 <span class="methodname"><strong>MongoResultException::getDocument()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$mc&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$mc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectCollection</span><span style="color: #007700">(</span><span style="color: #DD0000">"test"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"test"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Next&nbsp;promo"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">"select&nbsp;product"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"add&nbsp;inventory"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"do&nbsp;placement"</span><span style="color: #007700">),<br />)&nbsp;);<br /><br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Biz&nbsp;report"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">"run&nbsp;sales&nbsp;report"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"email&nbsp;report"&nbsp;</span><span style="color: #007700">)<br />)&nbsp;);<br /><br /></span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Biz&nbsp;report"</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"tasks"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(&nbsp;</span><span style="color: #DD0000">"run&nbsp;marketing&nbsp;report"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"email&nbsp;report"&nbsp;</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;),<br />&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"w"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">)<br />);<br /><br />try&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$retval&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">findAndModify</span><span style="color: #007700">(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">"inprogress"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"name"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"Biz&nbsp;report"</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'$set'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'$set'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">'inprogress'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"started"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">()))),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">null</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"sort"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;array(</span><span style="color: #DD0000">"priority"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;-</span><span style="color: #9876AA">1</span><span style="color: #007700">),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"new"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">true</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;&nbsp;&nbsp;&nbsp;);<br />}&nbsp;catch(</span><span style="color: #9876AA">MongoResultException&nbsp;$e</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">$res&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDocument</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> $set is not valid for storage. array(3) {   [&quot;lastErrorObject&quot;]=&gt;   array(5) {     [&quot;connectionId&quot;]=&gt;     int(6)     [&quot;err&quot;]=&gt;     string(30) &quot;$set is not valid for storage.&quot;     [&quot;code&quot;]=&gt;     int(52)     [&quot;n&quot;]=&gt;     int(0)     [&quot;ok&quot;]=&gt;     float(1)   }   [&quot;ok&quot;]=&gt;   float(0)   [&quot;errmsg&quot;]=&gt;   string(30) &quot;$set is not valid for storage.&quot; } </pre></div>    </div>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongoresultexception.php">MongoResultException</a></div></div>
     * @return array <p>The full result document as an array, including partial data if available and additional keys.</p>*/
    public function getDocument () {}

    public $document;


}

/**
*<div id="class.mongotimestamp" class="reference">   <h1 class="title">MongoTimestamp 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=1.0.1)</p>     <div class="section" id="mongotimestamp.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">MongoTimestamp</strong> 用于分片（sharding）。     如果你不是想写分布式工具，你需要的也许是     <a href="http://php.net/manual/zh/class.mongodate.php" class="classname">MongoDate</a>。    </p>    <p class="para">     <strong class="classname">MongoTimestamp</strong>      是 4 字节的时间戳（自新纪元以来的秒数），和 4 字节的自增长值。    </p>    <p class="para">     <em class="emphasis">      这个类不用于测量时间、为文档创建时间戳或为一个文档自动增加、更新时间戳。     </em>     除非你写的是关于分片式内部的交互，否则请停下，直接前往 <a href="http://php.net/manual/zh/class.mongodate.php" class="classname">MongoDate</a>，     不要再继续研究这个东西。这不是你要找的类。    </p>    <p class="para">     如果你在写一个分片工具，继续阅读。    </p>   </div>     <div class="section" id="mongotimestamp.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoTimestamp</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 字段 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">sec</var></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">inc</var></var>      <span class="initializer"> = 0</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongotimestamp.construct.php" class="methodname">__construct</a></span>     ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$sec</code><span class="initializer"> = time()</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$inc</code></span>   ]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongotimestamp.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>       }</div>     </div>  </div>                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoTimestamp::__construct} — 创建一个新的时间戳。</li><li>{@link MongoTimestamp::__toString} — 返回时间戳的字符串表示形式</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoTimestamp {
    /**
     * @link http://php.net/manual/en/class.mongotimestamp.php#mongotimestamp.props.sec
     * @var $sec
     */
    public $sec;

    /**
     * @link http://php.net/manual/en/class.mongotimestamp.php#mongotimestamp.props.inc
     * @var $inc
     */
    public $inc;

 /**
     * Creates a new timestamp. If no parameters are given, the current time is used
     * and the increment is automatically provided. The increment is set to 0 when the
     * module is loaded and is incremented every time this constructor is called
     * (without the $inc parameter passed in).
     *
     * @link http://php.net/manual/en/mongotimestamp.construct.php
     * @param int $sec [optional] Number of seconds since January 1st, 1970
     * @param int $inc [optional] Increment
     */
    public function __construct($sec = 0, $inc) {}

    /**
    * @return string
    */
    public function __toString() {}
}

/**
*<div id="class.mongoint32" class="reference">   <h1 class="title">MongoInt32 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=1.0.9)</p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this class in the new extension.</p>    <p class="para">     作为替代，新的扩展会根据 Integer 的值选择合适的数据库数据类型。    </p>   </div>     <div class="section" id="mongoint32.intro">    <h2 class="title">简介</h2>    <p class="para">     这个类可以在一个 64 位的操作系统上将 32 位的 integer 保存到数据库。    </p>   </div>     <div class="section" id="mongoint32.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoInt32</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 字段 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongoint32.php#mongoint32.props.value">$<var class="varname">value</var></a></var>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoint32.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoint32.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>    <div class="section">    <h2 class="title">字段</h2>    <dl>            <dt id="mongoint32.props.value"><var class="varname"><var class="varname">value</var></var></dt>       <dd>        <span class="simpara">        This is the string value of the 64-bit number.  例如，123 的值应该是 &quot;123&quot;。       </span>      </dd>          </dl>    </div>   </div>                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoInt32::__construct} — 创建一个新的 32位 integer。</li><li>{@link MongoInt32::__toString} — 返回该 32 位 integer 的字符串表示。</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoInt32 {
    /**
     * @link http://php.net/manual/en/class.mongoint32.php#mongoint32.props.value
     * @var $value
     */
    public $value;


    /**
     * Creates a new 32-bit number with the given value.
     *
     * @link http://php.net/manual/en/mongoint32.construct.php
     * @param string $value A number
     */
    public function __construct($value) {}

    /**
    * @return string
    */
    public function __toString() {}
}

/**
*<div id="class.mongoint64" class="reference">   <h1 class="title">MongoInt64 类</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=1.0.9)</p>   <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. There is no equivalent for this class in the new extension.</p>    <p class="para">     作为替代，新的扩展会根据 Integer 的值选择合适的数据库数据类型。    </p>   </div>     <div class="section" id="mongoint64.intro">    <h2 class="title">简介</h2>    <p class="para">     这个类能够在 32 位的系统上保存一个 64 位的 integer 到数据库。    </p>   </div>     <div class="section" id="mongoint64.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoInt64</strong>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// 字段 </div>     <div class="fieldsynopsis">      <span class="modifier">public</span>      <span class="type">string</span>       <var class="varname"><a href="http://php.net/manual/zh/class.mongoint64.php#mongoint64.props.value">$<var class="varname">value</var></a></var>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoint64.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/mongoint64.tostring.php" class="methodname">__toString</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>    <div class="section">    <h2 class="title">字段</h2>    <dl>            <dt id="mongoint64.props.value"><var class="varname"><var class="varname">value</var></var></dt>       <dd>        <span class="simpara">        64 位数字的字符串值。例如 ，123 的值是 &quot;123&quot;。       </span>      </dd>          </dl>    </div>   </div>                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoInt64::__construct} — 创建一个新的 64 位 integer。</li><li>{@link MongoInt64::__toString} — 返回该 64 位 integer 的字符串表示形式。</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoInt64 {
    /**
     * @link http://php.net/manual/en/class.mongoint64.php#mongoint64.props.value
     * @var $value
     */
    public $value;


    /**
     * Creates a new 64-bit number with the given value.
     *
     * @link http://php.net/manual/en/mongoint64.construct.php
     * @param string $value A number
     */
    public function __construct($value) {}

    /**
    * @return string
    */
    public function __toString() {}
}

/**
*<div id="class.mongolog" class="reference">   <h1 class="title">The MongoLog class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;=1.2.3)</p>     <div class="section" id="mongolog.intro">    <h2 class="title">简介</h2>    <p class="para">     Logging can be used to get detailed information about what the driver is     doing. Logging is disabled by default, but this class allows you to activate     specific levels of logging for various parts of the driver. Some examples:    </p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;print&nbsp;every&nbsp;log&nbsp;message&nbsp;possible<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;all&nbsp;log&nbsp;levels<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;all&nbsp;parts&nbsp;of&nbsp;the&nbsp;driver<br /><br />//&nbsp;print&nbsp;significant&nbsp;events&nbsp;about&nbsp;replica&nbsp;set&nbsp;failover<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">INFO</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">RS</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;print&nbsp;info-&nbsp;and&nbsp;diagnostic-level&nbsp;events&nbsp;for&nbsp;replica&nbsp;sets&nbsp;and&nbsp;connections<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">INFO</span><span style="color: #007700">|</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">FINE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">RS</span><span style="color: #007700">|</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">CON</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <blockquote class="note"><p><strong class="note">Note</strong>:      <p class="para">      By default, MongoLog emits all log messages as PHP notices. Depending      on the <acronym title="Server Application Programming Interface">SAPI</acronym> you use, messages may be sent to      <em>stderr</em> (for <acronym title="Command Line Interpreter/Interface">CLI</acronym>) or the web server&#039;s      error log. If, after configuring MongoLog, log messages are not appearing      as expected, ensure that the <strong><code>E_NOTICE</code></strong> bit is included      in <a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">error_reporting</a> and that      <a href="http://php.net/manual/zh/errorfunc.configuration.php#ini.display-errors" class="link">display_errors</a> is on.     </p>    </p></blockquote>   </div>     <div class="section" id="mongolog.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoLog</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.none"><var class="varname">NONE</var></a></var>      <span class="initializer"> = 0</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.all"><var class="varname">ALL</var></a></var>      <span class="initializer"> = 31</span>     ;</div>       <div class="classsynopsisinfo">level constants {</div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.warning"><var class="varname">WARNING</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.info"><var class="varname">INFO</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.fine"><var class="varname">FINE</var></a></var>      <span class="initializer"> = 4</span>     ;</div>       <div class="classsynopsisinfo">module constants {</div>     <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.rs"><var class="varname">RS</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.pool"><var class="varname">POOL</var></a></var>      <span class="initializer"> = 1</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.con"><var class="varname">CON</var></a></var>      <span class="initializer"> = 2</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.io"><var class="varname">IO</var></a></var>      <span class="initializer"> = 4</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.server"><var class="varname">SERVER</var></a></var>      <span class="initializer"> = 8</span>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type">int</span>       <var class="fieldsynopsis_varname"><a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.parse"><var class="varname">PARSE</var></a></var>      <span class="initializer"> = 16</span>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// Fields </div>     <div class="fieldsynopsis">      <span class="modifier">private</span>      <span class="modifier">static</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">callback</var></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">private</span>      <span class="modifier">static</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">level</var></var>     ;</div>      <div class="fieldsynopsis">      <span class="modifier">private</span>      <span class="modifier">static</span>      <span class="type">int</span>       <var class="varname">$<var class="varname">module</var></var>     ;</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">callable</span> <span class="methodname"><a href="http://php.net/manual/zh/mongolog.getcallback.php" class="methodname">getCallback</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongolog.getlevel.php" class="methodname">getLevel</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongolog.getmodule.php" class="methodname">getModule</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/mongolog.setcallback.php" class="methodname">setCallback</a></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$log_function</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/mongolog.setlevel.php" class="methodname">setLevel</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/mongolog.setmodule.php" class="methodname">setModule</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$module</code></span>    )</div>     }</div>     </div>    <div class="section">    <h2 class="title">预定义常量</h2>    <div class="section" id="mongolog.constants.types">     <h2 class="title">MongoLog Constants</h2>     <p class="para">      These constants can be used by both      <span class="function">{@link MongoLog::setLevel()}</span> and      <span class="function">{@link MongoLog::setModule()}</span>.     </p>      <dl>              <dt id="mongolog.constants.none"><strong><code>MongoLog::NONE</code></strong></dt>        <dd>         <span class="simpara">         Log nothing.        </span>       </dd>                    <dt id="mongolog.constants.all"><strong><code>MongoLog::ALL</code></strong></dt>        <dd>         <span class="simpara">         Log everything.        </span>       </dd>            </dl>     </div>     <div class="section" id="mongolog.constants.level">     <h2 class="title">MongoLog Level Constants</h2>     <p class="para">      These constants can be used by <span class="function">{@link MongoLog::setLevel()}</span>.     </p>     <dl>              <dt id="mongolog.constants.warning"><strong><code>MongoLog::WARNING</code></strong></dt>        <dd>         <span class="simpara">         Log events that are somewhat exceptional, but not quite worthy of an         actual exception (e.g. recoverable connection errors).        </span>       </dd>                    <dt id="mongolog.constants.info"><strong><code>MongoLog::INFO</code></strong></dt>        <dd>         <span class="simpara">         Log events that may be of interest to administrators, but are not         particularly noteworthy (e.g. option parsing, authentication steps).        </span>       </dd>                    <dt id="mongolog.constants.fine"><strong><code>MongoLog::FINE</code></strong></dt>        <dd>         <span class="simpara">         Log most events that the driver performs (e.g. server selection, socket         communication). Depending on the module being logged, this can be         extremely noisy and is primarily useful for debugging.        </span>       </dd>            </dl>     </div>     <div class="section" id="mongolog.constants.module">     <h2 class="title">MongoLog Module Constants</h2>     <p class="para">      These constants can be used by <span class="function">{@link MongoLog::setModule()}</span>.     </p>     <dl>              <dt id="mongolog.constants.con"><strong><code>MongoLog::CON</code></strong></dt>        <dd>         <span class="simpara">         Log connection activity. Creating new connections, authentication,         pinging, timeouts, etc.        </span>       </dd>                    <dt id="mongolog.constants.io"><strong><code>MongoLog::IO</code></strong></dt>        <dd>         <span class="simpara">         Log traffic to/from the database. Unless your program is trivial, this         will create an enormous number of log messages.        </span>       </dd>                    <dt id="mongolog.constants.parse"><strong><code>MongoLog::PARSE</code></strong></dt>        <dd>         <span class="simpara">         Log parsing of the connection string and options when constructing         <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a>.        </span>       </dd>                    <dt id="mongolog.constants.pool"><strong><code>MongoLog::POOL</code></strong></dt>        <dd>         <span class="simpara">         Previously used to log connection pool activity. This option is now a         deprecated alias of <strong><code>MongoLog::RS</code></strong>.        </span>       </dd>                    <dt id="mongolog.constants.rs"><strong><code>MongoLog::RS</code></strong></dt>        <dd>         <span class="simpara">         Log replica set activity. Failovers, read preference selection, etc.        </span>       </dd>                    <dt id="mongolog.constants.server"><strong><code>MongoLog::SERVER</code></strong></dt>        <dd>         <span class="simpara">         Previously used to log server status changes. This option is deprecated         in favor of <strong><code>MongoLog::RS</code></strong>.        </span>       </dd>            </dl>     </div>   </div>    <div class="section">    <h2 class="title">更新日志</h2>    <p class="para">     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>1.3.0</td>         <td>          Added <strong><code>MongoLog::CON</code></strong> and deprecated          <strong><code>MongoLog::POOL</code></strong> and          <strong><code>MongoLog::SERVER</code></strong>.         </td>        </tr>        </tbody>           </table>     </p>   </div>   </div>                                               <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoLog::getCallback} — Gets the previously set callback function</li><li>{@link MongoLog::getLevel} — Gets the level(s) currently being logged</li><li>{@link MongoLog::getModule} — Gets the module(s) currently being logged</li><li>{@link MongoLog::setCallback} — Sets a callback function to be invoked for events</li><li>{@link MongoLog::setLevel} — Sets the level(s) to be logged</li><li>{@link MongoLog::setModule} — Sets the module(s) to be logged</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.miscellaneous.php">Miscellaneous</a></div></div>
*/
class MongoLog {
        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.none
     */
    const NONE = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.all
     */
    const ALL = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.warning
     */
    const WARNING = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.info
     */
    const INFO = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.fine
     */
    const FINE = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.rs
     */
    const RS = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.pool
     */
    const POOL = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.io
     */
    const IO = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.server
     */
    const SERVER = 0;

        /**
     * @link http://php.net/manual/en/class.mongolog.php#mongolog.constants.parse
     */
    const PARSE = 0;

    const CON = 2;

/**
*<div id="mongolog.setcallback" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoLog::setCallback</h1>   <p class="verinfo">(PECL mongo &gt;= 1.3.0)</p><p class="refpurpose"><span class="refname">MongoLog::setCallback</span> &mdash; <span class="dc-title">Sets a callback function to be invoked for events</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongolog.setcallback-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>MongoLog::setCallback</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.types.callable.php" class="type callable">callable</a></span> <code class="parameter">$log_function</code></span>    )</div>    <p class="para rdfs-comment">    This function will set a callback function to be invoked for events in lieu    of emitting of PHP notice.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongolog.setcallback-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">log_function</code></dt>       <dd>        <p class="para">        The callback function to be invoked on events. It should have the following prototype:       </p>       <p class="para">        <div class="methodsynopsis dc-description">         <span class="methodname"><span class="replaceable">log_function</span></span>          ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$module</code></span>         , <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span>         , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span>         )</div>         <dl>                    <dt> <code class="parameter">module</code></dt>           <dd>            <span class="simpara">            One of the <a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.module" class="link">MongoLog            module constants</a>.           </span>          </dd>                             <dt> <code class="parameter">level</code></dt>           <dd>            <span class="simpara">            One of the <a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.level" class="link">MongoLog            level constants</a>.           </span>          </dd>                             <dt> <code class="parameter">message</code></dt>           <dd>            <span class="simpara">            The log message itself.           </span>          </dd>                  </dl>        </p>      </dd>          </dl>    </p>   </div>    <div class="refsect1 returnvalues" id="refsect1-mongolog.setcallback-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-mongolog.setcallback-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-1620">    <p><strong>Example #1 <span class="methodname"><strong>MongoLog::setCallback()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #9876AA">module2string</span><span style="color: #007700">(</span><span style="color: #9876AA">$module</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(</span><span style="color: #9876AA">$module</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">RS</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"REPLSET"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">CON</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"CON"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">IO</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"IO"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">SERVER</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"SERVER"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">PARSE</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"PARSE"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;return&nbsp;</span><span style="color: #DD0000">"UNKNOWN"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />function&nbsp;</span><span style="color: #9876AA">level2string</span><span style="color: #007700">(</span><span style="color: #9876AA">$level</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(</span><span style="color: #9876AA">$level</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">WARNING</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"WARN"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">INFO</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"INFO"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">FINE</span><span style="color: #007700">:&nbsp;return&nbsp;</span><span style="color: #DD0000">"FINE"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;return&nbsp;</span><span style="color: #DD0000">"UNKNOWN"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />function&nbsp;</span><span style="color: #9876AA">callback</span><span style="color: #007700">(</span><span style="color: #9876AA">$module</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$level</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$message</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">"Y-m-d&nbsp;H:i:s&nbsp;-&nbsp;"</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%s&nbsp;(%s):&nbsp;%s\n"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">module2string</span><span style="color: #007700">(</span><span style="color: #9876AA">$module</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">level2string</span><span style="color: #007700">(</span><span style="color: #9876AA">$level</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">$message</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;We&nbsp;specify&nbsp;the&nbsp;function&nbsp;name&nbsp;here,&nbsp;but&nbsp;any&nbsp;callable&nbsp;(e.g.&nbsp;anonymous&nbsp;function)&nbsp;will&nbsp;work<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setCallback</span><span style="color: #007700">(</span><span style="color: #DD0000">"callback"</span><span style="color: #007700">);<br /><br />new&nbsp;</span><span style="color: #9876AA">MongoClient</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> 2013-07-09 09:41:42 - PARSE (INFO): Parsing localhost:27017 2013-07-09 09:41:42 - PARSE (INFO): - Found node: localhost:27017 2013-07-09 09:41:42 - PARSE (INFO): - Connection type: STANDALONE 2013-07-09 09:41:42 - CON (INFO): mongo_get_read_write_connection: finding a STANDALONE connection 2013-07-09 09:41:42 - CON (INFO): connection_create: creating new connection for localhost:27017 2013-07-09 09:41:42 - CON (INFO): stream_connect: Not establishing SSL for localhost:27017 2013-07-09 09:41:42 - CON (INFO): get_server_flags: start 2013-07-09 09:41:42 - CON (FINE): send_packet: read from header: 36 2013-07-09 09:41:42 - CON (FINE): send_packet: data_size: 95 2013-07-09 09:41:42 - CON (FINE): get_server_flags: setting maxBsonObjectSize to 16777216 2013-07-09 09:41:42 - CON (FINE): get_server_flags: setting maxMessageSizeBytes to 48000000 2013-07-09 09:41:42 - CON (INFO): is_ping: pinging localhost:27017;-;.;1543 2013-07-09 09:41:42 - CON (FINE): send_packet: read from header: 36 2013-07-09 09:41:42 - CON (FINE): send_packet: data_size: 17 2013-07-09 09:41:42 - CON (INFO): is_ping: last pinged at 1373359302; time: 0ms 2013-07-09 09:41:42 - REPLSET (FINE): finding candidate servers 2013-07-09 09:41:42 - REPLSET (FINE): - all servers 2013-07-09 09:41:42 - REPLSET (FINE): filter_connections: adding connections: 2013-07-09 09:41:42 - REPLSET (FINE): - connection: type: STANDALONE, socket: 42, ping: 0, hash: localhost:27017;-;.;1543 2013-07-09 09:41:42 - REPLSET (FINE): filter_connections: done 2013-07-09 09:41:42 - REPLSET (FINE): limiting by seeded/discovered servers 2013-07-09 09:41:42 - REPLSET (FINE): - connection: type: STANDALONE, socket: 42, ping: 0, hash: localhost:27017;-;.;1543 2013-07-09 09:41:42 - REPLSET (FINE): limiting by seeded/discovered servers: done 2013-07-09 09:41:42 - REPLSET (FINE): limiting by credentials 2013-07-09 09:41:42 - REPLSET (FINE): - connection: type: STANDALONE, socket: 42, ping: 0, hash: localhost:27017;-;.;1543 2013-07-09 09:41:42 - REPLSET (FINE): limiting by credentials: done 2013-07-09 09:41:42 - REPLSET (FINE): sorting servers by priority and ping time 2013-07-09 09:41:42 - REPLSET (FINE): - connection: type: STANDALONE, socket: 42, ping: 0, hash: localhost:27017;-;.;1543 2013-07-09 09:41:42 - REPLSET (FINE): sorting servers: done 2013-07-09 09:41:42 - REPLSET (FINE): selecting near servers 2013-07-09 09:41:42 - REPLSET (FINE): selecting near servers: nearest is 0ms 2013-07-09 09:41:42 - REPLSET (FINE): - connection: type: STANDALONE, socket: 42, ping: 0, hash: localhost:27017;-;.;1543 2013-07-09 09:41:42 - REPLSET (FINE): selecting near server: done 2013-07-09 09:41:42 - REPLSET (INFO): pick server: random element 0 2013-07-09 09:41:42 - REPLSET (INFO): - connection: type: STANDALONE, socket: 42, ping: 0, hash: localhost:27017;-;.;1543 </pre></div>    </div>   </div>  </div>    <div class="refsect1 notes" id="refsect1-mongolog.setcallback-notes">   <h3 class="title">注释</h3>   <div class="caution"><strong class="caution">Caution</strong>    <p class="para">     This function is only available with PHP 5.3.0 and later.    </p>   </div>  </div>    <div class="up"><a href="http://php.net/manual/zh/class.mongolog.php">MongoLog</a></div></div>
     * @return boolean Returns <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public static function setCallback ( callable $log_function ) {}

/**
*<div id="mongolog.setlevel" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoLog::setLevel</h1>   <p class="verinfo">(PECL mongo &gt;= 1.2.3)</p><p class="refpurpose"><span class="refname">MongoLog::setLevel</span> &mdash; <span class="dc-title">Sets the level(s) to be logged</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongolog.setlevel-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>MongoLog::setLevel</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span>    )</div>    <p class="para rdfs-comment">    This function can be used to control logging verbosity and the types of    activities that should be logged. The    <a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.level" class="link">MongoLog level constants</a>    may be used with bitwise operators to specify multiple levels.   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;first,&nbsp;specify&nbsp;a&nbsp;logging&nbsp;module<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">CON</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;log&nbsp;messages&nbsp;for&nbsp;every&nbsp;level<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;log&nbsp;warning&nbsp;and&nbsp;info&nbsp;messages&nbsp;only<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">WARNING</span><span style="color: #007700">|</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">INFO</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;log&nbsp;everything&nbsp;except&nbsp;fine&nbsp;activity<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL&nbsp;</span><span style="color: #007700">&amp;&nbsp;(~</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">FINE</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    <p class="para">    Note that you must also call <span class="function">{@link MongoLog::setModule()}</span> to    specify which modules(s) of the driver should log.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongolog.setlevel-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">level</code>      </dt>       <dd>        <p class="para">        The level(s) you would like to log.       </p>      </dd>          </dl>    </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongolog.php">MongoLog</a></div></div>
     * @return void*/
    public static function setLevel($level) {}

/**
*<div id="mongolog.getlevel" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoLog::getLevel</h1>   <p class="verinfo">(PECL mongo &gt;= 1.2.3)</p><p class="refpurpose"><span class="refname">MongoLog::getLevel</span> &mdash; <span class="dc-title">Gets the level(s) currently being logged</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongolog.getlevel-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>MongoLog::getLevel</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This function can be used to see which log levels are currently enabled.    The returned integer may be compared with the    <a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.level" class="link">MongoLog level constants</a>    using bitwise operators to check for specific log levels.   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">getLevel</span><span style="color: #007700">()&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">FINE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"lots&nbsp;of&nbsp;logs\n"</span><span style="color: #007700">;<br />}<br /><br />if&nbsp;(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">getLevel</span><span style="color: #007700">()&nbsp;^&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">NONE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"logging,&nbsp;at&nbsp;least&nbsp;a&nbsp;little\n"</span><span style="color: #007700">;<br />}<br /><br />if&nbsp;(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">getLevel</span><span style="color: #007700">()&nbsp;==&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"logging&nbsp;at&nbsp;the&nbsp;highest&nbsp;levels\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>   </div>    <div class="refsect1 parameters" id="refsect1-mongolog.getlevel-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongolog.getlevel-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the level(s) currently being logged.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongolog.php">MongoLog</a></div></div>
     * @return int Returns the current level*/
    public static function getLevel() {}

/**
*<div id="mongolog.setmodule" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoLog::setModule</h1>   <p class="verinfo">(PECL mongo &gt;= 1.2.3)</p><p class="refpurpose"><span class="refname">MongoLog::setModule</span> &mdash; <span class="dc-title">Sets the module(s) to be logged</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongolog.setmodule-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type"><span class="type void">void</span></span> <span class="methodname"><strong>MongoLog::setModule</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$module</code></span>    )</div>    <p class="para rdfs-comment">    This function can be used to set which driver modules should be logged. The    <a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.module" class="link">MongoLog module constants</a>    may be used with bitwise operators to specify multiple modules.   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;first,&nbsp;specify&nbsp;a&nbsp;logging&nbsp;level<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;log&nbsp;replica&nbsp;set&nbsp;activity<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">RS</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;log&nbsp;replica&nbsp;sets&nbsp;and&nbsp;connection&nbsp;activity<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">RS</span><span style="color: #007700">|</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">CON</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;log&nbsp;everything&nbsp;except&nbsp;IO&nbsp;activity<br /></span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">setModule</span><span style="color: #007700">(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">ALL&nbsp;</span><span style="color: #007700">&amp;&nbsp;(~</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">IO</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>    <p class="para">    Note that you must also call <span class="function">{@link MongoLog::setLevel()}</span> to    enable logging.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongolog.setmodule-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">module</code>      </dt>       <dd>        <p class="para">        The module(s) you would like to log.       </p>      </dd>          </dl>    </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongolog.php">MongoLog</a></div></div>
     * @return void*/
    public static function setModule($module) {}

/**
*<div id="mongolog.getmodule" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoLog::getModule</h1>   <p class="verinfo">(PECL mongo &gt;= 1.2.3)</p><p class="refpurpose"><span class="refname">MongoLog::getModule</span> &mdash; <span class="dc-title">Gets the module(s) currently being logged</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongolog.getmodule-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>MongoLog::getModule</strong></span>     ( <span class="methodparam">void</span>    )</div>    <p class="para rdfs-comment">    This function can be used to see which driver modules are currently being    logged. The returned integer may be compared with the    <a href="http://php.net/manual/zh/class.mongolog.php#mongolog.constants.module" class="link">MongoLog module constants</a>    using bitwise operators to check if specific modules are being logged.   </p>   <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">if&nbsp;(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">getModule</span><span style="color: #007700">()&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">RS</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"logging&nbsp;replica&nbsp;sets\n"</span><span style="color: #007700">;<br />}<br /><br />if&nbsp;(</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">getModule</span><span style="color: #007700">()&nbsp;^&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">NONE</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"logging&nbsp;something\n"</span><span style="color: #007700">;<br />}<br /><br />if&nbsp;((</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">getModule</span><span style="color: #007700">()&nbsp;&amp;&nbsp;</span><span style="color: #9876AA">MongoLog</span><span style="color: #007700">::</span><span style="color: #9876AA">IO</span><span style="color: #007700">)&nbsp;==&nbsp;</span><span style="color: #9876AA">0</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"not&nbsp;logging&nbsp;io\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>   </div>   </div>    <div class="refsect1 parameters" id="refsect1-mongolog.getmodule-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongolog.getmodule-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the module(s) currently being logged.   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongolog.php">MongoLog</a></div></div>
     * @return int Returns the modules currently being logged*/
    public static function getModule() {}
}

/**
*<div id="class.mongopool" class="reference">   <h1 class="title">The MongoPool class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.2.3)</p>     <div class="section" id="mongopool.intro">    <h2 class="title">简介</h2>    <div class="warning"><strong class="warning">Warning</strong>     <p class="para">      The current (1.3.0+) releases of the driver no longer implements pooling.      This class and its methods are therefore deprecated and should not be      used.     </p>    </div>   </div>     <div class="section" id="mongopool.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoPool</strong>      </span>      {</div>       <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/mongopool.getsize.php" class="methodname">getSize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><a href="http://php.net/manual/zh/mongopool.info.php" class="methodname">info</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><a href="http://php.net/manual/zh/mongopool.setsize.php" class="methodname">setSize</a></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span>    )</div>     }</div>     </div>   <div class="section">    <h2 class="title">更新日志</h2>    <p class="para">     <table class="doctable informaltable">             <thead>        <tr>         <th>版本</th>         <th>说明</th>        </tr>        </thead>        <tbody class="tbody">        <tr>         <td>1.3.0</td>         <td>          This functionality has been removed and no longer does anything other          than emit deprecation warnings. This class is only kept around for          backwards compatability and will be removed in the near future.         </td>        </tr>         <tr>         <td>1.2.11</td>         <td>         Emits <strong><code>E_DEPRECATED</code></strong> when used.         </td>        </tr>        </tbody>           </table>     </p>   </div>   </div>                       <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link MongoPool::getSize} — Get pool size for connection pools</li><li>{@link MongoPool::info} — Returns information about all connection pools</li><li>{@link MongoPool::setSize} — Set the size for future connection pools</li></ul> <div class="up"><a href="http://php.net/manual/zh/mongo.miscellaneous.php">Miscellaneous</a></div></div>
*/
class MongoPool {
/**
*<div id="mongopool.info" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoPool::info</h1>   <p class="verinfo">(PECL mongo &gt;= 1.2.3)</p><p class="refpurpose"><span class="refname">MongoPool::info</span> &mdash; <span class="dc-title">Returns information about all connection pools</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongopool.info-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">array</span> <span class="methodname"><strong>MongoPool::info</strong></span>     ( <span class="methodparam">void</span>    )</div>     <p class="para rdfs-comment">    Returns an array of information about all connection pools.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongopool.info-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongopool.info-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Each connection pool has an identifier, which starts with the host. For each    pool, this function shows the following fields:    <dl>            <dt>        <code class="parameter">in use</code>      </dt>       <dd>        <p class="para">        The number of connections currently being used by        <a href="http://php.net/manual/zh/class.mongo.php" class="classname">Mongo</a> instances.       </p>      </dd>                 <dt>        <code class="parameter">in pool</code>      </dt>       <dd>        <p class="para">        The number of connections currently in the pool (not being used).       </p>      </dd>                 <dt>        <code class="parameter">remaining</code>      </dt>       <dd>        <p class="para">        The number of connections that could be created by this pool. For        example, suppose a pool had 5 connections remaining and 3 connections in        the pool.  We could create 8 new instances of        <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> before we exhausted this pool        (assuming no instances of <a href="http://php.net/manual/zh/class.mongoclient.php" class="classname">MongoClient</a> went out of        scope, returning their connections to the pool).       </p>       <p class="para">        A negative number means that this pool will spawn unlimited connections.       </p>       <p class="para">        Before a pool is created, you can change the max number of connections by        calling <span class="function">{@link Mongo::setPoolSize()}</span>. Once a pool is showing        up in the output of this function, its size cannot be changed.       </p>      </dd>                 <dt>        <code class="parameter">total</code>      </dt>       <dd>        <p class="para">        The total number of connections allowed for this pool.  This should be        greater than or equal to &quot;in use&quot; + &quot;in pool&quot; (or -1).       </p>      </dd>                 <dt>        <code class="parameter">timeout</code>      </dt>       <dd>        <p class="para">        The socket timeout for connections in this pool. This is how long        connections in this pool will attempt to connect to a server before        giving up.       </p>      </dd>                 <dt>        <code class="parameter">waiting</code>      </dt>       <dd>        <p class="para">        If you have capped the pool size, workers requesting connections from        the pool may block until other workers return their connections. This        field shows how many milliseconds workers have blocked for connections to        be released.  If this number keeps increasing, you may want to use        <span class="function">{@link MongoPool::setSize()}</span> to add more connections to your        pool.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 changelog" id="refsect1-mongopool.info-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongopool.php">MongoPool</a></div></div>
     * @return array Each connection pool has an identifier, which starts with the host. For*/
    public static function info() {}

/**
*<div id="mongopool.setsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoPool::setSize</h1>   <p class="verinfo">(PECL mongo &gt;= 1.2.3)</p><p class="refpurpose"><span class="refname">MongoPool::setSize</span> &mdash; <span class="dc-title">Set the size for future connection pools</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongopool.setsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">bool</span> <span class="methodname"><strong>MongoPool::setSize</strong></span>     ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span>    )</div>     <p class="para rdfs-comment">    Sets the max number of connections new pools will be able to create.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-mongopool.setsize-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt>        <code class="parameter">size</code>      </dt>       <dd>        <p class="para">        The max number of connections future pools will be able to create.        Negative numbers mean that the pool will spawn an infinite number of        connections.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongopool.setsize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the former value of pool size.   </p>  </div>    <div class="refsect1 changelog" id="refsect1-mongopool.setsize-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>     <div class="refsect1 examples" id="refsect1-mongopool.setsize-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-1622">     <p><strong>Example #1 <span class="function">{@link Mongo::setPoolSize()}</span> example</strong></p>     <div class="example-contents"><p>      If you set the pool size to <em>n</em> and then create      <em>n</em> connections, attempting to create an      <em>n+1</em>st connection will throw a      <a href="http://php.net/manual/zh/class.mongoconnectionexception.php" class="classname">MongoConnectionException</a>.     </p></div>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//&nbsp;only&nbsp;allow&nbsp;one&nbsp;connection&nbsp;to&nbsp;a&nbsp;server<br /></span><span style="color: #9876AA">MongoPool</span><span style="color: #007700">::</span><span style="color: #9876AA">setSize</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;creates&nbsp;one&nbsp;connection&nbsp;to&nbsp;localhost:27017<br /></span><span style="color: #9876AA">$m1&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//&nbsp;attempt&nbsp;to&nbsp;create&nbsp;a&nbsp;second&nbsp;connection&nbsp;to&nbsp;localhost:27017<br />//&nbsp;only&nbsp;one&nbsp;connection&nbsp;is&nbsp;allowed,&nbsp;so&nbsp;this&nbsp;will&nbsp;throw&nbsp;an&nbsp;exception<br /></span><span style="color: #9876AA">$m2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Fatal error: Uncaught exception &#039;MongoConnectionException&#039; with message &#039;no more connections in pool&#039; in /path/to/php/script.php:10 Stack trace: #0 /path/to/php/script.php(10): Mongo-&gt;__construct() #1 {main}   thrown in /path/to/php/script.php on line 10 </pre></div>     </div>    </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-mongopool.setsize-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link MongoPool::getSize()} - Get pool size for connection pools</span></li>     <li class="member"><span class="function">{@link MongoPool::info()} - Returns information about all connection pools</span></li>     <li class="member">The <a href="http://php.net/manual/zh/mongo.connecting.php" class="link">connection</a> documentation.</li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/class.mongopool.php">MongoPool</a></div></div>
     * @return boolean Returns the former value of pool size*/
    public static function setSize($size) {}

/**
*<div id="mongopool.getsize" class="refentry">  <div class="refnamediv">   <h1 class="refname">MongoPool::getSize</h1>   <p class="verinfo">(PECL mongo &gt;= 1.2.3)</p><p class="refpurpose"><span class="refname">MongoPool::getSize</span> &mdash; <span class="dc-title">Get pool size for connection pools</span></p>   </div>   <div class="refsect1 description" id="refsect1-mongopool.getsize-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="modifier">static</span> <span class="type">int</span> <span class="methodname"><strong>MongoPool::getSize</strong></span>     ( <span class="methodparam">void</span>    )</div>   </div>    <div class="refsect1 parameters" id="refsect1-mongopool.getsize-parameters">   <h3 class="title">参数</h3>   <p class="para">此函数没有参数。</p>  </div>    <div class="refsect1 returnvalues" id="refsect1-mongopool.getsize-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the current pool size.   </p>  </div>   <div class="refsect1 changelog" id="refsect1-mongopool.getsize-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>1.2.11</td>        <td>Emits <strong><code>E_DEPRECATED</code></strong> when used.</td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-mongopool.getsize-examples">   <h3 class="title">范例</h3>   <div class="example" id="mongobindata.intro-example">    <p><strong>Example #1 Changing pool size</strong></p>    <div class="example-contents"><p>     This returns the default pool size, sets a new pool size, then prints the     new pool size and the pool debugging information.  Note that changing the     pool size only affects new connection pools, it does not change old ones.    </p></div>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$connection&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">(</span><span style="color: #DD0000">"host1"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;pool&nbsp;size&nbsp;is&nbsp;-1<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"pool&nbsp;size&nbsp;is:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">MongoPool</span><span style="color: #007700">::</span><span style="color: #9876AA">getSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">"setting&nbsp;pool&nbsp;size&nbsp;to&nbsp;200\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">MongoPool</span><span style="color: #007700">::</span><span style="color: #9876AA">setSize</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;pool&nbsp;size&nbsp;is&nbsp;200<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"pool&nbsp;size&nbsp;is:&nbsp;"</span><span style="color: #007700">.</span><span style="color: #9876AA">MongoPool</span><span style="color: #007700">::</span><span style="color: #9876AA">getSize</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$conn2&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">(</span><span style="color: #DD0000">"host2"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;remaining&nbsp;for&nbsp;host1&nbsp;is&nbsp;-2<br />//&nbsp;remaining&nbsp;for&nbsp;host2&nbsp;is&nbsp;199<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Mongo</span><span style="color: #007700">::</span><span style="color: #9876AA">poolDebug</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-mongopool.getsize-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link MongoPool::setSize()} - Set the size for future connection pools</span></li>     <li class="member"><span class="function">{@link MongoPool::info()} - Returns information about all connection pools</span></li>     <li class="member">The <a href="http://php.net/manual/zh/mongo.connecting.php" class="link">connection</a> documentation.</li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/class.mongopool.php">MongoPool</a></div></div>
     * @return int Returns the current pool size*/
    public static function getSize() {}
}


/**
*<div id="class.mongomaxkey" class="reference">   <h1 class="title">The MongoMaxKey class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.0.2)</p>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this class include:</p>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongodb-bson-maxkey.php" class="classname">MongoDB\BSON\MaxKey</a></li>    </ul>   </div>     <div class="section" id="mongomaxkey.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">MongoMaxKey</strong> is an special type used by the database     that compares greater than all other possible BSON values. Thus, if a query     is sorted by a given field in ascending order, any document with a      <strong class="classname">MongoMaxKey</strong> as its value will be returned last.    </p>    <p class="para">     <strong class="classname">MongoMaxKey</strong> has no associated fields, methods, or     constants. It is merely the &quot;greatest&quot; value that can be represented in the     database.    </p>    <blockquote class="note"><p><strong class="note">Note</strong>:      <span class="simpara">      <strong class="classname">MongoMaxKey</strong> is used internally by MongoDB for      indexing and sharding. There is generally no reason to use this class in      an application.     </span>    </p></blockquote>   </div>     <div class="section" id="mongomaxkey.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoMaxKey</strong>      </span>      {</div>     }</div>     </div>    <div class="section" id="mongomaxkey.example">    <h2 class="title">Using <strong class="classname">MongoMaxKey</strong> as a value</h2>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"task"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"dishes"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"doBy"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoMaxKey</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"task"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"staff&nbsp;meeting"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"doBy"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">"+4&nbsp;days"</span><span style="color: #007700">))));<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">sort</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"doBy"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <p class="para">     The cursor will return the staff meeting document followed by the dishes     document. The dishes document will always be returned last, regardless of     what else is added to the collection (unless other documents are added with     <strong class="classname">MongoMaxKey</strong> in their &quot;doBy&quot; field).    </p>   </div>    <div class="simplesect">    <h3 class="title">参见</h3>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongominkey.php" class="classname">MongoMinKey</a></li>    </ul>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoMaxKey {
}

/**
*<div id="class.mongominkey" class="reference">   <h1 class="title">The MongoMinKey class</h1>     <div class="partintro"><p class="verinfo">(PECL mongo &gt;= 1.0.2)</p>    <div class="warning"><strong class="warning">Warning</strong>    <p class="para">This extension that defines this class is deprecated. Instead, the <a href="http://php.net/manual/zh/set.mongodb.php" class="link">MongoDB</a> extension should be used. Alternatives to this class include:</p>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongodb-bson-minkey.php" class="classname">MongoDB\BSON\MinKey</a></li>    </ul>   </div>     <div class="section" id="mongominkey.intro">    <h2 class="title">简介</h2>    <p class="para">     <strong class="classname">MongoMinKey</strong> is an special type used by the database     that compares less than all other possible BSON values. Thus, if a query is     sorted by a given field in ascending order, any document with a      <strong class="classname">MongoMinKey</strong> as its value will be returned first.    </p>    <p class="para">     <strong class="classname">MongoMinKey</strong> has no associated fields, methods, or     constants. It is merely the &quot;smallest&quot; value that can be represented in the     database.    </p>    <blockquote class="note"><p><strong class="note">Note</strong>:      <span class="simpara">      <strong class="classname">MongoMinKey</strong> is used internally by MongoDB for      indexing and sharding. There is generally no reason to use this class in      an application.     </span>    </p></blockquote>   </div>     <div class="section" id="mongominkey.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">MongoMinKey</strong>      </span>      {</div>     }</div>     </div>    <div class="section" id="mongominkey.example">    <h2 class="title">Using <strong class="classname">MongoMinKey</strong> as a value</h2>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /><br />$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"task"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"lunch"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"doBy"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoMinKey</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insert</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"task"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"staff&nbsp;meeting"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"doBy"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;new&nbsp;</span><span style="color: #9876AA">MongoDate</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">"+4&nbsp;days"</span><span style="color: #007700">))));<br /><br /></span><span style="color: #9876AA">$cursor&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">$collection</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">find</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">sort</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"doBy"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <p class="para">     The cursor will return the lunch document followed by the staff meeting     document. The lunch document will always be returned first, regardless of     what else is added to the collection (unless other documents are added with     <strong class="classname">MongoMinKey</strong> in their &quot;doBy&quot; field).    </p>   </div>    <div class="simplesect">    <h3 class="title">参见</h3>    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/class.mongomaxkey.php" class="classname">MongoMaxKey</a></li>    </ul>   </div>  </div>  <div class="up"><a href="http://php.net/manual/zh/mongo.types.php">Types</a></div></div>
*/
class MongoMinKey {
}

