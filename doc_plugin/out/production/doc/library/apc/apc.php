<?php

/**
 * Stubs for APC 3.1.4
 *
 * Author: Johnny Woo
 * Date: Aug 9, 2010
 * Time: 12:19:14 PM
 */

/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_LIST_ACTIVE', 1);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_LIST_DELETED', 2);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_TYPE', 1);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_KEY', 2);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_FILENAME', 4);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_DEVICE', 8);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_INODE', 16);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_VALUE', 32);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_MD5', 64);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_NUM_HITS', 128);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_MTIME', 256);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_CTIME', 512);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_DTIME', 1024);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_ATIME', 2048);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_REFCOUNT', 4096);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_MEM_SIZE', 8192);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_TTL', 16384);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_NONE', 0);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_ITER_ALL', -1);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_BIN_VERIFY_MD5', 1);
/**
 * @link http://php.net/manual/en/apc.constants.php
 */
define('APC_BIN_VERIFY_CRC32', 2);

/**
*<div id="function.apc-cache-info" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_cache_info</h1>   <p class="verinfo">(PECL apc &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">apc_cache_info</span> &mdash; <span class="dc-title">    Retrieves cached information from APC&#039;s data store   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-cache-info-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>apc_cache_info</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$cache_type</code><span class="initializer"> = &quot;&quot;</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$limited</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ]] )</div>    <p class="para rdfs-comment">    Retrieves cached information and meta-data from APC&#039;s data store.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-cache-info-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">cache_type</code></dt>       <dd>        <p class="para">        If <code class="parameter">cache_type</code> is &quot;<em>user</em>&quot;,        information about the user cache will be returned.       </p>       <p class="para">         If <code class="parameter">cache_type</code> is &quot;<em>filehits</em>&quot;,        information about which files have been served from the bytecode cache         for the current request will be returned. This feature must be enabled at        compile time using <strong class="option configure">--enable-filehits</strong> .       </p>       <p class="para">        If an invalid or no <code class="parameter">cache_type</code> is specified, information about         the system cache (cached files) will be returned.       </p>      </dd>                 <dt> <code class="parameter">limited</code></dt>       <dd>        <p class="para">        If <code class="parameter">limited</code> is <strong><code>TRUE</code></strong>, the        return value will exclude the individual list of cache entries.  This        is useful when trying to optimize calls for statistics gathering.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-cache-info-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Array of cached data (and meta-data) 或者在失败时返回 <strong><code>FALSE</code></strong>   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     <span class="function"><strong>apc_cache_info()</strong></span> will raise a warning if it is unable to     retrieve APC cache data. This typically occurs when APC is not enabled.    </span>   </p></blockquote>  </div>    <div class="refsect1 changelog" id="refsect1-function.apc-cache-info-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>3.0.11</td>        <td>         The <code class="parameter">limited</code> parameter was introduced.        </td>       </tr>        <tr>        <td>3.0.16</td>        <td>         The &quot;<em>filehits</em>&quot; option for the         <code class="parameter">cache_type</code> parameter was introduced.        </td>       </tr>       </tbody>         </table>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-cache-info-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-400">     <p><strong>Example #1 A <span class="function"><strong>apc_cache_info()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">apc_cache_info</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Array (     [num_slots] =&gt; 2000     [ttl] =&gt; 0     [num_hits] =&gt; 9     [num_misses] =&gt; 3     [start_time] =&gt; 1123958803     [cache_list] =&gt; Array         (             [0] =&gt; Array                 (                     [filename] =&gt; /path/to/apc_test.php                     [device] =&gt; 29954                     [inode] =&gt; 1130511                     [type] =&gt; file                     [num_hits] =&gt; 1                     [mtime] =&gt; 1123960686                     [creation_time] =&gt; 1123960696                     [deletion_time] =&gt; 0                     [access_time] =&gt; 1123962864                     [ref_count] =&gt; 1                     [mem_size] =&gt; 677                 )             [1] =&gt; Array (...iterates for each cached file) ) </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-cache-info-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><a href="http://php.net/manual/zh/apc.configuration.php" class="link">APC configuration directives</a></li>     <li class="member"><span class="methodname">{@link APCIterator::getTotalSize()} - 获取所有缓存的尺寸大小</span></li>     <li class="member"><span class="methodname">{@link APCIterator::getTotalHits()} - 获取缓存命中数</span></li>     <li class="member"><span class="methodname">{@link APCIterator::getTotalCount()} - 获取总数</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return array|bool Array of cached data (and meta-data) or FALSE on failure.*/
function apc_cache_info($type = '', $limited = false){}

/**
*<div id="function.apc-clear-cache" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_clear_cache</h1>   <p class="verinfo">(PECL apc &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">apc_clear_cache</span> &mdash; <span class="dc-title">    清除APC缓存   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-clear-cache-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_clear_cache</strong></span>     ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$cache_type</code><span class="initializer"> = &quot;&quot;</span></span>   ] )</div>    <p class="para rdfs-comment">     清除用户或者系统缓存   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-clear-cache-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">cache_type</code></dt>       <dd>        <p class="para">        如果 <code class="parameter">cache_type</code> 是 &quot;<em>user</em>&quot;, 用户        的缓存将被清除; 否则系统缓存(缓存文件)将被清除。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-clear-cache-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-clear-cache-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link apc_cache_info()} - Retrieves cached information from APC's data store</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool Returns TRUE on success or FALSE on failure.*/
function apc_clear_cache($cache_type = ''){}

/**
*<div id="function.apc-sma-info" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_sma_info</h1>   <p class="verinfo">(PECL apc &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">apc_sma_info</span> &mdash; <span class="dc-title">    Retrieves APC&#039;s Shared Memory Allocation information   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-sma-info-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>apc_sma_info</strong></span>     ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$limited</code><span class="initializer"> = <strong><code>FALSE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Retrieves APC&#039;s Shared Memory Allocation information.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-sma-info-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">limited</code></dt>       <dd>        <p class="para">        When set to <strong><code>FALSE</code></strong> (default) <span class="function"><strong>apc_sma_info()</strong></span> will        return a detailed information about each segment.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-sma-info-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Array of Shared Memory Allocation data; <strong><code>FALSE</code></strong> on failure.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-sma-info-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-410">     <p><strong>Example #1 A <span class="function"><strong>apc_sma_info()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">apc_sma_info</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Array (     [num_seg] =&gt; 1     [seg_size] =&gt; 31457280     [avail_mem] =&gt; 31448408     [block_lists] =&gt; Array         (             [0] =&gt; Array                 (                     [0] =&gt; Array                         (                             [size] =&gt; 31448408                             [offset] =&gt; 8864                         )                  )          )  ) </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-sma-info-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member">      <a href="http://php.net/manual/zh/apc.configuration.php" class="link">APC configuration directives</a>     </li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return array|bool Array of Shared Memory Allocation data; FALSE on failure.*/
function apc_sma_info($limited = false){}

/**
*<div id="function.apc-store" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_store</h1>   <p class="verinfo">(PECL apc &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">apc_store</span> &mdash; <span class="dc-title">    Cache a variable in the data store   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-store-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_store</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$var</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer"> = 0</span></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>apc_store</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$unused</code><span class="initializer"> = NULL</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer"> = 0</span></span>   ]] )</div>    <p class="para rdfs-comment">    缓存一个变量到APC中   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     与PHP中其他的机制不同，使用<span class="function"><strong>apc_store()</strong></span> 存储的变量     在不同的请求之间一直持久存在（直到从缓存系统中移除）。    </span>   </p></blockquote>  </div>   <div class="refsect1 parameters" id="refsect1-function.apc-store-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        存储缓存变量使用的名称.<code class="parameter">key</code>是唯一的，所以        两个值使用同一个 <code class="parameter">key</code>，原来的将被新的值覆盖。       </p>      </dd>                 <dt> <code class="parameter">var</code></dt>       <dd>        <p class="para">        The variable to store       </p>      </dd>                 <dt> <code class="parameter">ttl</code></dt>       <dd>        <p class="para">        生存时间;在缓存中存储<code class="parameter">var</code>共<code class="parameter">ttl</code>秒,        在<code class="parameter">ttl</code>秒过去后,存储的变量将会从缓存中擦除(在下一次请求时),        如果没有设置<code class="parameter">ttl</code>(或者<code class="parameter">ttl</code>是<em>0</em>),        变量将一直存活到被手动移除为止,除此之外不在缓存中的可能原因是，        缓存系统使用clear，或者restart等。       </p>      </dd>                 <dt> <code class="parameter">values</code></dt>       <dd>        <p class="para">        Names in key, variables in value.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.apc-store-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。    Second syntax returns array with error keys.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-store-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-411">     <p><strong>Example #1 <span class="function"><strong>apc_store()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'BAR'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$bar</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> string(3) &quot;BAR&quot; </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-store-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link apc_add()} - 缓存一个变量到数据存储</span></li>     <li class="member"><span class="function">{@link apc_fetch()} - 从缓存中取出存储的变量</span></li>     <li class="member"><span class="function">{@link apc_delete()} - 从用户缓存中删除某个变量</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool|array Returns TRUE on success or FALSE on failure | array with error keys.*/
function apc_store($key, $var, $ttl = 0){}

/**
*<div id="function.apc-fetch" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_fetch</h1>   <p class="verinfo">(PECL apc &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">apc_fetch</span> &mdash; <span class="dc-title">   从缓存中取出存储的变量   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-fetch-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>apc_fetch</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$key</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span>   ] )</div>    <p class="para rdfs-comment">    从缓存中取出存储的变量   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.apc-fetch-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">      <code class="parameter">key</code> 是使用        <span class="function">{@link apc_store()}</span> 存储的键名。         如果传递的是一个数组，则数组中的每个元素的值都被返回       </p>      </dd>                 <dt> <code class="parameter">success</code></dt>       <dd>        <p class="para">        成功时为 <strong><code>TRUE</code></strong> 失败时 <strong><code>FALSE</code></strong>。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.apc-fetch-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    存储一个变量或者一个数组失败时返回; <strong><code>FALSE</code></strong>    </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-fetch-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-407">     <p><strong>Example #1 <span class="function"><strong>apc_fetch()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'BAR'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$bar</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> string(3) &quot;BAR&quot; </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 changelog" id="refsect1-function.apc-fetch-changelog">   <h3 class="title">更新日志</h3>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>      </thead>      <tbody class="tbody">      <tr>       <td>3.0.17</td>       <td>        The <code class="parameter">success</code> parameter was added.       </td>      </tr>      </tbody>       </table>   </div>    <div class="refsect1 seealso" id="refsect1-function.apc-fetch-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link apc_store()} - Cache a variable in the data store</span></li>     <li class="member"><span class="function">{@link apc_delete()} - 从用户缓存中删除某个变量</span></li>     <li class="member"><a href="http://php.net/manual/zh/class.apciterator.php" class="classname">APCIterator</a></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return mixed The stored variable or array of variables on success; FALSE on failure.*/
function apc_fetch($key, &$success = null){}

/**
*<div id="function.apc-delete" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_delete</h1>   <p class="verinfo">(PECL apc &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">apc_delete</span> &mdash; <span class="dc-title">    从用户缓存中删除某个变量   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-delete-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>apc_delete</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    )</div>    <p class="para rdfs-comment">    从数据存储里删除某个变量。   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.apc-delete-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        <code class="parameter">key</code> 即是你用        <span class="function">{@link apc_store()}</span> 存储数据时所设定的标记名称。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.apc-delete-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.apc-delete-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-405">     <p><strong>Example #1 A <span class="function"><strong>apc_delete()</strong></span> 范例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'BAR'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$bar</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">apc_delete</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">//&nbsp;this&nbsp;is&nbsp;obviously&nbsp;useless&nbsp;in&nbsp;this&nbsp;form<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.apc-delete-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link apc_store()} - Cache a variable in the data store</span></li>     <li class="member"><span class="function">{@link apc_fetch()} - 从缓存中取出存储的变量</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool|string[] Returns TRUE on success or FALSE on failure. For array of keys returns list of failed keys.*/
function apc_delete($key){}

/**
*<div id="function.apc-define-constants" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_define_constants</h1>   <p class="verinfo">(PECL apc &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">apc_define_constants</span> &mdash; <span class="dc-title">    Defines a set of constants for retrieval and mass-definition    </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-define-constants-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_define_constants</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$constants</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$case_sensitive</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>     <p class="para rdfs-comment">    <span class="function">{@link define()}</span> is notoriously slow. Since the main benefit of    APC is to increase the performance of scripts/applications, this mechanism    is provided to streamline the process of mass constant definition. However,    this function does not perform as well as anticipated.   </p>    <p class="para">    For a better-performing solution, try the    <a href="http://pecl.php.net/package/hidef" class="link external">&raquo;&nbsp;hidef</a> extension from PECL.   </p>    <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     To remove a set of stored constants (without clearing the entire cache), an     empty array may be passed as the <code class="parameter">constants</code>     parameter, effectively clearing the stored value(s).    </span>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-define-constants-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The <code class="parameter">key</code> serves as the name of the constant set        being stored. This <code class="parameter">key</code> is used to retrieve the        stored constants in <span class="function">{@link apc_load_constants()}</span>.       </p>      </dd>                 <dt> <code class="parameter">constants</code></dt>       <dd>        <p class="para">        An associative array of <em>constant_name =&gt; value</em>        pairs. The <em>constant_name</em> must follow the normal        <a href="http://php.net/manual/zh/language.constants.php" class="link">constant</a> naming rules.        <em>value</em> must evaluate to a scalar value.       </p>      </dd>                 <dt> <code class="parameter">case_sensitive</code></dt>       <dd>        <p class="para">        The default behaviour for constants is to be declared case-sensitive;        i.e. <em>CONSTANT</em> and <em>Constant</em>        represent different values. If this parameter evaluates to <strong><code>FALSE</code></strong> the        constants will be declared as case-insensitive symbols.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.apc-define-constants-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>     <div class="refsect1 examples" id="refsect1-function.apc-define-constants-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-403">     <p><strong>Example #1 <span class="function"><strong>apc_define_constants()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$constants&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'ONE'&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'TWO'&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'THREE'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">,<br />);<br /></span><span style="color: #9876AA">apc_define_constants</span><span style="color: #007700">(</span><span style="color: #DD0000">'numbers'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$constants</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">ONE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">TWO</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">THREE</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 123 </pre></div>     </div>    </div>   </p>  </div>     <div class="refsect1 seealso" id="refsect1-function.apc-define-constants-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link apc_load_constants()} - Loads a set of constants from the cache</span></li>     <li class="member"><span class="function">{@link define()} - 定义一个常量</span></li>     <li class="member"><span class="function">{@link constant()} - 返回一个常量的值</span></li>     <li class="member">      Or <a href="http://php.net/manual/zh/language.constants.php" class="link">the PHP constants reference</a>     </li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool Returns TRUE on success or FALSE on failure.*/
function apc_define_constants($key, array $constants, $case_sensitive = true){}

/**
*<div id="function.apc-add" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_add</h1>   <p class="verinfo">(PECL apc &gt;= 3.0.13)</p><p class="refpurpose"><span class="refname">apc_add</span> &mdash; <span class="dc-title">    缓存一个变量到数据存储   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-add-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_add</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$var</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer"> = 0</span></span>   ] )</div>    <div class="methodsynopsis dc-description">    <span class="type">array</span> <span class="methodname"><strong>apc_add</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$unused</code><span class="initializer"> = NULL</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer"> = 0</span></span>   ]] )</div>    <p class="para rdfs-comment">     仅仅在缓存变量不存在的情况下缓存变量到数据存储中   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     与PHP中其他的机制不同，使用<span class="function"><strong>apc_add()</strong></span> 存储变量     在不同的请求之间一直持久存在（直到从缓存系统中移除）    </span>   </p></blockquote>  </div>   <div class="refsect1 parameters" id="refsect1-function.apc-add-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">       存储缓存变量使用的名称<code class="parameter">key</code>s 是唯一的，        所以试图使用 <span class="function"><strong>apc_add()</strong></span> 去添加一个名称已经存在的缓存，        将不会覆盖现有的缓存的值, 并且返回 <strong><code>FALSE</code></strong>. (这个是 <span class="function"><strong>apc_add()</strong></span> 和        <span class="function">{@link apc_store()}</span>之间唯一的不同.)       </p>      </dd>                 <dt> <code class="parameter">var</code></dt>       <dd>        <p class="para">         存储的变量       </p>      </dd>                 <dt> <code class="parameter">ttl</code></dt>       <dd>        <p class="para">        生存时间;在缓存中存储<code class="parameter">var</code>共<code class="parameter">ttl</code>秒,        在<code class="parameter">ttl</code>秒过去后,存储的变量将会从缓存中擦除(在下一次请求时),        如果没有设置<code class="parameter">ttl</code>(或者<code class="parameter">ttl</code>是<em>0</em>),        变量将一直存活到被手动移除为止,除此之外不在缓存中的可能原因是，缓存系统使用clear，或者restart等       </p>      </dd>                 <dt> <code class="parameter">values</code></dt>       <dd>        <p class="para">        Names in key, variables in value.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.apc-add-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns TRUE if something has effectively been added into the cache, FALSE otherwise.    Second syntax returns array with error keys.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-add-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-398">     <p><strong>Example #1 <span class="function"><strong>apc_add()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'BAR'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">apc_add</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$bar</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">));<br />echo&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'NEVER&nbsp;GETS&nbsp;SET'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">apc_add</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$bar</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">));<br />echo&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> string(3) &quot;BAR&quot; string(3) &quot;BAR&quot; </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-add-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link apc_store()} - Cache a variable in the data store</span></li>     <li class="member"><span class="function">{@link apc_fetch()} - 从缓存中取出存储的变量</span></li>     <li class="member"><span class="function">{@link apc_delete()} - 从用户缓存中删除某个变量</span></li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool*/
function apc_add($key, $var, $ttl = 0){}

/**
*<div id="function.apc-compile-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_compile_file</h1>   <p class="verinfo">(PECL apc &gt;= 3.0.13)</p><p class="refpurpose"><span class="refname">apc_compile_file</span> &mdash; <span class="dc-title">    Stores a file in the bytecode cache, bypassing all filters   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-compile-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>apc_compile_file</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$atomic</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Stores a file in the bytecode cache, bypassing all filters.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-compile-file-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">filename</code></dt>       <dd>        <p class="para">        Full or relative path to a PHP file that will be compiled and stored in        the bytecode cache.       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-compile-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-compile-file-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_bin_dumpfile()} - Output a binary dump of cached files and user variables to a file</span></li>    <li class="member"><span class="function">{@link apc_bin_loadfile()} - Load a binary dump from a file into the APC file/user cache</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool Returns TRUE on success or FALSE on failure.*/
function apc_compile_file($filename, $atomic = true){}

/**
*<div id="function.apc-load-constants" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_load_constants</h1>   <p class="verinfo">(PECL apc &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">apc_load_constants</span> &mdash; <span class="dc-title">    Loads a set of constants from the cache   </span></p>   </div>  <div class="refsect1 description" id="refsect1-function.apc-load-constants-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_load_constants</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$case_sensitive</code><span class="initializer"> = <strong><code>TRUE</code></strong></span></span>   ] )</div>    <p class="para rdfs-comment">    Loads a set of constants from the cache.   </p>  </div>   <div class="refsect1 parameters" id="refsect1-function.apc-load-constants-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">key</code></dt>       <dd>        <p class="para">        The name of the constant set (that was stored with        <span class="function">{@link apc_define_constants()}</span>) to be retrieved.       </p>      </dd>                 <dt> <code class="parameter">case_sensitive</code></dt>       <dd>        <p class="para">        The default behaviour for constants is to be declared case-sensitive;        i.e. <em>CONSTANT</em> and <em>Constant</em>        represent different values. If this parameter evaluates to <strong><code>FALSE</code></strong> the        constants will be declared as case-insensitive symbols.       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.apc-load-constants-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-load-constants-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-409">     <p><strong>Example #1 <span class="function"><strong>apc_load_constants()</strong></span> example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$constants&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'ONE'&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'TWO'&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'THREE'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #9876AA">3</span><span style="color: #007700">,<br />);<br /></span><span style="color: #9876AA">apc_define_constants</span><span style="color: #007700">(</span><span style="color: #DD0000">'numbers'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$constants</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">apc_load_constants</span><span style="color: #007700">(</span><span style="color: #DD0000">'numbers'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #9876AA">ONE</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">TWO</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">THREE</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> 123 </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-load-constants-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link apc_define_constants()} - Defines a set of constants for retrieval and mass-definition</span></li>     <li class="member"><span class="function">{@link define()} - 定义一个常量</span></li>     <li class="member"><span class="function">{@link constant()} - 返回一个常量的值</span></li>     <li class="member">      Or <a href="http://php.net/manual/zh/language.constants.php" class="link">the PHP constants reference</a>     </li>    </ul>   </p>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool Returns TRUE on success or FALSE on failure.*/
function apc_load_constants($key, $case_sensitive = true){}

/**
*<div id="function.apc-exists" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_exists</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.4)</p><p class="refpurpose"><span class="refname">apc_exists</span> &mdash; <span class="dc-title">检查APC中是否存在某个或者某些key</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-exists-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>apc_exists</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$keys</code></span>    )</div>    <p class="para rdfs-comment">    检查是否有一个或者多个APC键名存在   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-exists-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">keys</code></dt>      <dd>       <p class="para">       <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>，或者包含键的 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>，元素是字符串。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-exists-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果Key存在的话返回 <strong><code>TRUE</code></strong> , 否则返回 <strong><code>FALSE</code></strong> 如果参数     <code class="parameter">keys</code>是一个<span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> ，    将返回一个包含所有存在的key的数组，假如数组中的key一个都不存在的话，    就返回空的数组。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-exists-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-406">    <p><strong>Example #1 <span class="function"><strong>apc_exists()</strong></span> 例子</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$fruit&nbsp;&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$veggie&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'carrot'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$fruit</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'bar'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$veggie</span><span style="color: #007700">);<br /><br />if&nbsp;(</span><span style="color: #9876AA">apc_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Foo&nbsp;exists:&nbsp;"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Foo&nbsp;does&nbsp;not&nbsp;exist"</span><span style="color: #007700">;<br />}<br /><br />echo&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />if&nbsp;(</span><span style="color: #9876AA">apc_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'baz'</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Baz&nbsp;exists."</span><span style="color: #007700">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Baz&nbsp;does&nbsp;not&nbsp;exist"</span><span style="color: #007700">;<br />}<br /><br />echo&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$ret&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">apc_exists</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'donotexist'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bar'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$ret</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Foo exists: apple Baz does not exist array(2) {   [&quot;foo&quot;]=&gt;   bool(true)   [&quot;bar&quot;]=&gt;   bool(true) } </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-exists-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_cache_info()} - Retrieves cached information from APC's data store</span></li>    <li class="member"><span class="function">{@link apc_fetch()} - 从缓存中取出存储的变量</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool|string[] Returns TRUE if the key exists, otherwise FALSE*/
function apc_exists($keys){}

/**
*<div id="function.apc-delete-file" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_delete_file</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.1)</p><p class="refpurpose"><span class="refname">apc_delete_file</span> &mdash; <span class="dc-title">Deletes files from the opcode cache</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-delete-file-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>apc_delete_file</strong></span>     ( <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$keys</code></span>    )</div>    <p class="para rdfs-comment">    Deletes the given files from the opcode cache.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-delete-file-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">keys</code></dt>      <dd>       <p class="para">       The files to be deleted. Accepts a <span class="type"><a href="http://php.net/manual/zh/language.types.string.php" class="type string">string</a></span>,       <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> of strings, or an <a href="http://php.net/manual/zh/class.apciterator.php" class="classname">APCIterator</a>       <span class="type"><a href="http://php.net/manual/zh/language.types.object.php" class="type object">object</a></span>.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-delete-file-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。    Or if <code class="parameter">keys</code> is an <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span>, then    an empty array is returned on success, or an array of failed files    is returned.   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-delete-file-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-404">    <p><strong>Example #1 <span class="function"><strong>apc_delete_file()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$filename&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">'file.php'</span><span style="color: #007700">;<br /><br />if&nbsp;(</span><span style="color: #9876AA">apc_compile_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">))&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">apc_delete_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Successfully&nbsp;deleted&nbsp;file&nbsp;</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">&nbsp;from&nbsp;APC&nbsp;cache."</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />if&nbsp;(</span><span style="color: #9876AA">apc_compile_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">))&nbsp;{<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$good&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">apc_delete_file</span><span style="color: #007700">(array(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'donotexist.php'</span><span style="color: #007700">)))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$good</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #9876AA">$bad&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">apc_delete_file</span><span style="color: #007700">(</span><span style="color: #DD0000">'donotexist.php'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$bad</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Successfully deleted file file.php from APC cache. [Mon May 24 09:30:33 2010] [apc-warning] Could not stat file donotexist.php, unable to delete from cache. in /tmp/test.php on line 13. array(1) {   [0]=&gt;   string(14) &quot;donotexist.php&quot; } [Mon May 24 09:30:33 2010] [apc-warning] Could not stat file donotexist.php, unable to delete from cache. in /tmp/test.php on line 18. bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-delete-file-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_clear_cache()} - 清除APC缓存</span></li>    <li class="member"><span class="function">{@link apc_delete()} - 从用户缓存中删除某个变量</span></li>    <li class="member"><span class="function">{@link apc_exists()} - 检查APC中是否存在某个或者某些key</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool|string[]*/
function apc_delete_file($keys){}

/**
*<div id="function.apc-inc" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_inc</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.1)</p><p class="refpurpose"><span class="refname">apc_inc</span> &mdash; <span class="dc-title">递增一个储存的数字</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-inc-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>apc_inc</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$step</code><span class="initializer"> = 1</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span>   ]] )</div>    <p class="para rdfs-comment">    递增一个储存的数字。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-inc-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       该键内的值被增加。      </p>     </dd>              <dt> <code class="parameter">step</code></dt>      <dd>       <p class="para">       步长，或者需要增加的值。      </p>     </dd>              <dt> <code class="parameter">success</code></dt>      <dd>       <p class="para">       可选，用于传递函数成功或失败到该引用变量里。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-inc-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <code class="parameter">key</code> 的当前值，     或者在失败时返回 <strong><code>FALSE</code></strong>   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-inc-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-408">    <p><strong>Example #1 <span class="function"><strong>apc_inc()</strong></span> 范例</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Let's&nbsp;do&nbsp;something&nbsp;with&nbsp;success"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">42</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #9876AA">apc_inc</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">apc_inc</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">apc_inc</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$success</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$success</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Now,&nbsp;let's&nbsp;fail"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'astring'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$ret&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">apc_inc</span><span style="color: #007700">(</span><span style="color: #DD0000">'astring'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$fail</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$ret</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$fail</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> 42 43 53 63 bool(true) Now, let&#039;s fail  bool(false) bool(false) </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-inc-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_dec()} - Decrease a stored number</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return int|bool Returns the current value of key's value on success, or FALSE on failure.*/
function apc_inc($key, $step = 1, &$success = null){}

/**
*<div id="function.apc-dec" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_dec</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.1)</p><p class="refpurpose"><span class="refname">apc_dec</span> &mdash; <span class="dc-title">Decrease a stored number</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-dec-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>apc_dec</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$step</code><span class="initializer"> = 1</span></span>    [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span>   ]] )</div>    <p class="para rdfs-comment">    Decreases a stored integer value.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-dec-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       The key of the value being decreased.      </p>     </dd>              <dt> <code class="parameter">step</code></dt>      <dd>       <p class="para">       The step, or value to decrease.      </p>     </dd>              <dt> <code class="parameter">success</code></dt>      <dd>       <p class="para">       Optionally pass the success or fail boolean value to       this referenced variable.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-dec-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns the current value of <code class="parameter">key</code>&#039;s value on success,     或者在失败时返回 <strong><code>FALSE</code></strong>   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-dec-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-402">    <p><strong>Example #1 <span class="function"><strong>apc_dec()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #DD0000">"Let's&nbsp;do&nbsp;something&nbsp;with&nbsp;success"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">42</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #9876AA">apc_dec</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">apc_dec</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #9876AA">apc_dec</span><span style="color: #007700">(</span><span style="color: #DD0000">'anumber'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">10</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$success</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$success</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #DD0000">"Now,&nbsp;let's&nbsp;fail"</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'astring'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$ret&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">apc_dec</span><span style="color: #007700">(</span><span style="color: #DD0000">'astring'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">$fail</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$ret</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$fail</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> Let&#039;s do something with success 42 41 31 21 bool(true)  Now, let&#039;s fail bool(false) bool(false) </pre></div>    </div>   </div>  </div>     <div class="refsect1 seealso" id="refsect1-function.apc-dec-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_inc()} - 递增一个储存的数字</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return int|bool Returns the current value of key's value on success, or FALSE on failure.*/
function apc_dec($key, $step = 1, &$success = null){}

/**
*<div id="function.apc-cas" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_cas</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.1)</p><p class="refpurpose"><span class="refname">apc_cas</span> &mdash; <span class="dc-title">用新值更新旧值</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-cas-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_cas</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$old</code></span>    , <span class="methodparam"><span class="type">int</span> <code class="parameter">$new</code></span>    )</div>    <p class="para rdfs-comment">    <span class="function"><strong>apc_cas()</strong></span> 如果key存在，并且key当前存储的整数等于    <code class="parameter">old</code>，就使用     <code class="parameter">new</code> 更新key当前存储的整数。   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-cas-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">key</code></dt>      <dd>       <p class="para">       需要被更新的 key。      </p>     </dd>              <dt> <code class="parameter">old</code></dt>      <dd>       <p class="para">       key当前值。      </p>     </dd>              <dt> <code class="parameter">new</code></dt>      <dd>       <p class="para">       指定的更新值。      </p>     </dd>        </dl>    </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-cas-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-cas-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-401">    <p><strong>Example #1 <span class="function"><strong>apc_cas()</strong></span> 示例</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'foobar'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">'$foobar&nbsp;=&nbsp;2'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'$foobar&nbsp;==&nbsp;1&nbsp;?&nbsp;2&nbsp;:&nbsp;1&nbsp;=&nbsp;'</span><span style="color: #007700">,&nbsp;(</span><span style="color: #9876AA">apc_cas</span><span style="color: #007700">(</span><span style="color: #DD0000">'foobar'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'ok'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'fail'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo&nbsp;</span><span style="color: #DD0000">'$foobar&nbsp;==&nbsp;2&nbsp;?&nbsp;1&nbsp;:&nbsp;2&nbsp;=&nbsp;'</span><span style="color: #007700">,&nbsp;(</span><span style="color: #9876AA">apc_cas</span><span style="color: #007700">(</span><span style="color: #DD0000">'foobar'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'ok'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'fail'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">'$foobar&nbsp;=&nbsp;'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'foobar'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">'$f__bar&nbsp;==&nbsp;1&nbsp;?&nbsp;2&nbsp;:&nbsp;1&nbsp;=&nbsp;'</span><span style="color: #007700">,&nbsp;(</span><span style="color: #9876AA">apc_cas</span><span style="color: #007700">(</span><span style="color: #DD0000">'f__bar'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'ok'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'fail'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">apc_store</span><span style="color: #007700">(</span><span style="color: #DD0000">'perfection'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'xyz'</span><span style="color: #007700">);<br />echo&nbsp;</span><span style="color: #DD0000">'$perfection&nbsp;==&nbsp;2&nbsp;?&nbsp;1&nbsp;:&nbsp;2&nbsp;=&nbsp;'</span><span style="color: #007700">,&nbsp;(</span><span style="color: #9876AA">apc_cas</span><span style="color: #007700">(</span><span style="color: #DD0000">'perfection'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">1</span><span style="color: #007700">)&nbsp;?&nbsp;</span><span style="color: #DD0000">'ok'&nbsp;</span><span style="color: #007700">:&nbsp;</span><span style="color: #DD0000">'epic&nbsp;fail'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br />echo&nbsp;</span><span style="color: #DD0000">'$foobar&nbsp;=&nbsp;'</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">apc_fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">'foobar'</span><span style="color: #007700">),&nbsp;</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>     <div class="example-contents"><p>以上例程的输出类似于：</p></div>    <div class="example-contents screen"> <div class="cdata"><pre> $foobar = 2 $foobar == 1 ? 2 : 1 = fail $foobar == 2 ? 1 : 2 = ok $foobar = 1 $f__bar == 1 ? 2 : 1 = fail $perfection == 2 ? 1 : 2 = epic fail $foobar = 1 </pre></div>    </div>   </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-cas-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_dec()} - Decrease a stored number</span></li>    <li class="member"><span class="function">{@link apc_store()} - Cache a variable in the data store</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool*/
function apc_cas($key, $old, $new){}

/**
*<div id="function.apc-bin-dump" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_bin_dump</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.4)</p><p class="refpurpose"><span class="refname">apc_bin_dump</span> &mdash; <span class="dc-title">获取给定文件和变量的二进制文件转储。</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-bin-dump-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">string</span> <span class="methodname"><strong>apc_bin_dump</strong></span>     ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$files</code><span class="initializer"> = NULL</span></span>    [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$user_vars</code><span class="initializer"> = NULL</span></span>   ]] )</div>    <p class="para rdfs-comment">    从 APC 缓存中返回给定文件和用户变量的二进制打印。    一个 <strong><code>NULL</code></strong> 给文件或者用户变量符号表示每个条目的打印，而 array（）则不会转储任何内容。     </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-bin-dump-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">files</code></dt>      <dd>       <p class="para">       文件，在 <strong><code>NULL</code></strong>传入<span class="function">{@link array()}</span> 时传递每个条目的转储都不会转储任何内容。      </p>     </dd>              <dt> <code class="parameter">user_vars</code></dt>      <dd>       <p class="para">       用户变量，在<strong><code>NULL</code></strong>传入<span class="function">{@link array()}</span>时传递每个条目的转储信号都不会转储任何内容。      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-bin-dump-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <strong><code>FALSE</code></strong> 如果 APC 未启用，或者<strong><code>NULL</code></strong> 遇到未知错误，则返回 APC 缓存中给定文件和用户变量的二进制转储。   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-bin-dump-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_bin_dumpfile()} - Output a binary dump of cached files and user variables to a file</span></li>    <li class="member"><span class="function">{@link apc_bin_load()} - Load a binary dump into the APC file/user cache</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return string|bool|null Returns a binary dump of the given files and user variables from the APC cache, FALSE if APC is not enabled, or NULL if an unknown error is encountered.*/
function apc_bin_dump($files = null, $user_vars = null){}

/**
*<div id="function.apc-bin-dumpfile" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_bin_dumpfile</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.4)</p><p class="refpurpose"><span class="refname">apc_bin_dumpfile</span> &mdash; <span class="dc-title">Output a binary dump of cached files and user variables to a file</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-bin-dumpfile-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">int</span> <span class="methodname"><strong>apc_bin_dumpfile</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$files</code></span>    , <span class="methodparam"><span class="type">array</span> <code class="parameter">$user_vars</code></span>    , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = 0</span></span>    [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer"> = NULL</span></span>   ]] )</div>    <p class="para rdfs-comment">    Outputs a binary dump of the given files and user variables from the APC    cache to the named file.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-bin-dumpfile-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">files</code></dt>      <dd>       <p class="para">       The file names being dumped.      </p>     </dd>              <dt> <code class="parameter">user_vars</code></dt>      <dd>       <p class="para">       The user variables being dumped.      </p>     </dd>              <dt> <code class="parameter">filename</code></dt>      <dd>       <p class="para">       The filename where the dump is being saved.      </p>     </dd>              <dt> <code class="parameter">flags</code></dt>      <dd>       <p class="para">       Flags passed to the <code class="parameter">filename</code> stream. See the       <span class="function">{@link file_put_contents()}</span> documentation for details.      </p>     </dd>              <dt> <code class="parameter">context</code></dt>      <dd>       <p class="para">       The context passed to the <code class="parameter">filename</code> stream. See the       <span class="function">{@link file_put_contents()}</span> documentation for details.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-bin-dumpfile-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    The number of bytes written to the file, otherwise    <strong><code>FALSE</code></strong> if APC is not enabled, <code class="parameter">filename</code> is an invalid file name,    <code class="parameter">filename</code> can&#039;t be opened, the file dump can&#039;t be completed    (e.g., the hard drive is out of disk space), or an unknown error was encountered.   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-bin-dumpfile-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_bin_dump()} - 获取给定文件和变量的二进制文件转储。</span></li>    <li class="member"><span class="function">{@link apc_bin_load()} - Load a binary dump into the APC file/user cache</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return int|bool The number of bytes written to the file, otherwise FALSE if APC*/
function apc_bin_dumpfile($files, $user_vars, $filename, $flags = 0, $context = null){}

/**
*<div id="function.apc-bin-load" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_bin_load</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.4)</p><p class="refpurpose"><span class="refname">apc_bin_load</span> &mdash; <span class="dc-title">Load a binary dump into the APC file/user cache</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-bin-load-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_bin_load</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = 0</span></span>   ] )</div>    <p class="para rdfs-comment">    Loads the given binary dump into the APC file/user cache.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-bin-load-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">data</code></dt>      <dd>       <p class="para">       The binary dump being loaded, likely from       <span class="function">{@link apc_bin_dump()}</span>.      </p>     </dd>              <dt> <code class="parameter">flags</code></dt>      <dd>       <p class="para">       Either <strong><code>APC_BIN_VERIFY_CRC32</code></strong>, <strong><code>APC_BIN_VERIFY_MD5</code></strong>,       or both.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-bin-load-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> if the binary dump <code class="parameter">data</code> was loaded    with success, otherwise <strong><code>FALSE</code></strong> is returned. <strong><code>FALSE</code></strong> is returned if APC    is not enabled, or if the <code class="parameter">data</code> is not a valid APC    binary dump (e.g., unexpected size).   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.apc-bin-load-examples">   <h3 class="title">范例</h3>   <div class="example" id="example-399">    <p><strong>Example #1 <span class="function"><strong>apc_bin_load()</strong></span> example</strong></p>    <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$data&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">apc_bin_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">NULL</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">apc_bin_load</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">APC_BIN_VERIFY_MD5&nbsp;</span><span style="color: #007700">|&nbsp;</span><span style="color: #9876AA">APC_BIN_VERIFY_CRC32</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>    </div>    </div>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-bin-load-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_bin_dump()} - 获取给定文件和变量的二进制文件转储。</span></li>    <li class="member"><span class="function">{@link apc_bin_loadfile()} - Load a binary dump from a file into the APC file/user cache</span></li>   </ul>  </div>   <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool Returns TRUE if the binary dump data was loaded with success, otherwise FALSE is returned.*/
function apc_bin_load($data, $flags = 0){}

/**
*<div id="function.apc-bin-loadfile" class="refentry">  <div class="refnamediv">   <h1 class="refname">apc_bin_loadfile</h1>   <p class="verinfo">(PECL apc &gt;= 3.1.4)</p><p class="refpurpose"><span class="refname">apc_bin_loadfile</span> &mdash; <span class="dc-title">Load a binary dump from a file into the APC file/user cache</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.apc-bin-loadfile-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>apc_bin_loadfile</strong></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span>    [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer"> = NULL</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer"> = 0</span></span>   ]] )</div>    <p class="para rdfs-comment">    Loads a binary dump from a file into the APC file/user cache.   </p>  </div>    <div class="refsect1 parameters" id="refsect1-function.apc-bin-loadfile-parameters">   <h3 class="title">参数</h3>   <dl>          <dt> <code class="parameter">filename</code></dt>      <dd>       <p class="para">       The file name containing the dump, likely from       <span class="function">{@link apc_bin_dumpfile()}</span>.      </p>     </dd>              <dt> <code class="parameter">context</code></dt>      <dd>       <p class="para">       The files context.      </p>     </dd>              <dt> <code class="parameter">flags</code></dt>      <dd>       <p class="para">       Either <strong><code>APC_BIN_VERIFY_CRC32</code></strong>, <strong><code>APC_BIN_VERIFY_MD5</code></strong>,       or both.      </p>     </dd>        </dl>   </div>    <div class="refsect1 returnvalues" id="refsect1-function.apc-bin-loadfile-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    Returns <strong><code>TRUE</code></strong> on success, otherwise <strong><code>FALSE</code></strong> Reasons it may return <strong><code>FALSE</code></strong> include    APC is not enabled, <code class="parameter">filename</code> is an invalid file name or empty,    <code class="parameter">filename</code> can&#039;t be opened, the file dump can&#039;t be completed, or    if the <code class="parameter">data</code> is not a valid APC binary dump (e.g., unexpected    size).   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.apc-bin-loadfile-seealso">   <h3 class="title">参见</h3>   <ul class="simplelist">    <li class="member"><span class="function">{@link apc_bin_dumpfile()} - Output a binary dump of cached files and user variables to a file</span></li>    <li class="member"><span class="function">{@link apc_bin_load()} - Load a binary dump into the APC file/user cache</span></li>   </ul>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.apc.php">APC 函数</a></div></div>
 * @return bool Returns TRUE on success, otherwise FALSE Reasons it may return FALSE include APC*/
function apc_bin_loadfile($filename, $context = null, $flags = 0){}

/**
*<div id="class.apciterator" class="reference">   <h1 class="title">APCIterator 类</h1>     <div class="partintro"><p class="verinfo">(PECL apc &gt;= 3.1.1)</p>     <div class="section" id="apciterator.intro">    <h2 class="title">简介</h2>    <p class="para">    <strong class="classname">APCIterator</strong> 类使得遍历大容量APC缓存更容易，这是很有帮助的因为它允许同时获取已经定义的每个被锁定实例的条目数，因此它释放的其他活动的缓存锁，而不是阻碍整个缓存以完成获取100（默认）个缓存数据的迭代，在大缓存条目。 此外，使用正则匹配效率更高，因为它被改为C级别的实现。    </p>   </div>     <div class="section" id="apciterator.synopsis">    <h2 class="title">类摘要</h2>      <div class="classsynopsis">     <div class="ooclass"></div>       <div class="classsynopsisinfo">      <span class="ooclass">       <strong class="classname">APCIterator</strong>      </span>            <span class="oointerface">implements        <span class="interfacename"><strong class="interfacename">Iterator</strong></span>      </span>       <span class="oointerface">,        <span class="interfacename"><strong class="interfacename">Traversable</strong></span>      </span>      {</div>           <div class="classsynopsisinfo classsynopsisinfo_comment">// Methods </div>     <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.construct.php" class="methodname">__construct</a></span>     ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cache</code></span>    [, <span class="methodparam"><span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code class="parameter">$search</code><span class="initializer"> = <strong><code>NULL</code></strong></span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code><span class="initializer"> = APC_ITER_ALL</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$chunk_size</code><span class="initializer"> = 100</span></span>    [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$list</code><span class="initializer"> = APC_LIST_ACTIVE</span></span>   ]]]] )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">mixed</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.current.php" class="methodname">current</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.gettotalcount.php" class="methodname">getTotalCount</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.gettotalhits.php" class="methodname">getTotalHits</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">int</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.gettotalsize.php" class="methodname">getTotalSize</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">string</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.key.php" class="methodname">key</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.next.php" class="methodname">next</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.rewind.php" class="methodname">rewind</a></span>     ( <span class="methodparam">void</span>    )</div> <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="type">void</span> <span class="methodname"><a href="http://php.net/manual/zh/apciterator.valid.php" class="methodname">valid</a></span>     ( <span class="methodparam">void</span>    )</div>     }</div>     </div>   </div>                                                                                      <h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li>{@link APCIterator::__construct} — 构造一个 APCIterator 迭代器对象</li><li>{@link APCIterator::current} — 获取当前项</li><li>{@link APCIterator::getTotalCount} — 获取总数</li><li>{@link APCIterator::getTotalHits} — 获取缓存命中数</li><li>{@link APCIterator::getTotalSize} — 获取所有缓存的尺寸大小</li><li>{@link APCIterator::key} — 获取迭代器的键</li><li>{@link APCIterator::next} — 移到下一项</li><li>{@link APCIterator::rewind} — 倒退迭代器</li><li>{@link APCIterator::valid} — 检查当前位置是否有效</li></ul> <div class="up"><a href="http://php.net/manual/zh/book.apc.php">APC</a></div></div>
*/
class APCIterator implements Iterator
{
	/**
	 * Constructs an APCIterator iterator object
	 * @link http://php.net/manual/en/apciterator.construct.php
	 * @param string $cache The cache type, which will be 'user' or 'file'.
	 * @param string|string[]|null $search A PCRE regular expression that matches against APC key names,
	 * either as a string for a single regular expression, or as an array of regular expressions.
	 * Or, optionally pass in NULL to skip the search.
	 * @param int $format The desired format, as configured with one ore more of the APC_ITER_* constants.
	 * @param int $chunk_size The chunk size. Must be a value greater than 0. The default value is 100.
	 * @param int $list The type to list. Either pass in APC_LIST_ACTIVE  or APC_LIST_INACTIVE.
	 */
	public function __construct($cache, $search = null, $format = APC_ITER_ALL, $chunk_size = 100, $list = APC_LIST_ACTIVE){}

	/**
	 * Rewinds back the iterator to the first element
	 * @link http://php.net/manual/en/apciterator.rewind.php
	 */
/**
*<div id="function.rewind" class="refentry">  <div class="refnamediv">   <h1 class="refname">rewind</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">rewind</span> &mdash; <span class="dc-title">倒回文件指针的位置</span></p>   </div>  <div class="refsect1 description" id="refsect1-function.rewind-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type">bool</span> <span class="methodname"><strong>rewind</strong></span>     ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span>    )</div>    <p class="para rdfs-comment">    将 <code class="parameter">handle</code> 的文件位置指针设为文件流的开头。   </p>   <blockquote class="note"><p><strong class="note">Note</strong>:     <p class="para">     如果将文件以附加（&quot;a&quot; 或者 &quot;a+&quot;）模式打开，写入文件的任何数据总是会被附加在后面，不管文件指针的位置。    </p>   </p></blockquote>  </div>    <div class="refsect1 parameters" id="refsect1-function.rewind-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">handle</code></dt>       <dd>        <p class="para">        文件指针必须合法，并且指向由 <span class="function">{@link fopen()}</span>    成功打开的文件。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.rewind-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。   </p>  </div>    <div class="refsect1 examples" id="refsect1-function.rewind-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-2838">     <p><strong>Example #1 <span class="function"><strong>rewind()</strong></span> overwriting example</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$handle&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Really&nbsp;long&nbsp;sentence.'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">,&nbsp;</span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程的输出类似于：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> Foolly long sentence. </pre></div>     </div>    </div>   </p>  </div>    <div class="refsect1 seealso" id="refsect1-function.rewind-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>     <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>     <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>     <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    </ul>   </p>  </div>  <div class="up"><a href="http://php.net/manual/zh/ref.filesystem.php">文件系统函数</a></div></div>
*/
	public function rewind(){}

	/**
	 * Checks if the current iterator position is valid
	 * @link http://php.net/manual/en/apciterator.valid.php
	 * @return bool Returns TRUE if the current iterator position is valid, otherwise FALSE.
	 */
	public function valid(){}

	/**
	 * Gets the current item from the APCIterator stack
	 * @link http://php.net/manual/en/apciterator.current.php
	 * @return mixed Returns the current item on success, or FALSE if no more items or exist, or on failure.
	 */
/**
*<div id="function.current" class="refentry">    <div class="refnamediv">     <h1 class="refname">current</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">current</span> &mdash; <span class="dc-title">返回数组中的当前单元</span></p>     </div>      <div class="refsect1 description" id="refsect1-function.current-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>current</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span>    )</div>      <p class="para rdfs-comment">      每个数组中都有一个内部的指针指向它“当前的”单元，初始指向插入到数组中的第一个单元。     </p>    </div>       <div class="refsect1 parameters" id="refsect1-function.current-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        这个数组。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.current-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong>current()</strong></span> 函数返回当前被内部指针指向的数组单元的值，并不移动指针。如果内部指针指向超出了单元列表的末端，<span class="function"><strong>current()</strong></span>      返回 <strong><code>FALSE</code></strong>。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>   <div class="refsect1 examples" id="refsect1-function.current-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6087">     <p><strong>Example #1 使用  <span class="function"><strong>current()</strong></span> 系列函数的例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$transport&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bike'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'car'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /><br /></span><span style="color: #9876AA">$arr&nbsp;</span><span style="color: #007700">=&nbsp;array();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;bool(false)<br /><br /></span><span style="color: #9876AA">$arr&nbsp;</span><span style="color: #007700">=&nbsp;array(array());<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">));&nbsp;</span><span style="color: #FF8000">//&nbsp;array(0)&nbsp;{&nbsp;}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>   <div class="refsect1 notes" id="refsect1-function.current-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">     如果数组包含 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span> <strong><code>FALSE</code></strong> 的单元则本函数在碰到这个单元时也返回        <strong><code>FALSE</code></strong>，使得不可能判断是否到了此数组列表的末端。     要正确遍历可能含有空单元的数组，用 <span class="function">{@link each()}</span> 函数。    </span>   </p></blockquote>  </div>   <div class="refsect1 seealso" id="refsect1-function.current-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>     <li class="member"><span class="function">{@link key()} - 从关联数组中取得键名</span></li>     <li class="member"><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>     <li class="member"><span class="function">{@link prev()} - 将数组的内部指针倒回一位</span></li>     <li class="member"><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>     <li class="member"><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>    </ul>   </p>  </div>         <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function current(){}

	/**
	 * Gets the current iterator key
	 * @link http://php.net/manual/en/apciterator.key.php
	 * @return string|int|bool Returns the key on success, or FALSE upon failure.
	 */
/**
*<div id="function.key" class="refentry">    <div class="refnamediv">     <h1 class="refname">key</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">key</span> &mdash; <span class="dc-title">从关联数组中取得键名</span></p>     </div>  <div class="refsect1 description" id="refsect1-function.key-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>key</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span>    )</div>      <p class="para rdfs-comment">      <span class="function"><strong>key()</strong></span> 返回数组中当前单元的键名。     </p>    </div>    <div class="refsect1 parameters" id="refsect1-function.key-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        该数组。       </p>      </dd>          </dl>    </p>  </div>   <div class="refsect1 returnvalues" id="refsect1-function.key-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    <span class="function"><strong>key()</strong></span> 函数返回数组中内部指针指向的当前单元的键名。    但它不会移动指针。如果内部指针超过了元素列表尾部，或者数组是空的，<span class="function"><strong>key()</strong></span> 会返回 <strong><code>NULL</code></strong>。   </p>  </div>   <div class="refsect1 changelog" id="refsect1-function.key-changelog">   <h3 class="title">更新日志</h3>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>       </thead>       <tbody class="tbody">       <tr>        <td>7.0.0</td>        <td>         <code class="parameter">array</code> 现在总是会传值。          在此之前，它会尽可能传引用，否则就传值。        </td>       </tr>       </tbody>         </table>    </p>  </div>   <div class="refsect1 examples" id="refsect1-function.key-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6095">     <p><strong>Example #1 <span class="function"><strong>key()</strong></span> 例子</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$array&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit1'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit2'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'orange'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit3'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'grape'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit4'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'fruit5'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;this&nbsp;cycle&nbsp;echoes&nbsp;all&nbsp;associative&nbsp;array<br />//&nbsp;key&nbsp;where&nbsp;value&nbsp;equals&nbsp;"apple"<br /></span><span style="color: #007700">while&nbsp;(</span><span style="color: #9876AA">$fruit_name&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #9876AA">$fruit_name&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #9876AA">key</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">).</span><span style="color: #DD0000">'&lt;br&nbsp;/&gt;'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>      <div class="example-contents"><p>以上例程会输出：</p></div>     <div class="example-contents screen"> <div class="cdata"><pre> fruit1&lt;br /&gt; fruit4&lt;br /&gt; fruit5&lt;br /&gt; </pre></div>     </div>    </div>   </p>  </div>   <div class="refsect1 seealso" id="refsect1-function.key-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link current()} - 返回数组中的当前单元</span></li>     <li class="member"><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>     <li class="member"><a href="http://php.net/manual/zh/control-structures.foreach.php" class="link">foreach</a></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function key(){}

	/**
	 * Moves the iterator pointer to the next element
	 * @link http://php.net/manual/en/apciterator.next.php
	 * @return bool Returns TRUE on success or FALSE on failure.
	 */
/**
*<div id="function.next" class="refentry">    <div class="refnamediv">     <h1 class="refname">next</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">next</span> &mdash; <span class="dc-title">      将数组中的内部指针向前移动一位     </span></p>     </div>  <div class="refsect1 description" id="refsect1-function.next-description">   <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="type"><a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <span class="methodname"><strong>next</strong></span>     ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span>    )</div>     <p class="para rdfs-comment">      <span class="function"><strong>next()</strong></span> 和 <span class="function">{@link current()}</span>      的行为类似，只有一点区别，在返回值之前将内部指针向前移动一位。这意味着它返回的是下一个数组单元的值并将数组指针向前移动了一位。     </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.next-parameters">   <h3 class="title">参数</h3>   <p class="para">    <dl>            <dt> <code class="parameter">array</code></dt>       <dd>        <p class="para">        受影响的 <span class="type"><a href="http://php.net/manual/zh/language.types.array.php" class="type array">array</a></span> 。       </p>      </dd>          </dl>    </p>  </div>    <div class="refsect1 returnvalues" id="refsect1-function.next-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    返回数组内部指针指向的下一个单元的值，或当没有更多单元时返回 <strong><code>FALSE</code></strong>。   </p>   <div class="warning"><strong class="warning">Warning</strong><p class="simpara">此函数可能返回布尔值 <strong><code>FALSE</code></strong>，但也可能返回等同于 <strong><code>FALSE</code></strong> 的非布尔值。请阅读 <a href="http://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用 <a href="http://php.net/manual/zh/language.operators.comparison.php" class="link">=== 运算符</a>来测试此函数的返回值。</p></div>  </div>    <div class="refsect1 examples" id="refsect1-function.next-examples">   <h3 class="title">范例</h3>   <p class="para">    <div class="example" id="example-6107">     <p><strong>Example #1  <span class="function"><strong>next()</strong></span> 及相关函数的用法示例</strong></p>     <div class="example-contents"> <div class="phpcode"><code><span style="color: #000000"> <span style="color: #9876AA">&lt;?php<br />$transport&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bike'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'car'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'foot';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'car';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'bike';<br /></span><span style="color: #9876AA">$mode&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">$transport</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$mode&nbsp;=&nbsp;'plane';<br /></span><span style="color: #9876AA">?&gt;</span> </span> </code></div>     </div>     </div>   </p>  </div>    <div class="refsect1 notes" id="refsect1-function.next-notes">   <h3 class="title">注释</h3>   <blockquote class="note"><p><strong class="note">Note</strong>:     <span class="simpara">      你将无法区别包含数组尾以及 <span class="type"><a href="http://php.net/manual/zh/language.types.boolean.php" class="type boolean">boolean</a></span> <strong><code>FALSE</code></strong> 单元的数组。要正确遍历可能含有空单元或者单元值为 0 的数组，参见    <span class="function">{@link each()}</span> 函数。    </span>   </p></blockquote>  </div>    <div class="refsect1 seealso" id="refsect1-function.next-seealso">   <h3 class="title">参见</h3>   <p class="para">    <ul class="simplelist">     <li class="member"><span class="function">{@link current()} - 返回数组中的当前单元</span></li>     <li class="member"><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>     <li class="member"><span class="function">{@link prev()} - 将数组的内部指针倒回一位</span></li>     <li class="member"><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>     <li class="member"><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>    </ul>   </p>  </div>    <div class="up"><a href="http://php.net/manual/zh/ref.array.php">数组 函数</a></div></div>
*/
	public function next(){}

	/**
	 * Gets the total number of cache hits
	 * @link http://php.net/manual/en/apciterator.gettotalhits.php
	 * @return int|bool The number of hits on success, or FALSE on failure.
	 */
	public function getTotalHits(){}

	/**
	 * Gets the total cache size
	 * @link http://php.net/manual/en/apciterator.gettotalsize.php
	 * @return int|bool The total cache size.
	 */
	public function getTotalSize(){}

	/**
	 * Get the total count
	 * @link http://php.net/manual/en/apciterator.gettotalcount.php
	 * @return int|bool The total count.
	 */
	public function getTotalCount(){}
}
